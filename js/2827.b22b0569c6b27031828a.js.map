{"version":3,"sources":["webpack://sources-ui/./src/api/checkSourceStatus.js","webpack://sources-ui/./src/api/delay.js","webpack://sources-ui/./src/api/getApplicationStatus.js","webpack://sources-ui/./src/components/addSourceWizard/schemaBuilder.js","webpack://sources-ui/./src/components/steps/ErroredStep.js","webpack://sources-ui/./src/components/steps/LoadingStep.js","webpack://sources-ui/./src/components/FormComponents/ValuePopover.js","webpack://sources-ui/./src/components/FormComponents/SourceWizardSummary.js","webpack://sources-ui/./src/components/FormComponents/Description.js","webpack://sources-ui/./src/components/FormComponents/CardSelect.js","webpack://sources-ui/./src/components/FormComponents/AuthSelect.js","webpack://sources-ui/./src/components/FormComponents/EnhancedRadio.js","webpack://sources-ui/./src/utilities/SourcesFormRenderer.js","webpack://sources-ui/./src/components/FormComponents/SwitchGroup.js","webpack://sources-ui/./src/components/Authentication.js","webpack://sources-ui/./src/utilities/isSuperKey.js","webpack://sources-ui/./src/utilities/resolveProps/validated.js"],"names":["checkSourceStatus","id","getSourcesApi","checkAvailabilitySource","delay","interval","prms","Promise","resolve","setTimeout","bind","checkAppAvailability","timeout","entity","updatedTime","res","rej","start","Date","now","checkSource","then","data","availability_status","availability_status_error","last_checked_at","updated_at","error","hardcodedSchema","typeName","authName","appName","get","hardcodedSchemas","undefined","getAdditionalSteps","shouldSkipSelection","shouldSkipEndpoint","hasCustomSteps","getAdditionalStepKeys","getOnlyHiddenFields","getAdditionalStepFields","fields","stepKey","filter","field","map","shouldUseAppAuth","getNoStepsFields","additionalStepKeys","includes","injectAuthFieldsInfo","type","auth","applicationName","specificFields","hardcodedField","name","resultedField","component","injectEndpointFieldsInfo","getAdditionalAuthFields","createEndpointStep","endpoint","nextStep","createAdditionalSteps","additionalSteps","hasEndpointStep","step","skipEndpoint","customSteps","schemaBuilder","sourceTypes","appTypes","disableAuthType","schema","forEach","appendEndpoint","hidden","length","push","endpointFields","auths","authentication","hasMultipleAuthTypes","stepMapper","additionalIncludesStepKeys","onlyHiddenFields","authFields","hideField","label","validate","validatorTypes","componentTypes","className","condition","when","is","title","defaultMessage","additionalStepName","hasCustomStep","stepProps","firstAdditonalStep","find","additionalFields","createGenericAuthTypeSelection","appType","supported_source_types","supportedAuthTypes","supported_authentication_types","authType","createSpecificAuthTypeSelection","appAdditionalSteps","ErroredStep","onClose","returnButtonTitle","message","customText","primaryAction","secondaryActions","Component","variant","EmptyStateVariant","icon","ExclamationCircleIcon","color","headingLevel","size","onClick","propTypes","PropTypes","defaultProps","Button","LoadingStep","cancelTitle","description","Spinner","ValuePopover","value","intl","useIntl","Popover","headerContent","bodyContent","position","maxWidth","isInline","formatMessage","DesctiptionListItem","term","props","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","SourceWizardSummary","applicatioNames","applicationTypes","showApp","showAuthType","formOptions","useFormApi","values","getState","source_type","source","source_type_id","hasAuthentication","authtype","auth_select","authTypeFields","app_creation_workflow","applications","app","display_name","application","application_type_id","availableStepKeys","appId","Boolean","getStepKeys","authSteps","flatMap","x","startsWith","valuesList","stepKeys","formField","Label","createItem","getAllFieldsValues","key","toString","DescriptionList","isHorizontal","product_name","NO_APPLICATION_VALUE","sourceType","COST_MANAGEMENT_APP_NAME","Alert","alertMapper","isRequired","Description","Content","rest","CardSelect","originalProps","useFieldApi","helperText","hideLabel","meta","input","options","mutator","DefaultIcon","iconMapper","useState","components","icons","isMulti","multi","isDisabled","isReadOnly","inputValue","onChange","valueSelect","handleMulti","handleSingle","handleClick","onBlur","showError","touched","FormGroup","fieldId","helperTextInvalid","validated","Grid","hasGutter","option","disabled","GridItem","sm","md","Tile","tabIndex","onKeyPress","e","event","charCode","preventDefault","handleKeyPress","isStacked","isSelected","_value","AuthRadio","Radio","isChecked","EnhancedRadio","selectedType","selectedApp","newOptions","useEffect","change","FormGroupProps","mapperExtension","AuthSelect","summary","supportedApps","filteredOptions","Stack","StackItem","Switch","checked","handleChange","match","isEditing","isModified","edited","setEdited","firstClick","useRef","mounted","current","pristine","doNotRequirePassword","componentProps","resolveProps","onFocus","TextInput","aria-label","autoFocus","SourcesFormRenderer","componentMapper","FormTemplate","pf4ComponentMapper","ValidatingSpinner","validating","isHidden","_","valid"],"mappings":"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","file":"js/2827.b22b0569c6b27031828a.js","sourcesContent":["import { getSourcesApi } from './entities';\n\nexport const checkSourceStatus = (id) =>\n  getSourcesApi()\n    .checkAvailabilitySource(id)\n    .catch(() => {});\n\nexport default checkSourceStatus;\n","export const delay = (interval, prms) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve.bind(null, prms), interval);\n  });\n};\n","import { getSourcesApi } from './entities';\nimport { delay } from './delay';\n\nexport const checkAppAvailability = (id, timeout = 10000, interval = 1000, entity = 'showApplication', updatedTime) =>\n  new Promise((res, rej) => {\n    const start = Date.now();\n\n    const checkSource = () =>\n      // eslint-disable-next-line prettier/prettier\n      getSourcesApi()[entity](id)\n        .then((data) => {\n          const isTimeOuted = Date.now() - start >= timeout;\n\n          if (isTimeOuted) {\n            if (updatedTime) {\n              return {\n                ...data,\n                availability_status: null,\n                availability_status_error: null,\n              };\n            }\n\n            return data;\n          }\n\n          if (data.availability_status === 'available' || data.availability_status === 'unavailable') {\n            if (updatedTime && new Date(data.last_checked_at || data.updated_at) > updatedTime) {\n              return data;\n            }\n\n            if (!updatedTime) {\n              return data;\n            }\n          }\n\n          return delay(interval).then(() => checkSource());\n        });\n\n    return checkSource()\n      .then((data) => res(data))\n      .catch((error) => rej(error));\n  });\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport hardcodedSchemas from './hardcodedSchemas';\nimport get from 'lodash/get';\n\nexport const acronymMapper = (value) =>\n  ({\n    'Amazon Web Services': 'AWS',\n  }[value] || value);\n\nexport const hardcodedSchema = (typeName, authName, appName) =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName], undefined);\n\nexport const getAdditionalSteps = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'additionalSteps'], []);\n\nexport const shouldSkipSelection = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'skipSelection'], false);\n\nexport const shouldSkipEndpoint = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'skipEndpoint'], false);\n\nexport const hasCustomSteps = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'customSteps'], false);\n\nexport const getAdditionalStepKeys = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'includeStepKeyFields'], []);\n\nexport const getOnlyHiddenFields = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'onlyHiddenFields'], false);\n\nexport const getAdditionalStepFields = (fields, stepKey) =>\n  fields.filter((field) => field.stepKey === stepKey).map(({ stepKey: _stepKey, ...field }) => field);\n\nexport const shouldUseAppAuth = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'useApplicationAuth'], false);\n\nexport const getNoStepsFields = (fields, additionalStepKeys = []) =>\n  fields.filter((field) => !field.stepKey || additionalStepKeys.includes(field.stepKey));\n\nexport const injectAuthFieldsInfo = (fields, type, auth, applicationName) =>\n  fields.map((field) => {\n    const specificFields = get(hardcodedSchemas, [type, 'authentication', auth, applicationName]);\n\n    const hardcodedField = specificFields\n      ? get(specificFields, field.name)\n      : get(hardcodedSchemas, [type, 'authentication', auth, 'generic', field.name]);\n\n    const resultedField = hardcodedField ? { ...field, ...hardcodedField } : field;\n\n    if (resultedField.name === 'authentication.password') {\n      resultedField.component = 'authentication';\n    }\n\n    return resultedField;\n  });\n\nexport const injectEndpointFieldsInfo = (fields, type) =>\n  fields.map((field) => {\n    const hardcodedField = get(hardcodedSchemas, [type, 'endpoint', field.name]);\n\n    return hardcodedField ? { ...field, ...hardcodedField } : field;\n  });\n\nexport const getAdditionalAuthFields = (type, auth, applicationName = 'generic') =>\n  get(hardcodedSchemas, [type, 'authentication', auth, applicationName, 'additionalFields'], []);\n\nexport const getAdditionalEndpointFields = (type) => get(hardcodedSchemas, [type, 'endpoint', 'additionalFields'], []);\n\nexport const createEndpointStep = (endpoint, typeName) => ({\n  ...endpoint,\n  fields: [...getAdditionalEndpointFields(typeName), ...injectEndpointFieldsInfo(endpoint.fields, typeName)],\n  name: `${typeName}-endpoint`,\n  nextStep: 'summary',\n});\n\nexport const createAdditionalSteps = (additionalSteps, name, authName, hasEndpointStep, fields, appName = 'generic') =>\n  additionalSteps.map((step) => {\n    const stepKey = step.name || `${name}-${authName}-${appName}-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(name, authName, appName);\n    const customSteps = hasCustomSteps(name, authName, appName);\n\n    return {\n      name: stepKey,\n      nextStep: hasEndpointStep && !skipEndpoint && !customSteps ? `${name}-endpoint` : 'summary',\n      ...step,\n      fields: [\n        ...injectAuthFieldsInfo(step.fields, name, authName, appName),\n        ...injectAuthFieldsInfo(getAdditionalStepFields(fields, stepKey), name, authName, appName),\n      ],\n    };\n  });\n\nexport const createGenericAuthTypeSelection = (type, endpointFields, disableAuthType) => {\n  const auths = type.schema.authentication;\n  const hasMultipleAuthTypes = auths.length > 1;\n\n  let fields = [...endpointFields];\n  const stepMapper = {};\n\n  if (hasMultipleAuthTypes) {\n    fields = [];\n    auths.forEach((auth) => {\n      const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type);\n\n      const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, 'generic');\n\n      const onlyHiddenFields = getOnlyHiddenFields(type.name, auth.type);\n      const authFields = onlyHiddenFields ? auth.fields.filter(({ hideField }) => hideField) : auth.fields;\n\n      fields.push({\n        component: 'auth-select',\n        name: 'auth_select',\n        label: auth.name,\n        authName: auth.type,\n        validate: [\n          {\n            type: validatorTypes.REQUIRED,\n          },\n        ],\n        disableAuthType,\n      });\n      fields.push({\n        component: componentTypes.SUB_FORM,\n        name: `${auth.type}-subform`,\n        className: 'pf-u-pl-md',\n        fields: [\n          ...(!shouldUseAppAuth(type.name, auth.type) ? endpointFields : []),\n          ...getAdditionalAuthFields(type.name, auth.type),\n          ...injectAuthFieldsInfo(getNoStepsFields(authFields, additionalIncludesStepKeys), type.name, auth.type),\n        ],\n        condition: {\n          when: 'auth_select',\n          is: auth.type,\n        },\n        hideField: onlyHiddenFields,\n      });\n      stepMapper[auth.type] =\n        getAdditionalSteps(type.name, auth.type).length > 0\n          ? `${type.name}-${auth.type}-generic-additional-step`\n          : endpointFields.length === 0 && !skipEndpoint\n          ? `${type.name}-endpoint`\n          : 'summary';\n    });\n\n    return {\n      name: type.name,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields,\n      nextStep: {\n        when: 'auth_select',\n        stepMapper,\n      },\n    };\n  } else {\n    const auth = auths[0];\n    const additionalStepName = `${type.name}-${auth.type}-generic-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, 'generic');\n\n    const nextStep =\n      getAdditionalSteps(type.name, auth.type).length > 0\n        ? additionalStepName\n        : endpointFields.length === 0 && !skipEndpoint\n        ? `${type.name}-endpoint`\n        : 'summary';\n\n    const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type);\n    const hasCustomStep = shouldSkipSelection(type.name, auth.type);\n\n    let stepProps = {};\n\n    if (shouldUseAppAuth(type.name, auth.type)) {\n      fields = [];\n    }\n\n    if (hasCustomStep) {\n      const firstAdditonalStep = getAdditionalSteps(type.name, auth.type).find(({ name }) => !name);\n      const additionalFields = getAdditionalStepFields(auth.fields, additionalStepName);\n\n      stepProps = {\n        ...firstAdditonalStep,\n        fields: [...fields, ...injectAuthFieldsInfo([...firstAdditonalStep.fields, ...additionalFields], type.name, auth.type)],\n      };\n    }\n\n    return {\n      name: type.name,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields: [\n        ...fields,\n        ...getAdditionalAuthFields(type.name, auth.type),\n        ...injectAuthFieldsInfo(getNoStepsFields(auth.fields, additionalIncludesStepKeys), type.name, auth.type),\n      ],\n      nextStep,\n      ...stepProps,\n    };\n  }\n};\n\nexport const createSpecificAuthTypeSelection = (type, appType, endpointFields, disableAuthType) => {\n  const auths = type.schema.authentication;\n  const supportedAuthTypes = appType.supported_authentication_types[type.name];\n  const hasMultipleAuthTypes = supportedAuthTypes.length > 1;\n\n  let fields = [...endpointFields];\n  const stepMapper = {};\n\n  if (hasMultipleAuthTypes) {\n    fields = [];\n    auths\n      .filter(({ type: authType }) => supportedAuthTypes.includes(authType))\n      .forEach((auth) => {\n        const appName = hardcodedSchema(type.name, auth.type, appType.name) ? appType.name : 'generic';\n\n        const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, appName);\n        const customSteps = hasCustomSteps(type.name, auth.type, appName);\n\n        let nextStep;\n\n        if (getAdditionalSteps(type.name, auth.type, appType.name).length > 0) {\n          nextStep = `${type.name}-${auth.type}-${appType.name}-additional-step`;\n        } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n          nextStep = `${type.name}-endpoint`;\n        } else {\n          nextStep = 'summary';\n        }\n\n        const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type, appName);\n\n        const onlyHiddenFields = getOnlyHiddenFields(type.name, auth.type, appName);\n        const authFields = onlyHiddenFields ? auth.fields.filter(({ hideField }) => hideField) : auth.fields;\n\n        fields.push({\n          component: 'auth-select',\n          name: 'auth_select',\n          label: auth.name,\n          authName: auth.type,\n          validate: [\n            {\n              type: validatorTypes.REQUIRED,\n            },\n          ],\n          supportedAuthTypes: appType.supported_authentication_types[type.name],\n          disableAuthType,\n        });\n        fields.push({\n          component: componentTypes.SUB_FORM,\n          name: `${auth.type}-subform`,\n          className: 'pf-u-pl-md',\n          fields: [\n            ...(!shouldUseAppAuth(type.name, auth.type, appName) ? endpointFields : []),\n            ...getAdditionalAuthFields(type.name, auth.type, appName),\n            ...injectAuthFieldsInfo(getNoStepsFields(authFields, additionalIncludesStepKeys), type.name, auth.type, appName),\n          ],\n          condition: {\n            when: 'auth_select',\n            is: auth.type,\n          },\n          hideField: onlyHiddenFields,\n        });\n        stepMapper[auth.type] = nextStep;\n      });\n\n    return {\n      name: `${type.name}-${appType.id}`,\n      title: <FormattedMessage id=\"wizard.chooseAuthType\" defaultMessage=\"Choose authentication type\" />,\n      fields,\n      nextStep: {\n        when: 'auth_select',\n        stepMapper,\n      },\n    };\n  } else {\n    const auth = auths.find(({ type: authType }) => supportedAuthTypes.includes(authType));\n    const appName = hardcodedSchema(type.name, auth.type, appType.name) ? appType.name : 'generic';\n\n    const additionalStepName = `${type.name}-${auth.type}-${appType.name}-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, appName);\n    const customSteps = hasCustomSteps(type.name, auth.type, appName);\n\n    if (shouldUseAppAuth(type.name, auth.type, appName)) {\n      fields = [];\n    }\n\n    let nextStep;\n\n    if (getAdditionalSteps(type.name, auth.type, appName).length > 0) {\n      nextStep = additionalStepName;\n    } else if (endpointFields.length === 0 && !skipEndpoint) {\n      nextStep = `${type.name}-endpoint`;\n    } else {\n      nextStep = 'summary';\n    }\n\n    const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type, appName);\n    const hasCustomStep = shouldSkipSelection(type.name, auth.type, appName);\n\n    let stepProps = {};\n\n    if (hasCustomStep) {\n      const firstAdditonalStep = getAdditionalSteps(type.name, auth.type, appName).find(({ name }) => !name);\n      const additionalFields = getAdditionalStepFields(auth.fields, additionalStepName);\n\n      if (firstAdditonalStep.nextStep) {\n        nextStep = firstAdditonalStep.nextStep;\n      } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n        nextStep = `${type.name}-endpoint`;\n      } else {\n        nextStep = 'summary';\n      }\n\n      stepProps = {\n        ...firstAdditonalStep,\n        fields: [\n          ...fields,\n          ...injectAuthFieldsInfo([...firstAdditonalStep.fields, ...additionalFields], type.name, auth.type, appName),\n        ],\n      };\n    }\n\n    return {\n      name: `${type.name}-${appType.id}`,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields: [\n        ...fields,\n        ...getAdditionalAuthFields(type.name, auth.type, appName),\n        ...injectAuthFieldsInfo(getNoStepsFields(auth.fields, additionalIncludesStepKeys), type.name, auth.type, appName),\n      ],\n      nextStep,\n      ...stepProps,\n    };\n  }\n};\n\nexport const schemaBuilder = (sourceTypes, appTypes, disableAuthType) => {\n  const schema = [];\n\n  sourceTypes.forEach((type) => {\n    const appendEndpoint = type.schema.endpoint.hidden ? type.schema.endpoint.fields : [];\n    const hasEndpointStep = appendEndpoint.length === 0;\n\n    schema.push(createGenericAuthTypeSelection(type, appendEndpoint, disableAuthType));\n\n    appTypes.forEach((appType) => {\n      if (appType.supported_source_types.includes(type.name)) {\n        schema.push(createSpecificAuthTypeSelection(type, appType, appendEndpoint, disableAuthType));\n      }\n    });\n\n    type.schema.authentication.forEach((auth) => {\n      const additionalSteps = getAdditionalSteps(type.name, auth.type);\n\n      if (additionalSteps.length > 0) {\n        schema.push(...createAdditionalSteps(additionalSteps, type.name, auth.type, hasEndpointStep, auth.fields));\n      }\n\n      appTypes.forEach((appType) => {\n        const appAdditionalSteps = getAdditionalSteps(type.name, auth.type, appType.name);\n\n        if (appAdditionalSteps.length > 0) {\n          schema.push(\n            ...createAdditionalSteps(appAdditionalSteps, type.name, auth.type, hasEndpointStep, auth.fields, appType.name)\n          );\n        }\n      });\n    });\n\n    if (hasEndpointStep) {\n      schema.push(createEndpointStep(type.schema.endpoint, type.name));\n    }\n  });\n\n  return schema;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\n\nconst ErroredStep = ({ onClose, returnButtonTitle, message, title, customText, primaryAction, secondaryActions, Component }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={ExclamationCircleIcon} color=\"var(--pf-global--danger-color--100)\" className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {title}\n      </Title>\n      <EmptyStateBody className=\"ins-c-sources__wizard--step-text\">{message || customText}</EmptyStateBody>\n      <Component variant=\"primary\" onClick={primaryAction || onClose}>\n        {returnButtonTitle}\n      </Component>\n      {secondaryActions && <EmptyStateSecondaryActions className=\"pf-u-mt-sm\">{secondaryActions}</EmptyStateSecondaryActions>}\n    </EmptyState>\n  </Bullseye>\n);\n\nErroredStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  returnButtonTitle: PropTypes.node,\n  message: PropTypes.node,\n  title: PropTypes.node,\n  customText: PropTypes.node,\n  primaryAction: PropTypes.func,\n  secondaryActions: PropTypes.node,\n  Component: PropTypes.elementType,\n};\n\nErroredStep.defaultProps = {\n  title: <FormattedMessage id=\"wizard.unsuccConfiguration\" defaultMessage=\"Something went wrong\" />,\n  // eslint-disable-next-line max-len\n  customText: (\n    <FormattedMessage\n      id=\"wizard.errorText\"\n      defaultMessage=\"There was a problem while trying to add your source. Please try again. If the error persists, open a support case.\"\n    />\n  ),\n  Component: Button,\n};\n\nexport default ErroredStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner/Spinner';\n\nconst LoadingStep = ({ onClose, customText, cancelTitle, description }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={Spinner} className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {customText}\n      </Title>\n      {description && <EmptyStateBody className=\"ins-c-sources__wizard--step-text\">{description}</EmptyStateBody>}\n      {onClose && (\n        <EmptyStateSecondaryActions className=\"pf-u-mt-xl\">\n          <Button variant=\"link\" onClick={onClose}>\n            {cancelTitle}\n          </Button>\n        </EmptyStateSecondaryActions>\n      )}\n    </EmptyState>\n  </Bullseye>\n);\n\nLoadingStep.propTypes = {\n  onClose: PropTypes.func,\n  customText: PropTypes.node,\n  cancelTitle: PropTypes.node,\n  description: PropTypes.node,\n};\n\nLoadingStep.defaultProps = {\n  customText: <FormattedMessage id=\"wizard.loadingText\" defaultMessage=\"Loading, please wait.\" />,\n  cancelTitle: <FormattedMessage id=\"wizard.cancelText\" defaultMessage=\"Cancel\" />,\n};\n\nexport default LoadingStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { Popover } from '@patternfly/react-core/dist/esm/components/Popover/Popover';\n\nconst ValuePopover = ({ label, value }) => {\n  const intl = useIntl();\n\n  return (\n    <Popover headerContent={label} bodyContent={value} position=\"top\" maxWidth=\"80%\">\n      <Button variant=\"link\" isInline className=\"ins-c-sources__wizard--summary-buttonss\">\n        {intl.formatMessage({\n          id: 'wizard.showMore',\n          defaultMessage: 'Show more',\n        })}\n      </Button>\n    </Popover>\n  );\n};\n\nValuePopover.propTypes = {\n  label: PropTypes.node,\n  value: PropTypes.node,\n};\n\nexport default ValuePopover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label/Label';\nimport { Alert } from '@patternfly/react-core/dist/esm/components/Alert/Alert';\nimport { DescriptionList } from '@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionList';\nimport { DescriptionListDescription } from '@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListDescription';\nimport { DescriptionListGroup } from '@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListGroup';\nimport { DescriptionListTerm } from '@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListTerm';\n\nimport get from 'lodash/get';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nimport ValuePopover from './ValuePopover';\nimport hardcodedSchemas from '../../components/addSourceWizard/hardcodedSchemas';\nimport { COST_MANAGEMENT_APP_NAME } from '../../utilities/constants';\nimport { NO_APPLICATION_VALUE } from '../../components/addSourceWizard/stringConstants';\nimport {\n  getAdditionalSteps,\n  injectAuthFieldsInfo,\n  injectEndpointFieldsInfo,\n  shouldSkipEndpoint,\n} from '../../components/addSourceWizard/schemaBuilder';\n\nconst alertMapper = (appName, sourceType, intl) => {\n  if (appName === COST_MANAGEMENT_APP_NAME && sourceType !== 'google') {\n    return (\n      <Alert\n        variant=\"info\"\n        isInline\n        title={intl.formatMessage({ id: 'cost.rbacWarningTitle', defaultMessage: 'Manage permissions in User Access' })}\n      >\n        {intl.formatMessage({\n          id: 'cost.rbacWarningDescription',\n          defaultMessage:\n            'Make sure to manage permissions for this source in custom roles that contain permissions for Cost Management.',\n        })}\n      </Alert>\n    );\n  }\n\n  return null;\n};\n\nexport const createItem = (formField, values, stepKeys) => {\n  let value = get(values, formField.name);\n\n  if (formField.stepKey && !stepKeys.includes(formField.stepKey)) {\n    return undefined;\n  }\n\n  if (formField.condition && get(values, formField.condition.when) !== formField.condition.is) {\n    return undefined;\n  }\n\n  // do not show hidden fields\n  if (formField.hideField) {\n    return undefined;\n  }\n\n  // Hide password\n  if (value && formField.type === 'password') {\n    value = '●●●●●●●●●●●●';\n  }\n\n  // Boolean value convert to Yes / No\n  if (typeof value === 'boolean') {\n    value = value ? (\n      <Label color=\"green\">\n        <FormattedMessage id=\"wizard.enabled\" defaultMessage=\"Enabled\" />\n      </Label>\n    ) : (\n      <Label color=\"gray\">\n        <FormattedMessage id=\"wizard.disabled\" defaultMessage=\"Disabled\" />\n      </Label>\n    );\n  }\n\n  if (!value && formField.name === 'authentication.password' && get(values, 'authentication.id')) {\n    value = '●●●●●●●●●●●●';\n  }\n\n  return { label: formField['aria-label'] || formField.label, value: value || '-' };\n};\n\nexport const getAllFieldsValues = (fields, values, stepKeys) =>\n  fields.map((field) => createItem(field, values, stepKeys)).filter(Boolean);\n\nexport const getStepKeys = (typeName, authName, appName = 'generic', appId) =>\n  [\n    ...get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'includeStepKeyFields'], []),\n    ...get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'additionalSteps'], []).map(({ name }) => name),\n    `${typeName}-${authName}-${appName}-additional-step`,\n    `${typeName}-${authName}-additional-step`,\n    appId ? `${typeName}-${appId}` : undefined,\n  ].filter(Boolean);\n\nconst DesctiptionListItem = ({ term, description, ...props }) => (\n  <DescriptionListGroup {...props}>\n    <DescriptionListTerm>{term}</DescriptionListTerm>\n    <DescriptionListDescription>{description}</DescriptionListDescription>\n  </DescriptionListGroup>\n);\n\nDesctiptionListItem.propTypes = {\n  term: PropTypes.node,\n  description: PropTypes.node,\n};\n\nconst SourceWizardSummary = ({ sourceTypes, applicationTypes, showApp, showAuthType }) => {\n  const formOptions = useFormApi();\n  const intl = useIntl();\n\n  const values = formOptions.getState().values;\n  const type = sourceTypes.find((type) => type.name === values.source_type || type.id === values.source.source_type_id);\n\n  const hasAuthentication =\n    values.authentication && values.authentication.authtype ? values.authentication.authtype : values.auth_select;\n\n  let authType;\n  let authTypeFields = [];\n\n  if (hasAuthentication) {\n    authType = type.schema.authentication.find(({ type }) => type === hasAuthentication);\n    authTypeFields = authType && authType.fields ? authType.fields : [];\n  }\n\n  let applicatioNames;\n\n  if (values.source.app_creation_workflow === 'account_authorization') {\n    applicatioNames = values.applications.map((app) => applicationTypes.find((type) => type.id === app)?.display_name);\n  }\n\n  const application = values.application\n    ? applicationTypes.find((type) => type.id === values.application.application_type_id)\n    : undefined;\n\n  const {\n    display_name = intl.formatMessage({ id: 'wizard.notSelected', defaultMessage: 'Not selected' }),\n    name,\n    id,\n  } = application ? application : {};\n\n  const skipEndpoint = shouldSkipEndpoint(type.name, hasAuthentication, name);\n\n  let endpointFields = type.schema.endpoint.fields;\n\n  if (skipEndpoint) {\n    endpointFields = [];\n    authTypeFields = authTypeFields.filter(({ name }) => !name.includes('authentication.'));\n  }\n\n  const availableStepKeys = getStepKeys(type.name, hasAuthentication, name, id);\n\n  const authSteps = getAdditionalSteps(type.name, hasAuthentication, name);\n  const hasCustomSteps = get(hardcodedSchemas, [type.name, 'authentication', hasAuthentication, name, 'customSteps'], false);\n\n  if (authSteps.length > 0) {\n    authTypeFields = authSteps\n      .map((step) => [...step.fields, ...authTypeFields.filter(({ stepKey }) => stepKey && step.name === stepKey)])\n      .flatMap((x) => x)\n      .filter(\n        ({ name }) =>\n          name.startsWith('application.extra') ||\n          authTypeFields.find((field) => field.name === name) ||\n          (hasCustomSteps && endpointFields.find((field) => field.name === name))\n      );\n  }\n\n  if (hasCustomSteps) {\n    endpointFields = [];\n  }\n\n  authTypeFields = injectAuthFieldsInfo(authTypeFields, type.name, hasAuthentication, name || 'generic');\n  endpointFields = injectEndpointFieldsInfo(endpointFields, type.name);\n\n  const fields = [...authTypeFields, ...endpointFields];\n\n  const valuesInfo = getAllFieldsValues(fields, values, availableStepKeys);\n\n  const valuesList = valuesInfo.map(({ label, value }) => (\n    <DesctiptionListItem\n      key={`${label}--${value}`}\n      term={label}\n      description={value.toString().length > 150 ? <ValuePopover label={label} value={value} /> : value}\n    />\n  ));\n\n  return (\n    <React.Fragment>\n      <DescriptionList isHorizontal className=\"ins-c-sources__wizard--summary-description-list\">\n        <DesctiptionListItem\n          term={intl.formatMessage({\n            id: 'wizard.name',\n            defaultMessage: 'Name',\n          })}\n          description={values.source.name}\n        />\n        <DesctiptionListItem\n          term={intl.formatMessage({\n            id: 'wizard.sourceType',\n            defaultMessage: 'Source type',\n          })}\n          description={type.product_name}\n        />\n        {showApp && values.source.app_creation_workflow && (\n          <DesctiptionListItem\n            term={intl.formatMessage({\n              id: 'wizard.configurationMode',\n              defaultMessage: 'Configuration mode',\n            })}\n            description={\n              values.source.app_creation_workflow === 'account_authorization'\n                ? intl.formatMessage({\n                    id: 'wizard.accountAuth',\n                    defaultMessage: 'Account authorization',\n                  })\n                : intl.formatMessage({\n                    id: 'wizard.manualConfig',\n                    defaultMessage: 'Manual configuration',\n                  })\n            }\n          />\n        )}\n        {showApp && values.source.app_creation_workflow === 'account_authorization' && (\n          <DesctiptionListItem\n            term={intl.formatMessage({\n              id: 'wizard.applications',\n              defaultMessage: 'Applications',\n            })}\n            description={\n              applicatioNames.length\n                ? applicatioNames.map((app) => <div key={app}>{app}</div>)\n                : intl.formatMessage({ id: 'none', defaultMessage: 'None' })\n            }\n          />\n        )}\n        {showApp && values.source.app_creation_workflow !== 'account_authorization' && (\n          <DesctiptionListItem\n            term={intl.formatMessage({\n              id: 'wizard.application',\n              defaultMessage: 'Application',\n            })}\n            description={display_name}\n          />\n        )}\n        {!skipEndpoint &&\n          authType &&\n          showAuthType &&\n          values.source.app_creation_workflow !== 'account_authorization' &&\n          (!values.application?.application_type_id || values.application?.application_type_id === NO_APPLICATION_VALUE) && (\n            <DesctiptionListItem\n              term={intl.formatMessage({\n                id: 'wizard.authenticationType',\n                defaultMessage: 'Authentication type',\n              })}\n              description={authType.name}\n            />\n          )}\n        {valuesList}\n      </DescriptionList>\n      {alertMapper(name, type.name, intl)}\n    </React.Fragment>\n  );\n};\n\nSourceWizardSummary.propTypes = {\n  sourceTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      product_name: PropTypes.string.isRequired,\n      schema: PropTypes.shape({\n        authentication: PropTypes.array,\n        endpoint: PropTypes.object,\n      }),\n    })\n  ).isRequired,\n  applicationTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      display_name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  showApp: PropTypes.bool,\n  showAuthType: PropTypes.bool,\n};\n\nSourceWizardSummary.defaultProps = {\n  showApp: true,\n  showAuthType: true,\n};\n\nexport default SourceWizardSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\n\nDescription.propTypes = {\n  Content: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n};\n\nexport default Description;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/GridItem';\nimport { Tile } from '@patternfly/react-core/dist/esm/components/Tile/Tile';\nimport { Grid } from '@patternfly/react-core/dist/esm/layouts/Grid/Grid';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst handleKeyPress = (event, value, onClick) => {\n  const spaceBar = 32;\n  if (event.charCode === spaceBar) {\n    event.preventDefault();\n    onClick(value);\n  }\n};\n\nconst CardSelect = (originalProps) => {\n  const {\n    isRequired,\n    label,\n    helperText,\n    hideLabel,\n    meta,\n    input,\n    options,\n    mutator,\n    DefaultIcon,\n    iconMapper,\n    ...props\n  } = useFieldApi(originalProps);\n  const formOptions = useFormApi();\n  const [icons] = useState(() => {\n    const components = {};\n\n    options.forEach(({ value }) => (components[value] = iconMapper(value, DefaultIcon)));\n\n    return components;\n  });\n\n  const isMulti = props.isMulti || props.multi;\n  const isDisabled = props.isDisabled || props.isReadOnly;\n  const inputValue = input.value || [];\n\n  const handleMulti = (value) =>\n    input.onChange(\n      inputValue.includes(value) ? inputValue.filter((valueSelect) => valueSelect !== value) : [...inputValue, value]\n    );\n\n  const handleSingle = (value) => input.onChange(inputValue === value ? undefined : value);\n\n  const handleClick = (value) => (isMulti ? handleMulti(value) : handleSingle(value));\n\n  const onClick = (value) => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    handleClick(value);\n    input.onBlur();\n  };\n\n  const prepareCards = () =>\n    options\n      .map((option) => mutator(option, formOptions))\n      .map(({ value, label, isDisabled: itemIsDisabled }) => {\n        const disabled = itemIsDisabled || isDisabled;\n\n        if (!value) {\n          return undefined;\n        }\n\n        const Component = icons[value];\n\n        return (\n          <GridItem sm={6} md={4} key={value}>\n            <Tile\n              className={`ins-c-sources__wizard--tile${disabled ? ' disabled' : ''}`}\n              onClick={() => onClick(value)}\n              tabIndex={disabled ? -1 : 0}\n              onKeyPress={(e) => handleKeyPress(e, value, onClick)}\n              isDisabled={disabled}\n              title={label}\n              isStacked\n              isSelected={inputValue.includes(value)}\n              {...(Component && { icon: <Component /> })}\n            />\n          </GridItem>\n        );\n      });\n\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={input.name}\n      helperText={helperText}\n      helperTextInvalid={error}\n      validated={showError ? 'error' : 'default'}\n    >\n      <Grid hasGutter className=\"pf-u-mb-md\">\n        {prepareCards()}\n      </Grid>\n    </FormGroup>\n  );\n};\n\nCardSelect.propTypes = {\n  multi: PropTypes.bool,\n  isMulti: PropTypes.bool,\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.node,\n  description: PropTypes.node,\n  hideLabel: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  mutator: PropTypes.func,\n  options: PropTypes.array,\n  DefaultIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.element]),\n  iconMapper: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n};\n\nCardSelect.defaultProps = {\n  options: [],\n  iconMapper: (_value, DefaultIcon) => DefaultIcon,\n  mutator: (x) => x,\n};\n\nexport default CardSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio } from '@patternfly/react-core/dist/esm/components/Radio/Radio';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\n\nconst AuthRadio = (props) => {\n  const { label, input, authName, supportedAuthTypes, disableAuthType } = useFieldApi(props);\n\n  const isSelected = input.value === authName;\n\n  if (input.value && supportedAuthTypes && !supportedAuthTypes.includes(input.value)) {\n    input.onChange(undefined);\n  }\n\n  return (\n    <Radio\n      value={authName}\n      isChecked={isSelected}\n      name={input.name}\n      onChange={() => input.onChange(authName)}\n      label={label}\n      id={`${input.name}-${authName}`}\n      isDisabled={disableAuthType}\n    />\n  );\n};\n\nAuthRadio.propTypes = {\n  label: PropTypes.string,\n  authName: PropTypes.string.isRequired,\n  disableAuthType: PropTypes.bool,\n  supportedAuthTypes: PropTypes.arrayOf(PropTypes.string),\n};\n\nAuthRadio.defaultProps = {\n  disableAuthType: false,\n};\n\nexport default AuthRadio;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport Radio from '@data-driven-forms/pf4-component-mapper/dist/esm/radio';\nimport { NO_APPLICATION_VALUE } from '../../components/addSourceWizard/stringConstants';\n\nconst EnhancedRadio = ({ options, mutator, ...props }) => {\n  const formOptions = useFormApi();\n\n  const values = formOptions.getState().values;\n\n  const selectedType = values.source_type;\n  const selectedApp = get(values, props.name);\n\n  const newOptions = options.map((option) => mutator(option, formOptions)).filter(Boolean);\n\n  useEffect(() => {\n    if (\n      selectedType &&\n      (!selectedApp || !newOptions.map(({ value }) => value).includes(selectedApp)) &&\n      newOptions.filter((option) => option.value && option.value !== NO_APPLICATION_VALUE).length === 1\n    ) {\n      formOptions.change(props.name, newOptions[0].value);\n    } else if (!newOptions.map(({ value }) => value).includes(selectedApp)) {\n      formOptions.change(props.name, NO_APPLICATION_VALUE);\n    }\n  }, [selectedType]);\n\n  return <Radio {...props} options={newOptions} FormGroupProps={{ className: 'ins-c-sources__wizard--radio' }} />;\n};\n\nEnhancedRadio.propTypes = {\n  mutator: PropTypes.func.isRequired,\n  options: PropTypes.array,\n  name: PropTypes.string,\n};\n\nexport default EnhancedRadio;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/esm/form-renderer';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/esm/form-template';\nimport pf4ComponentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\n\nimport Authentication from '../components/Authentication';\n\nimport SourceWizardSummary from '../components/FormComponents/SourceWizardSummary';\nimport Description from '../components/FormComponents/Description';\nimport CardSelect from '../components/FormComponents/CardSelect';\nimport AuthSelect from '../components/FormComponents/AuthSelect';\nimport EnhancedRadio from '../components/FormComponents/EnhancedRadio';\nimport SwitchGroup from '../components/FormComponents/SwitchGroup';\n\nexport const mapperExtension = {\n  'auth-select': AuthSelect,\n  description: Description,\n  'card-select': CardSelect,\n  summary: SourceWizardSummary,\n  'enhanced-radio': EnhancedRadio,\n  'switch-group': SwitchGroup,\n  authentication: Authentication,\n};\n\nconst SourcesFormRenderer = ({ componentMapper, ...props }) => (\n  <FormRenderer\n    FormTemplate={FormTemplate}\n    componentMapper={{\n      ...pf4ComponentMapper,\n      ...mapperExtension,\n      ...componentMapper,\n    }}\n    {...props}\n  />\n);\n\nSourcesFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n};\n\nexport default SourcesFormRenderer;\n","import React, { useEffect } from 'react';\n\nimport { Switch } from '@patternfly/react-core/dist/esm/components/Switch/Switch';\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { Stack } from '@patternfly/react-core/dist/esm/layouts/Stack/Stack';\nimport { StackItem } from '@patternfly/react-core/dist/esm/layouts/Stack/StackItem';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst SwitchGroup = (props) => {\n  const { label, input, options, applicationTypes } = useFieldApi(props);\n  const { getState } = useFormApi();\n\n  const selectedType = getState().values.source_type;\n  const supportedApps = applicationTypes\n    .filter(({ supported_source_types }) => supported_source_types.includes(selectedType))\n    .map(({ id }) => id);\n  const filteredOptions = options.filter(({ value }) => supportedApps.includes(value));\n\n  const handleChange = (checked, value) =>\n    checked ? input.onChange([...input.value, value]) : input.onChange(input.value.filter((x) => x !== value));\n\n  useEffect(() => {\n    if (!input.value) {\n      input.onChange(filteredOptions.map(({ value }) => value).filter(Boolean));\n    }\n  }, []);\n\n  return (\n    <FormGroup label={label} fieldId={input.name}>\n      <Stack hasGutter>\n        {filteredOptions.map((option) => (\n          <StackItem key={option.value}>\n            <Switch\n              label={option.label}\n              onChange={(checked) => handleChange(checked, option.value)}\n              isChecked={input.value.includes(option.value)}\n              id={option.value}\n            />\n            {option.description && (\n              <div className=\"pf-c-switch pf-u-mt-sm\">\n                <span className=\"pf-c-switch__toggle ins-c-sources__wizard--hide-me\" />\n                <div className=\"pf-c-switch__label ins-c-sources__wizard--switch-description\">{option.description}</div>\n              </div>\n            )}\n          </StackItem>\n        ))}\n      </Stack>\n    </FormGroup>\n  );\n};\n\nexport default SwitchGroup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\n\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { TextInput } from '@patternfly/react-core/dist/esm/components/TextInput/TextInput';\n\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/esm/text-field';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\n\nimport validated from '../utilities/resolveProps/validated';\n\nconst Authentication = (rest) => {\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  const [authenticationId] = rest?.name?.match(/\\d+/) || [];\n  const isEditing = authenticationId || values.authentication?.id;\n\n  // If there is any value, the field is modified (password is always empty on start)\n  let isModified = get(values, rest.name);\n\n  const [edited, setEdited] = useState(!isEditing || isModified);\n  const firstClick = useRef(true);\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      // reset on restart\n      if (!firstClick.current && formOptions.getState().pristine) {\n        setEdited(false);\n        firstClick.current = true;\n      }\n\n      if (edited) {\n        firstClick.current = false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(isEditing\n      ? {\n          validate: doNotRequirePassword,\n          resolveProps: validated,\n        }\n      : {}),\n  };\n\n  if (!edited && isEditing) {\n    return (\n      <FormGroup helperText={componentProps.helperText} label={componentProps.label} onFocus={() => setEdited(true)} isRequired>\n        <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" />\n      </FormGroup>\n    );\n  }\n\n  return <TextField {...componentProps} autoFocus={true} />;\n};\n\nexport default Authentication;\n","const isSuperKey = (source) => source.app_creation_workflow === 'account_authorization';\n\nexport default isSuperKey;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner/Spinner';\nimport { FormHelperText } from '@patternfly/react-core/dist/esm/components/Form/FormHelperText';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/dist/esm/form-spy';\n\nexport const ValidatingSpinner = ({ validating }) => {\n  const intl = useIntl();\n\n  return (\n    <FormHelperText isHidden={!validating}>\n      <Spinner size=\"md\" className=\"pf-u-mr-md\" />\n      {intl.formatMessage({ id: 'wizard.validating', defaultMessage: 'Validating' })}\n    </FormHelperText>\n  );\n};\n\nValidatingSpinner.propTypes = {\n  validating: PropTypes.bool.isRequired,\n};\n\nconst validated = (_, { meta }) => {\n  if (meta.validating) {\n    return {\n      // FormSpy is a fallback solution\n      // FF sometimes does not set validating to 'false' on the field\n      // So we need to also check the FormSpy.validating\n      helperText: <FormSpy>{({ validating }) => <ValidatingSpinner validating={validating} />}</FormSpy>,\n    };\n  }\n\n  if (meta.valid) {\n    return {\n      validated: 'success',\n      FormGroupProps: {\n        validated: 'success',\n      },\n    };\n  }\n\n  return {};\n};\n\nexport default validated;\n"],"sourceRoot":""}