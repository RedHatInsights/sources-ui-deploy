{"version":3,"sources":["webpack://sources-ui/./src/addSourceWizard/addSourceWizard/ValidatorReset.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/descriptions/SubWatchDescription.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/SourceAddSchema.js","webpack://sources-ui/./src/addSourceWizard/utilities/debouncePromise.js"],"names":["ValidatorReset","name","formOptions","useFormApi","useEffect","setTimeout","change","propTypes","PropTypes","Point","title","description","isEnabled","props","StackItem","Flex","FlexItem","spacer","default","fill","Text","className","SubWatchDescription","id","intl","useIntl","getState","values","application","application_type_id","Stack","formatMessage","defaultMessage","asyncValidator","value","sourceId","undefined","findSource","response","console","error","handleError","data","sources","find","firstValidation","setFirstValidated","bool","asyncValidatorDebounced","asyncFunction","debounceTime","options","onlyResolvesLast","awesomeDebouncePromise","debouncePromise","compileAllSourcesComboOptions","sourceTypes","map","type","product_name","vendor","replace","sort","a","b","localeCompare","t","label","descriptionMapper","COST_MANAGEMENT_APP_NAME","CLOUD_METER_APP_NAME","labelMapper","Label","color","compileAllApplicationComboOptions","applicationTypes","display_name","getActiveVendor","REDHAT_VENDOR","NO_APPLICATION_VALUE","appMutatorRedHat","appTypes","option","selectedSourceType","source_type","appType","app","supported_source_types","includes","sourceTypeMutator","selectedApp","isDisabled","shortIcons","amazon","azure","openshift","satellite","google","iconMapper","sourceType","icon_url","src","alt","nextStep","appId","sourceTypeSelect","component","isRequired","validate","validatorTypes","cloudTypes","disableAppSelection","mutator","placeholder","menuIsPortal","redhatTypes","condition","when","isNotEmpty","applicationStep","selectedType","fields","componentTypes","filter","hideField","typesStep","Content","NameDescription","TextContent","key","TextVariants","nameStep","asyncValidatorDebouncedWrapper","resolveProps","validated","SummaryDescription","chunks","length","Math","floor","random","summaryStep","container","initialWizardState","wizardTitle","inModal","wizardDescription","buttonLabels","submit","back","cancel","next","showTitles","initialState","crossroads","schemaBuilder"],"mappings":"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","file":"js/3154.dec14455adf9ff013f75.js","sourcesContent":["import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\n// see https://github.com/data-driven-forms/react-forms/issues/431\nconst ValidatorReset = ({ name }) => {\n  const formOptions = useFormApi();\n\n  useEffect(() => {\n    setTimeout(() => formOptions.change(name, '1'));\n\n    return () => formOptions.change(name, '');\n  }, []);\n\n  return null;\n};\n\nValidatorReset.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default ValidatorReset;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Text } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { Stack } from '@patternfly/react-core/dist/esm/layouts/Stack/Stack';\nimport { StackItem } from '@patternfly/react-core/dist/esm/layouts/Stack/StackItem';\nimport { Flex } from '@patternfly/react-core/dist/esm/layouts/Flex/Flex';\nimport { FlexItem } from '@patternfly/react-core/dist/esm/layouts/Flex/FlexItem';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst Point = ({ title, description, isEnabled, ...props }) => (\n  <StackItem {...props}>\n    <Flex>\n      <FlexItem spacer={{ default: 'spacerSm' }}>\n        <CheckCircleIcon fill={isEnabled ? '#3E8635' : '#6A6E73'} />\n      </FlexItem>\n      <FlexItem>\n        <Text className=\"pf-u-mb-xs ins-c-sources__wizard--rhel-desc-title\">{title}</Text>\n        <Text>{description}</Text>\n      </FlexItem>\n    </Flex>\n  </StackItem>\n);\n\nPoint.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  isEnabled: PropTypes.bool,\n};\n\nconst SubWatchDescription = ({ id }) => {\n  const intl = useIntl();\n  const { getState } = useFormApi();\n\n  const isEnabled = getState().values.application?.application_type_id === id;\n\n  return (\n    <Stack>\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.goldImages.title',\n          defaultMessage: 'Red Hat Gold Images',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.goldImages.description',\n          defaultMessage: 'Unlock cloud images in AWS and bring your own subscription instead of paying hourly.',\n        })}\n        className=\"pf-u-mb-sm\"\n        isEnabled={isEnabled}\n      />\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.subwatch.title',\n          defaultMessage: 'High precision subscription watch data',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.subwatch.description',\n          defaultMessage: 'View precise public cloud usage data in subscription watch.',\n        })}\n        className=\"pf-u-mb-sm\"\n        isEnabled={isEnabled}\n      />\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.autoregistration.title',\n          defaultMessage: 'Autoregistration',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.goldImages.description',\n          defaultMessage: 'Cloud instances automatically connect to cloud.redhat.com when provisioned.',\n        })}\n        isEnabled={isEnabled}\n      />\n    </Stack>\n  );\n};\n\nSubWatchDescription.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default SubWatchDescription;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\n\nimport debouncePromise from '../utilities/debouncePromise';\nimport { findSource } from '../api';\nimport { schemaBuilder } from './schemaBuilder';\nimport { NO_APPLICATION_VALUE, wizardDescription, wizardTitle } from '../utilities/stringConstants';\nimport ValidatorReset from './ValidatorReset';\nimport { handleError } from '../api/handleError';\nimport validated from '../sourceFormRenderer/resolveProps/validated';\nimport { COST_MANAGEMENT_APP_NAME, CLOUD_METER_APP_NAME } from '../api/constants';\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label/Label';\nimport SubWatchDescription from './descriptions/SubWatchDescription';\nimport { getActiveVendor, REDHAT_VENDOR } from '../../utilities/constants';\n\nexport const asyncValidator = async (value, sourceId = undefined, intl) => {\n  if (!value) {\n    return undefined;\n  }\n\n  let response;\n  try {\n    response = await findSource(value);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(handleError(error));\n    return undefined;\n  }\n\n  if (response.data.sources.find(({ id }) => id !== sourceId)) {\n    throw intl.formatMessage({ defaultMessage: 'That name is taken. Try another.', id: 'wizard.nameTaken' });\n  }\n\n  return undefined;\n};\n\nlet firstValidation = true;\nexport const setFirstValidated = (bool) => (firstValidation = bool);\nexport const getFirstValidated = () => firstValidation;\n\nexport const asyncValidatorDebounced = debouncePromise(asyncValidator);\n\nexport const asyncValidatorDebouncedWrapper = (intl) => {\n  if (getFirstValidated()) {\n    setFirstValidated(false);\n    return (value, id) => (value ? asyncValidator(value, id, intl) : undefined);\n  }\n\n  return asyncValidatorDebounced;\n};\n\nexport const compileAllSourcesComboOptions = (sourceTypes) => [\n  ...sourceTypes\n    .map((type) => ({\n      ...type,\n      product_name: type.vendor === 'Red Hat' ? type.product_name.replace('Red Hat ', '') : type.product_name,\n    }))\n    .sort((a, b) => a.product_name.localeCompare(b.product_name))\n    .map((t) => ({\n      value: t.name,\n      label: t.product_name,\n    })),\n];\n\nexport const descriptionMapper = (type, intl) =>\n  ({\n    [COST_MANAGEMENT_APP_NAME]: intl.formatMessage({\n      id: 'cost.app.description',\n      defaultMessage: 'Analyze, forecast, and optimize your Red Hat OpenShift cluster costs in hybrid cloud environments.',\n    }),\n    [CLOUD_METER_APP_NAME]: <SubWatchDescription id={type.id} />,\n  }[type.name]);\n\nexport const labelMapper = (type, intl) =>\n  ({\n    [CLOUD_METER_APP_NAME]: (\n      <span className=\"ins-c-sources__wizard--rhel-mag-label\">\n        RHEL management{' '}\n        <Label className=\"pf-u-ml-sm\" color=\"purple\">\n          {intl.formatMessage({ id: 'sub.bundle', defaultMessage: 'Bundle' })}\n        </Label>\n      </span>\n    ),\n  }[type.name]);\n\nexport const compileAllApplicationComboOptions = (applicationTypes, intl) => [\n  ...applicationTypes\n    .sort((a, b) => a.display_name.localeCompare(b.display_name))\n    .map((t) => ({\n      value: t.id,\n      label: labelMapper(t, intl) || t.display_name,\n      description: descriptionMapper(t, intl),\n    })),\n  ...(getActiveVendor() !== REDHAT_VENDOR\n    ? [\n        {\n          label: intl.formatMessage({\n            id: 'wizard.noApplication',\n            defaultMessage: 'No application',\n          }),\n          value: NO_APPLICATION_VALUE,\n        },\n      ]\n    : []),\n];\n\nexport const appMutatorRedHat = (appTypes) => (option, formOptions) => {\n  const selectedSourceType = formOptions.getState().values.source_type;\n  const appType = appTypes.find((app) => app.id === option.value);\n  const isEnabled = selectedSourceType && appType ? appType.supported_source_types.includes(selectedSourceType) : true;\n\n  if (!isEnabled) {\n    return;\n  }\n\n  return option;\n};\n\nexport const sourceTypeMutator = (appTypes, sourceTypes) => (option, formOptions) => {\n  const selectedApp = formOptions.getState().values.application\n    ? formOptions.getState().values.application.application_type_id\n    : undefined;\n  const appType = appTypes.find((app) => app.id === selectedApp);\n  const isEnabled = appType\n    ? appType.supported_source_types.includes(sourceTypes.find((type) => type.product_name === option.label).name)\n    : true;\n  return {\n    ...option,\n    isDisabled: !isEnabled,\n  };\n};\n\nconst shortIcons = {\n  amazon: '/apps/frontend-assets/partners-icons/aws.svg',\n  'ansible-tower': '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  azure: '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg',\n  openshift: '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  satellite: '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  google: '/apps/frontend-assets/partners-icons/google-cloud-short.svg',\n};\n\nexport const iconMapper = (sourceTypes) => (name) => {\n  const sourceType = sourceTypes.find((type) => type.name === name);\n\n  if (!sourceType || (sourceType.icon_url && !shortIcons[name])) {\n    return null;\n  }\n\n  const Icon = () => (\n    <img\n      src={shortIcons[name] || sourceType.icon_url}\n      alt={sourceType.product_name}\n      className={`ins-c-sources__wizard--icon ${sourceType.vendor === 'Red Hat' ? 'redhat-icon' : 'pf-u-mb-sm'}`}\n    />\n  );\n\n  return Icon;\n};\n\nexport const nextStep = ({ values: { application, source_type } }) => {\n  const appId = application && application.application_type_id !== NO_APPLICATION_VALUE && application.application_type_id;\n  const resultedStep = appId ? `${source_type}-${appId}` : source_type;\n\n  return resultedStep;\n};\n\nconst sourceTypeSelect = ({ intl, sourceTypes, applicationTypes }) => ({\n  component: 'card-select',\n  name: 'source_type',\n  isRequired: true,\n  label: intl.formatMessage({\n    id: 'wizard.selectYourSourceType',\n    defaultMessage: 'A. Select your source type',\n  }),\n  iconMapper: iconMapper(sourceTypes),\n  validate: [\n    {\n      type: validatorTypes.REQUIRED,\n    },\n  ],\n  options: compileAllSourcesComboOptions(sourceTypes, applicationTypes),\n});\n\nconst cloudTypes = ({ intl, sourceTypes, applicationTypes, disableAppSelection }) => [\n  {\n    ...sourceTypeSelect({ intl, sourceTypes, applicationTypes }),\n    mutator: sourceTypeMutator(applicationTypes, sourceTypes),\n  },\n  {\n    component: 'enhanced-radio',\n    name: 'application.application_type_id',\n    label: intl.formatMessage({\n      id: 'wizard.selectYourApplication',\n      defaultMessage: 'B. Select an application',\n    }),\n    options: compileAllApplicationComboOptions(applicationTypes, intl, sourceTypes),\n    mutator: appMutatorRedHat(applicationTypes),\n    isDisabled: disableAppSelection,\n    placeholder: intl.formatMessage({ id: 'wizard.chooseApp', defaultMessage: 'Choose application' }),\n    menuIsPortal: true,\n  },\n];\n\nconst redhatTypes = ({ intl, sourceTypes, applicationTypes, disableAppSelection }) => [\n  sourceTypeSelect({ intl, sourceTypes, applicationTypes }),\n  {\n    component: 'enhanced-radio',\n    name: 'application.application_type_id',\n    label: intl.formatMessage({\n      id: 'wizard.selectApplication',\n      defaultMessage: 'B. Application',\n    }),\n    options: compileAllApplicationComboOptions(applicationTypes, intl, sourceTypes),\n    mutator: appMutatorRedHat(applicationTypes),\n    isDisabled: disableAppSelection,\n    isRequired: true,\n    validate: [{ type: validatorTypes.REQUIRED }],\n    condition: { when: 'source_type', isNotEmpty: true },\n  },\n];\n\nexport const applicationStep = (applicationTypes, selectedType, intl) => ({\n  name: 'types_step',\n  title: intl.formatMessage({\n    id: 'wizard.selectApplication',\n    defaultMessage: 'Select application',\n  }),\n  nextStep,\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'app-description',\n      label: intl.formatMessage({\n        id: 'wizard.applicationDescription',\n        defaultMessage:\n          'Select an application to connect to your source. You can connect additional applications after source creation.',\n      }),\n    },\n    {\n      component: 'enhanced-radio',\n      name: 'application.application_type_id',\n      options: compileAllApplicationComboOptions(\n        applicationTypes.filter(({ supported_source_types }) => supported_source_types.includes(selectedType)),\n        intl\n      ),\n      mutator: appMutatorRedHat(applicationTypes),\n      menuIsPortal: true,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'source_type',\n      hideField: true,\n    },\n  ],\n});\n\nexport const typesStep = (sourceTypes, applicationTypes, disableAppSelection, intl) => ({\n  title: intl.formatMessage({\n    id: 'wizard.chooseAppAndType',\n    defaultMessage: 'Source type and application',\n  }),\n  name: 'types_step',\n  nextStep,\n  fields: [\n    ...(getActiveVendor() === REDHAT_VENDOR\n      ? redhatTypes({ intl, sourceTypes, applicationTypes, disableAppSelection })\n      : cloudTypes({ intl, sourceTypes, applicationTypes, disableAppSelection })),\n    {\n      component: 'description',\n      name: 'fixasyncvalidation',\n      Content: ValidatorReset,\n    },\n  ],\n});\n\nexport const NameDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent key=\"step1\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'wizard.nameDescription',\n          // eslint-disable-next-line max-len\n          defaultMessage:\n            'To import data for an application, you need to connect to a data source. Enter a name, then proceed to select your application and source type.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n\nconst nameStep = (intl) => ({\n  title: intl.formatMessage({\n    id: 'wizard.nameSource',\n    defaultMessage: 'Name source',\n  }),\n  name: 'name_step',\n  nextStep: 'types_step',\n  fields: [\n    {\n      component: 'description',\n      name: 'description-summary',\n      Content: NameDescription,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'source.name',\n      type: 'text',\n      label: intl.formatMessage({\n        id: 'wizard.name',\n        defaultMessage: 'Name',\n      }),\n      placeholder: 'Source_1',\n      isRequired: true,\n      validate: [(value) => asyncValidatorDebouncedWrapper(intl)(value, undefined, intl), { type: validatorTypes.REQUIRED }],\n      resolveProps: validated,\n    },\n  ],\n});\n\nexport const SummaryDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'wizard.summaryDescription',\n            defaultMessage:\n              'Review the information below and click <b>Add</b> to add your source. To edit details in previous steps, click <b>Back</b>.',\n          },\n          {\n            // eslint-disable-next-line react/display-name\n            b: (chunks) => <b key={`b-${chunks.length}-${Math.floor(Math.random() * 1000)}`}>{chunks}</b>,\n          }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nconst summaryStep = (sourceTypes, applicationTypes, intl) => ({\n  fields: [\n    {\n      component: 'description',\n      name: 'description-summary',\n      Content: SummaryDescription,\n    },\n    {\n      name: 'summary',\n      component: 'summary',\n      sourceTypes,\n      applicationTypes,\n    },\n  ],\n  name: 'summary',\n  title: intl.formatMessage({\n    id: 'wizard.reviewDetails',\n    defaultMessage: 'Review details',\n  }),\n});\n\nexport default (sourceTypes, applicationTypes, disableAppSelection, container, intl, selectedType, initialWizardState) => {\n  setFirstValidated(true);\n\n  return {\n    fields: [\n      {\n        component: componentTypes.WIZARD,\n        name: 'wizard',\n        className: 'sources',\n        title: wizardTitle(),\n        inModal: true,\n        description: wizardDescription(),\n        buttonLabels: {\n          submit: intl.formatMessage({\n            id: 'sources.add',\n            defaultMessage: 'Add',\n          }),\n          back: intl.formatMessage({\n            id: 'wizard.back',\n            defaultMessage: 'Back',\n          }),\n          cancel: intl.formatMessage({\n            id: 'wizard.cancel',\n            defaultMessage: 'Cancel',\n          }),\n          next: intl.formatMessage({\n            id: 'wizard.next',\n            defaultMessage: 'Next',\n          }),\n        },\n        container,\n        showTitles: true,\n        initialState: initialWizardState,\n        crossroads: ['application.application_type_id', 'source_type', 'auth_select'],\n        fields: [\n          nameStep(intl),\n          selectedType\n            ? applicationStep(applicationTypes, selectedType, intl)\n            : typesStep(sourceTypes, applicationTypes, disableAppSelection, intl),\n          ...schemaBuilder(sourceTypes, applicationTypes),\n          summaryStep(sourceTypes, applicationTypes, intl),\n        ],\n      },\n    ],\n  };\n};\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport default (asyncFunction, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n"],"sourceRoot":""}