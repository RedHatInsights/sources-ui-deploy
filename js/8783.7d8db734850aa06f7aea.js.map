{"version":3,"sources":["webpack://sources-ui/./src/addSourceWizard/addSourceWizard/schemaBuilder.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/steps/ErroredStep.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/steps/LoadingStep.js","webpack://sources-ui/./src/addSourceWizard/api/delay.js","webpack://sources-ui/./src/addSourceWizard/api/getApplicationStatus.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/components/ValuePopover.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/components/SourceWizardSummary.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/components/Description.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/components/CardSelect.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/components/AuthSelect.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/components/EnhancedRadio.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/index.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/components/Authentication.js","webpack://sources-ui/./src/addSourceWizard/sourceFormRenderer/resolveProps/validated.js"],"names":["hardcodedSchema","typeName","authName","appName","get","hardcodedSchemas","undefined","getAdditionalSteps","shouldSkipSelection","shouldSkipEndpoint","hasCustomSteps","getAdditionalStepKeys","getOnlyHiddenFields","getAdditionalStepFields","fields","stepKey","filter","field","map","shouldUseAppAuth","getNoStepsFields","additionalStepKeys","includes","injectAuthFieldsInfo","type","auth","applicationName","specificFields","hardcodedField","name","resultedField","component","injectEndpointFieldsInfo","getAdditionalAuthFields","createEndpointStep","endpoint","nextStep","createAdditionalSteps","additionalSteps","hasEndpointStep","step","skipEndpoint","customSteps","schemaBuilder","sourceTypes","appTypes","disableAuthType","schema","forEach","appendEndpoint","hidden","length","push","endpointFields","auths","authentication","hasMultipleAuthTypes","stepMapper","additionalIncludesStepKeys","onlyHiddenFields","authFields","hideField","label","validate","validatorTypes","componentTypes","className","condition","when","is","title","id","defaultMessage","additionalStepName","hasCustomStep","stepProps","firstAdditonalStep","find","additionalFields","createGenericAuthTypeSelection","appType","supported_source_types","supportedAuthTypes","supported_authentication_types","authType","createSpecificAuthTypeSelection","appAdditionalSteps","ErroredStep","onClose","returnButtonTitle","message","customText","primaryAction","secondaryActions","Component","variant","EmptyStateVariant","icon","ExclamationCircleIcon","color","headingLevel","size","onClick","propTypes","PropTypes","defaultProps","Button","LoadingStep","cancelTitle","description","Spinner","delay","interval","prms","Promise","resolve","setTimeout","bind","checkAppAvailability","timeout","entity","updatedTime","res","rej","start","Date","now","checkSource","getSourcesApi","then","data","availability_status","availability_status_error","last_checked_at","updated_at","error","ValuePopover","value","intl","useIntl","Popover","headerContent","bodyContent","position","maxWidth","isInline","formatMessage","SourceWizardSummary","applicationTypes","showApp","showAuthType","formOptions","useFormApi","values","getState","source_type","source","source_type_id","hasAuthentication","authtype","auth_select","authTypeFields","application","application_type_id","display_name","availableStepKeys","appId","Boolean","getStepKeys","authSteps","flatMap","x","startsWith","valuesList","stepKeys","formField","Label","createItem","getAllFieldsValues","DescriptionListGroup","key","DescriptionListTerm","DescriptionListDescription","toString","DescriptionList","isHorizontal","product_name","sourceType","COST_MANAGEMENT_APP_NAME","Alert","alertMapper","isRequired","Description","Content","rest","CardSelect","originalProps","useFieldApi","helperText","hideLabel","meta","input","options","mutator","DefaultIcon","iconMapper","props","useState","components","icons","isMulti","multi","isDisabled","isReadOnly","inputValue","onChange","valueSelect","handleMulti","handleSingle","handleClick","onBlur","showError","touched","FormGroup","fieldId","helperTextInvalid","validated","Grid","hasGutter","option","disabled","GridItem","sm","md","Tile","tabIndex","onKeyPress","e","event","charCode","preventDefault","handleKeyPress","isStacked","isSelected","_value","AuthRadio","Radio","isChecked","EnhancedRadio","selectedType","selectedApp","newOptions","useEffect","NO_APPLICATION_VALUE","change","FormGroupProps","mapperExtension","AuthSelect","summary","doNotRequirePassword","componentProps","componentMapper","FormTemplateWrapper","showFormControls","validatorMapper","FormTemplate","subscription","ValidatingSpinner","validating","isHidden","_","valid"],"mappings":"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","file":"js/8783.7d8db734850aa06f7aea.js","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport hardcodedSchemas from './hardcodedSchemas';\nimport get from 'lodash/get';\n\nexport const acronymMapper = (value) =>\n  ({\n    'Amazon Web Services': 'AWS',\n  }[value] || value);\n\nexport const hardcodedSchema = (typeName, authName, appName) =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName], undefined);\n\nexport const getAdditionalSteps = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'additionalSteps'], []);\n\nexport const shouldSkipSelection = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'skipSelection'], false);\n\nexport const shouldSkipEndpoint = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'skipEndpoint'], false);\n\nexport const hasCustomSteps = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'customSteps'], false);\n\nexport const getAdditionalStepKeys = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'includeStepKeyFields'], []);\n\nexport const getOnlyHiddenFields = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'onlyHiddenFields'], false);\n\nexport const getAdditionalStepFields = (fields, stepKey) =>\n  fields.filter((field) => field.stepKey === stepKey).map(({ stepKey: _stepKey, ...field }) => field);\n\nexport const shouldUseAppAuth = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'useApplicationAuth'], false);\n\nexport const getNoStepsFields = (fields, additionalStepKeys = []) =>\n  fields.filter((field) => !field.stepKey || additionalStepKeys.includes(field.stepKey));\n\nexport const injectAuthFieldsInfo = (fields, type, auth, applicationName) =>\n  fields.map((field) => {\n    const specificFields = get(hardcodedSchemas, [type, 'authentication', auth, applicationName]);\n\n    const hardcodedField = specificFields\n      ? get(specificFields, field.name)\n      : get(hardcodedSchemas, [type, 'authentication', auth, 'generic', field.name]);\n\n    const resultedField = hardcodedField ? { ...field, ...hardcodedField } : field;\n\n    if (resultedField.name === 'authentication.password') {\n      resultedField.component = 'authentication';\n    }\n\n    return resultedField;\n  });\n\nexport const injectEndpointFieldsInfo = (fields, type) =>\n  fields.map((field) => {\n    const hardcodedField = get(hardcodedSchemas, [type, 'endpoint', field.name]);\n\n    return hardcodedField ? { ...field, ...hardcodedField } : field;\n  });\n\nexport const getAdditionalAuthFields = (type, auth, applicationName = 'generic') =>\n  get(hardcodedSchemas, [type, 'authentication', auth, applicationName, 'additionalFields'], []);\n\nexport const getAdditionalEndpointFields = (type) => get(hardcodedSchemas, [type, 'endpoint', 'additionalFields'], []);\n\nexport const createEndpointStep = (endpoint, typeName) => ({\n  ...endpoint,\n  fields: [...getAdditionalEndpointFields(typeName), ...injectEndpointFieldsInfo(endpoint.fields, typeName)],\n  name: `${typeName}-endpoint`,\n  nextStep: 'summary',\n});\n\nexport const createAdditionalSteps = (additionalSteps, name, authName, hasEndpointStep, fields, appName = 'generic') =>\n  additionalSteps.map((step) => {\n    const stepKey = step.name || `${name}-${authName}-${appName}-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(name, authName, appName);\n    const customSteps = hasCustomSteps(name, authName, appName);\n\n    return {\n      name: stepKey,\n      nextStep: hasEndpointStep && !skipEndpoint && !customSteps ? `${name}-endpoint` : 'summary',\n      ...step,\n      fields: [\n        ...injectAuthFieldsInfo(step.fields, name, authName, appName),\n        ...injectAuthFieldsInfo(getAdditionalStepFields(fields, stepKey), name, authName, appName),\n      ],\n    };\n  });\n\nexport const createGenericAuthTypeSelection = (type, endpointFields, disableAuthType) => {\n  const auths = type.schema.authentication;\n  const hasMultipleAuthTypes = auths.length > 1;\n\n  let fields = [...endpointFields];\n  const stepMapper = {};\n\n  if (hasMultipleAuthTypes) {\n    auths.forEach((auth) => {\n      const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type);\n\n      const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, 'generic');\n\n      const onlyHiddenFields = getOnlyHiddenFields(type.name, auth.type);\n      const authFields = onlyHiddenFields ? auth.fields.filter(({ hideField }) => hideField) : auth.fields;\n\n      if (shouldUseAppAuth(type.name, auth.type)) {\n        fields = [];\n      }\n\n      fields.push({\n        component: 'auth-select',\n        name: 'auth_select',\n        label: auth.name,\n        authName: auth.type,\n        validate: [\n          {\n            type: validatorTypes.REQUIRED,\n          },\n        ],\n        disableAuthType,\n      });\n      fields.push({\n        component: componentTypes.SUB_FORM,\n        name: `${auth.type}-subform`,\n        className: 'pf-u-pl-md',\n        fields: [\n          ...getAdditionalAuthFields(type.name, auth.type),\n          ...injectAuthFieldsInfo(getNoStepsFields(authFields, additionalIncludesStepKeys), type.name, auth.type),\n        ],\n        condition: {\n          when: 'auth_select',\n          is: auth.type,\n        },\n        hideField: onlyHiddenFields,\n      });\n      stepMapper[auth.type] =\n        getAdditionalSteps(type.name, auth.type).length > 0\n          ? `${type.name}-${auth.type}-generic-additional-step`\n          : endpointFields.length === 0 && !skipEndpoint\n          ? `${type.name}-endpoint`\n          : 'summary';\n    });\n\n    return {\n      name: type.name,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields,\n      nextStep: {\n        when: 'auth_select',\n        stepMapper,\n      },\n    };\n  } else {\n    const auth = auths[0];\n    const additionalStepName = `${type.name}-${auth.type}-generic-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, 'generic');\n\n    const nextStep =\n      getAdditionalSteps(type.name, auth.type).length > 0\n        ? additionalStepName\n        : endpointFields.length === 0 && !skipEndpoint\n        ? `${type.name}-endpoint`\n        : 'summary';\n\n    const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type);\n    const hasCustomStep = shouldSkipSelection(type.name, auth.type);\n\n    let stepProps = {};\n\n    if (shouldUseAppAuth(type.name, auth.type)) {\n      fields = [];\n    }\n\n    if (hasCustomStep) {\n      const firstAdditonalStep = getAdditionalSteps(type.name, auth.type).find(({ name }) => !name);\n      const additionalFields = getAdditionalStepFields(auth.fields, additionalStepName);\n\n      stepProps = {\n        ...firstAdditonalStep,\n        fields: [...fields, ...injectAuthFieldsInfo([...firstAdditonalStep.fields, ...additionalFields], type.name, auth.type)],\n      };\n    }\n\n    return {\n      name: type.name,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields: [\n        ...fields,\n        ...getAdditionalAuthFields(type.name, auth.type),\n        ...injectAuthFieldsInfo(getNoStepsFields(auth.fields, additionalIncludesStepKeys), type.name, auth.type),\n      ],\n      nextStep,\n      ...stepProps,\n    };\n  }\n};\n\nexport const createSpecificAuthTypeSelection = (type, appType, endpointFields, disableAuthType) => {\n  const auths = type.schema.authentication;\n  const supportedAuthTypes = appType.supported_authentication_types[type.name];\n  const hasMultipleAuthTypes = supportedAuthTypes.length > 1;\n\n  let fields = [...endpointFields];\n  const stepMapper = {};\n\n  if (hasMultipleAuthTypes) {\n    auths\n      .filter(({ type: authType }) => supportedAuthTypes.includes(authType))\n      .forEach((auth) => {\n        const appName = hardcodedSchema(type.name, auth.type, appType.name) ? appType.name : 'generic';\n\n        if (shouldUseAppAuth(type.name, auth.type, appName)) {\n          fields = [];\n        }\n\n        const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, appName);\n        const customSteps = hasCustomSteps(type.name, auth.type, appName);\n\n        let nextStep;\n\n        if (getAdditionalSteps(type.name, auth.type, appType.name).length > 0) {\n          nextStep = `${type.name}-${auth.type}-${appType.name}-additional-step`;\n        } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n          nextStep = `${type.name}-endpoint`;\n        } else {\n          nextStep = 'summary';\n        }\n\n        const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type, appName);\n\n        const onlyHiddenFields = getOnlyHiddenFields(type.name, auth.type, appName);\n        const authFields = onlyHiddenFields ? auth.fields.filter(({ hideField }) => hideField) : auth.fields;\n\n        fields.push({\n          component: 'auth-select',\n          name: 'auth_select',\n          label: auth.name,\n          authName: auth.type,\n          validate: [\n            {\n              type: validatorTypes.REQUIRED,\n            },\n          ],\n          supportedAuthTypes: appType.supported_authentication_types[type.name],\n          disableAuthType,\n        });\n        fields.push({\n          component: componentTypes.SUB_FORM,\n          name: `${auth.type}-subform`,\n          className: 'pf-u-pl-md',\n          fields: [\n            ...getAdditionalAuthFields(type.name, auth.type, appName),\n            ...injectAuthFieldsInfo(getNoStepsFields(authFields, additionalIncludesStepKeys), type.name, auth.type, appName),\n          ],\n          condition: {\n            when: 'auth_select',\n            is: auth.type,\n          },\n          hideField: onlyHiddenFields,\n        });\n        stepMapper[auth.type] = nextStep;\n      });\n\n    return {\n      name: `${type.name}-${appType.id}`,\n      title: <FormattedMessage id=\"wizard.chooseAuthType\" defaultMessage=\"Choose authentication type\" />,\n      fields,\n      nextStep: {\n        when: 'auth_select',\n        stepMapper,\n      },\n    };\n  } else {\n    const auth = auths.find(({ type: authType }) => supportedAuthTypes.includes(authType));\n    const appName = hardcodedSchema(type.name, auth.type, appType.name) ? appType.name : 'generic';\n\n    const additionalStepName = `${type.name}-${auth.type}-${appType.name}-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, appName);\n    const customSteps = hasCustomSteps(type.name, auth.type, appName);\n\n    if (shouldUseAppAuth(type.name, auth.type, appName)) {\n      fields = [];\n    }\n\n    let nextStep;\n\n    if (getAdditionalSteps(type.name, auth.type, appName).length > 0) {\n      nextStep = additionalStepName;\n    } else if (endpointFields.length === 0 && !skipEndpoint) {\n      nextStep = `${type.name}-endpoint`;\n    } else {\n      nextStep = 'summary';\n    }\n\n    const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type, appName);\n    const hasCustomStep = shouldSkipSelection(type.name, auth.type, appName);\n\n    let stepProps = {};\n\n    if (hasCustomStep) {\n      const firstAdditonalStep = getAdditionalSteps(type.name, auth.type, appName).find(({ name }) => !name);\n      const additionalFields = getAdditionalStepFields(auth.fields, additionalStepName);\n\n      if (firstAdditonalStep.nextStep) {\n        nextStep = firstAdditonalStep.nextStep;\n      } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n        nextStep = `${type.name}-endpoint`;\n      } else {\n        nextStep = 'summary';\n      }\n\n      stepProps = {\n        ...firstAdditonalStep,\n        fields: [\n          ...fields,\n          ...injectAuthFieldsInfo([...firstAdditonalStep.fields, ...additionalFields], type.name, auth.type, appName),\n        ],\n      };\n    }\n\n    return {\n      name: `${type.name}-${appType.id}`,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields: [\n        ...fields,\n        ...getAdditionalAuthFields(type.name, auth.type, appName),\n        ...injectAuthFieldsInfo(getNoStepsFields(auth.fields, additionalIncludesStepKeys), type.name, auth.type, appName),\n      ],\n      nextStep,\n      ...stepProps,\n    };\n  }\n};\n\nexport const schemaBuilder = (sourceTypes, appTypes, disableAuthType) => {\n  const schema = [];\n\n  sourceTypes.forEach((type) => {\n    const appendEndpoint = type.schema.endpoint.hidden ? type.schema.endpoint.fields : [];\n    const hasEndpointStep = appendEndpoint.length === 0;\n\n    schema.push(createGenericAuthTypeSelection(type, appendEndpoint, disableAuthType));\n\n    appTypes.forEach((appType) => {\n      if (appType.supported_source_types.includes(type.name)) {\n        schema.push(createSpecificAuthTypeSelection(type, appType, appendEndpoint, disableAuthType));\n      }\n    });\n\n    type.schema.authentication.forEach((auth) => {\n      const additionalSteps = getAdditionalSteps(type.name, auth.type);\n\n      if (additionalSteps.length > 0) {\n        schema.push(...createAdditionalSteps(additionalSteps, type.name, auth.type, hasEndpointStep, auth.fields));\n      }\n\n      appTypes.forEach((appType) => {\n        const appAdditionalSteps = getAdditionalSteps(type.name, auth.type, appType.name);\n\n        if (appAdditionalSteps.length > 0) {\n          schema.push(\n            ...createAdditionalSteps(appAdditionalSteps, type.name, auth.type, hasEndpointStep, auth.fields, appType.name)\n          );\n        }\n      });\n    });\n\n    if (hasEndpointStep) {\n      schema.push(createEndpointStep(type.schema.endpoint, type.name));\n    }\n  });\n\n  return schema;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\n\nconst ErroredStep = ({ onClose, returnButtonTitle, message, title, customText, primaryAction, secondaryActions, Component }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={ExclamationCircleIcon} color=\"var(--pf-global--danger-color--100)\" className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {title}\n      </Title>\n      <EmptyStateBody className=\"ins-c-sources__wizard--step-text\">{message || customText}</EmptyStateBody>\n      <Component variant=\"primary\" onClick={primaryAction || onClose}>\n        {returnButtonTitle}\n      </Component>\n      {secondaryActions && <EmptyStateSecondaryActions className=\"pf-u-mt-sm\">{secondaryActions}</EmptyStateSecondaryActions>}\n    </EmptyState>\n  </Bullseye>\n);\n\nErroredStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  returnButtonTitle: PropTypes.node,\n  message: PropTypes.node,\n  title: PropTypes.node,\n  customText: PropTypes.node,\n  primaryAction: PropTypes.func,\n  secondaryActions: PropTypes.node,\n  Component: PropTypes.elementType,\n};\n\nErroredStep.defaultProps = {\n  title: <FormattedMessage id=\"wizard.unsuccConfiguration\" defaultMessage=\"Something went wrong\" />,\n  // eslint-disable-next-line max-len\n  customText: (\n    <FormattedMessage\n      id=\"wizard.errorText\"\n      defaultMessage=\"There was a problem while trying to add your source. Please try again. If the error persists, open a support case.\"\n    />\n  ),\n  Component: Button,\n};\n\nexport default ErroredStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner/Spinner';\n\nconst LoadingStep = ({ onClose, customText, cancelTitle, description }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={Spinner} className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {customText}\n      </Title>\n      {description && <EmptyStateBody className=\"ins-c-sources__wizard--step-text\">{description}</EmptyStateBody>}\n      {onClose && (\n        <EmptyStateSecondaryActions className=\"pf-u-mt-xl\">\n          <Button variant=\"link\" onClick={onClose}>\n            {cancelTitle}\n          </Button>\n        </EmptyStateSecondaryActions>\n      )}\n    </EmptyState>\n  </Bullseye>\n);\n\nLoadingStep.propTypes = {\n  onClose: PropTypes.func,\n  customText: PropTypes.node,\n  cancelTitle: PropTypes.node,\n  description: PropTypes.node,\n};\n\nLoadingStep.defaultProps = {\n  customText: <FormattedMessage id=\"wizard.loadingText\" defaultMessage=\"Loading, please wait.\" />,\n  cancelTitle: <FormattedMessage id=\"wizard.cancelText\" defaultMessage=\"Cancel\" />,\n};\n\nexport default LoadingStep;\n","export const delay = (interval, prms) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve.bind(null, prms), interval);\n  });\n};\n","import { getSourcesApi } from '.';\nimport { delay } from './delay';\n\nexport const checkAppAvailability = (id, timeout = 10000, interval = 1000, entity = 'getApplication', updatedTime) =>\n  new Promise((res, rej) => {\n    const start = Date.now();\n\n    const checkSource = () =>\n      // eslint-disable-next-line prettier/prettier\n      getSourcesApi()[entity](id)\n        .then((data) => {\n          const isTimeOuted = Date.now() - start >= timeout;\n\n          if (isTimeOuted) {\n            if (updatedTime) {\n              return {\n                ...data,\n                availability_status: null,\n                availability_status_error: null,\n              };\n            }\n\n            return data;\n          }\n\n          if (data.availability_status === 'available' || data.availability_status === 'unavailable') {\n            if (updatedTime && new Date(data.last_checked_at || data.updated_at) > updatedTime) {\n              return data;\n            }\n\n            if (!updatedTime) {\n              return data;\n            }\n          }\n\n          return delay(interval).then(() => checkSource());\n        });\n\n    return checkSource()\n      .then((data) => res(data))\n      .catch((error) => rej(error));\n  });\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { Popover } from '@patternfly/react-core/dist/esm/components/Popover/Popover';\n\nconst ValuePopover = ({ label, value }) => {\n  const intl = useIntl();\n\n  return (\n    <Popover headerContent={label} bodyContent={value} position=\"top\" maxWidth=\"80%\">\n      <Button variant=\"link\" isInline className=\"ins-c-sources__wizard--summary-buttonss\">\n        {intl.formatMessage({\n          id: 'wizard.showMore',\n          defaultMessage: 'Show more',\n        })}\n      </Button>\n    </Popover>\n  );\n};\n\nValuePopover.propTypes = {\n  label: PropTypes.node,\n  value: PropTypes.node,\n};\n\nexport default ValuePopover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label/Label';\nimport { Alert } from '@patternfly/react-core/dist/esm/components/Alert/Alert';\nimport { DescriptionList } from '@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionList';\nimport { DescriptionListDescription } from '@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListDescription';\nimport { DescriptionListGroup } from '@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListGroup';\nimport { DescriptionListTerm } from '@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListTerm';\n\nimport get from 'lodash/get';\nimport hardcodedSchemas from '../../addSourceWizard/hardcodedSchemas';\nimport {\n  injectAuthFieldsInfo,\n  injectEndpointFieldsInfo,\n  getAdditionalSteps,\n  shouldSkipEndpoint,\n} from '../../addSourceWizard/schemaBuilder';\nimport ValuePopover from './ValuePopover';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport { COST_MANAGEMENT_APP_NAME } from '../../api/constants';\n\nconst alertMapper = (appName, sourceType, intl) => {\n  if (appName === COST_MANAGEMENT_APP_NAME && sourceType !== 'google') {\n    return (\n      <Alert\n        variant=\"info\"\n        isInline\n        title={intl.formatMessage({ id: 'cost.rbacWarningTitle', defaultMessage: 'Manage permissions in User Access' })}\n      >\n        {intl.formatMessage({\n          id: 'cost.rbacWarningDescription',\n          defaultMessage:\n            'Make sure to manage permissions for this source in custom roles that contain permissions for Cost Management.',\n        })}\n      </Alert>\n    );\n  }\n\n  return null;\n};\n\nexport const createItem = (formField, values, stepKeys) => {\n  let value = get(values, formField.name);\n\n  if (formField.stepKey && !stepKeys.includes(formField.stepKey)) {\n    return undefined;\n  }\n\n  if (formField.condition && get(values, formField.condition.when) !== formField.condition.is) {\n    return undefined;\n  }\n\n  // do not show hidden fields\n  if (formField.hideField) {\n    return undefined;\n  }\n\n  // Hide password\n  if (value && formField.type === 'password') {\n    value = '●●●●●●●●●●●●';\n  }\n\n  // Boolean value convert to Yes / No\n  if (typeof value === 'boolean') {\n    value = value ? (\n      <Label color=\"green\">\n        <FormattedMessage id=\"wizard.enabled\" defaultMessage=\"Enabled\" />\n      </Label>\n    ) : (\n      <Label color=\"gray\">\n        <FormattedMessage id=\"wizard.disabled\" defaultMessage=\"Disabled\" />\n      </Label>\n    );\n  }\n\n  if (!value && formField.name === 'authentication.password' && get(values, 'authentication.id')) {\n    value = '●●●●●●●●●●●●';\n  }\n\n  return { label: formField['aria-label'] || formField.label, value: value || '-' };\n};\n\nexport const getAllFieldsValues = (fields, values, stepKeys) =>\n  fields.map((field) => createItem(field, values, stepKeys)).filter(Boolean);\n\nexport const getStepKeys = (typeName, authName, appName = 'generic', appId) =>\n  [\n    ...get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'includeStepKeyFields'], []),\n    ...get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'additionalSteps'], []).map(({ name }) => name),\n    `${typeName}-${authName}-${appName}-additional-step`,\n    `${typeName}-${authName}-additional-step`,\n    appId ? `${typeName}-${appId}` : undefined,\n  ].filter(Boolean);\n\nconst SourceWizardSummary = ({ sourceTypes, applicationTypes, showApp, showAuthType }) => {\n  const formOptions = useFormApi();\n  const intl = useIntl();\n\n  const values = formOptions.getState().values;\n  const type = sourceTypes.find((type) => type.name === values.source_type || type.id === values.source.source_type_id);\n\n  const hasAuthentication =\n    values.authentication && values.authentication.authtype ? values.authentication.authtype : values.auth_select;\n\n  let authType;\n  let authTypeFields = [];\n\n  if (hasAuthentication) {\n    authType = type.schema.authentication.find(({ type }) => type === hasAuthentication);\n    authTypeFields = authType && authType.fields ? authType.fields : [];\n  }\n\n  const application = values.application\n    ? applicationTypes.find((type) => type.id === values.application.application_type_id)\n    : undefined;\n\n  const {\n    display_name = intl.formatMessage({ id: 'wizard.notSelected', defaultMessage: 'Not selected' }),\n    name,\n    id,\n  } = application ? application : {};\n\n  const skipEndpoint = shouldSkipEndpoint(type.name, hasAuthentication, name);\n\n  let endpointFields = type.schema.endpoint.fields;\n\n  if (skipEndpoint) {\n    endpointFields = [];\n    authTypeFields = authTypeFields.filter(({ name }) => !name.includes('authentication.'));\n  }\n\n  const availableStepKeys = getStepKeys(type.name, hasAuthentication, name, id);\n\n  const authSteps = getAdditionalSteps(type.name, hasAuthentication, name);\n  const hasCustomSteps = get(hardcodedSchemas, [type.name, 'authentication', hasAuthentication, name, 'customSteps'], false);\n\n  if (authSteps.length > 0) {\n    authTypeFields = authSteps\n      .map((step) => [...step.fields, ...authTypeFields.filter(({ stepKey }) => stepKey && step.name === stepKey)])\n      .flatMap((x) => x)\n      .filter(\n        ({ name }) =>\n          name.startsWith('application.extra') ||\n          authTypeFields.find((field) => field.name === name) ||\n          (hasCustomSteps && endpointFields.find((field) => field.name === name))\n      );\n  }\n\n  if (hasCustomSteps) {\n    endpointFields = [];\n  }\n\n  authTypeFields = injectAuthFieldsInfo(authTypeFields, type.name, hasAuthentication, name || 'generic');\n  endpointFields = injectEndpointFieldsInfo(endpointFields, type.name);\n\n  const fields = [...authTypeFields, ...endpointFields];\n\n  const valuesInfo = getAllFieldsValues(fields, values, availableStepKeys);\n\n  const valuesList = valuesInfo.map(({ label, value }) => (\n    <DescriptionListGroup key={`${label}--${value}`}>\n      <DescriptionListTerm>{label}</DescriptionListTerm>\n      <DescriptionListDescription>\n        {value.toString().length > 150 ? <ValuePopover label={label} value={value} /> : value}\n      </DescriptionListDescription>\n    </DescriptionListGroup>\n  ));\n\n  return (\n    <React.Fragment>\n      <DescriptionList isHorizontal className=\"ins-c-sources__wizard--summary-description-list\">\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {intl.formatMessage({\n              id: 'wizard.name',\n              defaultMessage: 'Name',\n            })}\n          </DescriptionListTerm>\n          <DescriptionListDescription>{values.source.name}</DescriptionListDescription>\n        </DescriptionListGroup>\n        {showApp && (\n          <DescriptionListGroup>\n            <DescriptionListTerm>\n              {intl.formatMessage({\n                id: 'wizard.application',\n                defaultMessage: 'Application',\n              })}\n            </DescriptionListTerm>\n            <DescriptionListDescription>{display_name}</DescriptionListDescription>\n          </DescriptionListGroup>\n        )}\n        <DescriptionListGroup>\n          <DescriptionListTerm>\n            {intl.formatMessage({\n              id: 'wizard.sourceType',\n              defaultMessage: 'Source type',\n            })}\n          </DescriptionListTerm>\n          <DescriptionListDescription>{type.product_name}</DescriptionListDescription>\n        </DescriptionListGroup>\n        {!skipEndpoint && authType && showAuthType && (\n          <DescriptionListGroup>\n            <DescriptionListTerm>\n              {intl.formatMessage({\n                id: 'wizard.authenticationType',\n                defaultMessage: 'Authentication type',\n              })}\n            </DescriptionListTerm>\n            <DescriptionListDescription>{authType.name}</DescriptionListDescription>\n          </DescriptionListGroup>\n        )}\n        {valuesList}\n      </DescriptionList>\n      {alertMapper(name, type.name, intl)}\n    </React.Fragment>\n  );\n};\n\nSourceWizardSummary.propTypes = {\n  sourceTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      product_name: PropTypes.string.isRequired,\n      schema: PropTypes.shape({\n        authentication: PropTypes.array,\n        endpoint: PropTypes.object,\n      }),\n    })\n  ).isRequired,\n  applicationTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      display_name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  showApp: PropTypes.bool,\n  showAuthType: PropTypes.bool,\n};\n\nSourceWizardSummary.defaultProps = {\n  showApp: true,\n  showAuthType: true,\n};\n\nexport default SourceWizardSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\n\nDescription.propTypes = {\n  Content: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n};\n\nexport default Description;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormGroup } from '@patternfly/react-core/dist/esm/components/Form/FormGroup';\nimport { GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/GridItem';\nimport { Tile } from '@patternfly/react-core/dist/esm/components/Tile/Tile';\nimport { Grid } from '@patternfly/react-core/dist/esm/layouts/Grid/Grid';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst handleKeyPress = (event, value, onClick) => {\n  const spaceBar = 32;\n  if (event.charCode === spaceBar) {\n    event.preventDefault();\n    onClick(value);\n  }\n};\n\nconst CardSelect = (originalProps) => {\n  const {\n    isRequired,\n    label,\n    helperText,\n    hideLabel,\n    meta,\n    input,\n    options,\n    mutator,\n    DefaultIcon,\n    iconMapper,\n    ...props\n  } = useFieldApi(originalProps);\n  const formOptions = useFormApi();\n  const [icons] = useState(() => {\n    const components = {};\n\n    options.forEach(({ value }) => (components[value] = iconMapper(value, DefaultIcon)));\n\n    return components;\n  });\n\n  const isMulti = props.isMulti || props.multi;\n  const isDisabled = props.isDisabled || props.isReadOnly;\n  const inputValue = input.value || [];\n\n  const handleMulti = (value) =>\n    input.onChange(\n      inputValue.includes(value) ? inputValue.filter((valueSelect) => valueSelect !== value) : [...inputValue, value]\n    );\n\n  const handleSingle = (value) => input.onChange(inputValue === value ? undefined : value);\n\n  const handleClick = (value) => (isMulti ? handleMulti(value) : handleSingle(value));\n\n  const onClick = (value) => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    handleClick(value);\n    input.onBlur();\n  };\n\n  const prepareCards = () =>\n    options\n      .map((option) => mutator(option, formOptions))\n      .map(({ value, label, isDisabled: itemIsDisabled }) => {\n        const disabled = itemIsDisabled || isDisabled;\n\n        if (!value) {\n          return undefined;\n        }\n\n        const Component = icons[value];\n\n        return (\n          <GridItem sm={6} md={4} key={value}>\n            <Tile\n              className={`ins-c-sources__wizard--tile${disabled ? ' disabled' : ''}`}\n              onClick={() => onClick(value)}\n              tabIndex={disabled ? -1 : 0}\n              onKeyPress={(e) => handleKeyPress(e, value, onClick)}\n              isDisabled={disabled}\n              title={label}\n              isStacked\n              isSelected={inputValue.includes(value)}\n              {...(Component && { icon: <Component /> })}\n            />\n          </GridItem>\n        );\n      });\n\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={input.name}\n      helperText={helperText}\n      helperTextInvalid={error}\n      validated={showError ? 'error' : 'default'}\n    >\n      <Grid hasGutter className=\"pf-u-mb-md\">\n        {prepareCards()}\n      </Grid>\n    </FormGroup>\n  );\n};\n\nCardSelect.propTypes = {\n  multi: PropTypes.bool,\n  isMulti: PropTypes.bool,\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.node,\n  description: PropTypes.node,\n  hideLabel: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  mutator: PropTypes.func,\n  options: PropTypes.array,\n  DefaultIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.element]),\n  iconMapper: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n};\n\nCardSelect.defaultProps = {\n  options: [],\n  iconMapper: (_value, DefaultIcon) => DefaultIcon,\n  mutator: (x) => x,\n};\n\nexport default CardSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio } from '@patternfly/react-core/dist/esm/components/Radio/Radio';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/esm/use-field-api';\n\nconst AuthRadio = (props) => {\n  const { label, input, authName, supportedAuthTypes, disableAuthType } = useFieldApi(props);\n\n  const isSelected = input.value === authName;\n\n  if (input.value && supportedAuthTypes && !supportedAuthTypes.includes(input.value)) {\n    input.onChange(undefined);\n  }\n\n  return (\n    <Radio\n      value={authName}\n      isChecked={isSelected}\n      name={input.name}\n      onChange={() => input.onChange(authName)}\n      label={label}\n      id={`${input.name}-${authName}`}\n      isDisabled={disableAuthType}\n    />\n  );\n};\n\nAuthRadio.propTypes = {\n  label: PropTypes.string,\n  authName: PropTypes.string.isRequired,\n  disableAuthType: PropTypes.bool,\n  supportedAuthTypes: PropTypes.arrayOf(PropTypes.string),\n};\n\nAuthRadio.defaultProps = {\n  disableAuthType: false,\n};\n\nexport default AuthRadio;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport Radio from '@data-driven-forms/pf4-component-mapper/dist/esm/radio';\n\nimport { NO_APPLICATION_VALUE } from '../../utilities/stringConstants';\n\nconst EnhancedRadio = ({ options, mutator, ...props }) => {\n  const formOptions = useFormApi();\n\n  const values = formOptions.getState().values;\n\n  const selectedType = values.source_type;\n  const selectedApp = get(values, props.name);\n\n  const newOptions = options.map((option) => mutator(option, formOptions)).filter(Boolean);\n\n  useEffect(() => {\n    if (\n      selectedType &&\n      (!selectedApp || !newOptions.map(({ value }) => value).includes(selectedApp)) &&\n      newOptions.filter((option) => option.value && option.value !== NO_APPLICATION_VALUE).length === 1\n    ) {\n      formOptions.change(props.name, newOptions[0].value);\n    } else if (!newOptions.map(({ value }) => value).includes(selectedApp)) {\n      formOptions.change(props.name, NO_APPLICATION_VALUE);\n    }\n  }, [selectedType]);\n\n  return <Radio {...props} options={newOptions} FormGroupProps={{ className: 'ins-c-sources__wizard--radio' }} />;\n};\n\nEnhancedRadio.propTypes = {\n  mutator: PropTypes.func.isRequired,\n  options: PropTypes.array,\n  name: PropTypes.string,\n};\n\nexport default EnhancedRadio;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/esm/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/esm/validator-mapper';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/esm/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\n\nimport SourceWizardSummary from './components/SourceWizardSummary';\nimport Description from './components/Description';\nimport CardSelect from './components/CardSelect';\nimport AuthSelect from './components/AuthSelect';\nimport Authentication from './components/Authentication';\nimport EnhancedRadio from './components/EnhancedRadio';\n\nexport const mapperExtension = {\n  'auth-select': AuthSelect,\n  description: Description,\n  'card-select': CardSelect,\n  summary: SourceWizardSummary,\n  authentication: Authentication,\n  'enhanced-radio': EnhancedRadio,\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst SourcesFormRenderer = (props) => (\n  <FormRenderer\n    componentMapper={{\n      ...componentMapper,\n      ...mapperExtension,\n      'switch-field': componentMapper[componentTypes.SWITCH],\n    }}\n    validatorMapper={{\n      'required-validator': validatorMapper[validatorTypes.REQUIRED],\n      'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n      'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n      'url-validator': validatorMapper[validatorTypes.URL],\n    }}\n    FormTemplate={FormTemplateWrapper}\n    subscription={{ values: true }}\n    {...props}\n  />\n);\n\nexport default SourcesFormRenderer;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/esm/component-mapper';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport { useIntl } from 'react-intl';\n\nconst Authentication = (rest) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n\n  const { authentication } = formOptions.getState().values;\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(authentication && authentication.id\n      ? {\n          isRequired: false,\n          helperText: intl.formatMessage(\n            {\n              id: 'wizard.changeAuthHelper',\n              defaultMessage: 'Changing this resets your current {label}.',\n            },\n            { label: rest.label }\n          ),\n          validate: doNotRequirePassword,\n        }\n      : {}),\n  };\n\n  const Component = componentMapper[componentTypes.TEXT_FIELD];\n\n  return <Component {...componentProps} />;\n};\n\nexport default Authentication;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner/Spinner';\nimport { FormHelperText } from '@patternfly/react-core/dist/esm/components/Form/FormHelperText';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/dist/esm/form-spy';\n\nexport const ValidatingSpinner = ({ validating }) => {\n  const intl = useIntl();\n\n  return (\n    <FormHelperText isHidden={!validating}>\n      <Spinner size=\"md\" className=\"pf-u-mr-md\" />\n      {intl.formatMessage({ id: 'wizard.validating', defaultMessage: 'Validating' })}\n    </FormHelperText>\n  );\n};\n\nValidatingSpinner.propTypes = {\n  validating: PropTypes.bool.isRequired,\n};\n\nconst validated = (_, { meta }) => {\n  if (meta.validating) {\n    return {\n      // FormSpy is a fallback solution\n      // FF sometimes does not set validating to 'false' on the field\n      // So we need to also check the FormSpy.validating\n      helperText: <FormSpy>{({ validating }) => <ValidatingSpinner validating={validating} />}</FormSpy>,\n    };\n  }\n\n  if (meta.valid) {\n    return {\n      validated: 'success',\n      FormGroupProps: {\n        validated: 'success',\n      },\n    };\n  }\n\n  return {};\n};\n\nexport default validated;\n"],"sourceRoot":""}