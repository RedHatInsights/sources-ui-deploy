{"version":3,"sources":["webpack://sources-ui/./src/App.scss","webpack://sources-ui/./src/addSourceWizard/styles/authSelect.scss","webpack://sources-ui/./src/addSourceWizard/styles/cardSelect.scss","webpack://sources-ui/./src/addSourceWizard/styles/costManagement.scss","webpack://sources-ui/./src/components/SourcesTable/loaders.scss","webpack://sources-ui/./src/components/ErrorBoundary.js","webpack://sources-ui/./src/components/PermissionsChecker.js","webpack://sources-ui/./src/redux/user/actions.js","webpack://sources-ui/./src/components/DataLoader.js","webpack://sources-ui/./src/frontend-components-copies/getBaseName.js","webpack://sources-ui/./src/App.js","webpack://sources-ui/./src/Routes.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/SSLFormLabel.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/aws/arn.js","webpack://sources-ui/./src/addSourceWizard/api/subscriptionWatch.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/aws/subscriptionWatch.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/openshift/costManagement.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/azure/costManagement.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/gcp/costManagement.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/tower/catalog.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedSchemas.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/openshift/token.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/openshift/endpoint.js","webpack://sources-ui/./src/addSourceWizard/addSourceWizard/hardcodedComponents/aws/access_key.js","webpack://sources-ui/./src/addSourceWizard/api/constants.js","webpack://sources-ui/./src/addSourceWizard/api/index.js","webpack://sources-ui/./src/addSourceWizard/utilities/stringConstants.js","webpack://sources-ui/./src/frontend-components-copies/interceptors.js","webpack://sources-ui/./src/api/constants.js","webpack://sources-ui/./src/api/getCmValues.js","webpack://sources-ui/./src/api/entities.js","webpack://sources-ui/./src/components/CloudTiles/SubWatchIcon.js","webpack://sources-ui/./src/components/CloudTiles/CloudCards.js","webpack://sources-ui/./src/components/SourceEditForm/parser/authentication.js","webpack://sources-ui/./src/components/SourceEditForm/parser/EditAlert.js","webpack://sources-ui/./src/components/SourceEditForm/parser/application.js","webpack://sources-ui/./src/components/SourcesTable/loaders.js","webpack://sources-ui/./src/redux/sources/actionTypes.js","webpack://sources-ui/./src/redux/sources/actions.js","webpack://sources-ui/./src/api/source_types.js","webpack://sources-ui/./src/redux/user/actionTypes.js","webpack://sources-ui/./src/utilities/constants.js","webpack://sources-ui/./src/redux/sources/reducer.js","webpack://sources-ui/./src/redux/user/reducer.js","webpack://sources-ui/./src/utilities/store.js","webpack://sources-ui/./src/utilities/urlQuery.js","webpack://sources-ui/./src/views/formatters.js","webpack://sources-ui/./src/views/sourcesViewDefinition.js","webpack://sources-ui/./src/App.scss?75e2","webpack://sources-ui/./src/addSourceWizard/styles/authSelect.scss?b68f","webpack://sources-ui/./src/addSourceWizard/styles/cardSelect.scss?f36e","webpack://sources-ui/./src/addSourceWizard/styles/costManagement.scss?fda8","webpack://sources-ui/./src/components/SourcesTable/loaders.scss?f999"],"names":["___CSS_LOADER_EXPORT___","i","push","module","id","ErrorBoundary","error","sentryId","Sentry","this","props","dispatch","addMessage","title","toString","variant","description","stack","state","children","Fragment","errorInfo","Component","propTypes","PropTypes","connect","useDispatch","useEffect","batch","type","ACTION_TYPES","insights","chrome","auth","getUser","then","user","isOrgAdmin","identity","is_org_admin","payload","detail","data","getUserPermissions","permissions","allPermission","reduce","acc","curr","permission","writePermissions","includes","pathname","useLocation","sources","useSelector","shallowEqual","previousPathname","useRef","Promise","all","loadSourceTypes","loadAppTypes","loadEntities","parseQuery","current","updateQuery","getBaseName","level","release","pathName","replace","split","shift","Array","_curr","key","init","identifyApp","_exception","console","warn","sessionStorage","removeItem","CLOUD_CARDS_KEY","basename","location","locale","Main","style","padding","Routes","SourcesPage","lazy","SourceDetail","routes","path","sourcesNew","writeAccess","sourcesRemove","redirectNoId","sourcesDetail","sourcesDetailRename","sourcesDetailRemove","sourcesDetailAddApp","sourcesDetailRemoveApp","replaceRouteId","Suspense","fallback","Switch","Route","component","intl","useIntl","formatMessage","defaultMessage","Popover","aria-label","maxWidth","bodyContent","TextContent","Text","TextVariants","cmd","className","CREATE_S3_BUCKET","HCCM_DOCS_PREFIX","ENABLE_AWS_ACCOUNT","IncludeAliasesLabel","onClick","e","preventDefault","position","Button","ButtonVariant","IncludeOrgUnitsLabel","getSubWatchConfig","axiosInstance","b","chunks","length","Math","floor","random","INSTALL_PREREQUISITE","CREATE_AZURE_STORAGE","AZURE_CREDS_URL","RECURRING_TASK_URL","AllFieldAreRequired","arnMessagePattern","arnMessageLength","arnField","placeholder","isRequired","validate","validatorTypes","pattern","message","threshold","subsWatchArnField","label","ansibleTowerURL","helperText","FormHelperText","isHidden","openshift","authentication","token","generic","additionalFields","name","Content","TextList","TextListItem","T","ClipboardCopy","isReadOnly","COST_MANAGEMENT_APP_NAME","skipSelection","skipEndpoint","componentTypes","additionalSteps","fields","operator","href","target","rel","hideField","initialValue","initializeOnMount","endpoint","url","azure","tenant_id_client_id_client_secret","useApplicationAuth","nextStep","link","TowerCatalog","application","useFormApi","getState","values","extra","subscription_id","TextListVariants","TextListItemVariants","amazon","access_key_secret_key","onlyHiddenFields","arn","includeStepKeyFields","substepOf","formOptions","s3Bucket","bucket","aliasesEnabled","aws","aliases","enabled","orgUnitsEnabled","org_units","isCode","ClipboardCopyVariant","JSON","stringify","Version","Statement","Sid","Effect","Action","Resource","bold","CLOUD_METER_APP_NAME","useState","config","setConfig","conf","aws_policies","traditional_inspection","aws_account_id","space","satellite","receptor_node","customSteps","CATALOG_APP","username_password","condition","is","when","google","project_id_service_account_json","Hint","HintTitle","HintBody","googleAccount","setGoogleAccount","errorMessage","getSourcesApi","getGoogleAccount","projectId","username","SOURCES_API_BASE_V3","timeoutedApps","appTypes","find","axiosInstanceInsights","createEndpoint","createAuthentication","deleteSource","createApplication","postGraphQL","listSourceTypes","listApplicationTypes","createSource","createAuthApp","getApplication","getEndpoint","removeSource","checkAvailabilitySource","doLoadSourceTypes","sourceTypes","doLoadApplicationTypes","applicationTypes","findSource","query","wizardDescription","getActiveVendor","CLOUD_VENDOR","wizardTitle","NO_APPLICATION_VALUE","window","COST_MANAGEMENT_API_BASE","process","env","BASE_PATH","getCmValues","cmConvertTypes","cmValuesMapper","axios","interceptors","request","use","response","status","logout","configureScope","scope","setTag","req_id","err","errObject","customError","captureException","errors","reject","post","updateSource","patch","updateEndpoint","updateAuthentication","showSource","get","listSourceEndpoints","listSourceApplications","listEndpointAuthentications","doLoadAppTypes","deleteApplication","deleteAuthentication","showAuthentication","updateApplication","showApplication","doRemoveSource","sourceId","pagination","pageSize","pageNumber","sorting","sortBy","sortDirection","filtering","filterValue","activeVendor","filterQueries","source_type_id","map","x","join","applications","CLOUD_VENDORS","REDHAT_VENDOR","availability_status","AVAILABLE","UNAVAILABLE","PARTIALLY_UNAVAILABLE","graphQlAttributes","doLoadEntities","doCreateApplication","doDeleteApplication","appId","restFilterGenerator","vendor","doLoadCountOfSources","doLoadSource","doLoadApplicationsForEdit","graphql","promises","forEach","app","results","sourceType","costManagementApp","APP_NAMES","index","application_type_id","newExtra","Object","keys","cmValues","value","set","xmlns","width","height","viewBox","version","stroke","strokeWidth","fill","fillRule","transform","d","PREFIX","isBeta","INSIGHTS_SERVICES","SUBWATCH_HREF","INSIGHTS_ICON","session","getItem","isExpanded","setExpanded","setItem","Card","CardHeader","onExpand","CardTitle","CardExpandableContent","CardBody","Grid","hasGutter","GridItem","md","Stack","StackItem","Label","color","icon","isFilled","src","getAdditionalFields","stepKey","filter","field","EditAlert","Alert","isInline","COST_MANAGAMENT","CLOUD_METER","createOneAppFields","appType","isNotEmpty","authentications","appName","schema","schemaAuth","authtype","additionalStepKeys","hardcodedSchemas","getAdditionalAuthStepsKeys","additionalStepsFields","getAdditionalAuthSteps","step","flatMap","editedName","startsWith","fieldName","createAuthFieldName","createAuthAppFieldName","finalField","pop","modifyAuthSchemas","getEnhancedAuthField","authenticationFields","appendClusterIdentifier","applicationsFields","isBox","display_name","Loader","AppPlaceholder","PaginationLoader","PlaceHolderTable","size","RowWrapperLoader","row","isDeleting","initialProps","colSpan","COLUMN_COUNT","RowWrapper","CardLoader","DetailLoader","SORT_ENTITIES","PAGE_AND_SIZE","FILTER_SOURCES","ADD_APP_TO_SOURCE","SET_COUNT","ADD_HIDDEN_SOURCE","CLEAR_FILTERS","SET_VENDOR","options","count","meta","noError","sortEntities","column","direction","pageAndSize","page","paginationClicked","filterSources","ADD_NOTIFICATION","dismissable","loaded","removeMessage","REMOVE_NOTIFICATION","removeApplication","successTitle","errorTitle","notifications","fulfilled","addHiddenSource","source","clearFilters","renameSource","oldName","entities","setActiveVendor","SATELLITE_NAME","ANSIBLE_TOWER_NAME","TOPOLOGY_INV_NAME","URLSearchParams","search","defaultSourcesState","numberOfEntities","appTypesLoaded","sourceTypesLoaded","undoValues","removingSources","addAppToSource","entity","sourceRenamePending","rows","max","fetchingError","undefined","hidden","defaultUserState","orgAdminPending","writePermissionsPending","urlQueryMiddleware","store","next","action","getProdStore","addMiddlewares","initialState","middlewares","thunk","notificationsMiddleware","errorTitleKey","errorDescriptionKey","promise","registry","ReducerRegistry","register","applyReducerHash","SourcesReducer","UserReducer","notificationsReducer","getStore","sortQuery","paginationQuery","filterQuery","fullHref","decodeURIComponent","history","replaceState","fetchOptions","urlParams","sortByRaw","sourcesColumns","sortable","offset","isNaN","parseInt","min","getAll","entries","Boolean","defaultPort","scheme","http","https","endpointToUrl","onlyTrueEndpointValues","host","port","String","schemaToPort","sourceTypeFormatter","_item","product_name","dateFormatter","str","date","nameFormatter","Link","to","sourceIsOpenShift","endpoints","formatURL","importedFormatter","text","cfme","toLowerCase","importsTexts","content","isRead","getStatusColor","getStatusText","UnknownError","formatAvailibilityErrors","getStatusTooltipText","availabilityFormatter","_status","availability_status_error","statusesCount","errorsCount","getAllErrors","showClose","getStatusTooltipTextApp","EnhancedLabelGroup","numLabels","collapsedText","remaining","getAppStatus","resource_type","applicationFormatter","apps","item","sort","a","localeCompare","notSortable","formatter","update","hot","invalidate","oldLocals","accept","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/937.24ef2fb55cf0fedb725d.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-notifications/index.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sources{}.sources .ins-c-sources__sources-placeholder-loader{margin:0px;padding:0px;min-height:500px}.sources .ins-c-source__delete-icon{color:var(--pf-global--warning-color--100)}.sources .ins-c-sources__dialog--spinnerContainer{min-height:128px;text-align:center}.sources .ins-c-sources__row-vertical-centered td{vertical-align:middle !important}.sources .ins-c-sources__help-cursor:hover{cursor:help}.sources .ins-c-sources__availability-ok{color:var(--pf-global--success-color--100)}.sources .ins-c-sources__availability-partially{color:var(--pf-global--warning-color--100)}.sources .ins-c-sources__availability-not-ok{color:var(--pf-global--danger-color--100)}.sources .ins-c-sources__availability-unknown{color:var(--pf-global--icon--Color--light)}.sources .clickable{cursor:pointer}.sources .ins-c-sources__pagination-loader-wrapper{width:200px}.sources .ins-c-sources__empty-state{padding-top:calc(0px - var(--pf-global--spacer--lg) + 64px) !important;max-width:576px}.sources .ins-c-sources__disabled-drodpown-item{pointer-events:auto !important}@media (max-width: 768px){.sources .ins-l-content{padding:0 !important}.sources .top-pagination{display:none}.sources .ins-c-sources__row-vertical-centered{border-bottom:16px solid var(--pf-c-table--responsive--BorderColor) !important}.sources .pf-c-table tbody{border-top:16px solid var(--pf-c-table--responsive--BorderColor) !important}.sources .ins-c-primary-toolbar__pagination{width:100%}.sources .bottom-pagination .pf-c-options-menu,.sources .bottom-pagination .pf-c-pagination__nav{display:flex !important;visibility:visible !important}}.sources .ins-c-sources__detail-page .card{box-shadow:none !important}.sources .ins-c-sources__detail-page .summary-card{cursor:initial !important;background-clip:content-box;height:calc(100% - 48px)}.sources .ins-c-sources__detail-page .applications-card{min-height:100%;background-clip:content-box}.sources .ins-c-sources__detail-page .empty-state-body{max-width:536px}.sources .ins-c-sources__detail-page .pf-c-empty-state.pf-u-mt-4xl{margin-top:0px !important}.sources .ins-c-sources__info-card .text{font-size:14px}.sources .ins-c-sources__info-card .custom-icon{height:1em;width:auto;vertical-align:-2px}.sources .ins-c-sources__cloud-empty-state-card{box-shadow:none !important}.sources .ins-c-sources__cloud-empty-state-card .catalog-link{font-size:14px}.sources .ins-c-sources__cloud-empty-state-card .cloud-footer{text-align:center}.sources .ins-c-sources__cloud-empty-state-card .provider-tiles{text-align:center}.sources .ins-c-sources__cloud-empty-state-card .provider-tiles .tile{width:284px}.sources .ins-c-sources__cloud-empty-state-card .provider-icon{height:40px}.sources .ins-c-sources__cloud-empty-state-card .redhat-icon{height:50px}.sources .ins-c-sources__cloud-empty-state-card .disabled-tile-with-tooltip{display:inline-block}.sources .ins-c-sources__cloud-empty-state-card .disabled-tile-with-tooltip .provider-icon{opacity:0.5}.sources .ins-c-sources__hide-me{opacity:0}.sources .ins-c-sources__switch-description{font-size:14px;color:#6a6e73;line-height:24px}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.scss\"],\"names\":[],\"mappings\":\"AAAA,SAAQ,CAAR,oDAC4H,UAAU,CAAC,WAAW,CAAC,gBAAgB,CADnK,oCAC+L,0CAA0C,CADzO,kDACmR,gBAAgB,CAAC,iBAAiB,CADrT,kDAC+V,gCAAgC,CAD/X,2CACka,WAAW,CAD7a,yCAC8c,0CAA0C,CADxf,gDACgiB,0CAA0C,CAD1kB,6CAC+mB,yCAAyC,CADxpB,8CAC8rB,0CAA0C,CADxuB,oBACovB,cAAc,CADlwB,mDAC6yB,WAAW,CADxzB,qCACq1B,sEAAsE,CAAC,eAAe,CAD36B,gDACm9B,8BAA8B,CAAC,0BADl/B,wBAC2hC,oBAAoB,CAD/iC,yBACgkC,YAAY,CAD5kC,+CACmnC,8EAA8E,CADjsC,2BACotC,2EAA2E,CAD/xC,4CACm0C,UAAU,CAD70C,iGAC65C,uBAAuB,CAAC,6BAA6B,CAAE,CADp9C,2CACs/C,0BAA0B,CADhhD,mDAC2jD,yBAAyB,CAAC,2BAA2B,CAAC,wBAAwB,CADzoD,wDACyrD,eAAe,CAAC,2BAA2B,CADpuD,uDACmxD,eAAe,CADlyD,mEAC61D,yBAAyB,CADt3D,yCACu5D,cAAc,CADr6D,gDAC68D,UAAU,CAAC,UAAU,CAAC,mBAAmB,CADt/D,gDAC8hE,0BAA0B,CADxjE,8DAC8mE,cAAc,CAD5nE,8DACkrE,iBAAiB,CADnsE,gEAC2vE,iBAAiB,CAD5wE,sEAC00E,WAAW,CADr1E,+DAC44E,WAAW,CADv5E,6DAC48E,WAAW,CADv9E,4EAC2hF,oBAAoB,CAD/iF,2FACkoF,WAAW,CAD7oF,iCACsqF,SAAS,CAD/qF,4CACmtF,cAAc,CAAC,aAAa,CAAC,gBAAgB\",\"sourcesContent\":[\".sources{\\n@import url(~@redhat-cloud-services/frontend-components-notifications/index.css);.ins-c-sources__sources-placeholder-loader{margin:0px;padding:0px;min-height:500px}.ins-c-source__delete-icon{color:var(--pf-global--warning-color--100)}.ins-c-sources__dialog--spinnerContainer{min-height:128px;text-align:center}.ins-c-sources__row-vertical-centered td{vertical-align:middle !important}.ins-c-sources__help-cursor:hover{cursor:help}.ins-c-sources__availability-ok{color:var(--pf-global--success-color--100)}.ins-c-sources__availability-partially{color:var(--pf-global--warning-color--100)}.ins-c-sources__availability-not-ok{color:var(--pf-global--danger-color--100)}.ins-c-sources__availability-unknown{color:var(--pf-global--icon--Color--light)}.clickable{cursor:pointer}.ins-c-sources__pagination-loader-wrapper{width:200px}.ins-c-sources__empty-state{padding-top:calc(0px - var(--pf-global--spacer--lg) + 64px) !important;max-width:576px}.ins-c-sources__disabled-drodpown-item{pointer-events:auto !important}@media (max-width: 768px){.ins-l-content{padding:0 !important}.top-pagination{display:none}.ins-c-sources__row-vertical-centered{border-bottom:16px solid var(--pf-c-table--responsive--BorderColor) !important}.pf-c-table tbody{border-top:16px solid var(--pf-c-table--responsive--BorderColor) !important}.ins-c-primary-toolbar__pagination{width:100%}.bottom-pagination .pf-c-options-menu,.bottom-pagination .pf-c-pagination__nav{display:flex !important;visibility:visible !important}}.ins-c-sources__detail-page .card{box-shadow:none !important}.ins-c-sources__detail-page .summary-card{cursor:initial !important;background-clip:content-box;height:calc(100% - 48px)}.ins-c-sources__detail-page .applications-card{min-height:100%;background-clip:content-box}.ins-c-sources__detail-page .empty-state-body{max-width:536px}.ins-c-sources__detail-page .pf-c-empty-state.pf-u-mt-4xl{margin-top:0px !important}.ins-c-sources__info-card .text{font-size:14px}.ins-c-sources__info-card .custom-icon{height:1em;width:auto;vertical-align:-2px}.ins-c-sources__cloud-empty-state-card{box-shadow:none !important}.ins-c-sources__cloud-empty-state-card .catalog-link{font-size:14px}.ins-c-sources__cloud-empty-state-card .cloud-footer{text-align:center}.ins-c-sources__cloud-empty-state-card .provider-tiles{text-align:center}.ins-c-sources__cloud-empty-state-card .provider-tiles .tile{width:284px}.ins-c-sources__cloud-empty-state-card .provider-icon{height:40px}.ins-c-sources__cloud-empty-state-card .redhat-icon{height:50px}.ins-c-sources__cloud-empty-state-card .disabled-tile-with-tooltip{display:inline-block}.ins-c-sources__cloud-empty-state-card .disabled-tile-with-tooltip .provider-icon{opacity:0.5}.ins-c-sources__hide-me{opacity:0}.ins-c-sources__switch-description{font-size:14px;color:#6a6e73;line-height:24px}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sources .pf-c-form__helper-text.pf-m-disabled{color:var(--pf-global--disabled-color--100)}.sources .ins-c-source__warning-icon{fill:var(--pf-global--warning-color--100);margin-right:var(--pf-global--spacer--sm)}.sources .ins-c-source__aws-grid{text-align:left}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/addSourceWizard/styles/authSelect.scss\"],\"names\":[],\"mappings\":\"AAAA,+CACsC,2CAA2C,CADjF,qCAC8G,yCAAyC,CAAC,yCAAyC,CADjM,iCAC0N,eAAe\",\"sourcesContent\":[\".sources{\\n.pf-c-form__helper-text.pf-m-disabled{color:var(--pf-global--disabled-color--100)}.ins-c-source__warning-icon{fill:var(--pf-global--warning-color--100);margin-right:var(--pf-global--spacer--sm)}.ins-c-source__aws-grid{text-align:left}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sources .ins-c-sources__wizard--tile{width:100%}.sources .ins-c-sources__wizard--tile .ins-c-sources__wizard--icon{height:40px}.sources .ins-c-sources__wizard--tile.disabled .ins-c-sources__wizard--icon{opacity:0.5}.sources .ins-c-sources__wizard--tile .redhat-icon{height:50px}.sources .ins-c-sources__wizard--step-text{max-width:536px}.sources .ins-c-sources__wizard--radio .pf-c-radio:not(:last-child){margin-bottom:24px}.sources .ins-c-sources__wizard--rhel-mag-label{position:relative;top:-3px}.sources .ins-c-sources__wizard--rhel-mag-label{position:relative;top:-3px}.sources .ins-c-sources__wizard--rhel-desc-title{color:initial}.sources .ins-c-sources__wizard--summary-description-list .pf-c-description-list__group{grid-template-columns:150px 1fr}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/addSourceWizard/styles/cardSelect.scss\"],\"names\":[],\"mappings\":\"AAAA,sCAC6B,UAAU,CADvC,mEACkG,WAAW,CAD7G,4EACiL,WAAW,CAD5L,mDACuO,WAAW,CADlP,2CACqR,eAAe,CADpS,oEACgW,kBAAkB,CADlX,gDAC0Z,iBAAiB,CAAC,QAAQ,CADpb,gDAC4d,iBAAiB,CAAC,QAAQ,CADtf,iDAC+hB,aAAa,CAD5iB,wFAC4nB,+BAA+B\",\"sourcesContent\":[\".sources{\\n.ins-c-sources__wizard--tile{width:100%}.ins-c-sources__wizard--tile .ins-c-sources__wizard--icon{height:40px}.ins-c-sources__wizard--tile.disabled .ins-c-sources__wizard--icon{opacity:0.5}.ins-c-sources__wizard--tile .redhat-icon{height:50px}.ins-c-sources__wizard--step-text{max-width:536px}.ins-c-sources__wizard--radio .pf-c-radio:not(:last-child){margin-bottom:24px}.ins-c-sources__wizard--rhel-mag-label{position:relative;top:-3px}.ins-c-sources__wizard--rhel-mag-label{position:relative;top:-3px}.ins-c-sources__wizard--rhel-desc-title{color:initial}.ins-c-sources__wizard--summary-description-list .pf-c-description-list__group{grid-template-columns:150px 1fr}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sources .list-align-top{margin-top:calc(var(--pf-global--spacer--xl) * -1)}.sources .list-align-left{margin-left:calc(var(--pf-global--spacer--xl) * -1)}.sources .export-table{margin-left:calc(var(--pf-global--spacer--xl) * 1.5);margin-top:var(--pf-global--spacer--md)}.sources .cluster-id-question-button{padding-right:3px;padding-left:5px}.sources .ins-c-sources__wizard--all-required-text{color:var(--pf-global--disabled-color--100)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/addSourceWizard/styles/costManagement.scss\"],\"names\":[],\"mappings\":\"AAAA,yBACgB,kDAAkD,CADlE,0BACoF,mDAAmD,CADvI,uBACsJ,oDAAoD,CAAC,uCAAuC,CADlP,qCAC+Q,iBAAiB,CAAC,gBAAgB,CADjT,mDAC4V,2CAA2C\",\"sourcesContent\":[\".sources{\\n.list-align-top{margin-top:calc(var(--pf-global--spacer--xl) * -1)}.list-align-left{margin-left:calc(var(--pf-global--spacer--xl) * -1)}.export-table{margin-left:calc(var(--pf-global--spacer--xl) * 1.5);margin-top:var(--pf-global--spacer--md)}.cluster-id-question-button{padding-right:3px;padding-left:5px}.ins-c-sources__wizard--all-required-text{color:var(--pf-global--disabled-color--100)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@keyframes loader{0%{transform:translateX(-100%)}60%{transform:translateX(100%)}100%{transform:translateX(100%)}}.sources .ins-c-sources__loader{position:relative;overflow:hidden;width:100%;height:100%;display:block;border-radius:3px;background-color:#f3f3f3}.sources .ins-c-sources__loader::after{animation:2s loader linear 0.5s infinite;background:linear-gradient(90deg, transparent, #ecebeb, transparent);content:'';position:absolute;bottom:0;left:0;right:0;top:0;transform:translateX(-100%);z-index:1}.sources .ins-c-sources__fake_content{height:800px;width:100%;background-color:var(--pf-global--BackgroundColor--100)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/SourcesTable/loaders.scss\"],\"names\":[],\"mappings\":\"AACA,kBAAkB,GAAG,2BAA2B,CAAC,IAAI,0BAA0B,CAAC,KAAK,0BAA0B,CAAA,CAD/G,gCACwI,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,iBAAiB,CAAC,wBAAwB,CADzP,uCACwR,wCAAwC,CAAC,oEAAoE,CAAC,UAAU,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,SAAS,CADte,sCACogB,YAAY,CAAC,UAAU,CAAC,uDAAuD\",\"sourcesContent\":[\".sources{\\n@keyframes loader{0%{transform:translateX(-100%)}60%{transform:translateX(100%)}100%{transform:translateX(100%)}}.ins-c-sources__loader{position:relative;overflow:hidden;width:100%;height:100%;display:block;border-radius:3px;background-color:#f3f3f3}.ins-c-sources__loader::after{animation:2s loader linear 0.5s infinite;background:linear-gradient(90deg, transparent, #ecebeb, transparent);content:'';position:absolute;bottom:0;left:0;right:0;top:0;transform:translateX(-100%);z-index:1}.ins-c-sources__fake_content{height:800px;width:100%;background-color:var(--pf-global--BackgroundColor--100)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport { addMessage } from '../redux/sources/actions';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error, errorInfo) {\n    return { error, errorInfo };\n  }\n\n  componentDidCatch(error) {\n    const sentryId = Sentry.captureException(error);\n    this.props.dispatch(\n      addMessage({\n        title: `${error.toString()} (Sentry ID: ${sentryId})`,\n        variant: 'danger',\n        description: error.stack,\n      })\n    );\n  }\n\n  render() {\n    const { error } = this.state;\n    const { children } = this.props;\n\n    if (error) {\n      return <Fragment>Error occurred</Fragment>;\n    }\n\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nErrorBoundary.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default connect()(ErrorBoundary);\n","import { useEffect } from 'react';\nimport { useDispatch, batch } from 'react-redux';\n\nimport { loadOrgAdmin, loadWritePermissions } from '../redux/user/actions';\n\nconst PermissionsChecker = ({ children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    batch(() => {\n      dispatch(loadOrgAdmin());\n      dispatch(loadWritePermissions());\n    });\n  }, []);\n\n  return children;\n};\n\nexport default PermissionsChecker;\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const loadOrgAdmin = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_ORG_ADMIN_PENDING });\n\n  return insights.chrome.auth\n    .getUser()\n    .then((user) => {\n      const isOrgAdmin = user.identity.user.is_org_admin;\n\n      dispatch({\n        type: ACTION_TYPES.SET_ORG_ADMIN_FULFILLED,\n        payload: isOrgAdmin,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_ORG_ADMIN_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      })\n    );\n};\n\nexport const loadWritePermissions = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING });\n\n  return insights.chrome\n    .getUserPermissions('sources')\n    .then((permissions) => {\n      const allPermission = permissions.reduce((acc, curr) => [...acc, curr?.permission], []);\n      const writePermissions = allPermission.includes('sources:*:*') || allPermission.includes('sources:*:write');\n\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED,\n        payload: writePermissions,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      })\n    );\n};\n","import { useEffect, useRef } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { loadAppTypes, loadEntities, loadSourceTypes } from '../redux/sources/actions';\nimport { parseQuery, updateQuery } from '../utilities/urlQuery';\n\nconst DataLoader = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n  const previousPathname = useRef(pathname);\n\n  useEffect(() => {\n    Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadEntities(parseQuery()))]);\n  }, []);\n\n  useEffect(() => {\n    if (previousPathname.current !== pathname) {\n      updateQuery(sources);\n      previousPathname.current = pathname;\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default DataLoader;\n","export const getBaseName = (pathname, level = 2) => {\n  let release = '/';\n  const pathName = pathname.replace(/(#|\\?).*/, '').split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return [...new Array(level)].reduce((acc, _curr, key) => {\n    return `${acc}${pathName[key] || ''}${key < level - 1 ? '/' : ''}`;\n  }, release);\n};\n","import React, { useEffect } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './Routes';\n\nimport './App.scss';\nimport './addSourceWizard/styles/authSelect.scss';\nimport './addSourceWizard/styles/cardSelect.scss';\nimport './addSourceWizard/styles/costManagement.scss';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PermissionsChecker from './components/PermissionsChecker';\nimport DataLoader from './components/DataLoader';\nimport { CLOUD_CARDS_KEY } from './components/CloudTiles/CloudCards';\n\nimport { getBaseName } from './frontend-components-copies/getBaseName';\n\nconst App = () => {\n  useEffect(() => {\n    insights.chrome.init();\n    try {\n      insights.chrome.identifyApp('sources');\n    } catch (_exception) {\n      // eslint-disable-next-line no-console\n      console.warn('Failed to initialize chrome navigation.');\n    }\n\n    return () => {\n      sessionStorage.removeItem(CLOUD_CARDS_KEY);\n    };\n  }, []);\n\n  return (\n    <Router basename={getBaseName(location.pathname, 1)}>\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <ErrorBoundary>\n            <PermissionsChecker>\n              <Main style={{ padding: 0 }}>\n                <DataLoader />\n                <Routes />\n              </Main>\n            </PermissionsChecker>\n          </ErrorBoundary>\n        </React.Fragment>\n      </IntlProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AppPlaceholder } from './components/SourcesTable/loaders';\n\nconst SourcesPage = lazy(() => import(/* webpackChunkName: \"sourcesPage\" */ './pages/Sources'));\nconst SourceDetail = lazy(() => import(/* webpackChunkName: \"sourceDetail\" */ './pages/Detail'));\n\nexport const routes = {\n  sources: {\n    path: '/sources',\n  },\n  sourcesNew: {\n    path: '/sources/new',\n    writeAccess: true,\n  },\n  sourcesRemove: {\n    path: '/sources/remove/:id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetail: {\n    path: '/sources/detail/:id',\n    redirectNoId: true,\n  },\n  sourcesDetailRename: {\n    path: '/sources/detail/:id/rename',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailRemove: {\n    path: '/sources/detail/:id/remove',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailAddApp: {\n    path: '/sources/detail/:id/add_app/:app_type_id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailRemoveApp: {\n    path: '/sources/detail/:id/remove_app/:app_id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n};\n\nexport const replaceRouteId = (path, id) => path.replace(':id', id);\n\nconst Routes = () => (\n  <Suspense fallback={<AppPlaceholder />}>\n    <Switch>\n      <Route path={routes.sourcesDetail.path} component={SourceDetail} />\n      <Route component={SourcesPage} />\n    </Switch>\n  </Suspense>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { Popover } from '@patternfly/react-core/dist/esm/components/Popover/Popover';\n\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nconst SSLFormLabel = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      {intl.formatMessage({\n        id: 'wizard.sslCertificate',\n        defaultMessage: 'SSL Certificate',\n      })}\n      <Popover\n        aria-label=\"Help text\"\n        maxWidth=\"50%\"\n        bodyContent={\n          <TextContent>\n            <Text component={TextVariants.p}>\n              {intl.formatMessage(\n                {\n                  id: 'wizard.openshiftCADescription1',\n                  // eslint-disable-next-line max-len\n                  defaultMessage:\n                    'You can obtain your OpenShift Container Platform provider’s CA certificate for all endpoints (default, metrics, alerts) from {cmd}.',\n                },\n                { cmd: <b key=\"b\">/etc/origin/master/ca.crt</b> }\n              )}\n            </Text>\n            <Text component={TextVariants.p}>\n              {intl.formatMessage({\n                id: 'wizard.openshiftCADescription2',\n                defaultMessage:\n                  'Paste the output (a block of text starting with --BEGIN CERTIFICATE--) into the Trusted CA Certificates field.',\n              })}\n            </Text>\n          </TextContent>\n        }\n      >\n        <QuestionCircleIcon className=\"pf-u-ml-sm\" />\n      </Popover>\n    </React.Fragment>\n  );\n};\n\nexport default SSLFormLabel;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { Button, ButtonVariant } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { Popover } from '@patternfly/react-core/dist/esm/components/Popover/Popover';\nimport { TextList, TextListVariants } from '@patternfly/react-core/dist/esm/components/Text/TextList';\nimport { TextListItem, TextListItemVariants } from '@patternfly/react-core/dist/esm/components/Text/TextListItem';\nimport { ClipboardCopy, ClipboardCopyVariant } from '@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy';\n\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nimport { HCCM_DOCS_PREFIX } from '../../../utilities/stringConstants';\n\nconst CREATE_S3_BUCKET = `${HCCM_DOCS_PREFIX}/html/getting_started_with_cost_management/assembly_adding_sources_cost#creating_an_aws_s3_bucket`;\nconst ENABLE_AWS_ACCOUNT = `${HCCM_DOCS_PREFIX}/html/getting_started_with_cost_management/assembly_adding_sources_cost#enabling_aws_account_access`;\n\nexport const UsageDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text>\n        {intl.formatMessage(\n          {\n            id: 'cost.usageDescription.usageDescription',\n            defaultMessage:\n              'To collect and store the information needed for cost management, you need to set up an Amazon S3 bucket for cost and usage reports. {link}',\n          },\n          {\n            link: (\n              <Text key=\"link\" component={TextVariants.a} href={CREATE_S3_BUCKET} rel=\"noopener noreferrer\" target=\"_blank\">\n                {intl.formatMessage({\n                  id: 'cost.learnMore',\n                  defaultMessage: 'Learn more',\n                })}\n              </Text>\n            ),\n          }\n        )}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.usageDescription.specifyBucker',\n            defaultMessage: 'Specify or create an Amazon S3 bucket for your account.',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.usageDescription.addFollowingValues',\n            defaultMessage: 'Create a cost and usage report using the following values:',\n          })}\n          <TextList>\n            <TextListItem>\n              {intl.formatMessage({\n                id: 'cost.usageDescription.repornName',\n                defaultMessage: 'Report name: koku',\n              })}\n            </TextListItem>\n            <TextListItem>\n              {intl.formatMessage({\n                id: 'cost.usageDescription.timeUnitHoulry',\n                defaultMessage: 'Time unit: hourly',\n              })}\n            </TextListItem>\n            <TextListItem>\n              {intl.formatMessage({\n                id: 'cost.usageDescription.includesResourceIDs',\n                defaultMessage: 'Include: Resource IDs',\n              })}\n            </TextListItem>\n            <TextListItem>\n              {intl.formatMessage({\n                id: 'cost.usageDescription.enableSuppor',\n                defaultMessage: 'Enable support for: RedShift, QuickSight and disable support for Athena',\n              })}\n            </TextListItem>\n            <TextListItem>\n              {intl.formatMessage({\n                id: 'cost.usageDescription.reportPathPrefix',\n                defaultMessage: 'Report path prefix: cost',\n              })}\n            </TextListItem>\n            <TextListItem>\n              {intl.formatMessage({\n                id: 'cost.usageDescription.compression',\n                defaultMessage: 'Compression type: GZIP',\n              })}\n            </TextListItem>\n          </TextList>\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.usageDescription.enterNameOfCreatedBucker',\n            defaultMessage: 'Enter the name of the Amazon S3 bucket you just created below:',\n          })}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n\nexport const IAMRoleDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text>\n        {intl.formatMessage({\n          id: 'cost.iamrole.createIamRole',\n          defaultMessage: 'To delegate account access, create an IAM role to associate with your IAM policy.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.iamrole.createNewRole',\n            defaultMessage: 'From the AWS Identity Access Management console, create a new role.',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.iamrole.enterAccountId',\n            defaultMessage:\n              'Select another AWS account from the list of trusted entities and paste the following value into the Account ID field:',\n          })}\n        </TextListItem>\n        <ClipboardCopy className=\"pf-u-m-sm-on-sm\" isReadOnly>\n          589173575009\n        </ClipboardCopy>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.iamrole.attachPolicy',\n            defaultMessage: 'Attach the permissions policy that you just created.',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.iamrole.completeProccess',\n            defaultMessage: 'Complete the process to create your new role.',\n          })}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n\nexport const IAMPolicyDescription = () => {\n  const formOptions = useFormApi();\n  const intl = useIntl();\n\n  const values = formOptions.getState().values;\n  const s3Bucket = values.application?.extra?.bucket;\n  const aliasesEnabled = values.aws?.aliases?.enabled;\n  const orgUnitsEnabled = values.aws?.org_units?.enabled;\n\n  if (!s3Bucket) {\n    return (\n      <Text>\n        {intl.formatMessage({\n          id: 'cost.iampolicy.somethingWrong',\n          defaultMessage: 'Something went wrong, you are missing bucket value.',\n        })}\n      </Text>\n    );\n  }\n\n  return (\n    <TextContent>\n      <Text>\n        {intl.formatMessage(\n          {\n            id: 'cost.iampolicy.grantPermissions',\n            defaultMessage:\n              'To grant permissions to the cost management report you just configured, create an AWS Identity and Access Management (IAM) policy. {link}',\n          },\n          {\n            link: (\n              <Text key=\"link\" component={TextVariants.a} href={ENABLE_AWS_ACCOUNT} rel=\"noopener noreferrer\" target=\"_blank\">\n                {intl.formatMessage({\n                  id: 'wizard.learnMore',\n                  defaultMessage: 'Learn more',\n                })}\n              </Text>\n            ),\n          }\n        )}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem component={TextListItemVariants.li}>\n          {intl.formatMessage({\n            id: 'cost.iampolicy.signInIAMConsole',\n            defaultMessage: 'Sign in to the AWS Identity and Access Management (IAM) console.',\n          })}\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.li}>\n          {intl.formatMessage({\n            id: 'cost.iampolicy.createPolicy',\n            defaultMessage: 'Create a new policy, pasting the following content into the JSON text box.',\n          })}\n        </TextListItem>\n        <ClipboardCopy isCode variant={ClipboardCopyVariant.expansion} className=\"pf-u-m-sm-on-sm\" isReadOnly>\n          {JSON.stringify(\n            {\n              Version: '2012-10-17',\n              Statement: [\n                {\n                  Sid: 'VisualEditor0',\n                  Effect: 'Allow',\n                  Action: ['s3:Get*', 's3:List*'],\n                  Resource: [`arn:aws:s3:::${s3Bucket}`, `arn:aws:s3:::${s3Bucket}/*`],\n                },\n                {\n                  Sid: 'VisualEditor1',\n                  Effect: 'Allow',\n                  Action: [\n                    's3:HeadBucket',\n                    'cur:DescribeReportDefinitions',\n                    ...(aliasesEnabled ? ['iam:ListAccountAliases'] : []),\n                    ...(orgUnitsEnabled ? ['organizations:List*', 'organizations:Describe*'] : []),\n                  ],\n                  Resource: '*',\n                },\n              ],\n            },\n            null,\n            2\n          )}\n        </ClipboardCopy>\n        <TextListItem component={TextListItemVariants.li}>\n          {intl.formatMessage({\n            id: 'cost.iampolicy.completeProccess',\n            defaultMessage: 'Complete the process to create your new policy.',\n          })}\n        </TextListItem>\n      </TextList>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'cost.iampolicy.logInIam',\n            defaultMessage: '{bold} You will need to be logged in to the IAM console to complete the next step.',\n          },\n          {\n            bold: (\n              <b key=\"bold\">\n                {intl.formatMessage({\n                  id: 'cost.DoNotCloseYourBrowser',\n                  defaultMessage: 'Do not close your browser.',\n                })}\n              </b>\n            ),\n          }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const TagsDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text>\n        <Text component={TextVariants.a} rel=\"noopener noreferrer\" target=\"_blank\" href={ENABLE_AWS_ACCOUNT}>\n          {intl.formatMessage({\n            id: 'cost.tags.readMeLink',\n            defaultMessage: 'Learn more',\n          })}\n        </Text>\n      </Text>\n      <Text>\n        {intl.formatMessage({\n          id: 'cost.tags.desciption',\n          defaultMessage:\n            'To use tags to organize your AWS resources in the Cost Management application, activate your tags in AWS to allow them to be imported automatically.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.tags.openSection',\n            defaultMessage: 'In the AWS Billing and Cost Management console, open the Cost Allocation Tags section.',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.tags.selectTags',\n            defaultMessage: 'Select the tags you want to use in the Cost Management application, and click Activate.',\n          })}\n        </TextListItem>\n      </TextList>\n      <Text>\n        {intl.formatMessage({\n          id: 'cost.tags.aliasessOrgUnits',\n          defaultMessage:\n            'To use account aliases and organizational units in the display and filter of AWS resources, select the following',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const ArnDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text>\n        {intl.formatMessage({\n          id: 'cost.arn.enableAccess',\n          defaultMessage: 'To enable account access, capture the ARN associated with the role you just created.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.arn.selectRole',\n            defaultMessage: 'From the Roles tab, select the role you just created.',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.arn.copyArn',\n            defaultMessage: 'From the Summary screen, copy the role ARN and paste it in the ARN field:',\n          })}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n\nexport const IncludeAliasesLabel = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      {intl.formatMessage({\n        id: 'cost.arn.includesAliases',\n        defaultMessage: 'Include AWS account aliases',\n      })}\n      <span onClick={(e) => e.preventDefault()}>\n        <Popover\n          aria-label=\"Help text\"\n          position=\"right\"\n          maxWidth=\"40%\"\n          bodyContent={intl.formatMessage({\n            id: 'cost.arn.includeAliasesPopover',\n            defaultMessage:\n              'If there are account aliases, they will appear and be used for filtering when reporting on AWS accounts. This will include \"iam:ListAccountAliases\" to the Action of the IAM Policy.',\n          })}\n        >\n          <Button variant={ButtonVariant.plain}>\n            <QuestionCircleIcon className=\"pf-u-ml-sm\" />\n          </Button>\n        </Popover>\n      </span>\n    </React.Fragment>\n  );\n};\n\nexport const IncludeOrgUnitsLabel = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      {intl.formatMessage({\n        id: 'cost.arn.includeOrgUnits',\n        defaultMessage: 'Include AWS organizational units',\n      })}\n      <span onClick={(e) => e.preventDefault()}>\n        <Popover\n          aria-label=\"Help text\"\n          position=\"right\"\n          maxWidth=\"35%\"\n          bodyContent={intl.formatMessage({\n            id: 'cost.arn.includeOrgUnitsPopover',\n            defaultMessage:\n              'If there are organizational units, they will be used for filtering when reporting on AWS resources. This will include \"organizations:List*\" and \"organizations:Describe*\" to the Action of the IAM Policy',\n          })}\n        >\n          <Button variant={ButtonVariant.plain}>\n            <QuestionCircleIcon className=\"pf-u-ml-sm\" />\n          </Button>\n        </Popover>\n      </span>\n    </React.Fragment>\n  );\n};\n","import { axiosInstance } from './index';\n\nexport const getSubWatchConfig = () => axiosInstance.get('/api/cloudigrade/v2/sysconfig/');\n","import React, { useState, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { TextList, TextListVariants } from '@patternfly/react-core/dist/esm/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/esm/components/Text/TextListItem';\nimport { ClipboardCopy, ClipboardCopyVariant } from '@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy';\n\nimport { getSubWatchConfig } from '../../../api/subscriptionWatch';\n\nconst b = (chunks) => <b key={`b-${chunks.length}-${Math.floor(Math.random() * 1000)}`}>{chunks}</b>;\n\nexport const IAMRoleDescription = () => {\n  const intl = useIntl();\n  const [config, setConfig] = useState();\n\n  useEffect(() => {\n    getSubWatchConfig()\n      .then((conf) => setConfig(conf?.aws_account_id))\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        setConfig(\n          intl.formatMessage({\n            id: 'subwatch.iampolicy.subWatchConfigError',\n            defaultMessage: 'There is an error with loading of the configuration. Please go back and return to this step.',\n          })\n        );\n      });\n  }, []);\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'subwatch.iamrole.delegateAccount',\n          defaultMessage: 'To delegate account access, create an IAM role to associate with your IAM policy.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'subwatch.iamrole.createRole',\n            defaultMessage: 'From the AWS IAM console, create a new role.',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'subwatch.iamrole.pasteAccountID',\n              defaultMessage:\n                'Select <b>Another AWS account</b> from the list of trusted entities and paste the following value into the <b>Account{space}ID</b> field:',\n            },\n            {\n              b,\n              space: <React.Fragment>&nbsp;</React.Fragment>,\n            }\n          )}\n        </TextListItem>\n        <ClipboardCopy className=\"pf-u-m-sm-on-sm\" isReadOnly>\n          {config || intl.formatMessage({ id: 'subwatch.iampolicy.loading', defaultMessage: 'Loading configuration...' })}\n        </ClipboardCopy>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'subwatch.iamrole.attachPolicy',\n            defaultMessage: 'Attach the permissions policy that you just created.',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'subwatch.iamrole.completeProcess',\n            defaultMessage: 'Complete the process to create your new role.',\n          })}\n        </TextListItem>\n      </TextList>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'subwatch.iampolicy.BDoNotCloseYourBrowserBYouWillNeedToBeLoggedInToTheIamConsoleToComputeTheNextStep',\n            defaultMessage: '{bold} You will need to be logged in to the IAM console to complete the next step.',\n          },\n          {\n            bold: (\n              <b key=\"bold\">\n                {intl.formatMessage({\n                  id: 'subwatch.iampolicy.dontCloseBrowser',\n                  defaultMessage: 'Do not close your browser.',\n                })}\n              </b>\n            ),\n          }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const IAMPolicyDescription = () => {\n  const intl = useIntl();\n  const [config, setConfig] = useState();\n\n  useEffect(() => {\n    getSubWatchConfig()\n      .then((conf) => setConfig(conf?.aws_policies?.traditional_inspection))\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        setConfig(\n          intl.formatMessage({\n            id: 'subwatch.iampolicy.subWatchConfigError',\n            defaultMessage: 'There is an error with loading of the configuration. Please go back and return to this step.',\n          })\n        );\n      });\n  }, []);\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'subwatch.iampolicy.grantPermissions',\n          defaultMessage:\n            'To grant Red Hat access to your Amazon Web Services (AWS) subscription data, create an AWS Identity and Access Management (IAM) policy.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'subwatch.iampolicy.signIn',\n              defaultMessage: 'Log in to the {link}.',\n            },\n            {\n              link: (\n                <a\n                  key=\"link\"\n                  href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/console.html\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  {intl.formatMessage({\n                    id: 'subwatch.iampolicy.IAMconsole',\n                    defaultMessage: 'AWS Identity and Management (IAM) console',\n                  })}\n                </a>\n              ),\n            }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'subwatch.iampolicy.createPolicty',\n            defaultMessage: 'Create a new policy, pasting the following content into the JSON text box.',\n          })}\n        </TextListItem>\n        <ClipboardCopy isCode variant={ClipboardCopyVariant.expansion} className=\"pf-u-m-sm-on-sm\" isReadOnly>\n          {config\n            ? JSON.stringify(config, null, 2)\n            : intl.formatMessage({ id: 'subwatch.iampolicy.loading', defaultMessage: 'Loading configuration...' })}\n        </ClipboardCopy>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'subwatch.iampolicy.completeProcess',\n            defaultMessage: 'Complete the process to create your new policy.',\n          })}\n        </TextListItem>\n      </TextList>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'subwatch.iampolicy.BDoNotCloseYourBrowserBYouWillNeedToBeLoggedInToTheIamConsoleToComputeTheNextStep',\n            defaultMessage: '{bold} You will need to be logged in to the IAM console to complete the next step.',\n          },\n          {\n            bold: (\n              <b key=\"bold\">\n                {intl.formatMessage({\n                  id: 'subwatch.iampolicy.dontCloseBrowser',\n                  defaultMessage: 'Do not close your browser.',\n                })}\n              </b>\n            ),\n          }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const ArnDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'subwatch.arn.enableAccount',\n          defaultMessage: 'To enable account access, capture the ARN associated with the role you just created.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'subwatch.arn.selectRole',\n            defaultMessage: 'Navigate to the role that you just created. ',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'subwatch.arn.copyArn',\n              defaultMessage: 'From the <b>Summary</b> screen, copy the role ARN and paste it in the <b>ARN field</b> below.',\n            },\n            { b }\n          )}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { HCCM_DOCS_PREFIX } from '../../../utilities/stringConstants';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\n\nconst INSTALL_PREREQUISITE = `${HCCM_DOCS_PREFIX}/html/getting_started_with_cost_management/index#assembly_koku_cost_management_installing`;\n\nexport const ConfigureCostOperator = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text>\n        {intl.formatMessage(\n          {\n            id: 'cost.openshift.description',\n            defaultMessage:\n              'For Red Hat OpenShift Container Platform 4.5 and later, install the {operator} from the OpenShift Container Platform web console.',\n          },\n          {\n            operator: <b key=\"bold\">koku-metrics-operator</b>,\n          }\n        )}\n      </Text>\n      <Text>\n        <Text key=\"link\" component={TextVariants.a} href={INSTALL_PREREQUISITE} target=\"_blank\" rel=\"noopener noreferrer\">\n          {intl.formatMessage({\n            id: 'wizard.learnMore',\n            defaultMessage: 'Learn more',\n          })}\n        </Text>\n      </Text>\n      <Text>\n        {intl.formatMessage(\n          {\n            id: 'cost.openshift.operator_configured',\n            defaultMessage:\n              'If you configured the operator to create a source (create_source: true), <b>STOP</b> here and <b>CANCEL</b> out of this flow.',\n          },\n          {\n            // eslint-disable-next-line react/display-name\n            b: (chunks) => <b key={`b-${chunks.length}-${Math.floor(Math.random() * 1000)}`}>{chunks}</b>,\n          }\n        )}\n      </Text>\n      <Text>\n        {intl.formatMessage({\n          id: 'cost.openshift.operator_not_configured',\n          defaultMessage:\n            'Otherwise, enter the cluster identifier below. You can find the cluster identifier in the cluster’s Help > About screen.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { TextList, TextListVariants } from '@patternfly/react-core/dist/esm/components/Text/TextList';\nimport { TextListItem, TextListItemVariants } from '@patternfly/react-core/dist/esm/components/Text/TextListItem';\nimport { ClipboardCopy } from '@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy';\n\nimport { HCCM_DOCS_PREFIX } from '../../../utilities/stringConstants';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nconst CREATE_AZURE_STORAGE = `${HCCM_DOCS_PREFIX}/html/getting_started_with_cost_management/assembly_adding_sources_cost#creating_an_azure_storage_account`;\nconst AZURE_CREDS_URL = `${HCCM_DOCS_PREFIX}/html/getting_started_with_cost_management/assembly_adding_sources_cost#configuring_an_azure_service_principal`;\nconst RECURRING_TASK_URL = `${HCCM_DOCS_PREFIX}/html/getting_started_with_cost_management/assembly_adding_sources_cost#configuring_an_azure_daily_export_schedule`;\n\nexport const ConfigureResourceGroupAndStorageAccount = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'cost.azure.storageAccountDescription',\n            defaultMessage:\n              'Red Hat recommends creating a dedicated resource group and storage account in Azure to collect cost data and metrics for cost management. {link}',\n          },\n          {\n            link: (\n              <Text key=\"link\" rel=\"noopener noreferrer\" target=\"_blank\" component={TextVariants.a} href={CREATE_AZURE_STORAGE}>\n                {intl.formatMessage({\n                  id: 'wizard.learnMore defaultMessage=Learn more',\n                  defaultMessage: 'Learn more',\n                })}\n              </Text>\n            ),\n          }\n        )}\n      </Text>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'cost.azure.storageAccountAfterDescription',\n          defaultMessage: 'After configuring a resource group and storage account in the Azure portal, enter the following:',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const SubscriptionID = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'cost.azure.subscriptionIdCommand',\n          defaultMessage: 'Run the following command in Cloud Shell to obtain your Subscription ID and enter it below:',\n        })}\n      </Text>\n      <ClipboardCopy>{`az account show --query \"{ subscription_id: id }\"`}</ClipboardCopy>\n    </TextContent>\n  );\n};\n\nexport const ConfigureRolesDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'cost.azure.dedicatedCredentials',\n            defaultMessage:\n              'Red Hat recommends configuring dedicated credentials to grant Cost Management read-only access to Azure cost data.  {link}',\n          },\n          {\n            link: (\n              <Text key=\"link\" rel=\"noopener noreferrer\" target=\"_blank\" component={TextVariants.a} href={AZURE_CREDS_URL}>\n                {intl.formatMessage({\n                  id: 'wizard.learnMore defaultMessage=Learn more',\n                  defaultMessage: 'Learn more',\n                })}\n              </Text>\n            ),\n          }\n        )}\n      </Text>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'cost.azure.createContributorRole',\n          defaultMessage:\n            'Run the following command in Cloud Shell to create a Cost Management Storage Account Contributor role. From the output enter the values in the fields below:',\n        })}\n      </Text>\n      <ClipboardCopy>{`az ad sp create-for-rbac -n \"CostManagement\" --role \"Storage Account Contributor\" --query '{\"tenant\": tenant, \"client_id\": appId, \"secret\": password}'`}</ClipboardCopy>\n    </TextContent>\n  );\n};\n\nexport const ReaderRoleDescription = () => {\n  const form = useFormApi();\n  const {\n    values: { application },\n  } = form.getState();\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'cost.azure.createReaderRole',\n          defaultMessage: 'Run the following command in Cloud Shell to create a Cost Management Reader role:',\n        })}\n      </Text>\n      <ClipboardCopy>{`az role assignment create --role \"Cost Management Reader\" --assignee http://CostManagement --subscription ${application.extra.subscription_id}`}</ClipboardCopy>\n    </TextContent>\n  );\n};\n\nexport const ExportSchedule = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'cost.azure.storageAccountDescription',\n            defaultMessage:\n              'Create a recurring task to export cost data to your Azure storage account, where Cost Management will retrieve the data.  {link}',\n          },\n          {\n            link: (\n              <Text key=\"link\" rel=\"noopener noreferrer\" target=\"_blank\" component={TextVariants.a} href={RECURRING_TASK_URL}>\n                {intl.formatMessage({\n                  id: 'wizard.learnMore defaultMessage=Learn more',\n                  defaultMessage: 'Learn more',\n                })}\n              </Text>\n            ),\n          }\n        )}\n      </Text>\n      <TextContent className=\"list-align-left\">\n        <TextList component={TextListVariants.ol}>\n          <TextListItem component={TextListItemVariants.li}>\n            {intl.formatMessage({\n              id: 'cost.azure.storageAccountDescription',\n              defaultMessage: 'From the Azure portal, add a new export.',\n            })}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.li}>\n            {intl.formatMessage({\n              id: 'cost.azure.storageAccountDescription',\n              defaultMessage:\n                'Provide a name for the container and directory path, and specify the below settings to create the daily export. Leave all other options as the default.',\n            })}\n          </TextListItem>\n        </TextList>\n      </TextContent>\n      <TextList className=\"export-table\" component={TextListVariants.dl}>\n        <TextListItem component={TextListItemVariants.dt}>\n          <Text component={TextVariants.b}>\n            {intl.formatMessage({\n              id: 'cost.azure.exportType',\n              defaultMessage: 'Export type',\n            })}\n          </Text>\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dd}>\n          {intl.formatMessage({\n            id: 'cost.azure.dailyExport',\n            defaultMessage: 'Daily export for billing-period-to-date costs',\n          })}\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dt}>\n          <Text component={TextVariants.b}>\n            {intl.formatMessage({\n              id: 'cost.azure.storageAccountName',\n              defaultMessage: 'Storage account name',\n            })}\n          </Text>\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dd}>\n          {intl.formatMessage({\n            id: 'cost.azure.createdAccountName',\n            defaultMessage: 'Storage account name created earlier',\n          })}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { TextList, TextListVariants } from '@patternfly/react-core/dist/esm/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/esm/components/Text/TextListItem';\nimport { ClipboardCopy } from '@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy';\nimport { Hint } from '@patternfly/react-core/dist/esm/components/Hint/Hint';\nimport { HintTitle } from '@patternfly/react-core/dist/esm/components/Hint/HintTitle';\nimport { HintBody } from '@patternfly/react-core/dist/esm/components/Hint/HintBody';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nimport { getSourcesApi } from '../../../api';\n\nconst b = (chunks) => <b key={`b-${chunks.length}-${Math.floor(Math.random() * 1000)}`}>{chunks}</b>;\n\nexport const Project = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p} className=\"pf-u-mb-lg\">\n        {intl.formatMessage({\n          id: 'cost.gcp.projectDescription',\n          defaultMessage:\n            'Enter the ID of a project within your Google Cloud Platform (GCP) billing account. We’ll use this project to set up your BigQuery billing export.',\n        })}\n      </Text>\n      <Hint>\n        <HintTitle>\n          {intl.formatMessage({\n            id: 'cost.gcp.project.hintTitle',\n            defaultMessage: 'GCP Recommendation',\n          })}\n        </HintTitle>\n        <HintBody>\n          {intl.formatMessage({\n            id: 'cost.gcp.project.hintDescription',\n            defaultMessage: 'Create a cloud project to contain all your billing administration needs.',\n          })}\n        </HintBody>\n      </Hint>\n    </TextContent>\n  );\n};\n\nexport const IAMRole = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'cost.gcp.iamRoleDescription',\n          defaultMessage: 'To specify GCP access permissions for Red Hat, create an Identity and Access Management (IAM) role.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.iam.firstStep',\n              defaultMessage: 'From the GCP console, navigate to <b>IAM & Admin > Roles.</b>',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.iam.firstStepB',\n              defaultMessage: 'Create a new role.',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.gcp.iam.secondStep',\n            defaultMessage: 'Add the following permissions to your custom role:',\n          })}\n        </TextListItem>\n        <TextList>\n          <TextListItem>\n            <b>bigquery.jobs.create</b>\n          </TextListItem>\n          <TextListItem>\n            <b>bigquery.tables.getData</b>\n          </TextListItem>\n          <TextListItem>\n            <b>bigquery.tables.get</b>\n          </TextListItem>\n          <TextListItem>\n            <b>bigquery.tables.list</b>\n          </TextListItem>\n        </TextList>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.iam.thirdStep',\n              defaultMessage: 'Click <b>Create role.</b>',\n            },\n            { b }\n          )}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n\nexport const Dataset = () => {\n  const intl = useIntl();\n  const { getState } = useFormApi();\n\n  const projectId = getState().values.authentication?.username;\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'cost.gcp.dataset.description',\n          defaultMessage: 'To collect and store the information needed for Cost Management, create a BigQuery dataset.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.dataset.firstStep',\n              defaultMessage: 'In the BigQuery console, select your project (<b>{projectId}</b>) from the navigation menu.',\n            },\n            { b, projectId }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.dataset.secondStep',\n              defaultMessage: 'Click <b>Create dataset.</b>',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.dataset.thirdStep',\n              defaultMessage: 'In the <b>Dataset ID</b> field, enter a name for your dataset.',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.dataset.fourthStep',\n              defaultMessage: 'Click <b>Create dataset.</b>',\n            },\n            { b }\n          )}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n\nexport const AssignAccess = () => {\n  const intl = useIntl();\n  const [googleAccount, setGoogleAccount] = useState();\n\n  useEffect(() => {\n    const errorMessage = intl.formatMessage({\n      id: 'cost.gcp.noAccount',\n      defaultMessage: 'There is an error with loading of the account address. Please go back and return to this step.',\n    });\n\n    getSourcesApi()\n      .getGoogleAccount()\n      .then((data) => setGoogleAccount(data?.data?.[0]?.payload || errorMessage))\n      .catch((e) => {\n        // eslint-disable-next-line no-console\n        console.error(e);\n        setGoogleAccount(errorMessage);\n      });\n  }, []);\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'cost.gcp.assignAccessDesc',\n          defaultMessage: 'To delegate account access, add a new member to your project.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.access.firstStep',\n              defaultMessage: 'In your IAM & Admin console, navigate to <b>IAM</b> and click <b>Add</b> to add a new member.',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.access.secondStep',\n              defaultMessage: 'Paste the following value into the <b>New members</b> field:',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <ClipboardCopy className=\"pf-u-m-sm  pf-u-ml-0\" isReadOnly>\n          {googleAccount || intl.formatMessage({ id: 'cost.gcp.access.loading', defaultMessage: 'Loading account address...' })}\n        </ClipboardCopy>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.access.thirdStep',\n              defaultMessage: 'Select the role you just created.',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.access.fourthStep',\n              defaultMessage: 'Click <b>Save.</b>',\n            },\n            { b }\n          )}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n\nexport const BillingExport = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'cost.gcp.billingExport.description',\n          defaultMessage: 'To enable detailed billing data exports to BigQuery, set up daily cost export.',\n        })}\n      </Text>\n      <TextList component={TextListVariants.ol}>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.billingExport.firstStep',\n              defaultMessage: 'In the Billing console, click <b>Billing export.</b>',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.billingExport.firstStepB',\n              defaultMessage: 'Click the <b>BigQuery export</b> tab.',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.billingExport.secondStep',\n              defaultMessage: 'In the <b>Daily cost detail</b> section, click <b>Edit settings.</b>',\n            },\n            { b }\n          )}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage({\n            id: 'cost.gcp.billingExport.thirdStep',\n            defaultMessage: 'Use the dropdown menus to select the correct project and dataset.',\n          })}\n        </TextListItem>\n        <TextListItem>\n          {intl.formatMessage(\n            {\n              id: 'cost.gcp.billingExport.fourthStep',\n              defaultMessage: 'Click <b>Save.</b>',\n            },\n            { b }\n          )}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\n\nexport const AllFieldAreRequired = () => {\n  const intl = useIntl();\n\n  return (\n    <Text component={TextVariants.p} className=\"ins-c-sources__wizard--all-required-text\">\n      {intl.formatMessage({\n        id: 'catalog.auth.allFieldsRequired',\n        defaultMessage: 'All fields are required.',\n      })}\n    </Text>\n  );\n};\n\nexport const AuthDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p} className=\"pf-u-mb-l\">\n        {intl.formatMessage({\n          id: 'catalog.auth.provideTowerCredentials',\n          defaultMessage:\n            'Provide Ansible Tower service account user credentials to ensure optimized availability of resources to Catalog Administrators.',\n        })}\n      </Text>\n      <AllFieldAreRequired />\n    </TextContent>\n  );\n};\n\nexport const EndpointDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p} className=\"pf-u-mb-l\">\n        {intl.formatMessage({\n          id: 'catalog.endpoint.enterHostname',\n          defaultMessage: 'Enter the hostname of the Ansible Tower instance you want to connect to.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { FormHelperText } from '@patternfly/react-core/dist/esm/components/Form/FormHelperText';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport SSLFormLabel from './SSLFormLabel';\n\nimport * as OpenshiftToken from './hardcodedComponents/openshift/token';\nimport * as AwsSecret from './hardcodedComponents/aws/access_key';\nimport * as AwsArn from './hardcodedComponents/aws/arn';\n\nimport * as SWAwsArn from './hardcodedComponents/aws/subscriptionWatch';\n\nimport * as CMOpenshift from './hardcodedComponents/openshift/costManagement';\nimport * as CMAzure from './hardcodedComponents/azure/costManagement';\nimport * as CMGoogle from './hardcodedComponents/gcp/costManagement';\n\nimport * as TowerCatalog from './hardcodedComponents/tower/catalog';\nimport * as Openshift from './hardcodedComponents/openshift/endpoint';\n\nimport { COST_MANAGEMENT_APP_NAME, CLOUD_METER_APP_NAME, CATALOG_APP } from '../api/constants';\n\nconst arnMessagePattern = <FormattedMessage id=\"wizard.arnPattern\" defaultMessage=\"ARN must start with arn:aws:\" />;\nconst arnMessageLength = <FormattedMessage id=\"wizard.arnLength\" defaultMessage=\"ARN should have at least 10 characters\" />;\n\nconst arnField = {\n  placeholder: 'arn:aws:iam:123456789:role/CostManagement',\n  isRequired: true,\n  validate: [\n    {\n      type: validatorTypes.REQUIRED,\n    },\n    {\n      type: validatorTypes.PATTERN,\n      pattern: /^arn:aws:.*/,\n      message: arnMessagePattern,\n    },\n    {\n      type: validatorTypes.MIN_LENGTH,\n      threshold: 10,\n      message: arnMessageLength,\n    },\n  ],\n};\n\nconst subsWatchArnField = {\n  placeholder: 'arn:aws:iam:123456789:role/SubscriptionWatch',\n  isRequired: true,\n  validate: [\n    {\n      type: validatorTypes.REQUIRED,\n    },\n    {\n      type: validatorTypes.PATTERN,\n      pattern: /^arn:aws:.*/,\n      message: arnMessagePattern,\n    },\n    {\n      type: validatorTypes.MIN_LENGTH,\n      threshold: 10,\n      message: arnMessageLength,\n    },\n  ],\n  label: <FormattedMessage id=\"wizard.arn\" defaultMessage=\"ARN\" />,\n};\n\nconst ansibleTowerURL = {\n  isRequired: true,\n  validate: [\n    { type: validatorTypes.REQUIRED },\n    {\n      type: validatorTypes.PATTERN,\n      message: <FormattedMessage id=\"catalog.urlPatternMessage\" defaultMessage=\"URL must start with https:// or http://\" />,\n      pattern: /^https{0,1}:\\/\\//,\n    },\n    { type: validatorTypes.URL },\n  ],\n  helperText: (\n    <FormHelperText isHidden={false}>\n      <FormattedMessage\n        id=\"catalog.hostnameHelper\"\n        defaultMessage=\"For example, https://myansibleinstance.example.com/ or https://127.0.0.1/\"\n      />\n    </FormHelperText>\n  ),\n  label: <FormattedMessage id=\"wizard.hostname\" defaultMessage=\"Hostname\" />,\n};\n\nconst hardcodedSchemas = {\n  openshift: {\n    authentication: {\n      token: {\n        generic: {\n          'authentication.password': {\n            isRequired: true,\n            validate: [{ type: validatorTypes.REQUIRED }],\n          },\n          additionalFields: [\n            {\n              component: 'description',\n              name: 'description-summary',\n              Content: OpenshiftToken.DescriptionSummary,\n            },\n          ],\n        },\n        [COST_MANAGEMENT_APP_NAME]: {\n          skipSelection: true,\n          skipEndpoint: true,\n          'source.source_ref': {\n            label: <FormattedMessage id=\"wizard.clusterId\" defaultMessage=\"Cluster Identifier\" />,\n            isRequired: true,\n            component: componentTypes.TEXT_FIELD,\n            validate: [\n              {\n                type: validatorTypes.REQUIRED,\n              },\n              {\n                type: validatorTypes.PATTERN,\n                pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n                message: (\n                  <FormattedMessage\n                    id=\"wizard.clusterIdPattern\"\n                    defaultMessage=\"Cluster ID must start with alphanumeric character and can contain underscore and hyphen\"\n                  />\n                ),\n              },\n            ],\n          },\n          additionalSteps: [\n            {\n              title: <FormattedMessage id=\"cost.configureOperator\" defaultMessage=\"Install and configure operator\" />,\n              fields: [\n                {\n                  component: 'description',\n                  name: 'description-summary',\n                  Content: CMOpenshift.ConfigureCostOperator,\n                },\n                {\n                  name: 'source.source_ref',\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.authtype',\n                  hideField: true,\n                  initialValue: 'token',\n                  initializeOnMount: true,\n                },\n              ],\n            },\n          ],\n        },\n      },\n    },\n    endpoint: {\n      url: {\n        placeholder: 'https://myopenshiftcluster.mycompany.com',\n        isRequired: true,\n        validate: [\n          { type: validatorTypes.REQUIRED },\n          {\n            type: validatorTypes.URL,\n            message: <FormattedMessage id=\"wizard.urlPatternMessage\" defaultMessage=\"The URL is not formatted correctly.\" />,\n          },\n        ],\n      },\n      'endpoint.certificate_authority': {\n        label: <SSLFormLabel />,\n        'aria-label': 'SSL Certificate',\n      },\n      additionalFields: [\n        {\n          component: 'description',\n          name: 'description-summary',\n          Content: Openshift.EndpointDesc,\n        },\n      ],\n    },\n  },\n  azure: {\n    authentication: {\n      tenant_id_client_id_client_secret: {\n        [COST_MANAGEMENT_APP_NAME]: {\n          useApplicationAuth: true,\n          skipSelection: true,\n          'application.extra.subscription_id': {\n            placeholder: '',\n            validate: [\n              {\n                type: validatorTypes.REQUIRED,\n              },\n              {\n                type: validatorTypes.PATTERN,\n                pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n                message: (\n                  <FormattedMessage\n                    id=\"cost.subidPattern\"\n                    defaultMessage=\"Subscription ID must start with alphanumeric character and can contain underscore and hyphen\"\n                  />\n                ),\n              },\n            ],\n            isRequired: true,\n          },\n          'application.extra.resource_group': {\n            placeholder: '',\n            validate: [\n              {\n                type: validatorTypes.REQUIRED,\n              },\n              {\n                type: validatorTypes.PATTERN,\n                pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n                message: (\n                  <FormattedMessage\n                    id=\"cost.resourceGroupPattern\"\n                    defaultMessage=\"Resource group must start with alphanumeric character and can contain underscore and hyphen\"\n                  />\n                ),\n              },\n            ],\n          },\n          'application.extra.storage_account': {\n            placeholder: '',\n            validate: [\n              {\n                type: validatorTypes.REQUIRED,\n              },\n              {\n                type: validatorTypes.PATTERN,\n                pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n                message: (\n                  <FormattedMessage\n                    id=\"cost.storageAccountPattern\"\n                    defaultMessage=\"Storage account must start with alphanumeric character and can contain underscore and hyphen\"\n                  />\n                ),\n              },\n            ],\n          },\n          'authentication.password': {\n            type: 'password',\n            validate: [\n              {\n                type: validatorTypes.REQUIRED,\n              },\n            ],\n            label: <FormattedMessage id=\"cost.clientSecret\" defaultMessage=\"Client secret\" />,\n          },\n          'authentication.username': {\n            validate: [\n              {\n                type: validatorTypes.REQUIRED,\n              },\n            ],\n            label: <FormattedMessage id=\"cost.clientAppId\" defaultMessage=\"Client (Application) ID\" />,\n          },\n          'authentication.extra.azure.tenant_id': {\n            label: <FormattedMessage id=\"cost.tenantDirId\" defaultMessage=\"Tenant (Directory) ID\" />,\n            validate: [\n              {\n                type: validatorTypes.REQUIRED,\n              },\n            ],\n          },\n          additionalSteps: [\n            {\n              title: <FormattedMessage id=\"cost.azureSubStepId\" defaultMessage=\"Resource group and storage account\" />,\n              nextStep: 'azure-sub-id',\n              fields: [\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.authtype',\n                  hideField: true,\n                  initialValue: 'tenant_id_client_id_client_secret',\n                  initializeOnMount: true,\n                },\n                {\n                  name: 'azure-storage-account-description',\n                  component: 'description',\n                  Content: CMAzure.ConfigureResourceGroupAndStorageAccount,\n                },\n                {\n                  name: 'all-required',\n                  component: 'description',\n                  Content: TowerCatalog.AllFieldAreRequired,\n                },\n                {\n                  name: 'application.extra.resource_group',\n                  component: componentTypes.TEXT_FIELD,\n                  label: <FormattedMessage id=\"wizard.resourceGroupName\" defaultMessage=\"Resource group name\" />,\n                },\n                {\n                  name: 'application.extra.storage_account',\n                  component: componentTypes.TEXT_FIELD,\n                  label: <FormattedMessage id=\"wizard.storageAccountName\" defaultMessage=\"Storage account name\" />,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"wizard.subscriptionId\" defaultMessage=\"Subscription ID\" />,\n              name: 'azure-sub-id',\n              nextStep: 'configure-roles',\n              fields: [\n                {\n                  name: 'azure-sub-id-description',\n                  component: 'description',\n                  Content: CMAzure.SubscriptionID,\n                },\n                {\n                  name: 'application.extra.subscription_id',\n                  component: componentTypes.TEXT_FIELD,\n                  label: <FormattedMessage id=\"wizard.subscriptionId\" defaultMessage=\"Subscription ID\" />,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"wizard.configureRoles\" defaultMessage=\"Roles\" />,\n              name: 'configure-roles',\n              nextStep: 'export-schedule',\n              fields: [\n                {\n                  name: 'configure-service-principal',\n                  component: 'description',\n                  Content: CMAzure.ConfigureRolesDescription,\n                },\n                {\n                  name: 'all-required',\n                  component: 'description',\n                  Content: TowerCatalog.AllFieldAreRequired,\n                },\n                {\n                  name: 'authentication.extra.azure.tenant_id',\n                  component: componentTypes.TEXT_FIELD,\n                },\n                {\n                  name: 'authentication.username',\n                  component: componentTypes.TEXT_FIELD,\n                },\n                {\n                  name: 'authentication.password',\n                  component: componentTypes.TEXT_FIELD,\n                },\n                {\n                  name: 'reader-role',\n                  component: 'description',\n                  Content: CMAzure.ReaderRoleDescription,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"cost.createDailyExport\" defaultMessage=\"Daily export\" />,\n              name: 'export-schedule',\n              fields: [\n                {\n                  name: 'export-schedule-description',\n                  component: 'description',\n                  Content: CMAzure.ExportSchedule,\n                },\n              ],\n            },\n          ],\n        },\n      },\n    },\n  },\n  amazon: {\n    authentication: {\n      access_key_secret_key: {\n        generic: {\n          'authentication.username': {\n            label: <FormattedMessage id=\"wizard.accessKeyId\" defaultMessage=\"Access key ID\" />,\n            placeholder: 'AKIAIOSFODNN7EXAMPLE',\n            isRequired: true,\n            validate: [{ type: validatorTypes.REQUIRED }],\n          },\n          'authentication.password': {\n            label: <FormattedMessage id=\"wizard.secretAccessKey\" defaultMessage=\"Secret access key\" />,\n            placeholder: 'wJairXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY',\n            isRequired: true,\n            validate: [{ type: validatorTypes.REQUIRED }],\n            type: 'password',\n          },\n          skipSelection: true,\n          onlyHiddenFields: true,\n          additionalSteps: [\n            {\n              title: <FormattedMessage id=\"wizard.configureAccountAccess\" defaultMessage=\"Account access\" />,\n              fields: [\n                {\n                  component: 'description',\n                  name: 'description-summary',\n                  Content: AwsSecret.DescriptionSummary,\n                },\n                {\n                  name: 'authentication.username',\n                  component: componentTypes.TEXT_FIELD,\n                },\n                {\n                  name: 'authentication.password',\n                  component: componentTypes.TEXT_FIELD,\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.authtype',\n                  hideField: true,\n                  initialValue: 'access_key_secret_key',\n                  initializeOnMount: true,\n                },\n              ],\n            },\n          ],\n        },\n      },\n      arn: {\n        generic: {\n          includeStepKeyFields: ['arn'],\n          'authentication.username': arnField,\n        },\n        [COST_MANAGEMENT_APP_NAME]: {\n          useApplicationAuth: true,\n          skipSelection: true,\n          'authentication.username': arnField,\n          'application.extra.bucket': {\n            placeholder: 'cost-usage-bucket',\n            validate: [\n              {\n                type: validatorTypes.REQUIRED,\n              },\n              {\n                type: validatorTypes.PATTERN,\n                pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n                message: (\n                  <FormattedMessage\n                    id=\"cost.arn.s3BucketPattern\"\n                    defaultMessage=\"S3 bucket name must start with alphanumeric character and can contain underscore and hyphen\"\n                  />\n                ),\n              },\n            ],\n            isRequired: true,\n          },\n          additionalSteps: [\n            {\n              title: <FormattedMessage id=\"cost.arn.usageDescriptionTitle\" defaultMessage=\"Configure cost and usage reporting\" />,\n              nextStep: 'tags',\n              fields: [\n                {\n                  name: 'usage-description',\n                  component: 'description',\n                  Content: AwsArn.UsageDescription,\n                },\n                {\n                  name: 'application.extra.bucket',\n                  component: componentTypes.TEXT_FIELD,\n                  label: <FormattedMessage id=\"cost.arn.s3Label\" defaultMessage=\"S3 bucket name\" />,\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.authtype',\n                  hideField: true,\n                  initialValue: 'arn',\n                  initializeOnMount: true,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"cost.arn.tagsStepTitle\" defaultMessage=\"Tags, aliases and organizational units\" />,\n              name: 'tags',\n              nextStep: 'iam-policy',\n              fields: [\n                {\n                  name: 'tags-description',\n                  component: 'description',\n                  Content: AwsArn.TagsDescription,\n                },\n                {\n                  name: 'aws.aliases.enabled',\n                  component: componentTypes.CHECKBOX,\n                  label: <AwsArn.IncludeAliasesLabel />,\n                },\n                {\n                  name: 'aws.org_units.enabled',\n                  component: componentTypes.CHECKBOX,\n                  label: <AwsArn.IncludeOrgUnitsLabel />,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"cost.arn.iamPolicyTitle\" defaultMessage=\"Create IAM policy\" />,\n              name: 'iam-policy',\n              nextStep: 'iam-role',\n              substepOf: {\n                name: 'eaa',\n                title: <FormattedMessage id=\"cost.arn.enableAccountAccess\" defaultMessage=\"Enable account access\" />,\n              },\n              fields: [\n                {\n                  name: 'iam-policy-description',\n                  component: 'description',\n                  Content: AwsArn.IAMPolicyDescription,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"cost.arn.iamRoleStepTitle\" defaultMessage=\"Create IAM role\" />,\n              name: 'iam-role',\n              nextStep: 'arn',\n              substepOf: 'eaa',\n              fields: [\n                {\n                  name: 'iam-role-description',\n                  component: 'description',\n                  Content: AwsArn.IAMRoleDescription,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"cost.arn.enterArn\" defaultMessage=\"Enter ARN\" />,\n              name: 'arn',\n              substepOf: 'eaa',\n              fields: [\n                {\n                  name: 'arn-description',\n                  component: 'description',\n                  Content: AwsArn.ArnDescription,\n                },\n              ],\n            },\n          ],\n        },\n      },\n      'cloud-meter-arn': {\n        generic: {\n          includeStepKeyFields: ['arn'],\n          'authentication.username': subsWatchArnField,\n        },\n        [CLOUD_METER_APP_NAME]: {\n          useApplicationAuth: true,\n          skipSelection: true,\n          'authentication.username': subsWatchArnField,\n          additionalSteps: [\n            {\n              title: <FormattedMessage id=\"cloudmeter.createIamPolicy\" defaultMessage=\"Create IAM policy\" />,\n              nextStep: 'subs-iam-role',\n              substepOf: {\n                name: 'eaa',\n                title: <FormattedMessage id=\"cloudmeter.enableAccountAccess\" defaultMessage=\"Enable account access\" />,\n              },\n              fields: [\n                {\n                  name: 'iam-policy-description',\n                  component: 'description',\n                  Content: SWAwsArn.IAMPolicyDescription,\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.authtype',\n                  hideField: true,\n                  initialValue: 'cloud-meter-arn',\n                  initializeOnMount: true,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"cloudmeter.createIamRole\" defaultMessage=\"Create IAM role\" />,\n              name: 'subs-iam-role',\n              nextStep: 'subs-arn',\n              substepOf: 'eaa',\n              fields: [\n                {\n                  name: 'iam-role-description',\n                  component: 'description',\n                  Content: SWAwsArn.IAMRoleDescription,\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"cloudmeter.enterArn\" defaultMessage=\"Enter ARN\" />,\n              name: 'subs-arn',\n              substepOf: 'eaa',\n              fields: [\n                {\n                  name: 'arn-description',\n                  component: 'description',\n                  Content: SWAwsArn.ArnDescription,\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.username',\n                },\n              ],\n            },\n          ],\n        },\n      },\n    },\n    endpoint: {},\n  },\n  satellite: {\n    endpoint: {},\n    authentication: {\n      receptor_node: {\n        generic: {\n          'source.source_ref': {\n            label: <FormattedMessage id=\"satellite.satelliteId\" defaultMessage=\"Satellite ID\" />,\n            validate: [{ type: validatorTypes.REQUIRED }],\n            component: componentTypes.TEXT_FIELD,\n          },\n          'endpoint.receptor_node': {\n            label: <FormattedMessage id=\"satellite.receptorId\" defaultMessage=\"Receptor ID\" />,\n            validate: [{ type: validatorTypes.REQUIRED }],\n            component: componentTypes.TEXT_FIELD,\n          },\n          skipSelection: true,\n          onlyHiddenFields: true,\n          customSteps: true,\n          additionalSteps: [\n            {\n              title: <FormattedMessage id=\"satellite.credentials\" defaultMessage=\"Credentials\" />,\n              nextStep: 'summary',\n              fields: [\n                {\n                  name: 'all-required',\n                  component: 'description',\n                  Content: TowerCatalog.AllFieldAreRequired,\n                },\n                {\n                  name: 'source.source_ref',\n                },\n                {\n                  name: 'endpoint.receptor_node',\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'endpoint.role',\n                  hideField: true,\n                  initializeOnMount: true,\n                  initialValue: 'satellite',\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.authtype',\n                  hideField: true,\n                  initializeOnMount: true,\n                  initialValue: 'receptor_node',\n                },\n              ],\n            },\n          ],\n        },\n      },\n    },\n  },\n  'ansible-tower': {\n    authentication: {\n      receptor_node: {\n        generic: {\n          skipEndpoint: true,\n        },\n        [CATALOG_APP]: {\n          skipEndpoint: true,\n        },\n      },\n      username_password: {\n        generic: {\n          skipSelection: true,\n          onlyHiddenFields: true,\n          customSteps: true,\n          'authentication.username': {\n            isRequired: false,\n            validate: [{ type: validatorTypes.REQUIRED }],\n            label: <FormattedMessage id=\"wizard.username\" defaultMessage=\"Username\" />,\n          },\n          'authentication.password': {\n            type: 'password',\n            isRequired: false,\n            validate: [{ type: validatorTypes.REQUIRED }],\n            label: <FormattedMessage id=\"wizard.password\" defaultMessage=\"Password\" />,\n          },\n          url: ansibleTowerURL,\n          'endpoint.certificate_authority': {\n            label: <FormattedMessage id=\"wizard.certificateAuthoriy\" defaultMessage=\"Certificate authority\" />,\n          },\n          'endpoint.verify_ssl': {\n            initialValue: false,\n            label: <FormattedMessage id=\"wizard.verifySsl\" defaultMessage=\"Verify SSL\" />,\n          },\n          additionalSteps: [\n            {\n              title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n              nextStep: 'ansible-tower-credentials-no-app',\n              fields: [\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.authtype',\n                  hideField: true,\n                  initialValue: 'username_password',\n                  initializeOnMount: true,\n                },\n                {\n                  name: 'required-desc',\n                  component: 'description',\n                  Content: TowerCatalog.AllFieldAreRequired,\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.username',\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.password',\n                },\n              ],\n            },\n            {\n              name: 'ansible-tower-credentials-no-app',\n              title: <FormattedMessage id=\"catalog.ansibleTowerEndpoint\" defaultMessage=\"Ansible Tower endpoint\" />,\n              fields: [\n                {\n                  name: 'endpoint.role',\n                  component: componentTypes.TEXT_FIELD,\n                  hideField: true,\n                  initialValue: 'ansible',\n                  initializeOnMount: true,\n                },\n                {\n                  name: 'url',\n                  component: componentTypes.TEXT_FIELD,\n                },\n                {\n                  name: 'endpoint.verify_ssl',\n                  component: componentTypes.SWITCH,\n                },\n                {\n                  name: 'endpoint.certificate_authority',\n                  component: componentTypes.TEXT_FIELD,\n                  condition: { is: true, when: 'endpoint.verify_ssl' },\n                },\n              ],\n            },\n          ],\n        },\n        [CATALOG_APP]: {\n          skipSelection: true,\n          onlyHiddenFields: true,\n          customSteps: true,\n          'authentication.username': {\n            isRequired: false,\n            validate: [{ type: validatorTypes.REQUIRED }],\n            label: <FormattedMessage id=\"wizard.username\" defaultMessage=\"Username\" />,\n          },\n          'authentication.password': {\n            type: 'password',\n            isRequired: false,\n            validate: [{ type: validatorTypes.REQUIRED }],\n            label: <FormattedMessage id=\"wizard.password\" defaultMessage=\"Password\" />,\n          },\n          url: ansibleTowerURL,\n          'endpoint.certificate_authority': {\n            label: <FormattedMessage id=\"wizard.certificateAuthoriy\" defaultMessage=\"Certificate authority\" />,\n          },\n          'endpoint.verify_ssl': {\n            initialValue: false,\n            label: <FormattedMessage id=\"wizard.verifySsl\" defaultMessage=\"Verify SSL\" />,\n          },\n          additionalSteps: [\n            {\n              nextStep: 'catalog-ansible-tower',\n              title: <FormattedMessage id=\"catalog.ansibleTowerEndpoint\" defaultMessage=\"Ansible Tower endpoint\" />,\n              fields: [\n                {\n                  name: 'ansible-tower-desc',\n                  component: 'description',\n                  Content: TowerCatalog.EndpointDescription,\n                },\n                {\n                  name: 'endpoint.role',\n                  component: componentTypes.TEXT_FIELD,\n                  hideField: true,\n                  initialValue: 'ansible',\n                  initializeOnMount: true,\n                },\n                {\n                  name: 'url',\n                  component: componentTypes.TEXT_FIELD,\n                },\n                {\n                  name: 'endpoint.verify_ssl',\n                  component: componentTypes.SWITCH,\n                },\n                {\n                  name: 'endpoint.certificate_authority',\n                  component: componentTypes.TEXT_FIELD,\n                  condition: { is: true, when: 'endpoint.verify_ssl' },\n                },\n              ],\n            },\n            {\n              title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n              name: 'catalog-ansible-tower',\n              fields: [\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.authtype',\n                  hideField: true,\n                  initialValue: 'username_password',\n                  initializeOnMount: true,\n                },\n                {\n                  name: 'required-desc',\n                  component: 'description',\n                  Content: TowerCatalog.AuthDescription,\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.username',\n                },\n                {\n                  component: componentTypes.TEXT_FIELD,\n                  name: 'authentication.password',\n                },\n              ],\n            },\n          ],\n        },\n      },\n    },\n    endpoint: {\n      url: ansibleTowerURL,\n      'endpoint.certificate_authority': {\n        label: <FormattedMessage id=\"wizard.certificateAuthority\" defaultMessage=\"Certificate authority\" />,\n      },\n      'endpoint.verify_ssl': {\n        initialValue: false,\n      },\n    },\n  },\n  google: {\n    authentication: {\n      project_id_service_account_json: {\n        [COST_MANAGEMENT_APP_NAME]: {\n          useApplicationAuth: true,\n          skipSelection: true,\n          'authentication.username': {\n            component: 'text-field',\n            label: 'Project ID',\n            isRequired: true,\n            validate: [\n              {\n                type: 'required',\n              },\n            ],\n          },\n          'authentication.authtype': {\n            component: 'text-field',\n            hideField: true,\n            initialValue: 'project_id_service_account_json',\n          },\n          'application.extra.dataset': {\n            component: 'text-field',\n            label: 'Dataset ID',\n            isRequired: true,\n            validate: [\n              {\n                type: 'required',\n              },\n            ],\n          },\n          additionalSteps: [\n            {\n              title: <FormattedMessage id=\"cost.gcp.projectTitle\" defaultMessage=\"Project\" />,\n              fields: [\n                {\n                  component: 'description',\n                  name: 'description-google',\n                  Content: CMGoogle.Project,\n                },\n                {\n                  name: 'authentication.username',\n                },\n                {\n                  name: 'authentication.authtype',\n                },\n              ],\n              nextStep: 'cost-gcp-iam',\n            },\n            {\n              title: <FormattedMessage id=\"cost.gcp.iamTitle\" defaultMessage=\"Create IAM role\" />,\n              fields: [\n                {\n                  component: 'description',\n                  name: 'description-google',\n                  Content: CMGoogle.IAMRole,\n                },\n              ],\n              nextStep: 'cost-gcp-access',\n              name: 'cost-gcp-iam',\n              substepOf: {\n                name: 'geaa',\n                title: <FormattedMessage id=\"cost.arn.enableAccountAccess\" defaultMessage=\"Enable account access\" />,\n              },\n            },\n            {\n              title: <FormattedMessage id=\"cost.gcp.accessTitle\" defaultMessage=\"Assign access\" />,\n              fields: [\n                {\n                  component: 'description',\n                  name: 'description-google',\n                  Content: CMGoogle.AssignAccess,\n                },\n              ],\n              name: 'cost-gcp-access',\n              nextStep: 'cost-gcp-dataset',\n              substepOf: 'geaa',\n            },\n            {\n              title: <FormattedMessage id=\"cost.gcp.datasetTitle\" defaultMessage=\"Create dataset\" />,\n              fields: [\n                {\n                  component: 'description',\n                  name: 'description-google',\n                  Content: CMGoogle.Dataset,\n                },\n                {\n                  name: 'application.extra.dataset',\n                },\n              ],\n              name: 'cost-gcp-dataset',\n              nextStep: 'cost-gcp-billing-export',\n            },\n            {\n              title: <FormattedMessage id=\"cost.gcp.billingExportTitle\" defaultMessage=\"Billing export\" />,\n              fields: [\n                {\n                  component: 'description',\n                  name: 'description-google',\n                  Content: CMGoogle.BillingExport,\n                },\n              ],\n              name: 'cost-gcp-billing-export',\n            },\n          ],\n        },\n      },\n    },\n  },\n};\n\nexport default hardcodedSchemas;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { TextList } from '@patternfly/react-core/dist/esm/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/esm/components/Text/TextListItem';\nimport { ClipboardCopy } from '@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy';\n\nexport const DescriptionSummary = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'openshift.token.description',\n          defaultMessage: 'An OpenShift Container Platform login token is required to communicate with the application.',\n        })}\n      </Text>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'openshift.token.collectData',\n          defaultMessage: 'To collect data from a Red Hat OpenShift Container Platform source:',\n        })}\n      </Text>\n      <TextList component=\"ol\">\n        <TextListItem component=\"li\">\n          {intl.formatMessage({\n            id: 'openshift.token.logIn',\n            defaultMessage:\n              'Log in to the Red Hat OpenShift Container Platform cluster with an account that has access to the namespace',\n          })}\n        </TextListItem>\n        <TextListItem component=\"li\">\n          {intl.formatMessage({\n            id: 'openshift.token.runCommand',\n            defaultMessage: 'Run the following command to obtain your login token:',\n          })}\n        </TextListItem>\n        <ClipboardCopy className=\"pf-u-mb-md\" isReadOnly>\n          {intl.formatMessage({\n            id: 'openshift.token.comman',\n            defaultMessage: '# oc sa get-token -n management-infra management-admin',\n          })}\n        </ClipboardCopy>\n        <TextListItem component=\"li\">\n          {intl.formatMessage({\n            id: 'openshift.token.copyToken',\n            defaultMessage: 'Copy the token and paste it in the Token field',\n          })}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\n\nexport const EndpointDesc = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'openshift.endpoint.urlAndCA',\n          defaultMessage: 'Provide the OpenShift Container Platform URL and SSL certificate.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Text } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { Popover } from '@patternfly/react-core/dist/esm/components/Popover/Popover';\n\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n\nexport const DescriptionSummary = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text>\n        {intl.formatMessage({\n          id: 'wizard.createAccesKeyPart1',\n          defaultMessage: 'Create an access key in your AWS user account and enter the details below.',\n        })}\n      </Text>\n      <Text>\n        {intl.formatMessage({\n          id: 'wizard.createAccesKeyPart2',\n          defaultMessage:\n            'For sufficient access and security, Red Hat recommends using the Power user identity and access management (IAM) policy for your AWS user account. ',\n        })}\n        <Popover\n          aria-label=\"Help text\"\n          position=\"bottom\"\n          bodyContent={\n            <React.Fragment>\n              <Text>\n                {intl.formatMessage({\n                  id: 'wizard.createAccesKeyHelpText',\n                  defaultMessage:\n                    'The Power user policy allows the user full access to API functionality and AWS services for user administration. Create an access key in the Security Credentials area of your AWS user account. When adding your AWS account as a source, the access key ID and secret access key act as your user ID and password.',\n                })}\n              </Text>\n            </React.Fragment>\n          }\n        >\n          <QuestionCircleIcon />\n        </Popover>\n      </Text>\n    </TextContent>\n  );\n};\n","export const COST_MANAGEMENT_API_BASE = '/api/cost-management/v1';\nexport const SOURCES_API_BASE_V3 = '/api/sources/v3.1';\n\nexport const COST_MANAGEMENT_APP_NAME = '/insights/platform/cost-management';\nexport const CLOUD_METER_APP_NAME = '/insights/platform/cloud-meter';\nexport const CATALOG_APP = '/insights/platform/catalog';\n\nexport const timeoutedApps = (appTypes) => [\n  appTypes.find(({ name }) => name === CLOUD_METER_APP_NAME)?.id,\n  appTypes.find(({ name }) => name === COST_MANAGEMENT_APP_NAME)?.id,\n];\n","import axiosInstanceInsights from '@redhat-cloud-services/frontend-components-utilities/interceptors';\n\nimport { SOURCES_API_BASE_V3 } from './constants';\n\nconst axiosInstance = axiosInstanceInsights;\n\nexport { axiosInstance };\n\nexport const getSourcesApi = () => ({\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  listApplicationTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  createSource: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources`, data),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  getApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  getEndpoint: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}`),\n  removeSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  getGoogleAccount: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account`),\n});\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => ({ sourceTypes: data.data }));\n\nexport const doLoadApplicationTypes = () =>\n  getSourcesApi()\n    .listApplicationTypes()\n    .then((data) => ({ applicationTypes: data.data }));\n\nexport const doLoadAllApplications = () =>\n  getSourcesApi()\n    .listApplicationTypes()\n    .then((data) => data.data);\n\nexport const findSource = (name) =>\n  getSourcesApi().postGraphQL({\n    query: `{ sources(filter: {name: \"${name}\"})\n        { id, name }\n    }`,\n  });\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { CLOUD_VENDOR, getActiveVendor } from '../../utilities/constants';\n\nexport const wizardDescription = () =>\n  getActiveVendor() === CLOUD_VENDOR ? (\n    <FormattedMessage\n      id=\"wizard.wizardDescriptionCloud\"\n      defaultMessage=\"Register your provider to manage your Red Hat products in the cloud.\"\n    />\n  ) : (\n    <FormattedMessage\n      id=\"wizard.wizardDescriptionRedhat\"\n      defaultMessage=\"Configure a data source to connect to your Red Hat applications.\"\n    />\n  );\nexport const wizardTitle = () =>\n  getActiveVendor() === CLOUD_VENDOR ? (\n    <FormattedMessage id=\"wizard.wizardTitleCloud\" defaultMessage=\"Add a cloud source\" />\n  ) : (\n    <FormattedMessage id=\"wizard.wizardTitleRedhat\" defaultMessage=\"Add Red Hat source\" />\n  );\nexport const HCCM_DOCS_PREFIX = 'https://access.redhat.com/documentation/en-us/openshift_container_platform/4.6';\n\nexport const NO_APPLICATION_VALUE = 'no-application';\n","import axios from 'axios';\nimport { configureScope, captureException } from '@sentry/minimal';\n\nexport async function authInterceptor(config) {\n  await window.insights.chrome.auth.getUser();\n  return config;\n}\n\nexport function responseDataInterceptor(response) {\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}\n\nexport function interceptor401(error) {\n  if (error.response && error.response.status === 401) {\n    window.insights.chrome.auth.logout();\n    return false;\n  }\n\n  throw error;\n}\n\nexport function interceptor500(error) {\n  if (error.response && error.response.status >= 500 && error.response.status < 600) {\n    configureScope((scope) => {\n      scope.setTag('request_id', error.response.req_id);\n    });\n  }\n\n  throw error;\n}\n\nexport function errorInterceptor(err) {\n  if (!axios.isCancel(err)) {\n    try {\n      const errObject = { ...err };\n      if (errObject.response && errObject.response.data) {\n        throw errObject.response.data;\n      }\n\n      throw err;\n    } catch (customError) {\n      const sentryId = captureException(customError);\n      customError.sentryId = sentryId;\n      throw customError;\n    }\n  }\n}\n","export const COST_MANAGEMENT_API_BASE = `${process.env.BASE_PATH || '/api'}/cost-management/v1`;\nexport const SOURCES_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/sources/v3.0`;\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const getCmValues = (id) => axiosInstance.get(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`).catch(() => ({}));\n\nexport const cmConvertTypes = ['amazon', 'azure'];\n\nexport const cmValuesMapper = {\n  'billing_source.data_source.bucket': 'bucket',\n  'billing_source.data_source.resource_group': 'resource_group',\n  'billing_source.data_source.storage_account': 'storage_account',\n  'authentication.credentials.subscription_id': 'subscription_id',\n};\n","import axios from 'axios';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { APP_NAMES } from '../components/SourceEditForm/parser/application';\nimport * as interceptors from '../frontend-components-copies/interceptors';\nimport { CLOUD_VENDOR, CLOUD_VENDORS, REDHAT_VENDOR } from '../utilities/constants';\nimport { AVAILABLE, PARTIALLY_UNAVAILABLE, UNAVAILABLE } from '../views/formatters';\n\nimport { SOURCES_API_BASE_V3 } from './constants';\nimport { cmConvertTypes, cmValuesMapper, getCmValues } from './getCmValues';\n\nexport const graphQlErrorInterceptor = (response) => {\n  if (response.errors && response.errors.length > 0) {\n    return Promise.reject({ detail: response.errors[0].message });\n  }\n\n  return response;\n};\n\nexport const interceptor403 = (error) => {\n  if (error.errors && error.errors[0].status === 403) {\n    return Promise.reject({\n      detail: error.errors[0].detail,\n      title: 'Forbidden access',\n    });\n  }\n\n  throw error;\n};\n\nconst axiosInstanceInsights = axios.create();\naxiosInstanceInsights.interceptors.request.use(interceptors.authInterceptor);\naxiosInstanceInsights.interceptors.response.use(interceptors.responseDataInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor401);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor500);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.errorInterceptor);\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptor403);\n\nexport { axiosInstanceInsights as axiosInstance };\n\nexport const getSourcesApi = () => ({\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  updateSource: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/sources/${id}`, data),\n  updateEndpoint: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/endpoints/${id}`, data),\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  updateAuthentication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/authentications/${id}`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  showSource: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  listSourceEndpoints: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/endpoints`),\n  listSourceApplications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/applications`),\n  listEndpointAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}/authentications`),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  doLoadAppTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  deleteApplication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  deleteAuthentication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  showAuthentication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  updateApplication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/applications/${id}`, data),\n  showApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n});\n\nexport const doLoadAppTypes = () => getSourcesApi().doLoadAppTypes();\n\nexport const doRemoveSource = (sourceId) =>\n  getSourcesApi()\n    .deleteSource(sourceId)\n    .catch((error) => {\n      throw { error: { detail: error.errors[0].detail } };\n    });\n\nexport const pagination = (pageSize, pageNumber) => `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) => {\n  if (!sortBy) {\n    return '';\n  }\n\n  if (sortBy === 'source_type_id') {\n    return `,sort_by:{source_type:{product_name:\"${sortDirection}\"}}`;\n  }\n\n  if (sortBy === 'applications') {\n    return `,sort_by:{applications:{__count:\"${sortDirection}\"}}`;\n  }\n\n  return `,sort_by:{${sortBy}:\"${sortDirection}\"}`;\n};\n\nexport const filtering = (filterValue = {}, activeVendor) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`name: { contains_i: \"${filterValue.name}\" }`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterQueries.push(`source_type_id: { eq: [${filterValue.source_type_id.map((x) => `\"${x}\"`).join(', ')}] }`);\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterQueries.push(\n      `applications: { application_type_id: { eq: [${filterValue.applications.map((x) => `\"${x}\"`).join(', ')}] }}`\n    );\n  }\n\n  if (activeVendor === CLOUD_VENDOR) {\n    filterQueries.push(`source_type: { vendor: { eq: [${CLOUD_VENDORS.map((x) => `\"${x}\"`).join(', ')}]} }`);\n  }\n\n  if (activeVendor === REDHAT_VENDOR) {\n    filterQueries.push('source_type: { vendor: \"Red Hat\" }');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`availability_status: { eq: \"${AVAILABLE}\" }`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`availability_status: { eq: [\"${PARTIALLY_UNAVAILABLE}\", \"${UNAVAILABLE}\"] }`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return `, filter: { ${filterQueries.join(', ')} }`;\n  }\n\n  return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    imported,\n    availability_status,\n    source_ref,\n    last_checked_at,\n    updated_at,\n    last_available_at,\n    applications { application_type_id, id, availability_status_error, availability_status, authentications { id, resource_type } },\n    endpoints { id, scheme, host, port, path, receptor_node, role, certificate_authority, verify_ssl, availability_status_error, availability_status, authentications { authtype, availability_status, availability_status_error } }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue, activeVendor }) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(${pagination(pageSize, pageNumber)}${sorting(sortBy, sortDirection)}${filtering(\n        filterValue,\n        activeVendor\n      )})\n        { ${graphQlAttributes} }\n    }`,\n    })\n    .then(({ data }) => data);\n\nexport const doCreateApplication = (data) => getSourcesApi().createApplication(data);\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n  getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => {\n      throw { error: { title: errorMessage, detail } };\n    });\n\nexport const restFilterGenerator = (filterValue = {}, activeVendor) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterValue.applications.map((id) => filterQueries.push(`filter[applications][application_type_id][eq][]=${id}`));\n  }\n\n  if (activeVendor === CLOUD_VENDOR) {\n    CLOUD_VENDORS.forEach((vendor) => filterQueries.push(`filter[source_type][vendor][eq][]=${vendor}`));\n  }\n\n  if (activeVendor === REDHAT_VENDOR) {\n    filterQueries.push('filter[source_type][vendor]=Red Hat');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`filter[availability_status]=${AVAILABLE}`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`filter[availability_status][]=${PARTIALLY_UNAVAILABLE}`);\n      filterQueries.push(`filter[availability_status][]=${UNAVAILABLE}`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return filterQueries.join('&');\n  }\n\n  return '';\n};\n\nexport const doLoadCountOfSources = (filterValue = {}, activeVendor) =>\n  axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources?${restFilterGenerator(filterValue, activeVendor)}`);\n\nexport const doLoadSource = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { id: { eq: ${id}}})\n            { ${graphQlAttributes} }\n        }`,\n    })\n    .then(({ data }) => data);\n\nexport const doLoadApplicationsForEdit = async (id, appTypes, sourceTypes) => {\n  let graphql = await getSourcesApi().postGraphQL({\n    query: `{ sources(filter: { id: { eq: ${id}}})\n          { source_type_id, applications {\n              application_type_id,\n              id,\n              availability_status_error,\n              availability_status,\n              authentications {\n                  id\n              }\n          } }\n      }`,\n  });\n\n  const promises = [];\n  graphql.data.sources?.[0]?.applications?.forEach((app) => {\n    promises.push(getSourcesApi().showApplication(app.id));\n  });\n\n  const results = await Promise.all(promises);\n\n  const sourceType = sourceTypes.find(({ id }) => id === graphql.data.sources?.[0]?.source_type_id);\n  const costManagementApp = appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT);\n\n  if (results.length) {\n    // Doing for as forEach has some issues in jest with nested async functions\n    for (let index = 0; index < results.length; index++) {\n      const { extra, application_type_id } = results[index];\n      const newExtra = { ...extra };\n\n      if (\n        application_type_id === costManagementApp.id &&\n        cmConvertTypes.includes(sourceType.name) &&\n        !Object.keys(extra).length\n      ) {\n        const cmValues = await getCmValues(id);\n        Object.keys(cmValuesMapper).forEach((key) => {\n          const value = get(cmValues, key);\n\n          value && set(newExtra, cmValuesMapper[key], value);\n        });\n      }\n\n      graphql.data.sources[0].applications[index] = {\n        ...graphql.data.sources[0].applications[index],\n        extra: newExtra,\n      };\n    }\n  }\n\n  return graphql.data;\n};\n\nexport const doDeleteAuthentication = (id) => getSourcesApi().deleteAuthentication(id);\n","import React from 'react';\n\nconst SubWatchIcon = (props) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"51px\" height=\"52px\" viewBox=\"0 0 51 52\" version=\"1.1\" {...props}>\n    <title>Subscription-icon</title>\n    <desc>Created with Sketch.</desc>\n    <g id=\"Post-summit-dashboard,-August-19\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"RHCS-Landing-Icons-2\" transform=\"translate(-967.000000, -620.000000)\" fill=\"#5955d2\" fillRule=\"nonzero\">\n        <g id=\"Subscription-icon\" transform=\"translate(967.000000, 620.000000)\">\n          <path\n            d=\"M36.6,17.5 L22.5,31.9 L17.1,26.4 C16.4,25.8 15.4,25.8 14.8,26.5 C14.2,27.1 14.2,28.1 14.8,28.8 L21.3,35.5 C21.9,36.2 23,36.2 23.6,35.5 L38.9,19.8 C39.5,19.1 39.5,18.1 38.8,17.4 C38.2,16.8 37.2,16.8 36.6,17.5\"\n            id=\"Fill-1\"\n          />\n          <path\n            d=\"M25.8,4.4 C29.5,4.4 33,5.3 36.1,7 L34.5,7.4 C33.8,7.6 33.3,8.3 33.5,9 C33.6,9.8 34.4,10.3 35.2,10.1 L40.4,8.9 C40.6,8.9 40.7,8.8 40.9,8.7 C41.2,8.5 41.4,8.2 41.5,7.8 C41.5,7.6 41.5,7.4 41.5,7.2 L40.3,1.9 C40.1,1.2 39.4,0.7 38.7,0.9 C37.9,1 37.4,1.8 37.6,2.6 L37.9,4.1 C34.3,2.2 30.3,1.1 26,1.1 C12,1.1 0.6,12.6 0.6,26.8 C0.6,32.7 2.6,38 5.9,42.4 L5.9,42.4 L5.9,42.4 C5.9,42.4 6,42.5 6,42.5 L6,42.5 L6,42.5 C6.7,43.1 7.7,43.1 8.3,42.4 C8.9,41.8 8.9,40.8 8.3,40.2 L8,40.2 L8,40.2 C5.2,36.5 3.6,31.9 3.6,26.9 C3.6,14.5 13.5,4.4 25.8,4.4\"\n            id=\"Fill-3\"\n          />\n          <g id=\"Group-7\" transform=\"translate(9.000000, 9.000000)\">\n            <path\n              d=\"M36.8,1.5 L36.8,1.5 L36.8,1.5 C36.7,1.4 36.7,1.4 36.8,1.5 L36.8,1.5 L36.6,1.3 C35.9,0.7 34.9,0.7 34.3,1.4 C33.7,2 33.7,3 34.3,3.6 L34.4,3.7 L34.4,3.7 C37.2,7.4 38.9,12.1 38.9,17.1 C38.9,29.5 28.8,39.6 16.4,39.6 C12.5,39.6 8.9,38.6 5.7,36.9 L7.5,36.5 C8.2,36.3 8.7,35.6 8.5,34.8 C8.4,34 7.6,33.5 6.8,33.7 L1.5,34.9 C1.3,35 1.2,35 1,35.1 C0.7,35.3 0.5,35.6 0.4,36 C0.4,36.2 0.4,36.4 0.4,36.6 L1.6,41.9 C1.8,42.6 2.5,43.1 3.3,43 C4.1,42.9 4.6,42.1 4.4,41.3 L4.1,39.9 C7.7,41.8 11.8,43 16.2,43 C30.4,43 41.9,31.5 41.9,17.2 C42.1,11.3 40.1,5.8 36.8,1.5\"\n              id=\"Fill-5\"\n            />\n          </g>\n        </g>\n      </g>\n    </g>\n  </svg>\n);\n\nexport default SubWatchIcon;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Grid } from '@patternfly/react-core/dist/esm/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/GridItem';\nimport { Stack } from '@patternfly/react-core/dist/esm/layouts/Stack/Stack';\nimport { StackItem } from '@patternfly/react-core/dist/esm/layouts/Stack/StackItem';\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/esm/components/Card/CardBody';\nimport { CardTitle } from '@patternfly/react-core/dist/esm/components/Card/CardTitle';\nimport { CardHeader } from '@patternfly/react-core/dist/esm/components/Card/CardHeader';\nimport { CardExpandableContent } from '@patternfly/react-core/dist/esm/components/Card/CardExpandableContent';\nimport { Text } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label/Label';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport BuilderImageIcon from '@patternfly/react-icons/dist/esm/icons/builder-image-icon';\nimport SubWatchIcon from './SubWatchIcon';\n\nconst PREFIX = insights.chrome.isBeta() ? 'beta/' : '';\n\nconst GOLD_IMAGES_AWS =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/red_hat_cloud_access_reference_guide/cloud-access-gold-images_cloud-access#using-gold-images-on-aws_cloud-access';\nconst GOLD_IMAGES_AZURE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/red_hat_cloud_access_reference_guide/cloud-access-gold-images_cloud-access#using-gold-images-on-azure_cloud-access';\nconst GOLD_IMAGES_MORE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/red_hat_cloud_access_reference_guide/cloud-access-gold-images_cloud-access';\nconst INSIGHTS_REF = 'https://www.redhat.com/en/technologies/management/insights';\nconst INSIGHTS_SERVICES = `/${PREFIX}insights/dashboard#workloads=All+workloads`;\nconst SUBWATCH_HREF = `/${PREFIX}subscriptions`;\nconst SUBWATCH_MORE_HREF = 'https://access.redhat.com/products/subscription-central';\n\nexport const CLOUD_CARDS_KEY = 'ins-c-sources__cloud_cards_expanded';\n\nconst INSIGHTS_ICON = `/${PREFIX}apps/landing/fonts/Insights.svg`;\n\nconst CloudCards = () => {\n  const [isExpanded, setExpanded] = useState(() => {\n    const session = sessionStorage.getItem(CLOUD_CARDS_KEY);\n\n    return session ? session === 'true' : true;\n  });\n  const intl = useIntl();\n\n  useEffect(() => {\n    sessionStorage.setItem(CLOUD_CARDS_KEY, isExpanded);\n  }, [isExpanded]);\n\n  return (\n    <Card isExpanded={isExpanded} className=\"pf-u-mb-lg pf-u-mt-md pf-u-mt-0-on-md ins-c-sources__info-card\">\n      <CardHeader onExpand={() => setExpanded(!isExpanded)}>\n        <CardTitle>{intl.formatMessage({ id: 'cloud.nowWhat', defaultMessage: 'I connected to cloud. Now what?' })}</CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        <CardBody>\n          <TextContent>\n            <Grid hasGutter>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Label color=\"orange\" icon={<BuilderImageIcon fill=\"#F4C145\" />}>\n                      {intl.formatMessage({ id: 'cloud.goldImages', defaultMessage: 'Use Gold Images' })}\n                    </Label>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.description',\n                        defaultMessage:\n                          'Connecting to Amazon Web Services unlocks automatic access to Red Hat Gold Images. View Gold Images in your provider console.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AWS} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.awsLink',\n                        defaultMessage: 'Use Red Hat Gold Images in AWS',\n                      })}\n                    </Text>\n                    <br />\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AZURE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.azureLink',\n                        defaultMessage: 'Use Red Hat Gold Images in Microsoft Azure',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_MORE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.moreLink',\n                        defaultMessage: 'Learn more about Red Hat Gold Images',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Label color=\"red\" icon={<img src={INSIGHTS_ICON} fill=\"#EE0000\" className=\"custom-icon\" />}>\n                      {intl.formatMessage({ id: 'cloud.insights', defaultMessage: 'Explore Red Hat Insights' })}\n                    </Label>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.description',\n                        defaultMessage:\n                          'Use RHEL instances in the cloud and gain other value-add services, such as predictive analytics.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_REF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.insightsLinkt',\n                        defaultMessage: 'Learn more about Red Hat Insights',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_SERVICES} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.moreLink',\n                        defaultMessage: 'Enable additional Insights services',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Label color=\"purple\" icon={<SubWatchIcon className=\"custom-icon\" />}>\n                      {intl.formatMessage({ id: 'cloud.subwatch', defaultMessage: 'Track usage with Subscription Watch' })}\n                    </Label>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.description',\n                        defaultMessage:\n                          'See precise RHEL subscription usage information across your hybrid cloud infrastructure.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_MORE_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.learnMore',\n                        defaultMessage: 'Learn more about Subscription Watch',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.goTo',\n                        defaultMessage: 'Go to Subscription Watch',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </CardBody>\n      </CardExpandableContent>\n    </Card>\n  );\n};\n\nexport default CloudCards;\n","import get from 'lodash/get';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport hardcodedSchemas from '../../../addSourceWizard/addSourceWizard/hardcodedSchemas';\n\nexport const createAuthFieldName = (fieldName, id) => `authentications.a${id}.${fieldName.replace('authentication.', '')}`;\n\nexport const createAuthAppFieldName = (fieldName, id) => `applications.a${id}.${fieldName.replace('application.', '')}`;\n\nexport const getLastPartOfName = (fieldName) => fieldName.split('.').pop();\n\nexport const removeRequiredValidator = (validate = []) =>\n  validate.filter((validation) => validation.type !== validatorTypes.REQUIRED && validation.type !== 'required-validator');\n\nexport const getEnhancedAuthField = (sourceType, authtype, name, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, name], {});\n\nexport const getAdditionalAuthSteps = (sourceType, authtype, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, 'additionalSteps'], []);\n\nexport const getAdditionalAuthStepsKeys = (sourceType, authtype, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, 'includeStepKeyFields'], []);\n\nexport const getAdditionalFields = (auth, stepKey) => auth?.fields?.filter((field) => stepKey && field.stepKey === stepKey) || [];\n\nexport const modifyAuthSchemas = (fields, id, appId) =>\n  fields.map((field) => {\n    let editedName = field.name.startsWith('authentication')\n      ? createAuthFieldName(field.name, id)\n      : field.name.startsWith('application')\n      ? createAuthAppFieldName(field.name, appId)\n      : field.name;\n\n    const finalField = {\n      ...field,\n      name: editedName,\n    };\n\n    const isPassword = getLastPartOfName(finalField.name) === 'password';\n\n    if (isPassword) {\n      finalField.component = 'authentication';\n    }\n\n    return finalField;\n  });\n\nexport const authenticationFields = (authentications, sourceType, appName, appId) => {\n  if (!authentications || authentications.length === 0 || !sourceType.schema || !sourceType.schema.authentication) {\n    return [];\n  }\n\n  return authentications.map((auth) => {\n    const schemaAuth = sourceType?.schema?.authentication?.find(({ type }) => type === auth.authtype);\n\n    if (!schemaAuth) {\n      return [];\n    }\n\n    const additionalStepKeys = getAdditionalAuthStepsKeys(sourceType.name, auth.authtype, appName);\n    const additionalStepsFields = getAdditionalAuthSteps(sourceType.name, auth.authtype, appName)\n      ?.map((step) => ({\n        ...step,\n        fields: [...step.fields, ...getAdditionalFields(schemaAuth, step.name)],\n      }))\n      .map(({ fields }) => fields.map(({ name }) => name))\n      .flatMap((x) => x);\n\n    let enhancedFields = schemaAuth.fields\n      .filter(\n        (field) =>\n          additionalStepsFields.includes(field.name) ||\n          (!additionalStepsFields.length && !field.stepKey) ||\n          (field.stepKey && additionalStepKeys.includes(field.stepKey))\n      )\n      .map((field) => ({\n        ...field,\n        ...getEnhancedAuthField(sourceType.name, auth.authtype, field.name, appName),\n      }));\n\n    return modifyAuthSchemas(enhancedFields, auth.id, appId);\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nimport { Alert } from '@patternfly/react-core/dist/esm/components/Alert/Alert';\n\nconst EditAlert = ({ name }) => {\n  const formOptions = useFormApi();\n\n  const { variant, title, description } = get(formOptions.getState().values, name);\n\n  return (\n    <Alert variant={variant} isInline title={title}>\n      {description}\n    </Alert>\n  );\n};\n\nEditAlert.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default EditAlert;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\nimport { FormattedMessage } from 'react-intl';\nimport { authenticationFields } from './authentication';\nimport EditAlert from './EditAlert';\n\nexport const APP_NAMES = {\n  COST_MANAGAMENT: '/insights/platform/cost-management',\n  CLOUD_METER: '/insights/platform/cloud-meter',\n};\n\nexport const appendClusterIdentifier = (sourceType) =>\n  sourceType.name === 'openshift'\n    ? [\n        {\n          name: 'source.source_ref',\n          label: <FormattedMessage id=\"sources.clusterIdentifier\" defaultMessage=\"Cluster identifier\" />,\n          isRequired: true,\n          validate: [{ type: validatorTypes.REQUIRED }],\n          component: componentTypes.TEXT_FIELD,\n        },\n      ]\n    : [];\n\nconst createOneAppFields = (appType, sourceType, app) => [\n  {\n    name: `messages.${app.id}`,\n    component: 'description',\n    Content: EditAlert,\n    condition: {\n      when: ({ name }) => name,\n      isNotEmpty: true,\n    },\n  },\n  ...authenticationFields(\n    app.authentications?.filter((auth) => Object.keys(auth).length > 1),\n    sourceType,\n    appType?.name,\n    app.id\n  ),\n  ...(appType?.name === APP_NAMES.COST_MANAGAMENT ? appendClusterIdentifier(sourceType) : []),\n];\n\nexport const applicationsFields = (applications, sourceType, appTypes) => [\n  {\n    component: componentTypes.TABS,\n    name: 'app-tabs',\n    isBox: true,\n    fields: [\n      ...applications.map((app) => {\n        const appType = appTypes.find(({ id }) => id === app.application_type_id);\n\n        return {\n          name: appType?.id,\n          title: appType?.display_name,\n          fields: createOneAppFields(appType, sourceType, app),\n        };\n      }),\n    ],\n  },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { Spinner } from '@patternfly/react-core/dist/esm/components/Spinner';\nimport { Bullseye } from '@patternfly/react-core/dist/esm/layouts/Bullseye';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { Grid } from '@patternfly/react-core/dist/esm/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/esm/layouts/Grid/GridItem';\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/esm/components/Card/CardBody';\n\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nimport './loaders.scss';\nimport { useIntl } from 'react-intl';\n\nexport const Loader = ({ width = '100%', height = '100%', className = '' }) => (\n  <span className={`ins-c-sources__loader ${className}`} style={{ width, height }} />\n);\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport const AppPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        <div className=\"ins-c-sources__fake_content pf-u-p-lg\">\n          <Loader />\n        </div>\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport const PaginationLoader = () => <Loader className=\"top-pagination\" height={30} width={200} />;\n\nexport const PlaceHolderTable = () => (\n  <Bullseye className=\"ins-c-sources__sources-placeholder-loader\">\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) =>\n  isDeleting ? (\n    <tr>\n      <td colSpan={COLUMN_COUNT} className=\"pf-u-p-md\">\n        <Loader height={100} />\n      </td>\n    </tr>\n  ) : (\n    <RowWrapper {...initialProps} row={row} className=\"ins-c-sources__row-vertical-centered\" />\n  );\n\nRowWrapperLoader.propTypes = {\n  row: PropTypes.object.isRequired,\n};\n\nexport const CardLoader = (props) => (\n  <Card className=\"card pf-u-m-md\">\n    <CardBody>\n      <Loader {...props} />\n    </CardBody>\n  </Card>\n);\n\nexport const DetailLoader = () => (\n  <div className=\"ins-c-sources__detail-page\">\n    <PageHeader>\n      <Loader height={96} />\n    </PageHeader>\n    <Grid>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"12\">\n        <CardLoader height={324} />\n      </GridItem>\n    </Grid>\n  </div>\n);\n","export const ACTION_TYPES = [\n  'LOAD_ENTITIES',\n  'CREATE_SOURCE',\n  'REMOVE_SOURCE',\n  'LOAD_SOURCE_TYPES',\n  'LOAD_APP_TYPES',\n  'REMOVE_APPLICATION',\n  'RENAME_SOURCE',\n].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n\nexport const SORT_ENTITIES = 'SORT_ENTITIES';\nexport const PAGE_AND_SIZE = 'PAGE_AND_SIZE';\nexport const FILTER_SOURCES = 'FILTER_SOURCES';\nexport const ADD_APP_TO_SOURCE = 'ADD_APP_TO_SOURCE';\nexport const SET_COUNT = 'SET_COUNT';\nexport const ADD_HIDDEN_SOURCE = 'ADD_HIDDEN_SOURCE';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const SET_VENDOR = 'SET_VENDOR';\n","import { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport {\n  ACTION_TYPES,\n  SORT_ENTITIES,\n  PAGE_AND_SIZE,\n  FILTER_SOURCES,\n  ADD_APP_TO_SOURCE,\n  SET_COUNT,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  SET_VENDOR,\n} from './actionTypes';\nimport {\n  doLoadAppTypes,\n  doRemoveSource,\n  doLoadEntities,\n  doDeleteApplication,\n  doLoadCountOfSources,\n  getSourcesApi,\n} from '../../api/entities';\nimport { doLoadSourceTypes } from '../../api/source_types';\n\nexport const loadEntities = (options) => (dispatch, getState) => {\n  dispatch({\n    type: ACTION_TYPES.LOAD_ENTITIES_PENDING,\n    options,\n  });\n\n  const { pageSize, pageNumber, sortBy, sortDirection, filterValue, activeVendor } = getState().sources;\n\n  return Promise.all([\n    doLoadEntities({\n      pageSize,\n      pageNumber,\n      sortBy,\n      sortDirection,\n      filterValue,\n      activeVendor,\n    }),\n    doLoadCountOfSources(filterValue, activeVendor).then(({ meta: { count } }) =>\n      dispatch({ type: SET_COUNT, payload: { count } })\n    ),\n  ])\n    .then(([{ sources }]) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_FULFILLED,\n        payload: sources,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_REJECTED,\n        meta: { noError: true },\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: error.title || 'Fetching data failed, try refresh page',\n          },\n        },\n      })\n    );\n};\n\nexport const loadSourceTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING });\n\n  return doLoadSourceTypes()\n    .then((sourceTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED,\n        payload: sourceTypes,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const loadAppTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_APP_TYPES_PENDING });\n\n  return doLoadAppTypes()\n    .then((appTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_FULFILLED,\n        payload: appTypes.data,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const sortEntities = (column, direction) => (dispatch) => {\n  dispatch({\n    type: SORT_ENTITIES,\n    payload: { column, direction },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pageAndSize = (page, size) => (dispatch) => {\n  dispatch({\n    type: PAGE_AND_SIZE,\n    payload: { page, size },\n  });\n\n  return dispatch(loadEntities({ paginationClicked: true }));\n};\n\nexport const filterSources = (value) => (dispatch) => {\n  dispatch({\n    type: FILTER_SOURCES,\n    payload: { value },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const addMessage = (props) => (dispatch) =>\n  dispatch({\n    type: ADD_NOTIFICATION,\n    payload: {\n      dismissable: true,\n      ...props,\n    },\n  });\n\nexport const removeSource = (sourceId, title) => (dispatch) => {\n  dispatch({\n    type: ACTION_TYPES.REMOVE_SOURCE_PENDING,\n    meta: {\n      sourceId,\n    },\n  });\n\n  return doRemoveSource(sourceId)\n    .then(() => dispatch(loadEntities({ loaded: 0 })))\n    .then(() => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_FULFILLED,\n        meta: {\n          sourceId,\n        },\n      });\n      dispatch(addMessage({ title, variant: 'success' }));\n    })\n    .catch(() =>\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_REJECTED,\n        meta: {\n          sourceId,\n        },\n      })\n    );\n};\n\nexport const removeMessage = (id) => ({\n  type: REMOVE_NOTIFICATION,\n  payload: id,\n});\n\nexport const removeApplication = (appId, sourceId, successTitle, errorTitle) => (dispatch) => {\n  dispatch({\n    type: ACTION_TYPES.REMOVE_APPLICATION,\n    payload: () => doDeleteApplication(appId, errorTitle),\n    meta: {\n      appId,\n      sourceId,\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: successTitle,\n          dismissable: true,\n        },\n      },\n    },\n  });\n};\n\nexport const addAppToSource = (sourceId, app) => ({\n  type: ADD_APP_TO_SOURCE,\n  payload: {\n    sourceId,\n    app,\n  },\n});\n\nexport const addHiddenSource = (source) => ({\n  type: ADD_HIDDEN_SOURCE,\n  payload: {\n    source,\n  },\n});\n\nexport const clearFilters = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_FILTERS,\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const renameSource = (id, name, errorTitle) => (dispatch, getState) => {\n  const oldName = getState().sources.entities.find((source) => source.id === id)?.name;\n\n  dispatch({ type: ACTION_TYPES.RENAME_SOURCE_PENDING, payload: { id, name } });\n\n  return getSourcesApi()\n    .updateSource(id, { name })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.RENAME_SOURCE_REJECTED,\n        payload: { error: { detail: error.errors?.[0]?.detail || error, title: errorTitle }, id, name: oldName },\n      })\n    );\n};\n\nexport const setActiveVendor = (vendor) => (dispatch) => {\n  dispatch({\n    type: SET_VENDOR,\n    payload: { vendor },\n  });\n\n  return dispatch(loadEntities());\n};\n","import { getSourcesApi } from './entities.js';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => data.data);\n","export const ACTION_TYPES = ['SET_ORG_ADMIN', 'SET_WRITE_PERMISSIONS'].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n","export const SATELLITE_NAME = 'satellite';\nexport const ANSIBLE_TOWER_NAME = 'ansible-tower';\nexport const REDHAT_VENDOR = 'Red Hat';\nexport const CLOUD_VENDOR = 'Cloud';\nexport const CLOUD_VENDORS = ['Amazon', 'Azure', 'Google'];\nexport const TOPOLOGY_INV_NAME = '/insights/platform/topological-inventory';\n\nexport const getActiveVendor = () => new URLSearchParams(window.location.search).get('activeVendor');\n","import {\n  ACTION_TYPES,\n  SORT_ENTITIES,\n  PAGE_AND_SIZE,\n  FILTER_SOURCES,\n  ADD_APP_TO_SOURCE,\n  SET_COUNT,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  SET_VENDOR,\n} from './actionTypes';\nimport { CLOUD_VENDOR } from '../../utilities/constants';\n\nexport const defaultSourcesState = {\n  loaded: 0,\n  pageSize: 50,\n  pageNumber: 1,\n  entities: [],\n  numberOfEntities: 0,\n  appTypesLoaded: false,\n  sourceTypesLoaded: false,\n  undoValues: {},\n  filterValue: {},\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n  removingSources: [],\n  activeVendor: CLOUD_VENDOR,\n  appTypes: [],\n  sourceTypes: [],\n};\n\nexport const entitiesPending = (state, { options }) => ({\n  ...state,\n  loaded: state.loaded + 1,\n  paginationClicked: false,\n  ...options,\n});\n\nexport const entitiesLoaded = (state, { payload: rows, options }) => ({\n  ...state,\n  loaded: Math.max(state.loaded - 1, 0),\n  entities: rows,\n  ...options,\n});\n\nexport const entitiesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesPending = (state) => ({\n  ...state,\n  sourceTypes: [],\n  sourceTypesLoaded: false,\n});\n\nexport const sourceTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesLoaded = (state, { payload: sourceTypes }) => ({\n  ...state,\n  sourceTypes,\n  sourceTypesLoaded: true,\n});\n\nexport const appTypesPending = (state) => ({\n  ...state,\n  appTypes: [],\n  appTypesLoaded: false,\n});\n\nexport const appTypesLoaded = (state, { payload: appTypes }) => ({\n  ...state,\n  appTypes,\n  appTypesLoaded: true,\n});\n\nexport const appTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sortEntities = (state, { payload: { column, direction } }) => ({\n  ...state,\n  sortBy: column,\n  sortDirection: direction,\n});\n\nexport const setPageAndSize = (state, { payload: { page, size } }) => ({\n  ...state,\n  pageSize: size,\n  pageNumber: page,\n});\n\nexport const filterSources = (state, { payload: { value } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    ...value,\n  },\n  pageNumber: 1,\n});\n\nexport const sourceEditRemovePending = (state, { meta }) => ({\n  ...state,\n  removingSources: [...state.removingSources, meta.sourceId],\n});\n\nexport const sourceEditRemoveFulfilled = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n  entities: state.entities.filter((entity) => entity.id !== meta.sourceId),\n});\n\nexport const sourceEditRemoveRejected = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n});\n\nexport const appRemovingPending = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: true,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingFulfilled = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.filter((app) => app.id !== meta.appId),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingRejected = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: undefined,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const addAppToSource = (state, { payload: { sourceId, app } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          applications: [...entity.applications, app],\n        }\n      : entity\n  ),\n});\n\nexport const setCount = (state, { payload: { count } }) => ({\n  ...state,\n  numberOfEntities: count,\n});\n\nexport const addHiddenSource = (state, { payload: { source } }) => ({\n  ...state,\n  entities: [...state.entities, { ...source, hidden: true }],\n});\n\nexport const clearFilters = (state) => ({\n  ...state,\n  filterValue: {},\n  pageNumber: 1,\n});\n\nexport const sourceRenamePending = (state, { payload: { id, name } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === id\n      ? {\n          ...entity,\n          name,\n        }\n      : entity\n  ),\n});\n\nconst setVendor = (state, { payload: { vendor } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    source_type_id: [],\n    applications: [],\n  },\n  activeVendor: vendor,\n});\n\nexport default {\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n  [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n  [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: entitiesRejected,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING]: sourceTypesPending,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED]: sourceTypesLoaded,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED]: sourceTypesRejected,\n  [ACTION_TYPES.LOAD_APP_TYPES_PENDING]: appTypesPending,\n  [ACTION_TYPES.LOAD_APP_TYPES_FULFILLED]: appTypesLoaded,\n  [ACTION_TYPES.LOAD_APP_TYPES_REJECTED]: appTypesRejected,\n  [ACTION_TYPES.REMOVE_SOURCE_PENDING]: sourceEditRemovePending,\n  [ACTION_TYPES.REMOVE_SOURCE_FULFILLED]: sourceEditRemoveFulfilled,\n  [ACTION_TYPES.REMOVE_SOURCE_REJECTED]: sourceEditRemoveRejected,\n  [ACTION_TYPES.REMOVE_APPLICATION_PENDING]: appRemovingPending,\n  [ACTION_TYPES.REMOVE_APPLICATION_FULFILLED]: appRemovingFulfilled,\n  [ACTION_TYPES.REMOVE_APPLICATION_REJECTED]: appRemovingRejected,\n  [ACTION_TYPES.RENAME_SOURCE_PENDING]: sourceRenamePending,\n  [ACTION_TYPES.RENAME_SOURCE_REJECTED]: sourceRenamePending,\n\n  [SORT_ENTITIES]: sortEntities,\n  [PAGE_AND_SIZE]: setPageAndSize,\n  [FILTER_SOURCES]: filterSources,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [SET_COUNT]: setCount,\n  [ADD_HIDDEN_SOURCE]: addHiddenSource,\n  [CLEAR_FILTERS]: clearFilters,\n  [SET_VENDOR]: setVendor,\n};\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const defaultUserState = {\n  isOrgAdmin: undefined,\n  writePermissions: undefined,\n};\n\nexport const orgAdminPending = (state) => ({\n  ...state,\n  isOrgAdmin: undefined,\n});\n\nexport const orgAdminLoaded = (state, { payload: isOrgAdmin }) => ({\n  ...state,\n  isOrgAdmin,\n});\n\nexport const writePermissionsPending = (state) => ({\n  ...state,\n  writePermissions: undefined,\n});\n\nexport const writePermissionsLoaded = (state, { payload: writePermissions }) => ({\n  ...state,\n  writePermissions,\n});\n\nexport default {\n  [ACTION_TYPES.SET_ORG_ADMIN_PENDING]: orgAdminPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_FULFILLED]: orgAdminLoaded,\n  [ACTION_TYPES.SET_ORG_ADMIN_REJECTED]: orgAdminPending,\n\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING]: writePermissionsPending,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED]: writePermissionsLoaded,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED]: writePermissionsPending,\n};\n","import ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport SourcesReducer, { defaultSourcesState } from '../redux/sources/reducer';\nimport UserReducer, { defaultUserState } from '../redux/user/reducer';\nimport { updateQuery } from './urlQuery';\nimport { ACTION_TYPES } from '../redux/sources/actionTypes';\n\nexport const urlQueryMiddleware = (store) => (next) => (action) => {\n  if (action.type === ACTION_TYPES.LOAD_ENTITIES_PENDING) {\n    const sources = store.getState().sources;\n    updateQuery({ ...sources, ...action.options });\n  }\n\n  next(action);\n};\n\nexport const getStore = (addMiddlewares = [], initialState = {}) => {\n  const middlewares = [\n    thunk,\n    notificationsMiddleware({\n      errorTitleKey: 'error.title',\n      errorDescriptionKey: 'error.detail',\n    }),\n    promise,\n    urlQueryMiddleware,\n    ...addMiddlewares,\n  ];\n\n  const registry = new ReducerRegistry({}, middlewares);\n\n  registry.register({\n    sources: applyReducerHash(SourcesReducer, { ...defaultSourcesState, ...initialState.sources }),\n  });\n  registry.register({ user: applyReducerHash(UserReducer, { ...defaultUserState, ...initialState.user }) });\n  registry.register({ notifications: notificationsReducer });\n\n  return registry.getStore();\n};\n\nexport const getProdStore = () => getStore();\n","import { restFilterGenerator } from '../api/entities';\nimport { AVAILABLE, UNAVAILABLE } from '../views/formatters';\nimport { sourcesColumns } from '../views/sourcesViewDefinition';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from './constants';\n\nexport const updateQuery = ({ sortBy, sortDirection, pageNumber, pageSize, filterValue, activeVendor }) => {\n  const sortQuery = `sort_by[]=${sortBy}:${sortDirection}`;\n\n  const paginationQuery = `limit=${pageSize}&offset=${(pageNumber - 1) * pageSize}&activeVendor=${activeVendor || CLOUD_VENDOR}`;\n\n  const filterQuery = restFilterGenerator(filterValue);\n\n  const query = `?${sortQuery}&${paginationQuery}${filterQuery ? `&${filterQuery}` : ''}`;\n\n  const fullHref = decodeURIComponent(`${window.location.pathname}${query}`);\n\n  if (location.href !== fullHref) {\n    return history.replaceState('', '', fullHref);\n  }\n\n  return null;\n};\n\nexport const parseQuery = () => {\n  let fetchOptions = {};\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const sortByRaw = urlParams.get('sort_by[]');\n\n  let sortBy;\n  let sortDirection;\n\n  if (sortByRaw) {\n    sortBy = sortByRaw.split(':')[0];\n    sortDirection = sortByRaw.split(':')[1];\n\n    sortBy = sourcesColumns({ formatMessage: () => '' })\n      .filter(({ sortable }) => sortable)\n      .map(({ value }) => value)\n      .includes(sortBy)\n      ? sortBy\n      : 'created_at';\n    sortDirection = ['desc', 'asc'].includes(sortDirection) ? sortDirection : 'desc';\n  }\n\n  if (sortBy && sortDirection) {\n    fetchOptions = {\n      sortBy,\n      sortDirection,\n    };\n  }\n\n  const pageSize = urlParams.get('limit');\n  const offset = urlParams.get('offset');\n\n  let pageNumber;\n\n  if (offset && pageSize) {\n    pageNumber = offset / pageSize + 1;\n    if (isNaN(pageNumber)) {\n      pageNumber = undefined;\n    }\n  }\n\n  if (pageSize && pageNumber) {\n    fetchOptions = {\n      ...fetchOptions,\n      pageNumber: parseInt(pageNumber, 10),\n      pageSize: Math.min(parseInt(pageSize, 10), 100),\n    };\n  }\n\n  let filterValue = {};\n\n  const name = urlParams.get('filter[name][contains_i]');\n\n  if (name) {\n    filterValue = { name };\n  }\n\n  const sourceTypes = urlParams.getAll('filter[source_type_id][]');\n\n  if (sourceTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      source_type_id: sourceTypes,\n    };\n  }\n\n  const applicationTypes = urlParams.getAll('filter[applications][application_type_id][eq][]');\n\n  if (applicationTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      applications: applicationTypes,\n    };\n  }\n\n  if (urlParams.get('filter[availability_status]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [AVAILABLE],\n    };\n  } else if (urlParams.get('filter[availability_status][]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [UNAVAILABLE],\n    };\n  }\n\n  const hasSomeFilterValue =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value)\n      .filter(Boolean).length > 0;\n\n  if (hasSomeFilterValue) {\n    fetchOptions = {\n      ...fetchOptions,\n      filterValue,\n    };\n  }\n\n  const activeVendor = urlParams.get('activeVendor');\n\n  if (activeVendor === CLOUD_VENDOR || activeVendor === REDHAT_VENDOR) {\n    fetchOptions = {\n      ...fetchOptions,\n      activeVendor,\n    };\n  }\n\n  return fetchOptions;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { Badge } from '@patternfly/react-core/dist/esm/components/Badge/Badge';\nimport { Popover } from '@patternfly/react-core/dist/esm/components/Popover/Popover';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { Label } from '@patternfly/react-core/dist/esm/components/Label/Label';\nimport { LabelGroup } from '@patternfly/react-core/dist/esm/components/LabelGroup/LabelGroup';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { replaceRouteId, routes } from '../Routes';\n\nexport const defaultPort = (scheme) =>\n  ({\n    http: '80',\n    https: '443',\n  }[scheme]);\n\nexport const importsTexts = (value) =>\n  ({\n    cfme: (\n      <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n      />\n    ),\n  }[value.toLowerCase()]);\n\nexport const schemaToPort = (schema, port) => (port && String(port) !== defaultPort(schema) ? `:${port}` : '');\n\nexport const endpointToUrl = (endpoint) => {\n  const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n  const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n  const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n  if (url === '://') {\n    return;\n  }\n\n  return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n  return type && type.name === 'openshift';\n};\n\nexport const formatURL = (source) => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n  const type = sourceTypes.find((type) => type.id === sourceType);\n  return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = (str) => (\n  <span className=\"ins-c-sources__help-cursor\">\n    <DateFormat type=\"relative\" date={str} />\n  </span>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n  <TextContent>\n    <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>{name}</Link>\n    <br key={`${source.id}-br`} />\n    <Text key={source.id} component={TextVariants.small}>\n      {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n    </Text>\n  </TextContent>\n);\n\nexport const importedFormatter = (value) => {\n  if (!value) {\n    return null;\n  }\n\n  const text = importsTexts(value);\n\n  if (text) {\n    return (\n      <Tooltip content={text}>\n        <Badge isRead className=\"ins-c-sources__help-cursor\">\n          <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n        </Badge>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Badge isRead>\n      <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n    </Badge>\n  );\n};\n\nexport const AVAILABLE = 'available';\nexport const UNAVAILABLE = 'unavailable';\nexport const UNKNOWN = 'unknown';\nexport const PARTIALLY_UNAVAILABLE = 'partially_available';\n\nexport const getStatusColor = (status) =>\n  ({\n    [UNAVAILABLE]: 'red',\n    [AVAILABLE]: 'green',\n    [PARTIALLY_UNAVAILABLE]: 'orange',\n  }[status] || 'grey');\n\nexport const getStatusText = (status) =>\n  ({\n    [UNAVAILABLE]: <FormattedMessage id=\"sources.unavailable\" defaultMessage=\"Unavailable\" />,\n    [AVAILABLE]: <FormattedMessage id=\"sources.available\" defaultMessage=\"Available\" />,\n    [PARTIALLY_UNAVAILABLE]: <FormattedMessage id=\"sources.partiallyAvailable\" defaultMessage=\"Partially available\" />,\n  }[status] || <FormattedMessage id=\"sources.unknown\" defaultMessage=\"Unknown\" />);\n\nexport const UnknownError = () => <FormattedMessage id=\"sources.unknownError\" defaultMessage=\"unavailable\" />;\n\nexport const formatAvailibilityErrors = (appTypes, errors) => (\n  <React.Fragment>\n    {errors.source && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.sourceError\"\n          defaultMessage=\"Source's status: { error }\"\n          values={{ error: errors.source }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.endpoint && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.endpointError\"\n          defaultMessage=\"Endpoint error: { error }\"\n          values={{ error: errors.endpoint }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.authentications && (\n      <FormattedMessage\n        id=\"sources.authErrors\"\n        defaultMessage=\"Authentication {count, plural, one {status} other {statuses}} : { errors }\"\n        values={{\n          count: errors.authentications.length,\n          errors: errors.authentications.map(({ error, type }) => (\n            <React.Fragment key={type}>\n              <FormattedMessage id=\"sources.errorAuthTemplate\" defaultMessage=\"{ type }: { error }\" values={{ error, type }} />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n    {errors.applications && (\n      <FormattedMessage\n        id=\"sources.appErrors\"\n        defaultMessage=\"Application {count, plural, one {status} other {statutes}}: { errors }\"\n        values={{\n          count: errors.applications.length,\n          errors: errors.applications.map(({ error, id }) => (\n            <React.Fragment key={id}>\n              <FormattedMessage\n                id=\"sources.errorAppTemplate\"\n                defaultMessage=\"{ app }: { error }\"\n                values={{\n                  error,\n                  app: appTypes.find((app) => app.id === id)?.display_name || id,\n                }}\n              />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport const getStatusTooltipText = (status, appTypes, errors = {}) =>\n  ({\n    [UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [AVAILABLE]: <FormattedMessage id=\"sources.appStatusOK\" defaultMessage=\"Everything works fine.\" />,\n    [PARTIALLY_UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n  }[status] || <FormattedMessage id=\"sources.appStatusUnknown\" defaultMessage=\"Status has not been verified.\" />);\n\nexport const getAllErrors = ({\n  availability_status,\n  availability_status_error,\n  applications = [],\n  endpoints: [endpoint] = [],\n}) => {\n  let errors = {};\n  let statusesCount = 0;\n  let errorsCount = 0;\n\n  if (availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      source: availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  applications.map((app) => {\n    if (app.availability_status === UNAVAILABLE) {\n      errors = {\n        ...errors,\n        applications: [\n          ...(errors.applications ? errors.applications : []),\n          {\n            id: app.application_type_id,\n            error: app.availability_status_error || <UnknownError />,\n          },\n        ],\n      };\n      statusesCount++;\n      errorsCount++;\n    } else if (app.availability_status === AVAILABLE) {\n      statusesCount++;\n    }\n  });\n\n  if (endpoint?.availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      endpoint: endpoint.availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (endpoint?.availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  if (endpoint?.authentications) {\n    endpoint.authentications.map((auth) => {\n      if (auth.availability_status === UNAVAILABLE) {\n        errors = {\n          ...errors,\n          authentications: [\n            ...(errors.authentications ? errors.authentications : []),\n            {\n              type: auth.authtype,\n              error: auth.availability_status_error || <UnknownError />,\n            },\n          ],\n        };\n        statusesCount++;\n        errorsCount++;\n      } else if (auth.availability_status === AVAILABLE) {\n        statusesCount++;\n      }\n    });\n  }\n\n  return {\n    errors,\n    status:\n      errorsCount === 0\n        ? statusesCount === 0\n          ? UNKNOWN\n          : AVAILABLE\n        : errorsCount === statusesCount\n        ? UNAVAILABLE\n        : PARTIALLY_UNAVAILABLE,\n  };\n};\n\nexport const availabilityFormatter = (_status, source, { appTypes }) => {\n  const meta = getAllErrors(source);\n  const status = meta.status;\n\n  return (\n    <Popover showClose={false} aria-label={`${status} popover`} bodyContent={getStatusTooltipText(status, appTypes, meta.errors)}>\n      <Label className=\"clickable\" color={getStatusColor(status)}>\n        {getStatusText(status)}\n      </Label>\n    </Popover>\n  );\n};\n\nexport const getStatusTooltipTextApp = (status, error, intl) =>\n  ({\n    [AVAILABLE]: intl.formatMessage({\n      id: 'sources.appStatusOK',\n      defaultMessage: 'Everything works fine.',\n    }),\n    [UNAVAILABLE]: error || intl.formatMessage({ id: 'sources.unknownError', defaultMessage: 'Unknown error' }),\n  }[status] ||\n  intl.formatMessage({\n    id: 'sources.appStatusUnknown',\n    defaultMessage: 'Status has not been verified.',\n  }));\n\nconst EnhancedLabelGroup = ({ applications, ...props }) => {\n  const intl = useIntl();\n\n  return (\n    <LabelGroup\n      {...props}\n      numLabels={2}\n      collapsedText={intl.formatMessage(\n        { id: 'applications.showMore', defaultMessage: '{remaining} more' },\n        { remaining: '${remaining}' }\n      )}\n    >\n      {applications.map((app) => (\n        <Popover\n          showClose={false}\n          key={app.display_name}\n          aria-label={`${app.display_name} popover`}\n          bodyContent={getStatusTooltipTextApp(app.availability_status, app.availability_status_error, intl)}\n        >\n          <Label className=\"clickable\" color={getStatusColor(app.availability_status)}>\n            {app.display_name}\n          </Label>\n        </Popover>\n      ))}\n    </LabelGroup>\n  );\n};\n\nEnhancedLabelGroup.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      display_name: PropTypes.string.isRequired,\n      availability_status: PropTypes.string,\n      availability_status_error: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport const getAppStatus = (app, source, appTypes) => {\n  const application = appTypes.find((type) => type.id === app.application_type_id);\n\n  if (application) {\n    let availability_status = app.availability_status;\n    let availability_status_error = app.availability_status_error;\n\n    if (app.authentications?.[0]?.resource_type === 'Endpoint') {\n      availability_status = source.endpoints?.[0]?.availability_status;\n      availability_status_error = source.endpoints?.[0]?.availability_status_error;\n    }\n\n    return {\n      display_name: application.display_name,\n      availability_status,\n      availability_status_error,\n    };\n  }\n};\n\nexport const applicationFormatter = (apps, item, { appTypes }) => {\n  const applications = apps\n    .map((app) => getAppStatus(app, item, appTypes))\n    .filter(Boolean)\n    .sort((a, b) => a.display_name.localeCompare(b.display_name));\n\n  if (applications.length === 0) {\n    return '--';\n  }\n\n  return <EnhancedLabelGroup numLabels={2} collapsedText applications={applications} />;\n};\n","import {\n  applicationFormatter,\n  availabilityFormatter,\n  dateFormatter,\n  importedFormatter,\n  nameFormatter,\n  sourceTypeFormatter,\n} from './formatters';\n\nexport const sourcesColumns = (intl, notSortable = false) => [\n  {\n    title: intl.formatMessage({\n      id: 'sources.name',\n      defaultMessage: 'Name',\n    }),\n    value: 'name',\n    formatter: nameFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.type',\n      defaultMessage: 'Type',\n    }),\n    value: 'source_type_id',\n    formatter: sourceTypeFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.connectedApplications',\n      defaultMessage: 'Connected applications',\n    }),\n    value: 'applications',\n    formatter: applicationFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.addedDate',\n      defaultMessage: 'Date added',\n    }),\n    value: 'created_at',\n    formatter: dateFormatter,\n    sortable: !notSortable,\n  },\n  {\n    hidden: true,\n    value: 'imported',\n    formatter: importedFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.status',\n      defaultMessage: 'Status',\n    }),\n    value: 'availability_status',\n    formatter: availabilityFormatter,\n  },\n];\n\nconst KEBAB_COLUMN = 1;\nconst COUNT_OF_COLUMNS = sourcesColumns({ formatMessage: () => '' }).length;\n\nexport const COLUMN_COUNT = COUNT_OF_COLUMNS + KEBAB_COLUMN;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./authSelect.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./authSelect.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./cardSelect.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./cardSelect.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./costManagement.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./costManagement.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./loaders.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./loaders.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}