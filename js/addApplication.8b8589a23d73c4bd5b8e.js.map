{"version":3,"sources":["webpack://sources-ui/./src/api/doAttachApp.js","webpack://sources-ui/./src/components/AddApplication/AddApplication.js","webpack://sources-ui/./src/components/AddApplication/AddApplicationSchema.js","webpack://sources-ui/./src/components/AddApplication/AuthTypeSetter.js","webpack://sources-ui/./src/components/AddApplication/WizardBody.js","webpack://sources-ui/./src/components/AddApplication/reducer.js","webpack://sources-ui/./src/components/AddApplication/schema/authenticationSelectionStep.js","webpack://sources-ui/./src/components/AddApplication/schema/generateFirstAuthStep.js","webpack://sources-ui/./src/components/AddApplication/schema/selectAuthenticationStep.js"],"names":["removeEmpty","obj","Object","keys","forEach","key","isEmpty","doAttachApp","values","formApi","authenticationInitialValues","initialValues","appTypes","formState","getState","allFormValues","selectedAuthId","authentication","id","authInitialValues","find","valuesWithoutAuth","newAddedValues","addedDiff","updatedValues","updatedDiff","newAddedAuthValues","updatedAuthValues","filteredValues","merge","cloneDeep","source","startDate","Date","sourceId","endpointId","endpoint","promises","push","getSourcesApi","updateSource","Promise","resolve","undefined","hasModifiedEndpoint","hasModifiedUrl","url","urlOrHost","scheme","host","port","path","endPointPort","parseInt","endpointData","isNaN","updateEndpoint","createEndpointData","source_id","createEndpoint","application","application_type_id","applicationData","doCreateApplication","all","_sourceDataOut","endpointDataOut","applicationDataOut","updateAuthentication","authenticationDataOut","authenticationData","resource_id","resource_type","createAuthentication","appId","authenticationId","authAppData","application_id","authentication_id","createAuthApp","checkAppAvailability","timeout","timeoutedApps","includes","app","applications","console","error","deleteApplication","handleError","errorMessage","onSubmit","dispatch","setState","setSelectedApp","type","then","data","checkSourceStatus","loadEntities","FormTemplateWrapper","props","AddApplication","intl","useIntl","history","useHistory","selectedApp","useRef","saveSelectedApp","current","useParams","app_type_id","loaded","useIsLoaded","useSelector","sources","shallowEqual","sourceTypesLoaded","appTypesLoaded","sourceTypes","useSource","useDispatch","useReducer","reducer","initialState","state","container","document","createElement","applicationType","removeApp","removeAppSubmit","display_name","useEffect","removeAppAction","sourceAppsLength","length","endpoints","listEndpointAuthentications","authenticationsValues","endpointToUrl","goToSources","replaceRouteId","routes","title","formatMessage","defaultMessage","appName","description","onSubmitWrapper","onReset","sourceType","source_type_id","shownStep","computeSourceStatus","name","availability_status_error","sourceTypeName","filteredAppTypes","filter","supported_source_types","filterApps","map","value","label","schema","createSchema","hasAvailableApps","onSubmitFinal","onStay","hidden","cancelBeforeExit","_a","_a1","newValues","isChanged","diff","isCancelling","ApplicationSummary","TextVariants","p","hasAlreadySupportedAuthType","authValues","appType","authtype","get","fields","authenticationValues","applicationTypes","authenticationFields","firstStep","hasMultipleAuthTypes","hasAlreadyType","imported","appendEndpoint","hasEndpointStep","supported_authentication_types","generateFirstAuthStep","auth","appAdditionalSteps","schemaBuilder","authenticationSelectionStep","selectAuthenticationStep","appTypeSetter","component","componentTypes","hideField","initialValue","inModal","showTitles","crossroads","buttonLabels","submit","cancel","back","Content","splice","innerSetter","formOptions","selectedAuthentication","startsWith","change","replace","AuthTypeSetter","useFormApi","useState","setInitialValue","propTypes","PropTypes","WizardBodyAttach","step","isFinishedStep","string","nextStep","hasSupportedAuthType","options","isRequired","validate","validatorTypes","REQUIRED","endpointFields","additionalStepName","skipEndpoint","customSteps","additionalIncludesStepKeys","hasCustomStep","stepProps","firstAdditonalStep","additionalFields","SelectAuthenticationDescription","applicationTypeName","authenticationTypeName","generateAuthSelectionOptions","supportedAuthTypeName","supportedAuthType","includeUsername","username","authentications","includeAppName","ifAppSupported","isAppAvailable","supportedAuthTypes","hasAvailableAuthentications"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;CAGA;;AACO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAS;AAClCC,QAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyB,UAACC,GAAD,EAAS;AAChC,QAAIJ,GAAG,CAACI,GAAD,CAAH,IAAY,qEAAOJ,GAAG,CAACI,GAAD,CAAV,MAAoB,QAApC,EAA8C;AAC5C,UAAIC,sDAAO,CAACL,GAAG,CAACI,GAAD,CAAJ,CAAX,EAAuB;AACrB,eAAOJ,GAAG,CAACI,GAAD,CAAV;AACD,OAFD,MAEO;AACLL,mBAAW,CAACC,GAAG,CAACI,GAAD,CAAJ,CAAX;AACD;AACF,KAND,MAMO,IAAI,OAAOJ,GAAG,CAACI,GAAD,CAAV,KAAoB,WAAxB,EAAqC;AAC1C,aAAOJ,GAAG,CAACI,GAAD,CAAV;AACD;AACF,GAVD;AAWA,SAAOJ,GAAP;AACD,CAbM;AAeA,IAAMM,WAAW;AAAA,iLAAG,iBAAOC,MAAP,EAAeC,OAAf,EAAwBC,2BAAxB,EAAqDC,aAArD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAoEC,oBAApE,2DAA+E,EAA/E;AAGnBC,qBAHmB,GAGPJ,OAAO,CAACK,QAAR,EAHO;AAKnBC,yBALmB,GAKHF,SAAS,CAACL,MALP;AAOnBQ,0BAPmB,4BAOFD,aAAa,CAACE,cAPZ,0DAOF,sBAA8BC,EAP5B;AASnBC,6BATmB,GASCH,cAAc,IAAIN,2BAA2B,CAACU,IAA5B,CAAiC;AAAA,kBAAGF,EAAH,SAAGA,EAAH;AAAA,qBAAYA,EAAE,KAAKF,cAAnB;AAAA,aAAjC,CATnB;AAWjBC,0BAXiB,GAWwBT,MAXxB,CAWjBS,cAXiB,EAWEI,iBAXF,yFAWwBb,MAXxB;AAanBc,0BAbmB,GAaFC,2DAAS,CAACZ,aAAD,EAAgBU,iBAAhB,CAbP;AAcnBG,yBAdmB,GAcHC,6DAAW,CAACd,aAAD,EAAgBU,iBAAhB,CAdR;AAenBK,8BAfmB,GAeEH,2DAAS,CAACJ,iBAAD,EAAoBF,cAApB,CAfX;AAgBnBU,6BAhBmB,GAgBCF,6DAAW,CAACN,iBAAD,EAAoBF,cAApB,CAhBZ;AAkBnBW,0BAlBmB,GAkBF5B,WAAW,iCAC7B6B,oDAAK,CAACC,wDAAS,CAACR,cAAD,CAAV,EAA4BE,aAA5B,CADwB;AAEhCP,4BAAc,oBACTY,oDAAK,CAACC,wDAAS,CAACJ,kBAAD,CAAV,EAAgCC,iBAAhC,CADI;AAFkB,eAlBT;AAAA;;AAAA,gBA0BlBZ,aA1BkB,aA0BlBA,aA1BkB,wCA0BlBA,aAAa,CAAEgB,MA1BG,kDA0BlB,sBAAuBb,EA1BL;AAAA;AAAA;AAAA;;AAAA,kBA2Bf,mBA3Be;;AAAA;AA8BjBc,qBA9BiB,GA8BL,IAAIC,IAAJ,EA9BK;AA+BjBC,oBA/BiB,GA+BNnB,aAAa,CAACgB,MAAd,CAAqBb,EA/Bf;AAgCnBiB,sBAhCmB,GAgCNpB,aAhCM,aAgCNA,aAhCM,gDAgCNA,aAAa,CAAEqB,QAhCT,0DAgCN,sBAAyBlB,EAhCnB;AAkCjBmB,oBAlCiB,GAkCN,EAlCM;;AAoCvB,gBAAIT,cAAc,CAACG,MAAf,IAAyB,CAACzB,sDAAO,CAACsB,cAAc,CAACG,MAAhB,CAArC,EAA8D;AAC5DM,sBAAQ,CAACC,IAAT,CAAcC,yDAAa,GAAGC,YAAhB,CAA6BN,QAA7B,EAAuCN,cAAc,CAACG,MAAtD,CAAd;AACD,aAFD,MAEO;AACLM,sBAAQ,CAACC,IAAT,CAAcG,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAd;AACD;;AAEKC,+BA1CiB,GA0CKhB,cAAc,CAACQ,QAAf,IAA2B,CAAC9B,sDAAO,CAACsB,cAAc,CAACQ,QAAhB,CA1CxC;AA2CjBS,0BA3CiB,GA2CAjB,cAAc,CAACkB,GAAf,IAAsB,CAACxC,sDAAO,CAACsB,cAAc,CAACkB,GAAhB,CA3C9B;;AA6CvB,gBAAIF,mBAAmB,IAAIC,cAA3B,EAA2C;AAAA,2BACJE,2DAAS,CAACnB,cAAD,CADL,EACjCoB,MADiC,cACjCA,MADiC,EACzBC,IADyB,cACzBA,IADyB,EACnBC,IADmB,cACnBA,IADmB,EACbC,IADa,cACbA,IADa;AAGnCC,0BAHmC,GAGpBC,QAAQ,CAACH,IAAD,EAAO,EAAP,CAHY;AAKnCI,0BALmC,GAKpBtD,WAAW,iCAC3B4B,cAAc,CAACQ,QADY;AAE9BY,sBAAM,EAANA,MAF8B;AAG9BC,oBAAI,EAAJA,IAH8B;AAI9BC,oBAAI,EAAEK,KAAK,CAACH,YAAD,CAAL,GAAsBT,SAAtB,GAAkCS,YAJV;AAK9BD,oBAAI,EAAJA;AAL8B,iBALS;;AAazC,kBAAIhB,UAAJ,EAAgB;AACdE,wBAAQ,CAACC,IAAT,CAAcC,yDAAa,GAAGiB,cAAhB,CAA+BrB,UAA/B,EAA2CmB,YAA3C,CAAd;AACD,eAFD,MAEO;AACCG,kCADD,mCAEAH,YAFA;AAGH,6BAAS,IAHN;AAIHI,2BAAS,EAAExB;AAJR;AAOLG,wBAAQ,CAACC,IAAT,CAAcC,yDAAa,GAAGoB,cAAhB,CAA+BF,kBAA/B,CAAd;AACD;AACF,aAxBD,MAwBO;AACLpB,sBAAQ,CAACC,IAAT,CAAcG,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAd;AACD;;AAED,yCAAIf,cAAc,CAACgC,WAAnB,kDAAI,sBAA4BC,mBAAhC,EAAqD;AAC7CC,6BAD6C,mCAE9ClC,cAAc,CAACgC,WAF+B;AAGjDF,yBAAS,EAAExB;AAHsC;AAMnDG,sBAAQ,CAACC,IAAT,CAAcyB,+DAAmB,CAACD,eAAD,CAAjC;AACD,aAPD,MAOO;AACLzB,sBAAQ,CAACC,IAAT,CAAcG,OAAO,CAACC,OAAR,CAAgBC,SAAhB,CAAd;AACD,aAlFsB,CAoFvB;;;AApFuB;AAAA,mBAqF6CF,OAAO,CAACuB,GAAR,CAAY3B,QAAZ,CArF7C;;AAAA;AAAA;AAAA;AAqFhB4B,0BArFgB;AAqFAC,2BArFA;AAqFiBC,8BArFjB;;AAAA,kBAyFnBvC,cAAc,CAACX,cAAf,IAAiC,CAACX,sDAAO,CAACsB,cAAc,CAACX,cAAhB,CAzFtB;AAAA;AAAA;AAAA;;AAAA,iBA0FjBD,cA1FiB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA2FWuB,yDAAa,GAAG6B,oBAAhB,CAAqCpD,cAArC,EAAqDY,cAAc,CAACX,cAApE,CA3FX;;AAAA;AA2FnBoD,iCA3FmB;AAAA;AAAA;;AAAA;AA6FbC,8BA7Fa,mCA8Fd1C,cAAc,CAACX,cA9FD;AA+FjBsD,yBAAW,EAAE,CAAAL,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEhD,EAAjB,MAAuBiD,kBAAvB,aAAuBA,kBAAvB,uBAAuBA,kBAAkB,CAAEjD,EAA3C,CA/FI;AAgGjBsD,2BAAa,EAAEN,eAAe,SAAf,IAAAA,eAAe,WAAf,IAAAA,eAAe,CAAEhD,EAAjB,GAAsB,UAAtB,GAAmC,aAhGjC;AAiGjBwC,uBAAS,EAAExB;AAjGM;AAAA;AAAA,mBAoGWK,yDAAa,GAAGkC,oBAAhB,CAAqCH,kBAArC,CApGX;;AAAA;AAoGnBD,iCApGmB;;AAAA;AAwGvBK,iBAAK,GAAGP,kBAAH,aAAGA,kBAAH,uBAAGA,kBAAkB,CAAEjD,EAA5B;AAEMyD,4BA1GiB,GA0GE3D,cAAc,8BAAIqD,qBAAJ,0DAAI,sBAAuBnD,EAA3B,CA1GhB;;AAAA,kBA4GnBiD,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,IAAAA,kBAAkB,CAAEjD,EAApB,IAA0ByD,gBA5GP;AAAA;AAAA;AAAA;;AA6GfC,uBA7Ge,GA6GD;AAClBC,4BAAc,EAAEV,kBAAkB,CAACjD,EADjB;AAElB4D,+BAAiB,EAAEH;AAFD,aA7GC;AAAA;AAAA,mBAkHfpC,yDAAa,GAAGwC,aAAhB,CAA8BH,WAA9B,CAlHe;;AAAA;AAAA,iBAsHnBzC,UAtHmB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuHJ6C,iIAAoB,CAAC7C,UAAD,EAAaQ,SAAb,EAAwBA,SAAxB,EAAmC,aAAnC,EAAkDX,SAAlD,CAvHhB;;AAAA;AAuHrBI,oBAvHqB;;AAAA;AAAA,iBA0HnB+B,kBA1HmB;AAAA;AAAA;AAAA;;AA2Hfc,mBA3He,GA2HLC,+GAAa,CAACtE,QAAD,CAAb,CAAwBuE,QAAxB,CAAiChB,kBAAkB,CAACN,mBAApD,IAA2E,KAA3E,GAAmF,CA3H9E;AAAA;AAAA,mBA4HHmB,iIAAoB,CAACb,kBAAkB,CAACjD,EAApB,EAAwB+D,OAAxB,CA5HjB;;AAAA;AA4HfG,eA5He;AAAA;AA8HZlE,gBAAE,EAAEkE,GAAG,CAAClE,EA9HI;AA8HAmE,0BAAY,EAAE,CAACD,GAAD;AA9Hd,eA8HyBhD,QAAQ,IAAI;AAAEA,sBAAQ,EAAE,CAACA,QAAD;AAAZ,aA9HrC;;AAAA;AAAA,6CAiIhB,EAjIgB;;AAAA;AAAA;AAAA;AAmIvB;AACAkD,mBAAO,CAACC,KAAR;;AApIuB,iBAqInBb,KArImB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAsIfnC,yDAAa,GAAGiD,iBAAhB,CAAkCd,KAAlC,CAtIe;;AAAA;AAAA;AAAA,mBAyIIe,+GAAW,aAzIf;;AAAA;AAyIjBC,wBAzIiB;AAAA,kBA0IjBA,YA1IiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXnF,WAAW;AAAA;AAAA;AAAA,GAAjB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEO,IAAMoF,QAAQ,GAAG,SAAXA,QAAW,CACtBnF,MADsB,EAEtBC,OAFsB,EAGtBC,2BAHsB,EAItBkF,QAJsB,EAKtBC,QALsB,EAMtBlF,aANsB,EAOtBC,QAPsB,EAQtBkF,cARsB,EASnB;AACHD,UAAQ,CAAC;AAAEE,QAAI,EAAE,QAAR;AAAkBvF,UAAM,EAANA,MAAlB;AAA0BC,WAAO,EAAPA;AAA1B,GAAD,CAAR;AAEA,SAAOF,8DAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,2BAAlB,EAA+CC,aAA/C,EAA8DC,QAA9D,CAAX,CACJoF,IADI;AAAA,mLACC,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACJC,wFAAiB,CAACvF,aAAa,CAACoB,MAAd,CAAqBb,EAAtB,CAAjB;AADI;AAAA,qBAEE0E,QAAQ,CAACO,qEAAY,EAAb,CAFV;;AAAA;AAGJL,4BAAc,CAAC;AAAEtF,sBAAM,EAAE;AAAEoD,6BAAW,EAAE;AAAf;AAAV,eAAD,CAAd;AAHI,+CAIGiC,QAAQ,CAAC;AAAEE,oBAAI,EAAE,QAAR;AAAkBE,oBAAI,EAAJA;AAAlB,eAAD,CAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;;AAAA;AAAA;AAAA;AAAA,gBAOE,UAACV,KAAD;AAAA,WACLM,QAAQ,CAAC;AACPE,UAAI,EAAE,OADC;AAEPR,WAAK,EAALA;AAFO,KAAD,CADH;AAAA,GAPF,CAAP;AAaD,CAzBM;;AA2BP,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD;AAAA,sBAAW,2DAAC,oGAAD,4EAAkBA,KAAlB;AAAyB,oBAAgB,EAAE;AAA3C,KAAX;AAAA,CAA5B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAC3B,MAAMC,IAAI,GAAGC,oDAAO,EAApB;AACA,MAAMC,OAAO,GAAGC,4DAAU,EAA1B;AACA,MAAMC,WAAW,GAAGC,6CAAM,EAA1B;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,QAAajD,WAAb,SAAGpD,MAAH,CAAaoD,WAAb;AAAA,WAAkC+C,WAAW,CAACG,OAAZ,GAAsBlD,WAAxD;AAAA,GAAxB;;AAJ2B,mBAKHmD,2DAAS,EALN;AAAA,MAKnBC,WALmB,cAKnBA,WALmB;;AAO3B,MAAMC,MAAM,GAAGC,gEAAW,EAA1B;;AAP2B,qBAS0CC,wDAAW,CAAC;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,WAAiBA,OAAjB;AAAA,GAAD,EAA2BC,qDAA3B,CATrD;AAAA,MASnBzG,QATmB,gBASnBA,QATmB;AAAA,MAST0G,iBATS,gBASTA,iBATS;AAAA,MASUC,cATV,gBASUA,cATV;AAAA,MAS0BC,WAT1B,gBAS0BA,WAT1B;;AAW3B,MAAMzF,MAAM,GAAG0F,4DAAS,EAAxB;AAEA,MAAM7B,QAAQ,GAAG8B,wDAAW,EAA5B;;AAb2B,oBAeDC,iDAAU,CAACC,8CAAD,EAAUC,mDAAV,CAfT;AAAA;AAAA,MAepBC,KAfoB;AAAA,MAebjC,QAfa;;AAiB3B,MAAMkC,SAAS,GAAGnB,6CAAM,CAACoB,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAD,CAAxB;AAEA,MAAMC,eAAe,GAAGtH,QAAQ,CAACQ,IAAT,CAAc;AAAA,QAAGF,EAAH,SAAGA,EAAH;AAAA,WAAYA,EAAE,KAAK8F,WAAnB;AAAA,GAAd,CAAxB;;AAEA,MAAMmB,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtBtC,YAAQ,CAAC;AAAEE,UAAI,EAAE;AAAR,KAAD,CAAR;AAEA,WAAOqC,0DAAe,CACpB;AACElH,QAAE,iBAAE4G,KAAK,CAAC7B,IAAR,gDAAE,YAAY/E,EADlB;AAEEmH,kBAAY,oBAAEzH,QAAQ,CAACQ,IAAT,CAAc;AAAA;;AAAA,YAAGF,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAE,sBAAK4G,KAAK,CAAC7B,IAAX,iDAAK,aAAYpC,mBAAjB,CAAd;AAAA,OAAd,CAAF,mDAAE,eAAmEwE;AAFnF,KADoB,EAKpB9B,IALoB,EAMpB5D,SANoB,EAOpBiD,QAPoB,EAQpB7D,MARoB,CAAtB;AAUD,GAbD;;AAeAuG,kDAAS,CAAC,YAAM;AACd,QAAIvG,MAAJ,EAAY;AACV;AACA,UAAMwG,eAAe,GAAGT,KAAK,CAACU,gBAAN,IAA0BzG,MAAM,CAACsD,YAAP,CAAoBoD,MAA9C,IAAwDX,KAAK,CAACU,gBAAN,GAAyB,CAAzG;AAEA3C,cAAQ,CAAC;AACPE,YAAI,EAAE,qBADC;AAEP0C,cAAM,EAAE1G,MAAM,CAACsD,YAAP,CAAoBoD;AAFrB,OAAD,CAAR;;AAKA,UAAI,CAACF,eAAL,EAAsB;AACpB,YAAIxG,MAAM,CAAC2G,SAAP,IAAoB3G,MAAM,CAAC2G,SAAP,CAAiB,CAAjB,CAAxB,EAA6C;AAC3CnG,uEAAa,GACVoG,2BADH,CAC+B5G,MAAM,CAAC2G,SAAP,CAAiB,CAAjB,EAAoBxH,EADnD,EAEG8E,IAFH,CAEQ;AAAA,gBAAGC,IAAH,SAAGA,IAAH;AAAA,mBACJJ,QAAQ,CAAC;AACPE,kBAAI,EAAE,qBADC;AAEP6C,mCAAqB,EAAE3C,IAFhB;AAGPtF,2BAAa,EAAE;AACboB,sBAAM,EAANA,MADa;AAEbK,wBAAQ,EAAEL,MAAM,CAAC2G,SAAP,CAAiB,CAAjB,CAFG;AAGb5F,mBAAG,EAAE+F,iEAAa,CAAC9G,MAAM,CAAC2G,SAAP,CAAiB,CAAjB,CAAD,CAHL;AAIb9E,2BAAW,EAAE+C,WAAW,CAACG;AAJZ,eAHR;AASPtG,oBAAM,EAAE;AATD,aAAD,CADJ;AAAA,WAFR;AAeD,SAhBD,MAgBO;AACLqF,kBAAQ,CAAC;AACPE,gBAAI,EAAE,4BADC;AAEPpF,yBAAa,EAAE;AAAEoB,oBAAM,EAANA,MAAF;AAAU6B,yBAAW,EAAE+C,WAAW,CAACG;AAAnC,aAFR;AAGPtG,kBAAM,EAAE;AAHD,WAAD,CAAR;AAKD;AACF;AACF;AACF,GApCQ,EAoCN,CAACuB,MAAD,CApCM,CAAT;;AAsCA,MAAM+G,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMrC,OAAO,CAACnE,IAAR,CAAayG,wDAAc,CAACC,+DAAD,EAA4BjH,MAAM,CAACb,EAAnC,CAA3B,CAAN;AAAA,GAApB;;AAEA,MAAM+H,KAAK,GAAG1C,IAAI,CAAC2C,aAAL,CACZ;AACEhI,MAAE,EAAE,iCADN;AAEEiI,kBAAc,EAAE;AAFlB,GADY,EAKZ;AACEC,WAAO,EAAE,CAAAlB,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEG,YAAjB,KAAiC;AAD5C,GALY,CAAd;AASA,MAAMgB,WAAW,GAAG9C,IAAI,CAAC2C,aAAL,CAClB;AACEhI,MAAE,EAAE,uCADN;AAEEiI,kBAAc,EAAE;AAFlB,GADkB,EAKlB;AACEC,WAAO,EAAE,CAAAlB,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEG,YAAjB,KAAiC;AAD5C,GALkB,CAApB;;AAUA,MAAI,CAAC,CAACd,cAAD,IAAmB,CAACD,iBAApB,IAAyC,CAACL,MAA1C,IAAoDa,KAAK,CAACA,KAAN,KAAgB,SAArE,KAAmFA,KAAK,CAACA,KAAN,KAAgB,YAAvG,EAAqH;AACnH,wBACE,2DAAC,iDAAD;AACE,iBAAW,EAAEgB,WADf;AAEE,WAAK,EAAEG,KAFT;AAGE,iBAAW,EAAEI,WAHf;AAIE,UAAI,eACF,2DAAC,wGAAD;AACE,kBAAU,EAAE9C,IAAI,CAAC2C,aAAL,CAAmB;AAC7BhI,YAAE,EAAE,iBADyB;AAE7BiI,wBAAc,EAAE;AAFa,SAAnB,CADd;AAKE,mBAAW,EAAE5C,IAAI,CAAC2C,aAAL,CAAmB;AAC9BhI,YAAE,EAAE,eAD0B;AAE9BiI,wBAAc,EAAE;AAFc,SAAnB,CALf;AASE,eAAO,EAAEL;AATX;AALJ,MADF;AAoBD;;AAED,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAAC9I,MAAD,EAASC,OAAT;AAAA,WACtBkF,QAAQ,CAACnF,MAAD,EAASC,OAAT,EAAkBqH,KAAK,CAACc,qBAAxB,EAA+ChD,QAA/C,EAAyDC,QAAzD,EAAmEiC,KAAK,CAACnH,aAAzE,EAAwFC,QAAxF,EAAkGiG,eAAlG,CADc;AAAA,GAAxB;;AAGA,MAAIiB,KAAK,CAACA,KAAN,KAAgB,YAApB,EAAkC;AAChC,wBACE,2DAAC,iDAAD;AACE,WAAK,EAAEmB,KADT;AAEE,iBAAW,EAAEI,WAFf;AAGE,iBAAW,EAAEP,WAHf;AAIE,UAAI,eACF,2DAAC,wGAAD;AACE,mBAAW,EAAEvC,IAAI,CAAC2C,aAAL,CAAmB;AAC9BhI,YAAE,EAAE,eAD0B;AAE9BiI,wBAAc,EAAE;AAFc,SAAnB,CADf;AAKE,eAAO,EAAEL,WALX;AAME,kBAAU,EAAEvC,IAAI,CAAC2C,aAAL,CAAmB;AAC7BhI,YAAE,EAAE,oBADyB;AAE7BiI,wBAAc,EAAE;AAFa,SAAnB,CANd;AAUE,mBAAW,EAAE5C,IAAI,CAAC2C,aAAL,CAAmB;AAC9BhI,YAAE,EAAE,2BAD0B;AAE9BiI,wBAAc,EACZ;AAH4B,SAAnB;AAVf;AALJ,MADF;AAyBD;;AAED,MAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA,WAAM1D,QAAQ,CAAC;AAAEE,UAAI,EAAE;AAAR,KAAD,CAAd;AAAA,GAAhB;;AAEA,MAAMyD,UAAU,GAAGhC,WAAW,CAACpG,IAAZ,CAAiB,UAAC2E,IAAD;AAAA,WAAUA,IAAI,CAAC7E,EAAL,KAAYa,MAAM,CAAC0H,cAA7B;AAAA,GAAjB,CAAnB;;AAEA,MAAI3B,KAAK,CAACA,KAAN,KAAgB,QAApB,EAA8B;AAC5B,QAAI4B,SAAJ;;AAEA,QAAI5B,KAAK,CAACA,KAAN,KAAgB,UAApB,EAAgC;AAC9B4B,eAAS,gBACP,2DAAC,wGAAD;AACE,eAAO,EAAEH,OADX;AAEE,eAAO,EAAET,WAFX;AAGE,yBAAiB,EAAEvC,IAAI,CAAC2C,aAAL,CAAmB;AACpChI,YAAE,EAAE,eADgC;AAEpCiI,wBAAc,EAAE;AAFoB,SAAnB,CAHrB;AAOE,qBAAa,EAAE;AAAA,iBAAMG,eAAe,CAACxB,KAAK,CAACtH,MAAP,EAAesH,KAAK,CAACrH,OAArB,CAArB;AAAA,SAPjB;AAQE,wBAAgB,eACd,2DAAC,kFAAD;AACE,mBAAS,EAAC,GADZ;AAEE,gBAAM,EAAC,QAFT;AAGE,cAAI,EAAC,8EAHP;AAIE,aAAG,EAAC;AAJN,WAMG8F,IAAI,CAAC2C,aAAL,CAAmB;AAClBhI,YAAE,EAAE,mBADc;AAElBiI,wBAAc,EAAE;AAFE,SAAnB,CANH;AATJ,QADF;AAwBD,KAzBD,MAyBO;AACL,cAAQQ,oHAAmB,CAAC7B,KAAK,CAAC7B,IAAP,CAA3B;AACE;AACE,cAAIuD,UAAU,CAACI,IAAX,KAAoB,QAAxB,EAAkC;AAChCF,qBAAS,gBAAG,2DAAC,+GAAD;AAAoB,qBAAO,EAAEZ;AAA7B,cAAZ;AACD,WAFD,MAEO;AACLY,qBAAS,gBACP,2DAAC,yGAAD;AACE,mBAAK,EAAEnD,IAAI,CAAC2C,aAAL,CAAmB;AACxBhI,kBAAE,EAAE,iCADoB;AAExBiI,8BAAc,EAAE;AAFQ,eAAnB,CADT;AAKE,+BAAiB,EAAE,IALrB;AAME,qBAAO,EAAEL,WANX;AAOE,+BAAiB,EAAEvC,IAAI,CAAC2C,aAAL,CAAmB;AACpChI,kBAAE,EAAE,cADgC;AAEpCiI,8BAAc,EAAE;AAFoB,eAAnB,CAPrB;AAWE,+BAAiB,EAAE5C,IAAI,CAAC2C,aAAL,CAAmB;AACpChI,kBAAE,EAAE,uBADgC;AAEpCiI,8BAAc,EAAE;AAFoB,eAAnB;AAXrB,cADF;AAkBD;;AAED;;AACF,aAAK,aAAL;AACEO,mBAAS,gBACP,2DAAC,wGAAD;AACE,mBAAO,EAAEH,OADX;AAEE,mBAAO,EAAET,WAFX;AAGE,mBAAO,EACL,0BAAAhB,KAAK,CAAC7B,IAAN,CAAWZ,YAAX,0GAA0B,CAA1B,mFAA8BwE,yBAA9B,8BACA/B,KAAK,CAAC7B,IAAN,CAAW7D,QADX,kFACA,qBAAsB,CAAtB,CADA,0DACA,sBAA0ByH,yBAD1B,KAEAtD,IAAI,CAAC2C,aAAL,CAAmB;AACjBhI,gBAAE,EAAE,qBADa;AAEjBiI,4BAAc,EAAE;AAFC,aAAnB,CANJ;AAWE,iBAAK,EAAE5C,IAAI,CAAC2C,aAAL,CAAmB;AACxBhI,gBAAE,EAAE,iCADoB;AAExBiI,4BAAc,EAAE;AAFQ,aAAnB,CAXT;AAeE,4BAAgB,eACd,2DAAC,sFAAD;AAAQ,qBAAO,EAAC,MAAhB;AAAuB,qBAAO,EAAEhB;AAAhC,eACG5B,IAAI,CAAC2C,aAAL,CAAmB;AAClBhI,gBAAE,EAAE,kBADc;AAElBiI,4BAAc,EAAE;AAFE,aAAnB,CADH,CAhBJ;AAuBE,qBAAS,EAAE;AAAA,kCACT,2DAAC,kDAAD;AAAM,kBAAE,EAAEJ,wDAAc,CAACC,+DAAD,EAA4BjH,MAAM,CAACb,EAAnC;AAAxB,8BACE,2DAAC,sFAAD;AAAQ,uBAAO,EAAC,SAAhB;AAA0B,yBAAS,EAAC;AAApC,iBACGqF,IAAI,CAAC2C,aAAL,CAAmB;AAClBhI,kBAAE,EAAE,mBADc;AAElBiI,8BAAc,EAAE;AAFE,eAAnB,CADH,CADF,CADS;AAAA;AAvBb,YADF;AAoCA;;AACF,aAAK,SAAL;AACEO,mBAAS,gBACP,2DAAC,wGAAD;AACE,6BAAiB,EAAEnD,IAAI,CAAC2C,aAAL,CAAmB;AACpChI,gBAAE,EAAE,cADgC;AAEpCiI,4BAAc,EAAE;AAFoB,aAAnB,CADrB;AAKE,mBAAO,EAAEL;AALX,YADF;AASA;AA1EJ;AA4ED;;AAED,wBAAO,2DAAC,iDAAD;AAAY,WAAK,EAAEG,KAAnB;AAA0B,iBAAW,EAAEI,WAAvC;AAAoD,iBAAW,EAAEP,WAAjE;AAA8E,UAAI,EAAEY;AAApF,MAAP;AACD;;AAED,MAAMI,cAAc,GAAGN,UAAU,IAAIA,UAAU,CAACI,IAAhD;AACA,MAAMG,gBAAgB,GAAGnJ,QAAQ,CAC9BoJ,MADsB,CACf,UAACjE,IAAD;AAAA,WAAUA,IAAI,CAACkE,sBAAL,CAA4B9E,QAA5B,CAAqC2E,cAArC,CAAV;AAAA,GADe,EAEtBE,MAFsB,CAEfE,sGAFe,EAGtBC,GAHsB,CAGlB,UAACpE,IAAD;AAAA,WAAW;AACdqE,WAAK,EAAErE,IAAI,CAAC7E,EADE;AAEdmJ,WAAK,EAAEtE,IAAI,CAACsC;AAFE,KAAX;AAAA,GAHkB,CAAzB;;AAQA,MACE,CAACH,eAAD,IACAnG,MAAM,CAACsD,YAAP,CAAoBjE,IAApB,CAAyB;AAAA,QAAGyC,mBAAH,SAAGA,mBAAH;AAAA,WAA6BA,mBAAmB,KAAKmD,WAArD;AAAA,GAAzB,CADA,IAEA,CAACkB,eAAe,CAAC+B,sBAAhB,CAAuC9E,QAAvC,CAAgDqE,UAAU,CAACI,IAA3D,CAHH,EAIE;AACA,wBAAO,2DAAC,sDAAD;AAAU,QAAE,EAAEb,wDAAc,CAACC,+DAAD,EAA4BjH,MAAM,CAACb,EAAnC;AAA5B,MAAP;AACD;;AAED,MAAMoJ,MAAM,GAAGC,+DAAY,CACzBhE,IADyB,EAEzBiD,UAFyB,EAGzBtB,eAHyB,EAIzBJ,KAAK,CAACc,qBAJmB,EAKzB7G,MALyB,EAMzBgG,SAAS,CAACjB,OANe,EAOzBmC,KAPyB,EAQzBI,WARyB,EASzBzI,QATyB,CAA3B;AAYA,MAAM4J,gBAAgB,GAAGT,gBAAgB,CAACtB,MAAjB,GAA0B,CAAnD;AACA,MAAMgC,aAAa,GAAGD,gBAAgB,GAAGlB,eAAH,GAAqBR,WAA3D;;AAEA,MAAM4B,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB3C,aAAS,CAACjB,OAAV,CAAkB6D,MAAlB,GAA2B,KAA3B;AACA9E,YAAQ,CAAC;AAAEE,UAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAHD;;AAKA,MAAM6E,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACpK,MAAD,EAAY;AACnC;AADmC,+BAEWsH,KAAK,CAACnH,aAFjB;AAAA,QAEdkK,EAFc,wBAE3BjH,WAF2B;AAAA,QAEPjD,aAFO,iIAGnC;;;AAHmC,QAIdmK,GAJc,GAIQtK,MAJR,CAI3BoD,WAJ2B;AAAA,QAINmH,SAJM,yFAIQvK,MAJR;;AAMnC,QAAMwK,SAAS,GAAG,CAAC1K,qDAAO,CAAC2K,uDAAI,CAACtK,aAAD,EAAgBoK,SAAhB,CAAL,CAA1B;;AAEA,QAAIC,SAAJ,EAAe;AACbjD,eAAS,CAACjB,OAAV,CAAkB6D,MAAlB,GAA2B,IAA3B;AACA9E,cAAQ,CAAC;AAAEE,YAAI,EAAE,kBAAR;AAA4BvF,cAAM,EAANA;AAA5B,OAAD,CAAR;AACD,KAHD,MAGO;AACLsI,iBAAW;AACZ;AACF,GAdD;;AAgBA,sBACE,2DAAC,uDAAD,qBACE,2DAAC,uGAAD;AACE,SAAK,EAAEvC,IAAI,CAAC2C,aAAL,CAAmB;AACxBhI,QAAE,EAAE,mCADoB;AAExBiI,oBAAc,EAAE;AAFQ,KAAnB,CADT;AAKE,UAAM,EAAErB,KAAK,CAACoD,YALhB;AAME,UAAM,EAAER,MANV;AAOE,UAAM,EAAE5B;AAPV,IADF,eAUE,2DAAC,oEAAD;AACE,UAAM,EAAEwB,MADV;AAEE,oBAAgB,EAAE,KAFpB;AAGE,YAAQ,EAAEG,aAHZ;AAIE,YAAQ,EAAEG,gBAJZ;AAKE,iBAAa,EAAE9C,KAAK,CAACnH,aALvB;AAME,gBAAY,EAAE;AAAEH,YAAM,EAAE;AAAV,KANhB;AAOE,SAAK,EAAEqG,eAPT;AAQE,gBAAY,EAAE,IARhB;AASE,gBAAY,EAAET;AAThB,IAVF,CADF;AAwBD,CApVD;;AAsVA,iEAAeE,cAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1ZA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEO,IAAM6E,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACtC,MAAM5E,IAAI,GAAGC,mDAAO,EAApB;AAEA,sBACE,2DAAC,qGAAD,qBACE,2DAAC,uFAAD;AAAM,aAAS,EAAE4E,iGAAcC;AAA/B,KACG9E,IAAI,CAAC2C,aAAL,CAAmB;AAClBhI,MAAE,EAAE,6BADc;AAElBiI,kBAAc,EACZ;AAHgB,GAAnB,CADH,CADF,CADF;AAWD,CAdM;AAgBA,IAAMmC,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,MAACC,UAAD,uEAAc,EAAd;AAAA,MAAkBC,OAAlB;AAAA,MAA2B1B,cAA3B;AAAA,SACzCyB,UAAU,CAACnK,IAAX,CAAgB;AAAA,QAAGqK,QAAH,QAAGA,QAAH;AAAA,WAAkBA,QAAQ,KAAKC,iDAAG,CAACF,OAAD,2CAA4C1B,cAA5C,SAAlC;AAAA,GAAhB,CADyC;AAAA,CAApC;;AAGP,IAAM6B,MAAM,GAAG,SAATA,MAAS,CAACpF,IAAD,EAAOiD,UAAP,EAAmBgC,OAAnB,EAA4BI,oBAA5B,EAAkD7J,MAAlD,EAA0DgG,SAA1D,EAAqEkB,KAArE,EAA4EI,WAA5E,EAAyFwC,gBAAzF,EAA8G;AAC3H,MAAIC,oBAAoB,GAAG,EAA3B;AACA,MAAIC,SAAJ;AACA,MAAIC,oBAAJ;AACA,MAAIC,cAAJ;;AAEA,MAAI,CAAClK,MAAM,CAACmK,QAAZ,EAAsB;AAAA;;AACpB,QAAMC,cAAc,GAAG3C,UAAU,CAACc,MAAX,CAAkBlI,QAAlB,CAA2BuI,MAA3B,GAAoCnB,UAAU,CAACc,MAAX,CAAkBlI,QAAlB,CAA2BuJ,MAA/D,GAAwE,EAA/F;AACA,QAAMS,eAAe,GAAGD,cAAc,CAAC1D,MAAf,KAA0B,CAAlD;;AAEA,QAAI+C,OAAO,CAACvB,sBAAR,CAA+B9E,QAA/B,CAAwCqE,UAAU,CAACI,IAAnD,CAAJ,EAA8D;AAC5D4B,aAAO,CAACa,8BAAR,CAAuC7C,UAAU,CAACI,IAAlD,EAAwDxJ,OAAxD,CAAgE,UAACqL,QAAD,EAAc;AAC5EK,4BAAoB,CAACxJ,IAArB,CAA0BgK,sEAAqB,CAAC9C,UAAD,EAAagC,OAAb,EAAsBW,cAAtB,EAAsCV,QAAtC,EAAgDlF,IAAhD,CAA/C;AACD,OAFD;AAGD;;AAEDiD,cAAU,CAACc,MAAX,CAAkBrJ,cAAlB,CAAiCb,OAAjC,CAAyC,UAACmM,IAAD,EAAU;AACjD,UAAIf,OAAO,CAACvB,sBAAR,CAA+B9E,QAA/B,CAAwCqE,UAAU,CAACI,IAAnD,CAAJ,EAA8D;AAC5D,YAAM4C,kBAAkB,GAAGC,oHAAA,CAAiCjD,UAAU,CAACI,IAA5C,EAAkD2C,IAAI,CAACxG,IAAvD,EAA6DyF,OAAO,CAAC5B,IAArE,CAA3B;;AAEA,YAAI4C,kBAAkB,CAAC/D,MAAnB,GAA4B,CAAhC,EAAmC;AACjCqD,8BAAoB,CAACxJ,IAArB,OAAAwJ,oBAAoB,kFACfW,uHAAA,CACDD,kBADC,EAEDhD,UAAU,CAACI,IAFV,EAGD2C,IAAI,CAACxG,IAHJ,EAIDqG,eAJC,EAKDG,IAAI,CAACZ,MALJ,EAMDH,OAAO,CAAC5B,IANP,CADe,EAApB;AAUD;AACF;AACF,KAjBD;;AAmBA,QAAIwC,eAAJ,EAAqB;AACnBN,0BAAoB,CAACxJ,IAArB,CAA0BmK,oHAAA,CAAiCjD,UAAU,CAACc,MAAX,CAAkBlI,QAAnD,EAA6DoH,UAAU,CAACI,IAAxE,CAA1B;AACD;;AAEDmC,aAAS,GAAGD,oBAAoB,CAAC,CAAD,CAAhC;AAEAE,wBAAoB,GAAG,CAAAR,OAAO,SAAP,IAAAA,OAAO,WAAP,qCAAAA,OAAO,CAAEa,8BAAT,CAAwC7C,UAAU,CAACI,IAAnD,iFAA0DnB,MAA1D,IAAmE,CAA1F;;AAEA,QAAIuD,oBAAJ,EAA0B;AACxBD,eAAS,GAAGW,4EAA2B,CAAClD,UAAD,EAAagC,OAAb,EAAsBjF,IAAtB,EAA4BqF,oBAA5B,CAAvC;AACD;;AAEDK,kBAAc,GAAGX,2BAA2B,CAACM,oBAAD,EAAuBJ,OAAvB,EAAgChC,UAAU,CAACI,IAA3C,CAA5C;;AAEA,QAAIqC,cAAJ,EAAoB;AAClBF,eAAS,GAAGY,yEAAwB,CAAC;AACnCpG,YAAI,EAAJA,IADmC;AAEnCxE,cAAM,EAANA,MAFmC;AAGnC6J,4BAAoB,EAApBA,oBAHmC;AAInCpC,kBAAU,EAAVA,UAJmC;AAKnCpE,WAAG,EAAEoG,OAL8B;AAMnCK,wBAAgB,EAAhBA;AANmC,OAAD,CAApC;AAQD;AACF;;AAED,MAAMe,aAAa,GAAG;AACpBC,aAAS,EAAEC,+GADS;AAEpBlD,QAAI,EAAE,iCAFc;AAGpBmD,aAAS,EAAE,IAHS;AAIpBC,gBAAY,EAAExB,OAAO,CAACtK;AAJF,GAAtB;AAOA,SAAO;AACLyK,UAAM,EAAE,CACN;AACEkB,eAAS,EAAEC,2GADb;AAEElD,UAAI,EAAE,QAFR;AAGEX,WAAK,EAALA,KAHF;AAIEgE,aAAO,EAAE,IAJX;AAKElF,eAAS,EAATA,SALF;AAMEmF,gBAAU,EAAE,IANd;AAOEC,gBAAU,EAAE,CAAC,wBAAD,EAA2B,UAA3B,CAPd;AAQE9D,iBAAW,EAAXA,WARF;AASE+D,kBAAY,EAAE;AACZC,cAAM,EAAE9G,IAAI,CAAC2C,aAAL,CAAmB;AACzBhI,YAAE,EAAE,aADqB;AAEzBiI,wBAAc,EAAE;AAFS,SAAnB,CADI;AAKZmE,cAAM,EAAE/G,IAAI,CAAC2C,aAAL,CAAmB;AACzBhI,YAAE,EAAE,gBADqB;AAEzBiI,wBAAc,EAAE;AAFS,SAAnB,CALI;AASZoE,YAAI,EAAEhH,IAAI,CAAC2C,aAAL,CAAmB;AACvBhI,YAAE,EAAE,cADmB;AAEvBiI,wBAAc,EAAE;AAFO,SAAnB;AATM,OAThB;AAuBEwC,YAAM,4FACA5J,MAAM,CAACmK,QAAP,GACA,EADA,GAEA,iCAEOH,SAFP;AAGIJ,cAAM,4FAAMI,SAAS,CAACJ,MAAhB,IAAwBiB,aAAxB;AAHV,SAHA,IASJ;AACE3D,aAAK,EAAE1C,IAAI,CAAC2C,aAAL,CAAmB;AACxBhI,YAAE,EAAE,uBADoB;AAExBiI,wBAAc,EAAE;AAFQ,SAAnB,CADT;AAKES,YAAI,EAAE,SALR;AAME+B,cAAM,GACJ;AACEkB,mBAAS,EAAE,aADb;AAEEjD,cAAI,EAAE,qBAFR;AAGE4D,iBAAO,EAAErC;AAHX,SADI,EAMJ;AACE0B,mBAAS,EAAE,SADb;AAEEjD,cAAI,EAAE,SAFR;AAGEpC,qBAAW,EAAE,CAACgC,UAAD,CAHf;AAIEqC,0BAAgB,EAAE,CAACL,OAAD;AAJpB,SANI,yFAYAzJ,MAAM,CAACmK,QAAP,GAAkB,CAACU,aAAD,CAAlB,GAAoC,EAZpC;AANR,OATI,mFA8BAX,cAAc,IAAID,oBAAlB,GAAyCF,oBAAzC,GAAgEA,oBAAoB,CAAC2B,MAArB,CAA4B,CAA5B,CA9BhE;AAvBR,KADM;AADH,GAAP;AA4DD,CAhID;;AAkIA,iEAAe9B,MAAf,E;;;;;;;;;;;;;;;;;;;;;;;;ACnKA;AACA;AACA;AAEO,IAAM+B,WAAW,GAAG,SAAdA,WAAc,OAAmE;AAAA,MAAhEC,WAAgE,QAAhEA,WAAgE;AAAA,MAAnD/B,oBAAmD,QAAnDA,oBAAmD;AAAA,MAA7BgC,sBAA6B,QAA7BA,sBAA6B;;AAC5F,MAAI,CAACA,sBAAsB,CAACC,UAAvB,CAAkC,MAAlC,CAAL,EAAgD;AAC9C,QAAM5M,cAAc,GAAG2K,oBAAoB,CAACxK,IAArB,CAA0B;AAAA,UAAGF,EAAH,SAAGA,EAAH;AAAA,aAAYA,EAAE,KAAK0M,sBAAnB;AAAA,KAA1B,CAAvB;AAEAD,eAAW,CAACG,MAAZ,CAAmB,gBAAnB,EAAqC7M,cAArC;AACD,GAJD,MAIO;AACL,QAAMwK,QAAQ,GAAGmC,sBAAsB,CAACG,OAAvB,CAA+B,MAA/B,EAAuC,EAAvC,CAAjB;AAEAJ,eAAW,CAACG,MAAZ,CAAmB,gBAAnB,EAAqC;AAAErC,cAAQ,EAARA;AAAF,KAArC;AACD;AACF,CAVM;AAYA,IAAMuC,cAAc,GAAG,SAAjBA,cAAiB,QAA8B;AAAA,MAA3BpC,oBAA2B,SAA3BA,oBAA2B;AAC1D,MAAM+B,WAAW,GAAGM,qGAAU,EAA9B;AAEA,MAAML,sBAAsB,GAAGD,WAAW,CAAC7M,QAAZ,GAAuBN,MAAvB,CAA8BoN,sBAA7D;;AAH0D,kBAKlBM,+CAAQ,CAACN,sBAAD,CALU;AAAA;AAAA,MAKnDZ,YALmD;AAAA,MAKrCmB,eALqC;;AAO1D7F,kDAAS,CAAC,YAAM;AACd,QAAI0E,YAAY,KAAKY,sBAArB,EAA6C;AAC3CF,iBAAW,CAAC;AACVC,mBAAW,EAAXA,WADU;AAEV/B,4BAAoB,EAApBA,oBAFU;AAGVgC,8BAAsB,EAAtBA;AAHU,OAAD,CAAX;AAKAO,qBAAe,CAACxL,SAAD,CAAf;AACD;AACF,GATQ,EASN,CAACiL,sBAAD,CATM,CAAT;AAWA,SAAO,IAAP;AACD,CAnBM;AAqBPI,cAAc,CAACI,SAAf,GAA2B;AACzBxC,sBAAoB,EAAEyC,yDAAA,CAAkBA,0DAAlB;AADG,CAA3B,C;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASzF,WAAT,QAASA,WAAT;AAAA,MAAsBG,KAAtB,QAAsBA,KAAtB;AAAA,MAA6BI,WAA7B,QAA6BA,WAA7B;AAAA,sBACvB,2DAAC,4FAAD;AACE,UAAM,EAAE,IADV;AAEE,WAAO,EAAEP,WAFX;AAGE,SAAK,EAAEG,KAHT;AAIE,eAAW,EAAEI,WAJf;AAKE,SAAK,EAAE,CACL;AACEO,UAAI,EAAE,QADR;AAEEiD,eAAS,EAAE0B,IAFb;AAGEC,oBAAc,EAAE;AAHlB,KADK;AALT,IADuB;AAAA,CAAzB;;AAgBAF,gBAAgB,CAACF,SAAjB,GAA6B;AAC3BG,MAAI,EAAEF,iEADqB;AAE3BvF,aAAW,EAAEuF,iEAFc;AAG3BpF,OAAK,EAAEoF,wDAHoB;AAI3BhF,aAAW,EAAEgF,wDAAgBI;AAJF,CAA7B;AAOA,iEAAeH,gBAAf,E;;;;;;;;;;;;;;;;;;;;;;;;AC3BO,IAAMzG,YAAY,GAAG;AAC1BC,OAAK,EAAE,SADmB;AAE1BvC,OAAK,EAAE,EAFmB;AAG1B/E,QAAM,EAAE,EAHkB;AAI1BoI,uBAAqB,EAAE,EAJG;AAK1BJ,kBAAgB,EAAE,CALQ;AAM1B7H,eAAa,EAAE,EANW;AAO1BuK,cAAY,EAAE;AAPY,CAArB;;AAUP,IAAMtD,OAAO,GAAG,SAAVA,OAAU,CAACE,KAAD,QAAiG;AAAA,MAAvF/B,IAAuF,QAAvFA,IAAuF;AAAA,MAAjF0C,MAAiF,QAAjFA,MAAiF;AAAA,MAAzEG,qBAAyE,QAAzEA,qBAAyE;AAAA,MAAlDjI,aAAkD,QAAlDA,aAAkD;AAAA,MAAnC4E,KAAmC,QAAnCA,KAAmC;AAAA,MAA5B/E,MAA4B,QAA5BA,MAA4B;AAAA,MAApByF,IAAoB,QAApBA,IAAoB;AAAA,MAAdxF,OAAc,QAAdA,OAAc;;AAC/G,UAAQsF,IAAR;AACE,SAAK,qBAAL;AACE,6CACK+B,KADL;AAEEU,wBAAgB,EAAEC;AAFpB;;AAIF,SAAK,qBAAL;AACE,6CACKX,KADL;AAEEc,6BAAqB,EAArBA,qBAFF;AAGEjI,qBAAa,EAAbA,aAHF;AAIEH,cAAM,EAAE,EAJV;AAKEsH,aAAK,EAAEA,KAAK,CAACA,KAAN,KAAgB,SAAhB,GAA4B,QAA5B,GAAuCA,KAAK,CAACA;AALtD;;AAOF,SAAK,4BAAL;AACE,6CACKA,KADL;AAEEnH,qBAAa,EAAbA,aAFF;AAGEH,cAAM,EAAE,EAHV;AAIEsH,aAAK,EAAEA,KAAK,CAACA,KAAN,KAAgB,SAAhB,GAA4B,QAA5B,GAAuCA,KAAK,CAACA;AAJtD;;AAMF,SAAK,OAAL;AACE,6CACKA,KADL;AAEEA,aAAK,EAAE;AAFT;;AAIF,SAAK,QAAL;AACE,6CACKA,KADL;AAEEtH,cAAM,EAANA,MAFF;AAGEC,eAAO,EAAPA,OAHF;AAIEqH,aAAK,EAAE;AAJT;;AAMF,SAAK,QAAL;AACE,6CACKA,KADL;AAEEA,aAAK,EAAE,UAFT;AAGE7B,YAAI,EAAJA;AAHF;;AAKF,SAAK,OAAL;AACE,6CACK6B,KADL;AAEEA,aAAK,EAAE,SAFT;AAGEvC,aAAK,EAALA;AAHF;;AAKF,SAAK,kBAAL;AACE,6CACKuC,KADL;AAEEoD,oBAAY,EAAE,CAACpD,KAAK,CAACoD;AAFvB,SAGM1K,MAAM,IAAI;AAAEA,cAAM,EAANA;AAAF,OAHhB;;AAKF;AACE,aAAOsH,KAAP;AApDJ;AAsDD,CAvDD;;AAyDA,iEAAeF,OAAf,E;;;;;;;;;;;;;;;;;ACnEA;AACA;;AAEA,IAAM8E,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAClD,UAAD,EAAagC,OAAb,EAAsBjF,IAAtB,EAA4BqF,oBAA5B,EAAqD;AACvF,MAAM8C,QAAQ,GAAG,SAAXA,QAAW,OAA2C;AAAA,2BAAxClO,MAAwC;AAAA,QAA9BoD,WAA8B,eAA9BA,WAA8B;AAAA,QAAjB6H,QAAiB,eAAjBA,QAAiB;;AAC1D,QAAIA,QAAJ,EAAc;AACZ,UAAMkD,oBAAoB,GAAG/C,oBAAoB,CAACxK,IAArB,CAA0B,UAACmL,IAAD;AAAA,eAAUA,IAAI,CAACd,QAAL,KAAkBA,QAA5B;AAAA,OAA1B,CAA7B;;AAEA,UAAIkD,oBAAJ,EAA0B;AACxB,eAAO,sBAAP;AACD;;AAED,uBAAUnF,UAAU,CAACI,IAArB,cAA6BhG,WAAW,IAAIA,WAAW,CAACC,mBAAxD,cAA+E4H,QAA/E;AACD;AACF,GAVD;;AAYA,SAAO;AACL7B,QAAI,2BAAoB4B,OAAO,CAACtK,EAA5B,CADC;AAEL+H,SAAK,EAAE1C,IAAI,CAAC2C,aAAL,CAAmB;AACxBhI,QAAE,EAAE,mCADoB;AAExBiI,oBAAc,EAAE;AAFQ,KAAnB,CAFF;AAMLwC,UAAM,EAAE,CACN;AACEkB,eAAS,EAAEC,0GADb;AAEElD,UAAI,EAAE,UAFR;AAGEgF,aAAO,EAAEpD,OAAO,CAACa,8BAAR,CAAuC7C,UAAU,CAACI,IAAlD,EAAwDO,GAAxD,CAA4D,UAACpE,IAAD;AAAA;;AAAA,eAAW;AAC9EqE,eAAK,EAAErE,IADuE;AAE9EsE,eAAK,EAAE,0BAAAb,UAAU,CAACc,MAAX,CAAkBrJ,cAAlB,CAAiCG,IAAjC,CAAsC,UAACqK,QAAD;AAAA,mBAAcA,QAAQ,CAAC1F,IAAT,KAAkBA,IAAhC;AAAA,WAAtC,iFAA6E6D,IAA7E,KAAqF;AAFd,SAAX;AAAA,OAA5D,CAHX;AAOEiF,gBAAU,EAAE,IAPd;AAQEC,cAAQ,EAAE,CAAC;AAAE/I,YAAI,EAAEgJ,6GAAuBC;AAA/B,OAAD;AARZ,KADM,CANH;AAkBLN,YAAQ,EAARA;AAlBK,GAAP;AAoBD,CAjCD;;AAmCA,iEAAehC,2BAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;;AAEA,IAAMJ,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACvG,IAAD,EAAOyF,OAAP,EAAgByD,cAAhB,EAAgCxD,QAAhC,EAA0ClF,IAA1C,EAAmD;AAC/E,MAAIoF,MAAM,GAAG,gFAAIsD,cAAP,CAAV;;AAEA,MAAIxC,kHAAA,CAA+B1G,IAAI,CAAC6D,IAApC,EAA0C6B,QAA1C,EAAoDD,OAAO,CAAC5B,IAA5D,CAAJ,EAAuE;AACrE+B,UAAM,GAAG,EAAT;AACD;;AAED,MAAMY,IAAI,GAAGxG,IAAI,CAACuE,MAAL,CAAYrJ,cAAZ,CAA2BG,IAA3B,CAAgC;AAAA,QAAG2E,IAAH,QAAGA,IAAH;AAAA,WAAcA,IAAI,KAAK0F,QAAvB;AAAA,GAAhC,CAAb;AAEA,MAAMyD,kBAAkB,aAAMnJ,IAAI,CAAC6D,IAAX,cAAmB6B,QAAnB,cAA+BD,OAAO,CAAC5B,IAAvC,qBAAxB;AAEA,MAAMuF,YAAY,GAAG1C,oHAAA,CAAiC1G,IAAI,CAAC6D,IAAtC,EAA4C6B,QAA5C,EAAsDD,OAAO,CAAC5B,IAA9D,CAArB;AACA,MAAMwF,WAAW,GAAG3C,gHAAA,CAA6B1G,IAAI,CAAC6D,IAAlC,EAAwC6B,QAAxC,EAAkDD,OAAO,CAAC5B,IAA1D,CAApB;AAEA,MAAI8E,QAAJ;;AAEA,MAAIjC,oHAAA,CAAiC1G,IAAI,CAAC6D,IAAtC,EAA4C6B,QAA5C,EAAsDD,OAAO,CAAC5B,IAA9D,EAAoEnB,MAApE,GAA6E,CAAjF,EAAoF;AAClFiG,YAAQ,GAAGQ,kBAAX;AACD,GAFD,MAEO,IAAID,cAAc,CAACxG,MAAf,KAA0B,CAA1B,IAA+B,CAAC0G,YAApC,EAAkD;AACvDT,YAAQ,aAAM3I,IAAI,CAAC6D,IAAX,cAAR;AACD,GAFM,MAEA;AACL8E,YAAQ,GAAG,SAAX;AACD;;AAED,MAAMW,0BAA0B,GAAG5C,uHAAA,CAAoC1G,IAAI,CAAC6D,IAAzC,EAA+C6B,QAA/C,EAAyDD,OAAO,CAAC5B,IAAjE,CAAnC;AACA,MAAM0F,aAAa,GAAG7C,qHAAA,CAAkC1G,IAAI,CAAC6D,IAAvC,EAA6C6B,QAA7C,EAAuDD,OAAO,CAAC5B,IAA/D,CAAtB;AAEA,MAAI2F,SAAS,GAAG,EAAhB;;AAEA,MAAID,aAAJ,EAAmB;AACjB,QAAME,kBAAkB,GAAG/C,oHAAA,CAAiC1G,IAAI,CAAC6D,IAAtC,EAA4C6B,QAA5C,EAAsDD,OAAO,CAAC5B,IAA9D,EAAoExI,IAApE,CAAyE;AAAA,UAAGwI,IAAH,SAAGA,IAAH;AAAA,aAAc,CAACA,IAAf;AAAA,KAAzE,CAA3B;AACA,QAAM6F,gBAAgB,GAAGhD,yHAAA,CAAsCF,IAAI,CAACZ,MAA3C,EAAmDuD,kBAAnD,CAAzB;;AAEA,QAAIM,kBAAkB,CAACd,QAAvB,EAAiC;AAC/BA,cAAQ,GAAGc,kBAAkB,CAACd,QAA9B;AACD,KAFD,MAEO,IAAIO,cAAc,CAACxG,MAAf,KAA0B,CAA1B,IAA+B,CAAC0G,YAAhC,IAAgD,CAACC,WAArD,EAAkE;AACvEV,cAAQ,aAAM3I,IAAI,CAAC6D,IAAX,cAAR;AACD,KAFM,MAEA;AACL8E,cAAQ,GAAG,SAAX;AACD;;AAEDa,aAAS,mCACJC,kBADI;AAEP7D,YAAM,4FACDA,MADC,mFAEDc,sHAAA,2FACG+C,kBAAkB,CAAC7D,MADtB,mFACiC8D,gBADjC,IAED1J,IAAI,CAAC6D,IAFJ,EAGD6B,QAHC,EAIDD,OAAO,CAAC5B,IAJP,CAFC;AAFC,MAAT;AAYD;;AAED;AACEA,QAAI,YAAK7D,IAAI,CAAC6D,IAAV,cAAkB4B,OAAO,CAACtK,EAA1B,cAAgCuK,QAAhC,CADN;AAEExC,SAAK,EAAE1C,IAAI,CAAC2C,aAAL,CAAmB;AACxBhI,QAAE,EAAE,8BADoB;AAExBiI,oBAAc,EAAE;AAFQ,KAAnB,CAFT;AAMEwC,UAAM,4FACDA,MADC,mFAEDc,yHAAA,CAAsC1G,IAAI,CAAC6D,IAA3C,EAAiD6B,QAAjD,EAA2DD,OAAO,CAAC5B,IAAnE,CAFC,mFAGD6C,sHAAA,CACDA,kHAAA,CAA+BF,IAAI,CAACZ,MAApC,EAA4C0D,0BAA5C,CADC,EAEDtJ,IAAI,CAAC6D,IAFJ,EAGD6B,QAHC,EAIDD,OAAO,CAAC5B,IAJP,CAHC,EANR;AAgBE8E,YAAQ,EAARA;AAhBF,KAiBKa,SAjBL;AAmBD,CA1ED;;AA4EA,iEAAejD,qBAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEO,IAAMoD,+BAA+B,GAAG,SAAlCA,+BAAkC,OAAqD;AAAA,MAAlDC,mBAAkD,QAAlDA,mBAAkD;AAAA,MAA7BC,sBAA6B,QAA7BA,sBAA6B;AAClG,MAAMrJ,IAAI,GAAGC,mDAAO,EAApB;AAEA,sBACE,2DAAC,oGAAD,qBACE,2DAAC,sFAAD;AAAM,aAAS,EAAE4E,gGAAcC;AAA/B,KACG9E,IAAI,CAAC2C,aAAL,CACC;AACEhI,MAAE,EAAE,yCADN;AAEEiI,kBAAc,EACZ;AAHJ,GADD,EAMC;AAAEwG,uBAAmB,EAAnBA,mBAAF;AAAuBC,0BAAsB,EAAtBA;AAAvB,GAND,CADH,CADF,CADF;AAcD,CAjBM;AAmBPF,+BAA+B,CAACtB,SAAhC,GAA4C;AAC1CuB,qBAAmB,EAAEtB,0DADqB;AAE1CuB,wBAAsB,EAAEvB,0DAAgBI;AAFE,CAA5C;AAKO,IAAMoB,4BAA4B,GAAG,SAA/BA,4BAA+B;AAAA,MAC1CjE,oBAD0C,SAC1CA,oBAD0C;AAAA,MAE1CkE,qBAF0C,SAE1CA,qBAF0C;AAAA,MAG1CC,iBAH0C,SAG1CA,iBAH0C;AAAA,MAI1ClE,gBAJ0C,SAI1CA,gBAJ0C;AAAA,MAK1C9J,MAL0C,SAK1CA,MAL0C;AAAA,SAO1C6J,oBAAoB,CACjB5B,MADH,CACU;AAAA,QAAGyB,QAAH,SAAGA,QAAH;AAAA,WAAkBA,QAAQ,KAAKsE,iBAA/B;AAAA,GADV,EAEG5F,GAFH,CAEO,UAAC3J,MAAD,EAAY;AACf,QAAMwP,eAAe,GAAGxP,MAAM,CAACyP,QAAP,cAAsBzP,MAAM,CAACyP,QAA7B,IAA0C,EAAlE;AAEA,QAAM7K,GAAG,GAAGrD,MAAM,CAACsD,YAAP,CAAoBjE,IAApB,CAAyB;AAAA,UAAG8O,eAAH,SAAGA,eAAH;AAAA,aAAyBA,eAAe,CAAC9O,IAAhB,CAAqB;AAAA,YAAGF,EAAH,SAAGA,EAAH;AAAA,eAAYA,EAAE,KAAKV,MAAM,CAACU,EAA1B;AAAA,OAArB,CAAzB;AAAA,KAAzB,CAAZ;AACA,QAAMsK,OAAO,GAAGpG,GAAG,IAAIA,GAAG,CAACvB,mBAAX,GAAiCgI,gBAAgB,CAACzK,IAAjB,CAAsB;AAAA,UAAGF,EAAH,SAAGA,EAAH;AAAA,aAAYA,EAAE,KAAKkE,GAAG,CAACvB,mBAAvB;AAAA,KAAtB,CAAjC,GAAqG,EAArH;AACA,QAAMsM,cAAc,GAAG3E,OAAO,cAAOA,OAAO,CAACnD,YAAf,sBAA2C7H,MAAM,CAACU,EAAlD,CAA9B;AACA,QAAMmJ,KAAK,aAAMyF,qBAAN,SAA8BE,eAA9B,SAAgDG,cAAhD,CAAX;AAEA,WAAO;AACL9F,WAAK,EAALA,KADK;AAELD,WAAK,EAAE5J,MAAM,CAACU;AAFT,KAAP;AAID,GAdH,CAP0C;AAAA,CAArC;;AAuBP,IAAMyL,wBAAwB,GAAG,SAA3BA,wBAA2B,QAA+E;AAAA;;AAAA,MAA5EpG,IAA4E,SAA5EA,IAA4E;AAAA,MAAtExE,MAAsE,SAAtEA,MAAsE;AAAA,MAA9D6J,oBAA8D,SAA9DA,oBAA8D;AAAA,MAAxCpC,UAAwC,SAAxCA,UAAwC;AAAA,MAA5BpE,GAA4B,SAA5BA,GAA4B;AAAA,MAAvByG,gBAAuB,SAAvBA,gBAAuB;;AAC9G,MAAM6C,QAAQ,GAAG,SAAXA,QAAW;AAAA,6BAAGlO,MAAH;AAAA,QAAaiL,QAAb,gBAAaA,QAAb;AAAA,QAAuBxK,cAAvB,gBAAuBA,cAAvB;AAAA,qBACZuI,UAAU,CAACI,IADC,cACOxE,GAAG,CAAClE,EADX,cACiBuK,QAAQ,KAAIxK,cAAJ,aAAIA,cAAJ,uBAAIA,cAAc,CAAEwK,QAApB,CADzB;AAAA,GAAjB;;AAGA,MAAME,MAAM,GAAG,CACb;AACEkB,aAAS,EAAE,aADb;AAEEjD,QAAI,EAAE,gBAFR;AAGE4D,WAAO,EAAEQ,2DAHX;AAIEpC,wBAAoB,EAApBA,oBAJF;AAKEmB,aAAS,EAAE;AALb,GADa,CAAf;AAUA,MAAMqD,cAAc,GAAGhL,GAAG,CAAC6E,sBAAJ,CAA2B9E,QAA3B,CAAoCqE,UAAU,CAACI,IAA/C,CAAvB;AACA,MAAMyG,cAAc,GAAG,0BAACtO,MAAM,CAACsD,YAAR,iDAAC,qBAAqBjE,IAArB,CAA0B;AAAA,QAAGyC,mBAAH,SAAGA,mBAAH;AAAA,WAA6BA,mBAAmB,KAAKuB,GAAG,CAAClE,EAAzD;AAAA,GAA1B,CAAD,CAAvB;;AAEA,MAAIkP,cAAc,IAAIC,cAAtB,EAAsC;AACpC,QAAMC,kBAAkB,GAAG5E,iDAAG,CAACtG,GAAD,2CAAwCoE,UAAU,CAACI,IAAnD,QAA4D,EAA5D,CAA9B;AAEA0G,sBAAkB,CAAClQ,OAAnB,CAA2B,UAAC2P,iBAAD,EAAuB;AAChD,UAAMQ,2BAA2B,GAAG3E,oBAAoB,CAACxK,IAArB,CAA0B;AAAA,YAAGqK,QAAH,UAAGA,QAAH;AAAA,eAAkBA,QAAQ,KAAKsE,iBAA/B;AAAA,OAA1B,CAApC;;AAEA,UAAIQ,2BAAJ,EAAiC;AAC/B,YAAMT,qBAAqB,GAAGpE,iDAAG,CAAClC,UAAD,2BAAsC,EAAtC,CAAH,CAA6CpI,IAA7C,CAAkD;AAAA,cAAG2E,IAAH,UAAGA,IAAH;AAAA,iBAAcA,IAAI,KAAKgK,iBAAvB;AAAA,SAAlD,EAC3BnG,IADH;AAGA+B,cAAM,CAACrJ,IAAP,CAAY;AACVuK,mBAAS,EAAEC,6GADD;AAEVlD,cAAI,YAAKxE,GAAG,CAACwE,IAAT,aAFM;AAGV+B,gBAAM,EAAE,CACN;AACE/B,gBAAI,YAAKxE,GAAG,CAACwE,IAAT,mCADN;AAEEiD,qBAAS,EAAE,aAFb;AAGEW,mBAAO,EAAEkC,+BAHX;AAIEC,+BAAmB,EAAEvK,GAAG,CAACiD,YAJ3B;AAKEuH,kCAAsB,EAAEE;AAL1B,WADM,EAQN;AACEjD,qBAAS,EAAEC,0GADb;AAEElD,gBAAI,EAAE,wBAFR;AAGES,iBAAK,EAAE9D,IAAI,CAAC2C,aAAL,CAAmB;AACxBhI,gBAAE,EAAE,mCADoB;AAExBiI,4BAAc,EAAE;AAFQ,aAAnB,CAHT;AAOE0F,sBAAU,EAAE,IAPd;AAQEC,oBAAQ,EAAE,CAAC;AAAE/I,kBAAI,EAAEgJ,6GAAuBC;AAA/B,aAAD,CARZ;AASEJ,mBAAO,GACL;AACEvE,mBAAK,EAAE9D,IAAI,CAAC2C,aAAL,CACL;AACEhI,kBAAE,EAAE,wCADN;AAEEiI,8BAAc,EAAE;AAFlB,eADK,EAKL;AAAE2G,qCAAqB,EAArBA;AAAF,eALK,CADT;AAQE1F,mBAAK,gBAAS2F,iBAAT;AARP,aADK,yFAWFF,4BAA4B,CAAC;AAC9BjE,kCAAoB,EAApBA,oBAD8B;AAE9BkE,mCAAqB,EAArBA,qBAF8B;AAG9BC,+BAAiB,EAAjBA,iBAH8B;AAI9BlE,8BAAgB,EAAhBA,gBAJ8B;AAK9B9J,oBAAM,EAANA;AAL8B,aAAD,CAX1B;AATT,WARM;AAHE,SAAZ;AA0CD;AACF,KAlDD;AAmDD;;AAED,SAAO;AACL6H,QAAI,EAAE,sBADD;AAELX,SAAK,EAAE1C,IAAI,CAAC2C,aAAL,CAAmB;AACxBhI,QAAE,EAAE,mCADoB;AAExBiI,oBAAc,EAAE;AAFQ,KAAnB,CAFF;AAMLwC,UAAM,EAANA,MANK;AAOL+C,YAAQ,EAARA;AAPK,GAAP;AASD,CAlFD;;AAoFA,iEAAe/B,wBAAf,E","file":"js/addApplication.8b8589a23d73c4bd5b8e.js","sourcesContent":["import { addedDiff, updatedDiff } from 'deep-object-diff';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources/esm/handleError';\nimport { checkAppAvailability } from '@redhat-cloud-services/frontend-components-sources/esm/getApplicationStatus';\nimport { timeoutedApps } from '@redhat-cloud-services/frontend-components-sources/esm/constants';\n\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { getSourcesApi, doCreateApplication } from './entities';\nimport { urlOrHost } from './doUpdateSource';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    if (obj[key] && typeof obj[key] === 'object') {\n      if (isEmpty(obj[key])) {\n        delete obj[key];\n      } else {\n        removeEmpty(obj[key]);\n      }\n    } else if (typeof obj[key] === 'undefined') {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\n\nexport const doAttachApp = async (values, formApi, authenticationInitialValues, initialValues, appTypes = []) => {\n  let appId;\n\n  const formState = formApi.getState();\n\n  const allFormValues = formState.values;\n\n  const selectedAuthId = allFormValues.authentication?.id;\n\n  const authInitialValues = selectedAuthId && authenticationInitialValues.find(({ id }) => id === selectedAuthId);\n\n  const { authentication, ...valuesWithoutAuth } = values;\n\n  const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n  const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n  const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n  const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n  const filteredValues = removeEmpty({\n    ...merge(cloneDeep(newAddedValues), updatedValues),\n    authentication: {\n      ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues),\n    },\n  });\n\n  try {\n    if (!allFormValues?.source?.id) {\n      throw 'Missing source id';\n    }\n\n    const startDate = new Date();\n    const sourceId = allFormValues.source.id;\n    let endpointId = allFormValues?.endpoint?.id;\n\n    const promises = [];\n\n    if (filteredValues.source && !isEmpty(filteredValues.source)) {\n      promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n    const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n    if (hasModifiedEndpoint || hasModifiedUrl) {\n      const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n      const endPointPort = parseInt(port, 10);\n\n      const endpointData = removeEmpty({\n        ...filteredValues.endpoint,\n        scheme,\n        host,\n        port: isNaN(endPointPort) ? undefined : endPointPort,\n        path,\n      });\n\n      if (endpointId) {\n        promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n      } else {\n        const createEndpointData = {\n          ...endpointData,\n          default: true,\n          source_id: sourceId,\n        };\n\n        promises.push(getSourcesApi().createEndpoint(createEndpointData));\n      }\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    if (filteredValues.application?.application_type_id) {\n      const applicationData = {\n        ...filteredValues.application,\n        source_id: sourceId,\n      };\n\n      promises.push(doCreateApplication(applicationData));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const [_sourceDataOut, endpointDataOut, applicationDataOut] = await Promise.all(promises);\n\n    let authenticationDataOut;\n\n    if (filteredValues.authentication && !isEmpty(filteredValues.authentication)) {\n      if (selectedAuthId) {\n        authenticationDataOut = await getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication);\n      } else {\n        const authenticationData = {\n          ...filteredValues.authentication,\n          resource_id: endpointDataOut?.id || applicationDataOut?.id,\n          resource_type: endpointDataOut?.id ? 'Endpoint' : 'Application',\n          source_id: sourceId,\n        };\n\n        authenticationDataOut = await getSourcesApi().createAuthentication(authenticationData);\n      }\n    }\n\n    appId = applicationDataOut?.id;\n\n    const authenticationId = selectedAuthId || authenticationDataOut?.id;\n\n    if (applicationDataOut?.id && authenticationId) {\n      const authAppData = {\n        application_id: applicationDataOut.id,\n        authentication_id: authenticationId,\n      };\n\n      await getSourcesApi().createAuthApp(authAppData);\n    }\n\n    let endpoint;\n    if (endpointId) {\n      endpoint = await checkAppAvailability(endpointId, undefined, undefined, 'getEndpoint', startDate);\n    }\n\n    if (applicationDataOut) {\n      const timeout = timeoutedApps(appTypes).includes(applicationDataOut.application_type_id) ? 10000 : 0;\n      const app = await checkAppAvailability(applicationDataOut.id, timeout);\n\n      return { id: app.id, applications: [app], ...(endpoint && { endpoint: [endpoint] }) };\n    }\n\n    return {};\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    if (appId) {\n      await getSourcesApi().deleteApplication(appId);\n    }\n\n    const errorMessage = await handleError(error);\n    throw errorMessage;\n  }\n};\n","import React, { useReducer, useEffect, useRef } from 'react';\nimport { useHistory, Link, useParams, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport isEmpty from 'lodash/isEmpty';\n\nimport filterApps from '@redhat-cloud-services/frontend-components-sources/esm/filterApps';\nimport CloseModal from '@redhat-cloud-services/frontend-components-sources/esm/CloseModal';\nimport LoadingStep from '@redhat-cloud-services/frontend-components-sources/esm/LoadingStep';\nimport ErroredStep from '@redhat-cloud-services/frontend-components-sources/esm/ErroredStep';\nimport FinishedStep from '@redhat-cloud-services/frontend-components-sources/esm/FinishedStep';\nimport TimeoutStep from '@redhat-cloud-services/frontend-components-sources/esm/TimeoutStep';\nimport computeSourceStatus from '@redhat-cloud-services/frontend-components-sources/esm/computeSourceStatus';\nimport AmazonFinishedStep from '@redhat-cloud-services/frontend-components-sources/esm/AmazonFinishedStep';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/esm/form-template';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../../views/formatters';\nimport { routes, replaceRouteId } from '../../Routes';\n\nimport { doAttachApp } from '../../api/doAttachApp';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nimport reducer, { initialState } from './reducer';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport { Text } from '@patternfly/react-core/dist/esm/components/Text';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { diff } from 'deep-object-diff';\n\nexport const onSubmit = (\n  values,\n  formApi,\n  authenticationInitialValues,\n  dispatch,\n  setState,\n  initialValues,\n  appTypes,\n  setSelectedApp\n) => {\n  setState({ type: 'submit', values, formApi });\n\n  return doAttachApp(values, formApi, authenticationInitialValues, initialValues, appTypes)\n    .then(async (data) => {\n      checkSourceStatus(initialValues.source.id);\n      await dispatch(loadEntities());\n      setSelectedApp({ values: { application: null } });\n      return setState({ type: 'finish', data });\n    })\n    .catch((error) =>\n      setState({\n        type: 'error',\n        error,\n      })\n    );\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst AddApplication = () => {\n  const intl = useIntl();\n  const history = useHistory();\n  const selectedApp = useRef();\n  const saveSelectedApp = ({ values: { application } }) => (selectedApp.current = application);\n  const { app_type_id } = useParams();\n\n  const loaded = useIsLoaded();\n\n  const { appTypes, sourceTypesLoaded, appTypesLoaded, sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const [state, setState] = useReducer(reducer, initialState);\n\n  const container = useRef(document.createElement('div'));\n\n  const applicationType = appTypes.find(({ id }) => id === app_type_id);\n\n  const removeApp = () => {\n    setState({ type: 'reset' });\n\n    return removeAppSubmit(\n      {\n        id: state.data?.id,\n        display_name: appTypes.find(({ id }) => id === state.data?.application_type_id)?.display_name,\n      },\n      intl,\n      undefined,\n      dispatch,\n      source\n    );\n  };\n\n  useEffect(() => {\n    if (source) {\n      // When app is only removed, there is no need to reload values\n      const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n      setState({\n        type: 'setSourceAppslength',\n        length: source.applications.length,\n      });\n\n      if (!removeAppAction) {\n        if (source.endpoints && source.endpoints[0]) {\n          getSourcesApi()\n            .listEndpointAuthentications(source.endpoints[0].id)\n            .then(({ data }) =>\n              setState({\n                type: 'loadAuthentications',\n                authenticationsValues: data,\n                initialValues: {\n                  source,\n                  endpoint: source.endpoints[0],\n                  url: endpointToUrl(source.endpoints[0]),\n                  application: selectedApp.current,\n                },\n                values: {},\n              })\n            );\n        } else {\n          setState({\n            type: 'loadWithoutAuthentications',\n            initialValues: { source, application: selectedApp.current },\n            values: {},\n          });\n        }\n      }\n    }\n  }, [source]);\n\n  const goToSources = () => history.push(replaceRouteId(routes.sourcesDetail.path, source.id));\n\n  const title = intl.formatMessage(\n    {\n      id: 'sources.addApplicationNameTitle',\n      defaultMessage: 'Connect {appName}',\n    },\n    {\n      appName: applicationType?.display_name || 'application',\n    }\n  );\n  const description = intl.formatMessage(\n    {\n      id: 'sources.addApplicationNameDescription',\n      defaultMessage: 'Configure {appName} for this source.',\n    },\n    {\n      appName: applicationType?.display_name || 'application',\n    }\n  );\n\n  if ((!appTypesLoaded || !sourceTypesLoaded || !loaded || state.state === 'loading') && state.state !== 'submitting') {\n    return (\n      <WizardBody\n        goToSources={goToSources}\n        title={title}\n        description={description}\n        step={\n          <LoadingStep\n            customText={intl.formatMessage({\n              id: 'sources.loading',\n              defaultMessage: 'Loading, please wait.',\n            })}\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n          />\n        }\n      />\n    );\n  }\n\n  const onSubmitWrapper = (values, formApi) =>\n    onSubmit(values, formApi, state.authenticationsValues, dispatch, setState, state.initialValues, appTypes, saveSelectedApp);\n\n  if (state.state === 'submitting') {\n    return (\n      <WizardBody\n        title={title}\n        description={description}\n        goToSources={goToSources}\n        step={\n          <LoadingStep\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n            customText={intl.formatMessage({\n              id: 'wizard.loadingText',\n              defaultMessage: 'Validating credentials',\n            })}\n            description={intl.formatMessage({\n              id: 'wizard.loadingDescription',\n              defaultMessage:\n                'This could take a minute. If you prefer not to wait, close this dialog and the process will continue.',\n            })}\n          />\n        }\n      />\n    );\n  }\n\n  const onReset = () => setState({ type: 'reset' });\n\n  const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n\n  if (state.state !== 'wizard') {\n    let shownStep;\n\n    if (state.state !== 'finished') {\n      shownStep = (\n        <ErroredStep\n          onRetry={onReset}\n          onClose={goToSources}\n          returnButtonTitle={intl.formatMessage({\n            id: 'sources.retry',\n            defaultMessage: 'Retry',\n          })}\n          primaryAction={() => onSubmitWrapper(state.values, state.formApi)}\n          secondaryActions={\n            <Text\n              component=\"a\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage({\n                id: 'wizard.openTicket',\n                defaultMessage: 'Open a support case',\n              })}\n            </Text>\n          }\n        />\n      );\n    } else {\n      switch (computeSourceStatus(state.data)) {\n        default:\n          if (sourceType.name === 'amazon') {\n            shownStep = <AmazonFinishedStep onClose={goToSources} />;\n          } else {\n            shownStep = (\n              <FinishedStep\n                title={intl.formatMessage({\n                  id: 'sources.configurationSuccessful',\n                  defaultMessage: 'Configuration successful',\n                })}\n                hideSourcesButton={true}\n                onClose={goToSources}\n                returnButtonTitle={intl.formatMessage({\n                  id: 'sources.exit',\n                  defaultMessage: 'Exit',\n                })}\n                successfulMessage={intl.formatMessage({\n                  id: 'sources.successAddApp',\n                  defaultMessage: 'Your application was successfully added.',\n                })}\n              />\n            );\n          }\n\n          break;\n        case 'unavailable':\n          shownStep = (\n            <ErroredStep\n              onRetry={onReset}\n              onClose={goToSources}\n              message={\n                state.data.applications?.[0]?.availability_status_error ||\n                state.data.endpoint?.[0]?.availability_status_error ||\n                intl.formatMessage({\n                  id: 'wizard.unknownError',\n                  defaultMessage: 'Unknown error',\n                })\n              }\n              title={intl.formatMessage({\n                id: 'sources.configurationSuccessful',\n                defaultMessage: 'Configuration unsuccessful',\n              })}\n              secondaryActions={\n                <Button variant=\"link\" onClick={removeApp}>\n                  {intl.formatMessage({\n                    id: 'wizard.removeApp',\n                    defaultMessage: 'Remove application',\n                  })}\n                </Button>\n              }\n              Component={() => (\n                <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>\n                  <Button variant=\"primary\" className=\"pf-u-mt-xl\">\n                    {intl.formatMessage({\n                      id: 'wizard.editSource',\n                      defaultMessage: 'Edit source',\n                    })}\n                  </Button>\n                </Link>\n              )}\n            />\n          );\n          break;\n        case 'timeout':\n          shownStep = (\n            <TimeoutStep\n              returnButtonTitle={intl.formatMessage({\n                id: 'sources.exit',\n                defaultMessage: 'Exit',\n              })}\n              onClose={goToSources}\n            />\n          );\n          break;\n      }\n    }\n\n    return <WizardBody title={title} description={description} goToSources={goToSources} step={shownStep} />;\n  }\n\n  const sourceTypeName = sourceType && sourceType.name;\n  const filteredAppTypes = appTypes\n    .filter((type) => type.supported_source_types.includes(sourceTypeName))\n    .filter(filterApps)\n    .map((type) => ({\n      value: type.id,\n      label: type.display_name,\n    }));\n\n  if (\n    !applicationType ||\n    source.applications.find(({ application_type_id }) => application_type_id === app_type_id) ||\n    !applicationType.supported_source_types.includes(sourceType.name)\n  ) {\n    return <Redirect to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const schema = createSchema(\n    intl,\n    sourceType,\n    applicationType,\n    state.authenticationsValues,\n    source,\n    container.current,\n    title,\n    description,\n    appTypes\n  );\n\n  const hasAvailableApps = filteredAppTypes.length > 0;\n  const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n  const onStay = () => {\n    container.current.hidden = false;\n    setState({ type: 'toggleCancelling' });\n  };\n\n  const cancelBeforeExit = (values) => {\n    // eslint-disable-next-line no-unused-vars\n    const { application: _a, ...initialValues } = state.initialValues;\n    // eslint-disable-next-line no-unused-vars\n    const { application: _a1, ...newValues } = values;\n\n    const isChanged = !isEmpty(diff(initialValues, newValues));\n\n    if (isChanged) {\n      container.current.hidden = true;\n      setState({ type: 'toggleCancelling', values });\n    } else {\n      goToSources();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CloseModal\n        title={intl.formatMessage({\n          id: 'sources.manageAppsCloseModalTitle',\n          defaultMessage: 'Exit application adding?',\n        })}\n        isOpen={state.isCancelling}\n        onStay={onStay}\n        onExit={goToSources}\n      />\n      <SourcesFormRenderer\n        schema={schema}\n        showFormControls={false}\n        onSubmit={onSubmitFinal}\n        onCancel={cancelBeforeExit}\n        initialValues={state.initialValues}\n        subscription={{ values: true }}\n        debug={saveSelectedApp}\n        clearedValue={null}\n        FormTemplate={FormTemplateWrapper}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddApplication;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\n\nimport { useIntl } from 'react-intl';\nimport * as schemaBuilder from '@redhat-cloud-services/frontend-components-sources/esm/schemaBuilder';\nimport get from 'lodash/get';\n\nimport authenticationSelectionStep from './schema/authenticationSelectionStep';\nimport generateFirstAuthStep from './schema/generateFirstAuthStep';\nimport selectAuthenticationStep from './schema/selectAuthenticationStep';\n\nexport const ApplicationSummary = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'sources.reviewAddAppSummary',\n          defaultMessage:\n            'Review the information below and click Add to add the application to your source. Use the Back button to make changes.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n  authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nconst fields = (intl, sourceType, appType, authenticationValues, source, container, title, description, applicationTypes) => {\n  let authenticationFields = [];\n  let firstStep;\n  let hasMultipleAuthTypes;\n  let hasAlreadyType;\n\n  if (!source.imported) {\n    const appendEndpoint = sourceType.schema.endpoint.hidden ? sourceType.schema.endpoint.fields : [];\n    const hasEndpointStep = appendEndpoint.length === 0;\n\n    if (appType.supported_source_types.includes(sourceType.name)) {\n      appType.supported_authentication_types[sourceType.name].forEach((authtype) => {\n        authenticationFields.push(generateFirstAuthStep(sourceType, appType, appendEndpoint, authtype, intl));\n      });\n    }\n\n    sourceType.schema.authentication.forEach((auth) => {\n      if (appType.supported_source_types.includes(sourceType.name)) {\n        const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name);\n\n        if (appAdditionalSteps.length > 0) {\n          authenticationFields.push(\n            ...schemaBuilder.createAdditionalSteps(\n              appAdditionalSteps,\n              sourceType.name,\n              auth.type,\n              hasEndpointStep,\n              auth.fields,\n              appType.name\n            )\n          );\n        }\n      }\n    });\n\n    if (hasEndpointStep) {\n      authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n    }\n\n    firstStep = authenticationFields[0];\n\n    hasMultipleAuthTypes = appType?.supported_authentication_types[sourceType.name]?.length > 1;\n\n    if (hasMultipleAuthTypes) {\n      firstStep = authenticationSelectionStep(sourceType, appType, intl, authenticationValues);\n    }\n\n    hasAlreadyType = hasAlreadySupportedAuthType(authenticationValues, appType, sourceType.name);\n\n    if (hasAlreadyType) {\n      firstStep = selectAuthenticationStep({\n        intl,\n        source,\n        authenticationValues,\n        sourceType,\n        app: appType,\n        applicationTypes,\n      });\n    }\n  }\n\n  const appTypeSetter = {\n    component: componentTypes.TEXT_FIELD,\n    name: 'application.application_type_id',\n    hideField: true,\n    initialValue: appType.id,\n  };\n\n  return {\n    fields: [\n      {\n        component: componentTypes.WIZARD,\n        name: 'wizard',\n        title,\n        inModal: true,\n        container,\n        showTitles: true,\n        crossroads: ['selectedAuthentication', 'authtype'],\n        description,\n        buttonLabels: {\n          submit: intl.formatMessage({\n            id: 'sources.add',\n            defaultMessage: 'Add',\n          }),\n          cancel: intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          }),\n          back: intl.formatMessage({\n            id: 'sources.back',\n            defaultMessage: 'Back',\n          }),\n        },\n        fields: [\n          ...(source.imported\n            ? []\n            : [\n                {\n                  ...firstStep,\n                  fields: [...firstStep.fields, appTypeSetter],\n                },\n              ]),\n          {\n            title: intl.formatMessage({\n              id: 'sources.reviewDetails',\n              defaultMessage: 'Review details',\n            }),\n            name: 'summary',\n            fields: [\n              {\n                component: 'description',\n                name: 'description-summary',\n                Content: ApplicationSummary,\n              },\n              {\n                component: 'summary',\n                name: 'summary',\n                sourceTypes: [sourceType],\n                applicationTypes: [appType],\n              },\n              ...(source.imported ? [appTypeSetter] : []),\n            ],\n          },\n          ...(hasAlreadyType || hasMultipleAuthTypes ? authenticationFields : authenticationFields.splice(1)),\n        ],\n      },\n    ],\n  };\n};\n\nexport default fields;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/esm/use-form-api';\n\nexport const innerSetter = ({ formOptions, authenticationValues, selectedAuthentication }) => {\n  if (!selectedAuthentication.startsWith('new-')) {\n    const authentication = authenticationValues.find(({ id }) => id === selectedAuthentication);\n\n    formOptions.change('authentication', authentication);\n  } else {\n    const authtype = selectedAuthentication.replace('new-', '');\n\n    formOptions.change('authentication', { authtype });\n  }\n};\n\nexport const AuthTypeSetter = ({ authenticationValues }) => {\n  const formOptions = useFormApi();\n\n  const selectedAuthentication = formOptions.getState().values.selectedAuthentication;\n\n  const [initialValue, setInitialValue] = useState(selectedAuthentication);\n\n  useEffect(() => {\n    if (initialValue !== selectedAuthentication) {\n      innerSetter({\n        formOptions,\n        authenticationValues,\n        selectedAuthentication,\n      });\n      setInitialValue(undefined);\n    }\n  }, [selectedAuthentication]);\n\n  return null;\n};\n\nAuthTypeSetter.propTypes = {\n  authenticationValues: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Wizard } from '@patternfly/react-core/dist/esm/components/Wizard/Wizard';\n\nconst WizardBodyAttach = ({ step, goToSources, title, description }) => (\n  <Wizard\n    isOpen={true}\n    onClose={goToSources}\n    title={title}\n    description={description}\n    steps={[\n      {\n        name: 'Finish',\n        component: step,\n        isFinishedStep: true,\n      },\n    ]}\n  />\n);\n\nWizardBodyAttach.propTypes = {\n  step: PropTypes.node.isRequired,\n  goToSources: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default WizardBodyAttach;\n","export const initialState = {\n  state: 'loading',\n  error: '',\n  values: {},\n  authenticationsValues: [],\n  sourceAppsLength: 0,\n  initialValues: {},\n  isCancelling: false,\n};\n\nconst reducer = (state, { type, length, authenticationsValues, initialValues, error, values, data, formApi }) => {\n  switch (type) {\n    case 'setSourceAppslength':\n      return {\n        ...state,\n        sourceAppsLength: length,\n      };\n    case 'loadAuthentications':\n      return {\n        ...state,\n        authenticationsValues,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'loadWithoutAuthentications':\n      return {\n        ...state,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'reset':\n      return {\n        ...state,\n        state: 'wizard',\n      };\n    case 'submit':\n      return {\n        ...state,\n        values,\n        formApi,\n        state: 'submitting',\n      };\n    case 'finish':\n      return {\n        ...state,\n        state: 'finished',\n        data,\n      };\n    case 'error':\n      return {\n        ...state,\n        state: 'errored',\n        error,\n      };\n    case 'toggleCancelling':\n      return {\n        ...state,\n        isCancelling: !state.isCancelling,\n        ...(values && { values }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\n\nconst authenticationSelectionStep = (sourceType, appType, intl, authenticationValues) => {\n  const nextStep = ({ values: { application, authtype } }) => {\n    if (authtype) {\n      const hasSupportedAuthType = authenticationValues.find((auth) => auth.authtype === authtype);\n\n      if (hasSupportedAuthType) {\n        return 'selectAuthentication';\n      }\n\n      return `${sourceType.name}-${application && application.application_type_id}-${authtype}`;\n    }\n  };\n\n  return {\n    name: `selectAuthType-${appType.id}`,\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication type',\n    }),\n    fields: [\n      {\n        component: componentTypes.RADIO,\n        name: 'authtype',\n        options: appType.supported_authentication_types[sourceType.name].map((type) => ({\n          value: type,\n          label: sourceType.schema.authentication.find((authtype) => authtype.type === type)?.name || 'Unknown type',\n        })),\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n      },\n    ],\n    nextStep,\n  };\n};\n\nexport default authenticationSelectionStep;\n","import * as schemaBuilder from '@redhat-cloud-services/frontend-components-sources/esm/schemaBuilder';\n\nconst generateFirstAuthStep = (type, appType, endpointFields, authtype, intl) => {\n  let fields = [...endpointFields];\n\n  if (schemaBuilder.shouldUseAppAuth(type.name, authtype, appType.name)) {\n    fields = [];\n  }\n\n  const auth = type.schema.authentication.find(({ type }) => type === authtype);\n\n  const additionalStepName = `${type.name}-${authtype}-${appType.name}-additional-step`;\n\n  const skipEndpoint = schemaBuilder.shouldSkipEndpoint(type.name, authtype, appType.name);\n  const customSteps = schemaBuilder.hasCustomSteps(type.name, authtype, appType.name);\n\n  let nextStep;\n\n  if (schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name).length > 0) {\n    nextStep = additionalStepName;\n  } else if (endpointFields.length === 0 && !skipEndpoint) {\n    nextStep = `${type.name}-endpoint`;\n  } else {\n    nextStep = 'summary';\n  }\n\n  const additionalIncludesStepKeys = schemaBuilder.getAdditionalStepKeys(type.name, authtype, appType.name);\n  const hasCustomStep = schemaBuilder.shouldSkipSelection(type.name, authtype, appType.name);\n\n  let stepProps = {};\n\n  if (hasCustomStep) {\n    const firstAdditonalStep = schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name).find(({ name }) => !name);\n    const additionalFields = schemaBuilder.getAdditionalStepFields(auth.fields, additionalStepName);\n\n    if (firstAdditonalStep.nextStep) {\n      nextStep = firstAdditonalStep.nextStep;\n    } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n      nextStep = `${type.name}-endpoint`;\n    } else {\n      nextStep = 'summary';\n    }\n\n    stepProps = {\n      ...firstAdditonalStep,\n      fields: [\n        ...fields,\n        ...schemaBuilder.injectAuthFieldsInfo(\n          [...firstAdditonalStep.fields, ...additionalFields],\n          type.name,\n          authtype,\n          appType.name\n        ),\n      ],\n    };\n  }\n\n  return {\n    name: `${type.name}-${appType.id}-${authtype}`,\n    title: intl.formatMessage({\n      id: 'sources.configureCredentials',\n      defaultMessage: 'Configure credentials',\n    }),\n    fields: [\n      ...fields,\n      ...schemaBuilder.getAdditionalAuthFields(type.name, authtype, appType.name),\n      ...schemaBuilder.injectAuthFieldsInfo(\n        schemaBuilder.getNoStepsFields(auth.fields, additionalIncludesStepKeys),\n        type.name,\n        authtype,\n        appType.name\n      ),\n    ],\n    nextStep,\n    ...stepProps,\n  };\n};\n\nexport default generateFirstAuthStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { useIntl } from 'react-intl';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/esm/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/esm/validator-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\n\nimport { AuthTypeSetter } from '../AuthTypeSetter';\n\nexport const SelectAuthenticationDescription = ({ applicationTypeName, authenticationTypeName }) => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'sources.selectAuthenticationDescription',\n            defaultMessage:\n              'Selected application { applicationTypeName } supports { authenticationTypeName } authentication type. You can use already defined authentication values or define new.',\n          },\n          { applicationTypeName, authenticationTypeName }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nSelectAuthenticationDescription.propTypes = {\n  applicationTypeName: PropTypes.string,\n  authenticationTypeName: PropTypes.string,\n};\n\nexport const generateAuthSelectionOptions = ({\n  authenticationValues,\n  supportedAuthTypeName,\n  supportedAuthType,\n  applicationTypes,\n  source,\n}) =>\n  authenticationValues\n    .filter(({ authtype }) => authtype === supportedAuthType)\n    .map((values) => {\n      const includeUsername = values.username ? `-${values.username}` : '';\n\n      const app = source.applications.find(({ authentications }) => authentications.find(({ id }) => id === values.id));\n      const appType = app && app.application_type_id ? applicationTypes.find(({ id }) => id === app.application_type_id) : '';\n      const includeAppName = appType ? `-${appType.display_name}` : `-unused-${values.id}`;\n      const label = `${supportedAuthTypeName}${includeUsername}${includeAppName}`;\n\n      return {\n        label,\n        value: values.id,\n      };\n    });\n\nconst selectAuthenticationStep = ({ intl, source, authenticationValues, sourceType, app, applicationTypes }) => {\n  const nextStep = ({ values: { authtype, authentication } }) =>\n    `${sourceType.name}-${app.id}-${authtype || authentication?.authtype}`;\n\n  const fields = [\n    {\n      component: 'description',\n      name: 'authtypesetter',\n      Content: AuthTypeSetter,\n      authenticationValues,\n      hideField: true,\n    },\n  ];\n\n  const ifAppSupported = app.supported_source_types.includes(sourceType.name);\n  const isAppAvailable = !source.applications?.find(({ application_type_id }) => application_type_id === app.id);\n\n  if (ifAppSupported && isAppAvailable) {\n    const supportedAuthTypes = get(app, `supported_authentication_types[${sourceType.name}]`, []);\n\n    supportedAuthTypes.forEach((supportedAuthType) => {\n      const hasAvailableAuthentications = authenticationValues.find(({ authtype }) => authtype === supportedAuthType);\n\n      if (hasAvailableAuthentications) {\n        const supportedAuthTypeName = get(sourceType, `schema.authentication`, {}).find(({ type }) => type === supportedAuthType)\n          .name;\n\n        fields.push({\n          component: componentTypes.SUB_FORM,\n          name: `${app.name}-subform`,\n          fields: [\n            {\n              name: `${app.name}-select-authentication-summary`,\n              component: 'description',\n              Content: SelectAuthenticationDescription,\n              applicationTypeName: app.display_name,\n              authenticationTypeName: supportedAuthTypeName,\n            },\n            {\n              component: componentTypes.RADIO,\n              name: 'selectedAuthentication',\n              label: intl.formatMessage({\n                id: 'sources.selectAuthenticationTitle',\n                defaultMessage: 'Select authentication',\n              }),\n              isRequired: true,\n              validate: [{ type: validatorTypes.REQUIRED }],\n              options: [\n                {\n                  label: intl.formatMessage(\n                    {\n                      id: 'sources.selectAuthenticationradioLabel',\n                      defaultMessage: 'Define new { supportedAuthTypeName }',\n                    },\n                    { supportedAuthTypeName }\n                  ),\n                  value: `new-${supportedAuthType}`,\n                },\n                ...generateAuthSelectionOptions({\n                  authenticationValues,\n                  supportedAuthTypeName,\n                  supportedAuthType,\n                  applicationTypes,\n                  source,\n                }),\n              ],\n            },\n          ],\n        });\n      }\n    });\n  }\n\n  return {\n    name: 'selectAuthentication',\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication',\n    }),\n    fields,\n    nextStep,\n  };\n};\n\nexport default selectAuthenticationStep;\n"],"sourceRoot":""}