{"version":3,"sources":["webpack://sources-ui/./src/components/SourceRemoveModal/AppListInRemoval.js","webpack://sources-ui/./src/components/SourceRemoveModal/SourceRemoveModal.js","webpack://sources-ui/./src/components/SourceRemoveModal/helpers.js"],"names":["AppListInRemoval","applications","useSelector","sources","shallowEqual","appTypes","length","TextVariants","p","idToName","application_type_id","map","id","propTypes","PropTypes","array","SourceRemoveModal","backPath","useHistory","push","useState","acknowledge","setAcknowledge","intl","useIntl","source","useSource","dispatch","useDispatch","sourceTypes","returnToSources","onSubmit","routes","removeSource","formatMessage","defaultMessage","title","name","actions","sourceType","find","source_type_id","filteredApps","filter","isDeleting","body","bodyVariants","typesWithExtendedText","count","value","string","defaultProps","path","app","display_name","SATELLITE_NAME","ANSIBLE_TOWER_NAME","variant","noApps","withApps","withAppsExtendedText"],"mappings":"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","file":"js/remove.fd3a63aa29c67a417786.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport { TextList } from '@patternfly/react-core/dist/esm/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/esm/components/Text/TextListItem';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\n\nimport { idToName } from './helpers';\n\nconst AppListInRemoval = ({ applications }) => {\n  const { appTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  if (applications.length === 1) {\n    return <Text variant={TextVariants.p}>{idToName(applications[0].application_type_id, appTypes)}</Text>;\n  }\n\n  return (\n    <TextList>\n      {applications.map(({ id, application_type_id }) => (\n        <TextListItem key={id}>{idToName(application_type_id, appTypes)}</TextListItem>\n      ))}\n    </TextList>\n  );\n};\n\nAppListInRemoval.propTypes = {\n  applications: PropTypes.array,\n};\n\nexport default AppListInRemoval;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/esm/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/esm/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/esm/components/Modal/Modal';\nimport { Checkbox } from '@patternfly/react-core/dist/esm/components/Checkbox/Checkbox';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\n\nimport { removeSource } from '../../redux/sources/actions';\nimport { useSource } from '../../hooks/useSource';\nimport { routes } from '../../Routes';\n\nimport { bodyVariants, typesWithExtendedText } from './helpers';\nimport AppListInRemoval from './AppListInRemoval';\n\nconst SourceRemoveModal = ({ backPath }) => {\n  const { push } = useHistory();\n\n  const [acknowledge, setAcknowledge] = useState(false);\n\n  const intl = useIntl();\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const { sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const returnToSources = () => push(backPath);\n\n  const onSubmit = () => {\n    push(routes.sources.path);\n    dispatch(\n      removeSource(\n        source.id,\n        intl.formatMessage(\n          {\n            id: 'sources.notificationDeleteMessage',\n            defaultMessage: `{title} was deleted successfully.`,\n          },\n          { title: source.name }\n        )\n      )\n    );\n  };\n\n  const actions = [\n    <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit} isDisabled={!acknowledge}>\n      {intl.formatMessage({\n        id: 'sources.deleteConfirm',\n        defaultMessage: 'Remove source and its data',\n      })}\n    </Button>,\n    <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={returnToSources}>\n      {intl.formatMessage({\n        id: 'sources.deleteCancel',\n        defaultMessage: 'Cancel',\n      })}\n    </Button>,\n  ];\n\n  const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id)?.name;\n\n  const filteredApps = source.applications.filter(({ isDeleting }) => !isDeleting);\n\n  const body = (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {filteredApps.length === 0 && bodyVariants('noApps', { name: source.name })}\n        {filteredApps.length > 0 &&\n          typesWithExtendedText.includes(sourceType) &&\n          bodyVariants('withApps', {\n            name: source.name,\n            count: filteredApps.length,\n          })}\n        {filteredApps.length > 0 &&\n          !typesWithExtendedText.includes(sourceType) &&\n          bodyVariants('withAppsExtendedText', {\n            name: source.name,\n            count: filteredApps.length,\n          })}\n      </Text>\n      {filteredApps.length > 0 && <AppListInRemoval applications={filteredApps} />}\n      <Checkbox\n        label={intl.formatMessage({\n          id: 'sources.deleteCheckboxTitle',\n          defaultMessage: `I acknowledge that this action cannot be undone.`,\n        })}\n        onChange={() => setAcknowledge((value) => !value)}\n        aria-label={intl.formatMessage({\n          id: 'sources.deleteCheckboxTitle',\n          defaultMessage: `I acknowledge that this action cannot be undone.`,\n        })}\n        id=\"acknowledgeDelete\"\n        name=\"acknowledgeDelete\"\n        isChecked={acknowledge}\n      />\n    </TextContent>\n  );\n\n  return (\n    <Modal\n      className=\"ins-c-sources__dialog--warning\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteTitle',\n        defaultMessage: `Remove source?`,\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteTitle',\n            defaultMessage: `Remove source?`,\n          })}\n        </Title>\n      }\n      isOpen\n      variant=\"small\"\n      onClose={returnToSources}\n      actions={actions}\n    >\n      {body}\n    </Modal>\n  );\n};\n\nSourceRemoveModal.propTypes = {\n  backPath: PropTypes.string,\n};\n\nSourceRemoveModal.defaultProps = {\n  backPath: routes.sources.path,\n};\n\nexport default SourceRemoveModal;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { SATELLITE_NAME, ANSIBLE_TOWER_NAME } from '../../utilities/constants';\n\nexport const idToName = (id, appTypes) => appTypes.find((app) => app.id === id)?.display_name || 'Unknown';\n\nexport const typesWithExtendedText = [SATELLITE_NAME, ANSIBLE_TOWER_NAME];\n\nexport const bodyVariants = (variant, { name, count }) =>\n  ({\n    noApps: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyNoApps\"\n        defaultMessage=\"Removing { name } will permanently delete all data collected.\"\n        values={{\n          name: <b>{name}</b>,\n        }}\n      />\n    ),\n    withApps: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyWithApps\"\n        defaultMessage={`Removing { name } detaches the following\n        connected {count, plural, one {application} other {applications}} from this source:`}\n        values={{\n          name: <b>{name}</b>,\n          count,\n        }}\n      />\n    ),\n    withAppsExtendedText: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyWithAppsExtended\"\n        defaultMessage={`Removing { name } permanently deletes all collected data and detaches the following\n    connected {count, plural, one {application} other {applications}}:`}\n        values={{\n          name: <b>{name}</b>,\n          count,\n        }}\n      />\n    ),\n  }[variant]);\n"],"sourceRoot":""}