{"version":3,"sources":["webpack://sources-ui/./src/components/AddApplication/RemoveAppModal.js"],"names":["intl","useIntl","push","useHistory","app_id","useParams","source","useSource","appTypes","useSelector","sources","dispatch","useDispatch","application","applications","find","id","Redirect","to","replaceRouteId","routes","appType","application_type_id","app","display_name","dependent_applications","sourceAppsNames","map","onCancel","dependentApps","appName","name","filter","Boolean","Modal","className","isOpen","onClose","variant","aria-label","formatMessage","defaultMessage","header","Title","headingLevel","size","actions","Button","key","type","onClick","removeAppSubmit","TextContent","Text","component","TextVariants","length","apps"],"mappings":"kPA8GA,QAjGuB,WAAM,MACrBA,GAAOC,SACLC,GAASC,kBAATD,KACAE,GAAWC,iBAAXD,OACFE,GAASC,SAETC,GAAWC,kBAAY,qBAAGC,QAAsBF,YAChDG,GAAWC,mBAEXC,EAAW,UAAGP,EAAOQ,oBAAV,aAAG,EAAqBC,MAAK,qBAAGC,KAAgBZ,KAEjE,IAAKS,EACH,OAAO,kBAAC,EAAAI,SAAD,CAAUC,IAAIC,QAAeC,wBAA2Bd,EAAOU,MAGxE,IAAMK,EAAUb,EAASO,MAAK,qBAAGC,MAAgBH,aAAL,EAAKA,EAAaS,wBAExDC,EAAM,CACVP,GAAIZ,EACJoB,aAAcH,aAAF,EAAEA,EAASG,aACvBC,uBAAwBJ,aAAF,EAAEA,EAASI,uBACjCC,gBAAiBpB,EAAOQ,aAAaa,KACnC,kBAAGL,EAAH,EAAGA,oBAAH,iBAA6Bd,EAASO,MAAK,qBAAGC,KAAgBM,YAA9D,aAA6B,EAAuDE,iBAIlFI,EAAW,kBAAM1B,GAAKiB,QAAeC,wBAA2Bd,EAAOU,MAGvEa,EAAgBR,aAAH,EAAGA,EAASI,uBAC5BE,KAAI,SAACG,GAAY,MACVT,EAAUb,EAASO,MAAK,qBAAGgB,OAAoBD,KAErD,OAAOxB,SAAA,UAAAA,EAAQQ,oBAAR,eAAsBC,MAAK,qBAAGO,sBAAkDD,EAAQL,SAAOK,aAA/F,EAA+FA,EAASG,iBAEhHQ,OAAOC,SAEV,OACE,kBAAC,EAAAC,MAAD,CACEC,UAAU,UACVC,QAAQ,EACRC,QAAST,EACTU,QAAQ,QACRC,aAAYvC,EAAKwC,cAAc,CAC7BxB,GAAI,yBACJyB,eAAgB,wBAElBC,OACE,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAAMV,UAAU,WAC5C,kBAAC,KAAD,CAAyBU,KAAK,KAAKV,UAAU,qDAC5CnC,EAAKwC,cAAc,CAClBxB,GAAI,yBACJyB,eAAgB,yBAItBK,QAAS,CACP,kBAAC,EAAAC,OAAD,CAAQ/B,GAAG,eAAegC,IAAI,SAASV,QAAQ,SAASW,KAAK,SAASC,QA9B3D,kBAAMC,OAAgB5B,EAAKvB,EAAM4B,EAAUjB,EAAUL,KA+B7DN,EAAKwC,cAAc,CAClBxB,GAAI,iBACJyB,eAAgB,YAGpB,kBAAC,EAAAM,OAAD,CAAQ/B,GAAG,eAAegC,IAAI,SAASV,QAAQ,OAAOW,KAAK,SAASC,QAAStB,GAC1E5B,EAAKwC,cAAc,CAClBxB,GAAI,iBACJyB,eAAgB,cAKtB,kBAAC,EAAAW,YAAD,KACE,kBAAC,EAAAC,KAAD,CAAMC,UAAWC,kBACdvD,EAAKwC,cACJ,CACExB,GAAI,2BACJyB,eAAgB,sDAElB,CAAEX,QAAS,uBAAGkB,IAAI,KAAKzB,EAAIC,iBAG9BK,EAAc2B,OAAS,GACtB,kBAAC,EAAAH,KAAD,CAAMC,UAAWC,kBACdvD,EAAKwC,cACJ,CACExB,GAAI,2BACJyB,eAAgB,yDAElB,CAAEgB,KAAM5B","file":"js/removeApplication.a3588454f8206cea6311.js","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport { Text, TextVariants, TextContent, Button, Modal, Title } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { replaceRouteId, routes } from '../../Routes';\n\nconst RemoveAppModal = () => {\n  const intl = useIntl();\n  const { push } = useHistory();\n  const { app_id } = useParams();\n  const source = useSource();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const dispatch = useDispatch();\n\n  const application = source.applications?.find(({ id }) => id === app_id);\n\n  if (!application) {\n    return <Redirect to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const appType = appTypes.find(({ id }) => id === application?.application_type_id);\n\n  const app = {\n    id: app_id,\n    display_name: appType?.display_name,\n    dependent_applications: appType?.dependent_applications,\n    sourceAppsNames: source.applications.map(\n      ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name\n    ),\n  };\n\n  const onCancel = () => push(replaceRouteId(routes.sourcesDetail.path, source.id));\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  const dependentApps = appType?.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return source?.applications?.find(({ application_type_id }) => application_type_id === appType.id) && appType?.display_name;\n    })\n    .filter(Boolean);\n\n  return (\n    <Modal\n      className=\"sources\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\" className=\"sources\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> }\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps }\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nexport default RemoveAppModal;\n"],"sourceRoot":""}