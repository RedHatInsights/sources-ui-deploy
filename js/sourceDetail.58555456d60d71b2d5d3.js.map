{"version":3,"sources":["webpack://sources-ui/./src/api/doUpdateSource.js","webpack://sources-ui/./src/components/SourceDetail/AvailabilityChecker.js","webpack://sources-ui/./src/components/SourceDetail/SourceSummaryCard.js","webpack://sources-ui/./src/components/SourceDetail/ApplicationStatusLabel.js","webpack://sources-ui/./src/components/SourceDetail/ApplicationsCard.js","webpack://sources-ui/./src/components/SourceDetail/NoApplications.js","webpack://sources-ui/./src/components/SourceDetail/NoPermissions.js","webpack://sources-ui/./src/api/doLoadSourceForEdit.js","webpack://sources-ui/./src/components/SourceEditForm/helpers.js","webpack://sources-ui/./src/components/SourceEditForm/onSubmit.js","webpack://sources-ui/./src/components/SourceEditForm/parser/endpoint.js","webpack://sources-ui/./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack://sources-ui/./src/components/SourceEditForm/reducer.js","webpack://sources-ui/./src/components/SourceEditForm/SubmittingModal.js","webpack://sources-ui/./src/components/SourceEditForm/ErroredModal.js","webpack://sources-ui/./src/components/SourceEditForm/SourceEditModal.js","webpack://sources-ui/./src/components/SourceDetail/ApplicationResourcesCard.js","webpack://sources-ui/./src/components/SourceDetail/Breadcrumbs.js","webpack://sources-ui/./src/components/SourceDetail/SourceKebab.js","webpack://sources-ui/./src/components/SourceDetail/DetailHeader.js","webpack://sources-ui/./src/components/SourceDetail/ResourcesTable.js","webpack://sources-ui/./src/pages/Detail.js"],"names":["urlOrHost","formData","url","scheme","host","port","path","u","URL","protocol","replace","hostname","defaultPort","pathname","error","parseUrl","endpoint","doUpdateSource","source","values","promises","push","getSourcesApi","updateSource","id","endPointPort","parseInt","endpointData","isNaN","undefined","updateEndpoint","endpoints","authentications","Object","keys","forEach","key","idWithoutPrefix","updateAuthentication","applications","updateApplication","extra","Promise","all","useSource","intl","useIntl","dispatch","useDispatch","useState","loading","setLoading","Button","variant","aria-label","formatMessage","defaultMessage","onClick","checkSourceStatus","addMessage","title","description","isDisabled","Spinner","size","DescriptionListItem","term","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","propTypes","PropTypes","awsAccountNumber","sourceTypes","useSelector","sources","shallowEqual","type","find","source_type_id","name","arnType","authtype","includes","username","match","Card","className","CardTitle","CardBody","DescriptionList","columnModifier","default","sourceTypeFormatter","last_checked_at","last_available_at","dateFormatter","created_at","updated_at","app_creation_workflow","configurationModeFormatter","sourceType","ApplicationStatusLabel","app","appTypes","finalApp","getAppStatus","Popover","showClose","display_name","bodyContent","getStatusTooltipTextApp","availability_status","availability_status_error","Label","color","getStatusColor","getStatusText","isRequired","initialState","selectedApps","reducer","state","useHistory","hasRightAccess","useHasWritePermissions","useReducer","stateDispatch","sourceTypeName","filteredAppTypes","filter","supported_source_types","filterApps","removeApp","replaceRouteId","routes","addApp","isSuperKey","typeId","deleteApplication","loadEntities","doCreateApplication","source_id","application_type_id","map","connectedApp","APP_NAMES","descriptionMapper","FormGroup","Switch","label","isChecked","Boolean","isDeleting","onChange","value","EmptyState","EmptyStateIcon","icon","PlusCircleIcon","Title","headingLevel","EmptyStateBody","PrivateIcon","doLoadSourceForEdit","showSource","listSourceEndpoints","doLoadApplicationsForEdit","then","sourceData","data","apps","basicValues","addToApp","appAuthenticationIds","auth","showAuthentication","length","appAuths","index","listEndpointAuthentications","CHECK_ENDPOINT_COMMAND","selectOnlyEditedValues","editing","filteredValues","set","get","prepareInitialValues","rest","auhenticationsFinal","mergeAuths","reduce","acc","curr","endpointToUrl","applicationsFinal","source_type","addIfUnique","array","item","getEditedApplications","editedApplications","editedId","startsWith","resource_type","onSubmit","setState","startDate","Date","messages","checkApplications","checkInfo","checkAppAvailability","statusResults","AVAILABLE","UNAVAILABLE","endpointFields","schema","hidden","modifiedFields","fields","field","hardcodedSchemas","getEnhancedEndpointField","subForm","component","componentTypes","condition","when","isNotEmpty","validate","validation","validatorTypes","isEmpty","parseSourceToSchema","applicationsFields","initialValues","isSubmitting","initialLoad","submitError","product_name","LoadingStep","customText","ErroredModal","onRetry","ErroredStep","onClose","secondaryActions","Text","target","href","rel","returnButtonTitle","sourceRedux","isLoaded","useIsLoaded","message","sourceTypesLoaded","appTypesLoaded","useEffect","prepareMessages","isLoading","Bullseye","SourcesFormRenderer","formApi","getState","dirtyFields","FormTemplate","props","canReset","submitLabel","disableSubmit","clearedValue","Breadcrumb","BreadcrumbItem","Link","to","isActive","isOpen","setOpen","disabledProps","tooltip","Dropdown","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","DropdownItem","PageHeader","Flex","FlexItem","availabilityFormatter","align","TextContent","ResourcesEmptyState","applicationName","EmptyStateVariant","WrenchIcon","createColumns","createRows","appType","applicationRows","authenticationFields","flatMap","x","hideField","activeTab","columns","applicationsRows","Tabs","isBox","activeKey","onSelect","_e","appName","Tab","eventKey","TabTitleText","Table","cells","rows","TableHeader","TableBody","SourceRemoveModal","lazy","AddApplication","RemoveAppModal","SourceRenameModal","EditCredentials","RedirectNoId","superKey","Suspense","fallback","CustomRoute","exact","route","Component","componentProps","backPath","Grid","GridItem","md"],"mappings":"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","file":"js/sourceDetail.58555456d60d71b2d5d3.js","sourcesContent":["import { defaultPort } from '../views/formatters';\nimport { getSourcesApi } from './entities';\n\nexport const parseUrl = (url) => {\n  if (url === null) {\n    return {\n      scheme: null,\n      host: null,\n      port: null,\n      path: null,\n    };\n  }\n\n  if (!url) {\n    return {};\n  }\n\n  try {\n    const u = new URL(url);\n    const scheme = u.protocol.replace(/:$/, '');\n\n    return {\n      scheme,\n      host: u.hostname,\n      port: u.port === '' ? defaultPort(scheme) : u.port,\n      path: u.pathname,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const urlOrHost = (formData) =>\n  formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData, values) => {\n  const promises = [];\n\n  if (formData.source) {\n    promises.push(getSourcesApi().updateSource(source.source.id, formData.source));\n  }\n\n  if (formData.endpoint || formData.url || formData.url === null) {\n    const { scheme, host, port, path } = urlOrHost(formData);\n    const endPointPort = port === null ? null : parseInt(port, 10);\n\n    const endpointData = {\n      scheme,\n      host,\n      path,\n      port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n      ...formData.endpoint,\n    };\n\n    promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData));\n  }\n\n  if (formData.authentications) {\n    Object.keys(formData.authentications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]));\n    });\n  }\n\n  if (formData.applications) {\n    Object.keys(formData.applications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateApplication(idWithoutPrefix, { extra: values.applications[key].extra }));\n    });\n  }\n\n  return Promise.all(promises);\n};\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport RedoIcon from '@patternfly/react-icons/dist/esm/icons/redo-icon';\nimport { Button, Spinner } from '@patternfly/react-core';\n\nimport { useSource } from '../../hooks/useSource';\nimport checkSourceStatus from '../../api/checkSourceStatus';\nimport { addMessage } from '../../redux/sources/actions';\n\nconst AvailabilityChecker = () => {\n  const source = useSource();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <Button\n      variant=\"plain\"\n      aria-label={intl.formatMessage({ id: 'sources.checkavailability', defaultMessage: 'Check source availability' })}\n      onClick={async () => {\n        setLoading(true);\n        await checkSourceStatus(source.id);\n        setLoading(false);\n        dispatch(\n          addMessage({\n            title: intl.formatMessage({\n              id: 'sources.checkavailability.notificationTitle',\n              defaultMessage: 'Request to check source status was sent',\n            }),\n            variant: 'info',\n            description: intl.formatMessage({\n              id: 'sources.checkavailability.notificationDescription',\n              defaultMessage: 'Check this page later for updates',\n            }),\n          })\n        );\n      }}\n      isDisabled={loading}\n    >\n      {!loading && <RedoIcon />}\n      {loading && <Spinner size=\"md\" />}\n    </Button>\n  );\n};\n\nexport default AvailabilityChecker;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DescriptionListDescription,\n} from '@patternfly/react-core';\n\nimport { useSource } from '../../hooks/useSource';\nimport { configurationModeFormatter, dateFormatter, sourceTypeFormatter } from '../../views/formatters';\nimport AvailabilityChecker from './AvailabilityChecker';\n\nconst DescriptionListItem = ({ term, description }) => (\n  <DescriptionListGroup>\n    <DescriptionListTerm>{term}</DescriptionListTerm>\n    <DescriptionListDescription>{description}</DescriptionListDescription>\n  </DescriptionListGroup>\n);\n\nDescriptionListItem.propTypes = {\n  term: PropTypes.node,\n  description: PropTypes.node,\n};\n\nconst SourceSummaryCard = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes, shallowEqual);\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n\n  let awsAccountNumber;\n\n  if (type.name === 'amazon') {\n    const arnType = source.authentications?.find(({ authtype }) => authtype.includes('arn'));\n\n    if (arnType?.username) {\n      awsAccountNumber = arnType.username.match(/:\\d+/)?.[0]?.replace(/:/g, '');\n    }\n  }\n\n  return (\n    <Card className=\"pf-m-selectable pf-m-selected card summary-card pf-u-m-lg pf-u-mr-sm-on-md\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'detail.summary.title',\n          defaultMessage: 'Source summary',\n        })}\n      </CardTitle>\n      <CardBody>\n        <DescriptionList\n          columnModifier={{\n            default: '2Col',\n          }}\n        >\n          <DescriptionListItem\n            term={intl.formatMessage({\n              id: 'detail.summary.type',\n              defaultMessage: 'Source type',\n            })}\n            description={sourceTypeFormatter(source.source_type_id, undefined, { sourceTypes })}\n          />\n          <DescriptionListItem\n            term={intl.formatMessage({\n              id: 'detail.summary.lastChecked',\n              defaultMessage: 'Last availability check',\n            })}\n            description={\n              <React.Fragment>\n                {source.last_checked_at || source.last_available_at\n                  ? dateFormatter(source.last_checked_at || source.last_available_at)\n                  : intl.formatMessage({\n                      id: 'detail.summary.notChecked',\n                      defaultMessage: 'Not checked yet',\n                    })}\n                <AvailabilityChecker />\n              </React.Fragment>\n            }\n          />\n          <DescriptionListItem\n            term={intl.formatMessage({\n              id: 'detail.summary.dateAdded',\n              defaultMessage: 'Date added',\n            })}\n            description={dateFormatter(source.created_at)}\n          />\n          <DescriptionListItem\n            term={intl.formatMessage({\n              id: 'detail.summary.lastModified',\n              defaultMessage: 'Last modified',\n            })}\n            description={dateFormatter(source.updated_at)}\n          />\n          {source.app_creation_workflow && (\n            <DescriptionListItem\n              term={intl.formatMessage({\n                id: 'detail.summary.configurationMode',\n                defaultMessage: 'Configuration mode',\n              })}\n              description={configurationModeFormatter(source.app_creation_workflow, source, { intl, sourceType: type })}\n            />\n          )}\n          {awsAccountNumber && (\n            <DescriptionListItem\n              term={intl.formatMessage({\n                id: 'detail.summary.awsAccountNumber',\n                defaultMessage: 'AWS account number',\n              })}\n              description={awsAccountNumber}\n            />\n          )}\n        </DescriptionList>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SourceSummaryCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport { Label, Popover } from '@patternfly/react-core';\n\nimport { useSource } from '../../hooks/useSource';\nimport { getAppStatus, getStatusTooltipTextApp, getStatusColor, getStatusText } from '../../views/formatters';\n\nconst ApplicationStatusLabel = ({ app }) => {\n  const intl = useIntl();\n  const source = useSource();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n\n  const finalApp = getAppStatus(app, source, appTypes);\n\n  return (\n    <Popover\n      showClose={false}\n      aria-label={`${finalApp.display_name} popover`}\n      bodyContent={getStatusTooltipTextApp(finalApp.availability_status, finalApp.availability_status_error, intl)}\n    >\n      <Label className=\"pf-u-ml-sm clickable\" color={getStatusColor(finalApp.availability_status)}>\n        {getStatusText(finalApp.availability_status)}\n      </Label>\n    </Popover>\n  );\n};\n\nApplicationStatusLabel.propTypes = {\n  app: PropTypes.shape({\n    availability_status: PropTypes.string,\n    availability_status_error: PropTypes.string,\n    display_name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default ApplicationStatusLabel;\n","import React, { useReducer } from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { Card, CardBody, CardTitle, Switch, FormGroup } from '@patternfly/react-core';\n\nimport { useSource } from '../../hooks/useSource';\nimport { replaceRouteId, routes } from '../../Routes';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport ApplicationStatusLabel from './ApplicationStatusLabel';\nimport isSuperKey from '../../utilities/isSuperKey';\nimport { getSourcesApi, doCreateApplication } from '../../api/entities';\nimport { loadEntities } from '../../redux/sources/actions';\nimport { APP_NAMES } from '../SourceEditForm/parser/application';\nimport filterApps from '../../utilities/filterApps';\n\nconst initialState = {\n  selectedApps: {},\n};\n\nconst reducer = (state, { type, id }) => {\n  switch (type) {\n    case 'addApp':\n      return { ...state, selectedApps: { ...state.selectedApps, [id]: true } };\n    case 'removeApp':\n      return { ...state, selectedApps: { ...state.selectedApps, [id]: false } };\n    case 'clean':\n      return { ...state, selectedApps: { ...state.selectedApps, [id]: undefined } };\n  }\n};\n\nconst descriptionMapper = (name, intl) =>\n  ({\n    [APP_NAMES.COST_MANAGAMENT]: intl.formatMessage({\n      id: 'cost.app.description',\n      defaultMessage: 'Analyze, forecast, and optimize your Red Hat OpenShift cluster costs in hybrid cloud environments.',\n    }),\n    [APP_NAMES.CLOUD_METER]: intl.formatMessage({\n      id: 'cost.app.description',\n      defaultMessage:\n        'Includes access to Red Hat Gold Images, high precision subscription watch data, autoregistration, and Red Hat Connector.',\n    }),\n  }[name]);\n\nconst ApplicationsCard = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const { push } = useHistory();\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes, shallowEqual);\n  const appTypes = useSelector(({ sources }) => sources.appTypes, shallowEqual);\n  const hasRightAccess = useHasWritePermissions();\n  const dispatch = useDispatch();\n  const [{ selectedApps }, stateDispatch] = useReducer(reducer, initialState);\n\n  const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n  const sourceTypeName = sourceType?.name;\n  const filteredAppTypes = appTypes.filter((type) => type.supported_source_types.includes(sourceTypeName)).filter(filterApps);\n\n  let removeApp = (id) => push(replaceRouteId(routes.sourcesDetailRemoveApp.path, source.id).replace(':app_id', id));\n  let addApp = (id) => push(replaceRouteId(routes.sourcesDetailAddApp.path, source.id).replace(':app_type_id', id));\n\n  if (isSuperKey(source)) {\n    removeApp = async (id, typeId) => {\n      if (typeof selectedApps[typeId] !== 'boolean') {\n        stateDispatch({ type: 'removeApp', id: typeId });\n        await getSourcesApi().deleteApplication(id);\n        await dispatch(loadEntities());\n        stateDispatch({ type: 'clean', id: typeId });\n      }\n    };\n\n    addApp = async (id) => {\n      if (typeof selectedApps[id] !== 'boolean') {\n        stateDispatch({ type: 'addApp', id });\n        await doCreateApplication({ source_id: source.id, application_type_id: id });\n        await dispatch(loadEntities());\n        stateDispatch({ type: 'clean', id });\n      }\n    };\n  }\n\n  return (\n    <Card className=\"card applications-card pf-u-p-lg pf-u-pl-sm-on-md\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'detail.applications.title',\n          defaultMessage: 'Applications',\n        })}\n      </CardTitle>\n      <CardBody>\n        {!hasRightAccess && (\n          <div className=\"pf-u-mb-md\" id=\"no-permissions-applications\">\n            {intl.formatMessage({\n              id: 'sources.notAdminButton',\n              defaultMessage:\n                'To perform this adding/removing applications, you must be granted write permissions from your Organization Administrator.',\n            })}\n          </div>\n        )}\n        <div className=\"pf-c-form\">\n          {filteredAppTypes.map((app) => {\n            const connectedApp = source.applications.find((connectedApp) => connectedApp.application_type_id === app.id);\n            const description = descriptionMapper(app.name, intl);\n\n            return (\n              <FormGroup key={app.id}>\n                <Switch\n                  id={`app-switch-${app.id}`}\n                  label={app.display_name}\n                  isChecked={typeof selectedApps[app.id] === 'boolean' ? selectedApps[app.id] : Boolean(connectedApp)}\n                  isDisabled={connectedApp?.isDeleting || !hasRightAccess}\n                  onChange={(value) => (!value ? removeApp(connectedApp.id, app.id) : addApp(app.id))}\n                />\n                {Boolean(connectedApp) && <ApplicationStatusLabel app={connectedApp} />}\n                {description && (\n                  <div className=\"pf-c-switch pf-u-mt-sm\">\n                    <span className=\"pf-c-switch__toggle ins-c-sources__hide-me\" />\n                    <div className=\"pf-c-switch__label ins-c-sources__switch-description\">{description}</div>\n                  </div>\n                )}\n              </FormGroup>\n            );\n          })}\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ApplicationsCard;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, Title } from '@patternfly/react-core';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\n\nconst NoApplications = () => {\n  const intl = useIntl();\n\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {intl.formatMessage({\n          id: 'detail.noapplications.title',\n          defaultMessage: 'No connected applications',\n        })}\n      </Title>\n      <EmptyStateBody className=\"empty-state-body\">\n        {intl.formatMessage({\n          id: 'detail.noapplications.description',\n          defaultMessage: 'You have not connected any applications to this source. Use the switches above to add applications.',\n        })}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoApplications;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, Title } from '@patternfly/react-core';\nimport PrivateIcon from '@patternfly/react-icons/dist/esm/icons/private-icon';\n\nconst NoPermissions = () => {\n  const intl = useIntl();\n\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={PrivateIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {intl.formatMessage({\n          id: 'detail.nopermissions.title',\n          defaultMessage: 'Missing permissions',\n        })}\n      </Title>\n      <EmptyStateBody className=\"empty-state-body\">\n        {intl.formatMessage({\n          id: 'detail.nopermissions.description',\n          defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n        })}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoPermissions;\n","import { getSourcesApi, doLoadApplicationsForEdit } from './entities';\n\nexport const doLoadSourceForEdit = (source, appTypes, sourceTypes) =>\n  Promise.all([\n    getSourcesApi().showSource(source.id),\n    getSourcesApi().listSourceEndpoints(source.id),\n    doLoadApplicationsForEdit(source.id, appTypes, sourceTypes),\n  ]).then(async ([sourceData, endpoints, applications]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    const apps = applications?.sources[0]?.applications || [];\n\n    let basicValues = {\n      source: {\n        ...source,\n        ...sourceData,\n      },\n      applications: apps,\n    };\n\n    const promises = [];\n    let appAuths;\n    const addToApp = [];\n    const appAuthenticationIds = [];\n\n    apps.forEach((app) => {\n      app?.authentications?.forEach((auth) => {\n        if (auth?.id) {\n          promises.push(getSourcesApi().showAuthentication(auth.id));\n          addToApp.push(app.id);\n          appAuthenticationIds.push(auth.id);\n        }\n      });\n    });\n\n    if (promises.length > 0) {\n      appAuths = await Promise.all(promises);\n\n      addToApp.forEach((id, index) => {\n        basicValues.applications.find((app) => app.id === id).authentications.push(appAuths[index]);\n      });\n    }\n\n    if (!endpoint) {\n      return basicValues;\n    }\n\n    return getSourcesApi()\n      .listEndpointAuthentications(endpoint.id)\n      .then((authentications) => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data.filter(({ id }) => !appAuthenticationIds.includes(id)),\n      }));\n  });\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl, UNAVAILABLE } from '../../views/formatters';\n\nexport const CHECK_ENDPOINT_COMMAND = 'check-endpoint';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n  const filteredValues = {};\n\n  Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n      set(filteredValues, key, get(values, key));\n    });\n\n  return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, applications, ...rest }, sourceTypeName) => {\n  const auhenticationsFinal = {};\n\n  const mergeAuths = [\n    ...(authentications || []),\n    ...(applications?.reduce((acc, curr) => [...acc, ...curr.authentications], []) || []),\n  ];\n\n  if (mergeAuths.length > 0) {\n    mergeAuths.forEach((auth) => {\n      auhenticationsFinal[`a${auth.id}`] = auth;\n    });\n  }\n\n  let endpoint;\n  let url;\n\n  if (endpoints && endpoints.length > 0) {\n    endpoint = endpoints[0];\n  }\n\n  if (endpoint) {\n    url = endpoint.scheme || endpoint.host || endpoint.path || endpoint.port ? endpointToUrl(endpoint) : undefined;\n  }\n\n  const applicationsFinal = {};\n  if (applications?.length > 0) {\n    applications.forEach((app) => {\n      if (app.extra && Object.keys(app.extra).length > 0) {\n        applicationsFinal[`a${app.id}`] = { extra: app.extra };\n      }\n    });\n  }\n\n  return {\n    source_type: sourceTypeName,\n    endpoint,\n    authentications: auhenticationsFinal,\n    url,\n    ...(Object.keys(applicationsFinal).length && {\n      applications: applicationsFinal,\n    }),\n    ...rest,\n  };\n};\n\nconst addIfUnique = (array, item) => !array.includes(item) && array.push(item);\n\nexport const getEditedApplications = (source, editing) => {\n  const editedApplications = [];\n\n  const editedFields = Object.keys(editing);\n\n  editedFields.forEach((key) => {\n    if (editing[key]) {\n      const editedId = key.match(/.a\\d+/)?.[0]?.replace('.a', '');\n\n      if (key.startsWith('applications')) {\n        addIfUnique(editedApplications, editedId);\n      }\n\n      if (key.startsWith('authentications')) {\n        source.applications.forEach((app) =>\n          app.authentications.forEach(\n            ({ id, resource_type }) =>\n              resource_type &&\n              id === editedId &&\n              addIfUnique(editedApplications, resource_type === 'Application' ? app.id : `${CHECK_ENDPOINT_COMMAND}-${app.id}`)\n          )\n        );\n      }\n\n      if (key.startsWith('url') || key.startsWith('endpoint')) {\n        source.applications.forEach((app) =>\n          app.authentications.forEach(\n            ({ resource_type }) =>\n              resource_type === 'Endpoint' && addIfUnique(editedApplications, `${CHECK_ENDPOINT_COMMAND}-${app.id}`)\n          )\n        );\n      }\n    }\n  });\n\n  return editedApplications.filter(Boolean);\n};\n\nexport const prepareMessages = (source, intl) => {\n  const messages = {};\n\n  source.applications.forEach(({ id, availability_status_error, availability_status }) => {\n    if (availability_status === UNAVAILABLE) {\n      messages[id] = {\n        title: intl.formatMessage({\n          id: 'wizard.failEditToastTitleBeforeEdit',\n          defaultMessage: 'This application is unavailable',\n        }),\n        description: availability_status_error,\n        variant: 'danger',\n      };\n    }\n  });\n\n  if (source.endpoints?.[0]?.availability_status_error) {\n    const applicationsUsingEndpoint = source.applications\n      .map((app) => (app.authentications.find(({ resource_type }) => resource_type === 'Endpoint') ? app.id : undefined))\n      .filter(Boolean);\n\n    applicationsUsingEndpoint.forEach((id) => {\n      messages[id] = {\n        title: intl.formatMessage({\n          id: 'wizard.failEditToastTitleBeforeEdit',\n          defaultMessage: 'This application is unavailable',\n        }),\n        description: source.endpoints?.[0]?.availability_status_error,\n        variant: 'danger',\n      };\n    });\n  }\n\n  return messages;\n};\n","import { CHECK_ENDPOINT_COMMAND, getEditedApplications, selectOnlyEditedValues } from './helpers';\nimport { loadEntities } from '../../redux/sources/actions';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\nimport { doUpdateSource } from '../../api/doUpdateSource';\nimport { checkAppAvailability } from '../../api/getApplicationStatus';\n\nimport { AVAILABLE, UNAVAILABLE } from '../../views/formatters';\n\nexport const onSubmit = async (values, editing, dispatch, source, intl, setState) => {\n  setState({ type: 'submit', values, editing });\n\n  const startDate = new Date();\n\n  try {\n    await doUpdateSource(source, selectOnlyEditedValues(values, editing), values);\n  } catch {\n    await dispatch(loadEntities());\n    setState({ type: 'submitFailed' });\n\n    return;\n  }\n\n  checkSourceStatus(source.source.id);\n\n  let messages = {};\n\n  const checkApplications = getEditedApplications(source, editing);\n\n  const promises = [];\n\n  checkApplications.forEach((checkInfo) => {\n    if (checkInfo.includes(CHECK_ENDPOINT_COMMAND)) {\n      promises.push(\n        checkAppAvailability(source.endpoints[0].id, undefined, undefined, 'getEndpoint', startDate).then((data) => ({\n          ...data,\n          id: checkInfo.replace(`${CHECK_ENDPOINT_COMMAND}-`, ''),\n        }))\n      );\n    } else {\n      promises.push(checkAppAvailability(checkInfo, undefined, undefined, undefined, startDate));\n    }\n  });\n\n  let statusResults;\n  if (promises.length > 0) {\n    try {\n      statusResults = await Promise.all(promises);\n    } catch (error) {\n      await dispatch(loadEntities());\n      setState({ type: 'submitFailed' });\n      return;\n    }\n\n    statusResults.forEach(({ availability_status, availability_status_error, id }) => {\n      if (availability_status === AVAILABLE) {\n        messages[id] = {\n          title: intl.formatMessage({\n            id: 'wizard.successEditToastTitle',\n            defaultMessage: 'Application credentials were edited successfully.',\n          }),\n          description: availability_status_error,\n          variant: 'success',\n        };\n      }\n\n      if (availability_status === UNAVAILABLE) {\n        messages[id] = {\n          title: intl.formatMessage({\n            id: 'wizard.failEditToastTitle',\n            defaultMessage: 'Edit application credentials failed.',\n          }),\n          description: availability_status_error,\n          variant: 'danger',\n        };\n      }\n\n      if (!availability_status) {\n        messages[id] = {\n          title: intl.formatMessage({\n            id: 'wizard.timeoutEditToastTitle',\n            defaultMessage: 'Edit in progress',\n          }),\n          description: intl.formatMessage({\n            id: 'wizard.timeoutEditToastDescription',\n            defaultMessage:\n              'We are still working to confirm your updated credentials. Changes will be reflected in this table when complete.',\n          }),\n          variant: 'warning',\n        };\n      }\n    });\n  }\n\n  await dispatch(loadEntities());\n  setState({ type: 'submitFinished', messages });\n};\n","import get from 'lodash/get';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport hardcodedSchemas from '../../../components/addSourceWizard/hardcodedSchemas';\n\nexport const getEnhancedEndpointField = (sourceType, name) => get(hardcodedSchemas, [sourceType, 'endpoint', name], {});\n\nexport const endpointFields = (sourceType) => {\n  if (!sourceType.schema || !sourceType.schema.endpoint || sourceType.schema.endpoint.hidden) {\n    return undefined;\n  }\n\n  const schemaAuth = sourceType.schema.endpoint;\n\n  const enhancedFields = schemaAuth.fields.map((field) => ({\n    ...field,\n    ...getEnhancedEndpointField(sourceType.name, field.name),\n  }));\n\n  const modifiedFields = enhancedFields;\n\n  const subForm = {\n    component: componentTypes.SUB_FORM,\n    name: 'endpoint',\n  };\n\n  if (sourceType.name === 'ansible-tower') {\n    const url = modifiedFields.find(({ name }) => name === 'url');\n\n    return {\n      ...subForm,\n      fields: [\n        {\n          component: componentTypes.SUB_FORM,\n          name: 'receptor_node_group',\n          condition: {\n            when: 'endpoint.receptor_node',\n            isNotEmpty: true,\n          },\n          fields: [\n            {\n              ...url,\n              isRequired: false,\n              validate: url?.validate?.filter((validation) => validation.type !== validatorTypes.REQUIRED),\n            },\n          ],\n        },\n        {\n          component: componentTypes.SUB_FORM,\n          name: 'hostname_group',\n          condition: {\n            when: 'endpoint.receptor_node',\n            isEmpty: true,\n          },\n          fields: modifiedFields,\n        },\n      ],\n    };\n  }\n\n  return {\n    ...subForm,\n    fields: modifiedFields,\n  };\n};\n","import { endpointFields } from './endpoint';\nimport { applicationsFields } from './application';\n\nexport const parseSourceToSchema = (source, sourceType, appTypes, intl) => ({\n  description: intl.formatMessage({\n    id: 'sources.editFormDescripiton',\n    defaultMessage: 'Use the form fields to edit application credentials.',\n  }),\n  fields: [\n    ...applicationsFields(source.applications, sourceType, appTypes),\n    source.endpoints && source.endpoints.length > 0 ? endpointFields(sourceType) : false,\n  ].filter(Boolean),\n});\n","import { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { prepareInitialValues } from './helpers';\n\nexport const initialState = {\n  loading: true,\n  source: undefined,\n  initialValues: {},\n  sourceType: undefined,\n  schema: undefined,\n  isSubmitting: false,\n  initialLoad: true,\n  submitError: false,\n};\n\nconst reducer = (state, { type, source, sourceType, appTypes, intl, values, editing, messages }) => {\n  switch (type) {\n    case 'createForm':\n      return {\n        ...state,\n        sourceType,\n        initialValues: prepareInitialValues(state.source, sourceType.product_name),\n        schema: parseSourceToSchema(state.source, sourceType, appTypes, intl),\n        loading: false,\n      };\n    case 'setSource':\n      return {\n        ...state,\n        messages: {\n          ...messages,\n          ...state.messages,\n        },\n        source,\n        initialLoad: false,\n      };\n    case 'submit':\n      return {\n        ...state,\n        isSubmitting: true,\n        submitError: false,\n        values,\n        editing,\n      };\n    case 'submitFinished':\n      return {\n        ...state,\n        isSubmitting: false,\n        source,\n        messages,\n      };\n    case 'submitFailed':\n      return {\n        ...state,\n        isSubmitting: false,\n        submitError: true,\n        messages: undefined,\n      };\n    case 'sourceChanged':\n      return {\n        ...state,\n        initialLoad: true,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport LoadingStep from '../steps/LoadingStep';\n\nconst SubmittingModal = () => {\n  const intl = useIntl();\n\n  return (\n    <LoadingStep\n      customText={intl.formatMessage({\n        id: 'sources.editSubmittingTitle',\n        defaultMessage: 'Validating edited source credentials',\n      })}\n    />\n  );\n};\n\nexport default SubmittingModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Text } from '@patternfly/react-core';\n\nimport ErroredStep from '../steps/ErroredStep';\n\nconst ErroredModal = ({ onRetry }) => {\n  const intl = useIntl();\n\n  return (\n    <ErroredStep\n      onClose={onRetry}\n      customText={intl.formatMessage({\n        id: 'sources.editErrorDescription',\n        defaultMessage:\n          'There was a problem while trying to edit your source. Please try again. If the error persists, open a support case.',\n      })}\n      secondaryActions={\n        <Text\n          component=\"a\"\n          target=\"_blank\"\n          href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n          rel=\"noopener noreferrer\"\n        >\n          {intl.formatMessage({\n            id: 'sources.openTicket',\n            defaultMessage: 'Open a support case',\n          })}\n        </Text>\n      }\n      returnButtonTitle={intl.formatMessage({\n        id: 'sources.retryText',\n        defaultMessage: 'Retry',\n      })}\n    />\n  );\n};\n\nErroredModal.propTypes = {\n  onRetry: PropTypes.func.isRequired,\n};\n\nexport default ErroredModal;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Spinner, Bullseye } from '@patternfly/react-core';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport { onSubmit } from './onSubmit';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport reducer, { initialState } from './reducer';\nimport SubmittingModal from './SubmittingModal';\nimport ErroredModal from './ErroredModal';\nimport { prepareMessages } from './helpers';\n\nconst SourceEditModal = () => {\n  const [state, setState] = useReducer(reducer, initialState);\n  const sourceRedux = useSource();\n  const isLoaded = useIsLoaded();\n\n  const {\n    loading,\n    editing,\n    source,\n    initialValues,\n    schema,\n    isSubmitting,\n    initialLoad,\n    message,\n    messages,\n    submitError,\n    values,\n  } = state;\n\n  const intl = useIntl();\n\n  const { sourceTypes, appTypes, sourceTypesLoaded, appTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!initialLoad) {\n      setState({ type: 'sourceChanged' });\n    }\n  }, [sourceRedux, sourceRedux?.applications?.length]);\n\n  useEffect(() => {\n    if (sourceRedux && initialLoad && appTypesLoaded) {\n      doLoadSourceForEdit(sourceRedux, appTypes, sourceTypes).then((source) => {\n        const messages = prepareMessages(source, intl);\n\n        setState({ type: 'setSource', source, messages });\n      });\n    }\n  }, [sourceRedux, isLoaded, appTypesLoaded, initialLoad]);\n\n  useEffect(() => {\n    if (source && appTypesLoaded && sourceTypesLoaded) {\n      const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n      setState({ type: 'createForm', sourceType, source, appTypes, intl });\n    }\n  }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n  const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n  if (submitError) {\n    return <ErroredModal onRetry={() => onSubmit(values, editing, dispatch, source, intl, setState)} />;\n  }\n\n  if (isSubmitting) {\n    return <SubmittingModal />;\n  }\n\n  if (isLoading) {\n    return (\n      <Bullseye className=\"pf-u-m-2xl\">\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  return (\n    <SourcesFormRenderer\n      schema={schema}\n      onSubmit={(values, formApi) => onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, setState)}\n      FormTemplate={(props) => (\n        <FormTemplate canReset submitLabel=\"Save changes\" disableSubmit={['pristine', 'invalid']} {...props} />\n      )}\n      clearedValue={null}\n      initialValues={{\n        ...initialValues,\n        message,\n        messages,\n      }}\n    />\n  );\n};\n\nexport default SourceEditModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Card, CardBody, CardTitle } from '@patternfly/react-core';\n\nimport NoApplications from './NoApplications';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { useSource } from '../../hooks/useSource';\nimport NoPermissions from './NoPermissions';\nimport SourceEditModal from '../SourceEditForm/SourceEditModal';\n\nconst ApplicationResourcesCard = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const hasRightAccess = useHasWritePermissions();\n\n  return (\n    <Card className=\"card pf-u-m-lg pf-u-mt-0\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'detail.resources.title',\n          defaultMessage: 'Manage connected applications',\n        })}\n      </CardTitle>\n      <CardBody>\n        {!hasRightAccess && <NoPermissions />}\n        {hasRightAccess && source.applications.length === 0 && <NoApplications />}\n        {hasRightAccess && source.applications.length > 0 && <SourceEditModal />}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ApplicationResourcesCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\n\nconst Breadcrumbs = () => {\n  const intl = useIntl();\n  const source = useSource();\n\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem component={({ href, ...props }) => <Link to={href} {...props} />} to={routes.sources.path}>\n        {intl.formatMessage({\n          id: 'sources.sources',\n          defaultMessage: 'Sources',\n        })}\n      </BreadcrumbItem>\n      <BreadcrumbItem isActive>{source.name}</BreadcrumbItem>\n    </Breadcrumb>\n  );\n};\n\nexport default Breadcrumbs;\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n\nimport { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\n\nimport { replaceRouteId, routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\n\nconst SourceKebab = () => {\n  const [isOpen, setOpen] = useState(false);\n  const intl = useIntl();\n  const { push } = useHistory();\n  const source = useSource();\n  const hasRightAccess = useHasWritePermissions();\n\n  const tooltip = intl.formatMessage({\n    id: 'sources.notAdminButton',\n    defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n  });\n\n  const disabledProps = {\n    tooltip,\n    isDisabled: true,\n    className: 'ins-c-sources__disabled-drodpown-item',\n  };\n\n  return (\n    <Dropdown\n      toggle={<KebabToggle onToggle={() => setOpen(!isOpen)} id=\"toggle-id-6\" />}\n      isOpen={isOpen}\n      isPlain\n      position=\"right\"\n      dropdownItems={[\n        <DropdownItem\n          {...(!hasRightAccess && disabledProps)}\n          key=\"rename\"\n          onClick={() => push(replaceRouteId(routes.sourcesDetailRename.path, source.id))}\n        >\n          {intl.formatMessage({\n            id: 'detail.rename.button',\n            defaultMessage: 'Rename',\n          })}\n        </DropdownItem>,\n        <DropdownItem\n          {...(!hasRightAccess && disabledProps)}\n          key=\"remove\"\n          onClick={() => push(replaceRouteId(routes.sourcesDetailRemove.path, source.id))}\n        >\n          {intl.formatMessage({\n            id: 'detail.remove.button',\n            defaultMessage: 'Remove',\n          })}\n        </DropdownItem>,\n      ]}\n    />\n  );\n};\n\nexport default SourceKebab;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useSelector } from 'react-redux';\n\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Title, TextContent, Text, Flex, FlexItem } from '@patternfly/react-core';\n\nimport Breadcrumbs from './Breadcrumbs';\nimport { useSource } from '../../hooks/useSource';\nimport { availabilityFormatter } from '../../views/formatters';\nimport SourceKebab from './SourceKebab';\n\nconst DetailHeader = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const appTypes = useSelector(({ sources }) => sources.appTypes, shallowEqual);\n\n  return (\n    <PageHeader>\n      <Breadcrumbs />\n      <Flex className=\"pf-u-mb-sm\">\n        <FlexItem>\n          <Title headingLevel=\"h1\" size=\"2xl\">\n            {source.name}\n          </Title>\n        </FlexItem>\n        <FlexItem>{availabilityFormatter(undefined, source, { appTypes })}</FlexItem>\n        <FlexItem align={{ default: 'alignRight' }}>\n          <SourceKebab />\n        </FlexItem>\n      </Flex>\n      <TextContent>\n        <Text>\n          {intl.formatMessage({\n            id: 'detail.description',\n            defaultMessage: 'View details and manage connections for this source.',\n          })}\n        </Text>\n      </TextContent>\n    </PageHeader>\n  );\n};\n\nexport default DetailHeader;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport get from 'lodash/get';\n\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Text,\n  Spinner,\n  Bullseye,\n  Tabs,\n  Tab,\n  TabTitleText,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Title,\n} from '@patternfly/react-core';\n\nimport NoApplications from './NoApplications';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport { authenticationFields } from '../SourceEditForm/parser/authentication';\nimport { prepareInitialValues } from '../SourceEditForm/helpers';\n\nexport const ResourcesEmptyState = ({ applicationName }) => {\n  const intl = useIntl();\n\n  return (\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={WrenchIcon} />\n        <Title headingLevel=\"h2\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'resourceTable.emptyStateTitle',\n            defaultMessage: 'No application resources',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage(\n            {\n              id: 'resourceTable.emptyStateDescription',\n              defaultMessage: '{applicationName} resources will appear here when created.',\n            },\n            { applicationName }\n          )}\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nResourcesEmptyState.propTypes = {\n  applicationName: PropTypes.string.isRequired,\n};\n\nconst createColumns = (intl) => [\n  intl.formatMessage({ id: 'resourceTable.resourceType', defaultMessage: 'Resource type' }),\n  intl.formatMessage({ id: 'resourceTable.resourceValue', defaultMessage: 'Value' }),\n];\n\nconst convertFieldsToRows = (fields, initialValues) =>\n  fields\n    .flatMap((x) => x)\n    .map(\n      (field) => !field.hideField && [<React.Fragment key=\"label\">{field.label}</React.Fragment>, get(initialValues, field.name)]\n    )\n    .filter(Boolean);\n\nconst createRows = (source, appTypes, sourceType) => {\n  const applicationsRows = source.applications.reduce((acc, app) => {\n    const appType = appTypes.find(({ id }) => id === app.application_type_id);\n\n    const applicationFieldsSchema = authenticationFields(\n      app.authentications?.filter((auth) => Object.keys(auth).length > 1),\n      sourceType,\n      appType?.name,\n      app.id\n    );\n\n    const initialValues = prepareInitialValues(source, sourceType.product_name);\n    const applicationRows = convertFieldsToRows(applicationFieldsSchema, initialValues);\n\n    return { ...acc, [app.id]: applicationRows };\n  }, {});\n\n  return applicationsRows;\n};\n\nconst initialValues = (source) => ({\n  loading: Boolean(source.applications?.length),\n  columns: [],\n  applicationsRows: {},\n  activeTab: 0,\n});\n\nconst reducer = (state, { type, intl, source, activeTab, appTypes, sourceType }) => {\n  switch (type) {\n    case 'loaded':\n      return {\n        ...state,\n        columns: createColumns(intl),\n        applicationsRows: createRows(source, appTypes, sourceType),\n        loading: false,\n        activeTab: source.applications[0].id,\n      };\n    case 'switchTab':\n      return {\n        ...state,\n        activeTab,\n      };\n    case 'setLoading':\n      return {\n        ...state,\n        loading: true,\n      };\n  }\n};\n\nconst ResourcesTable = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const isLoaded = useIsLoaded();\n\n  const { sourceTypes, appTypes, sourceTypesLoaded, appTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const [{ activeTab, loading, columns, applicationsRows }, dispatch] = useReducer(reducer, initialValues(source));\n\n  useEffect(() => {\n    if (source && isLoaded && appTypesLoaded && sourceTypesLoaded && source?.applications?.length) {\n      dispatch({ type: 'setLoading' });\n\n      doLoadSourceForEdit(source, appTypes, sourceTypes).then((source) => {\n        const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n        dispatch({ type: 'loaded', source, intl, sourceType, appTypes });\n      });\n    }\n  }, [source?.applications?.length, isLoaded, appTypesLoaded, sourceTypesLoaded]);\n\n  return (\n    <Card className=\"card pf-u-m-lg pf-u-mt-0\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'resourceTable.title',\n          defaultMessage: 'Connected application resources',\n        })}\n      </CardTitle>\n      <CardBody>\n        {loading && (\n          <Bullseye className=\"pf-u-m-2xl\">\n            <Spinner />\n          </Bullseye>\n        )}\n        {!loading && !source.applications.length && <NoApplications />}\n        {!loading && source.applications.length > 0 && (\n          <React.Fragment>\n            <Text className=\"pf-u-mb-md\">\n              {intl.formatMessage({\n                id: 'resourceTable.description',\n                defaultMessage: 'View resources for your connected applications.',\n              })}\n            </Text>\n            <Tabs isBox activeKey={activeTab} onSelect={(_e, activeTab) => dispatch({ type: 'switchTab', activeTab })}>\n              {source.applications.map((app) => {\n                const appName =\n                  appTypes.find(({ id }) => id === app.application_type_id)?.display_name || app.application_type_id;\n\n                return (\n                  <Tab eventKey={app.id} key={app.id} title={<TabTitleText>{appName}</TabTitleText>}>\n                    {applicationsRows[app.id]?.length ? (\n                      <Table\n                        aria-label={intl.formatMessage({\n                          id: 'resourceTable.title',\n                          defaultMessage: 'Connected application resources',\n                        })}\n                        variant=\"compact\"\n                        cells={columns}\n                        rows={applicationsRows[app.id]}\n                        className=\"pf-u-mt-md\"\n                      >\n                        <TableHeader />\n                        <TableBody />\n                      </Table>\n                    ) : (\n                      <ResourcesEmptyState applicationName={appName} />\n                    )}\n                  </Tab>\n                );\n              })}\n            </Tabs>\n          </React.Fragment>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ResourcesTable;\n","import React, { lazy, Suspense } from 'react';\n\nimport { Grid, GridItem } from '@patternfly/react-core';\n\nimport SourceSummaryCard from '../components/SourceDetail/SourceSummaryCard';\nimport ApplicationsCard from '../components/SourceDetail/ApplicationsCard';\nimport ApplicationResourcesCard from '../components/SourceDetail/ApplicationResourcesCard';\nimport RedirectNoId from '../components/RedirectNoId/RedirectNoId';\nimport { useSource } from '../hooks/useSource';\nimport { DetailLoader } from '../components/SourcesTable/loaders';\nimport CustomRoute from '../components/CustomRoute/CustomRoute';\nimport { replaceRouteId, routes } from '../Routes';\nimport DetailHeader from '../components/SourceDetail/DetailHeader';\nimport isSuperKey from '../utilities/isSuperKey';\nimport ResourcesTable from '../components/SourceDetail/ResourcesTable';\n\nconst SourceRemoveModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"removeSource\" */\n    '../components/SourceRemoveModal/SourceRemoveModal'\n  )\n);\n\nconst AddApplication = lazy(() =>\n  import(\n    /* webpackChunkName: \"addApplication\" */\n    '../components/AddApplication/AddApplication'\n  )\n);\n\nconst RemoveAppModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"removeApplication\" */\n    '../components/AddApplication/RemoveAppModal'\n  )\n);\n\nconst SourceRenameModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"renameSource\" */\n    '../components/SourceDetail/SourceRenameModal'\n  )\n);\n\nconst EditCredentials = lazy(() =>\n  import(\n    /* webpackChunkName: \"credentialsForm\" */\n    '../components/CredentialsForm/CredentialsForm'\n  )\n);\n\nconst Detail = () => {\n  const source = useSource();\n\n  if (!source) {\n    return (\n      <React.Fragment>\n        <DetailLoader />\n        <RedirectNoId />\n      </React.Fragment>\n    );\n  }\n\n  const superKey = isSuperKey(source);\n\n  return (\n    <div className=\"ins-c-sources__detail-page\">\n      <Suspense fallback={null}>\n        <CustomRoute\n          exact\n          route={routes.sourcesDetailRemove}\n          Component={SourceRemoveModal}\n          componentProps={{ backPath: replaceRouteId(routes.sourcesDetail.path, source.id) }}\n        />\n        <CustomRoute exact route={routes.sourcesDetailAddApp} Component={AddApplication} />\n        <CustomRoute exact route={routes.sourcesDetailRemoveApp} Component={RemoveAppModal} />\n        <CustomRoute exact route={routes.sourcesDetailRename} Component={SourceRenameModal} />\n        <CustomRoute exact route={routes.sourcesDetailEditCredentials} Component={EditCredentials} />\n      </Suspense>\n      <DetailHeader />\n      <Grid>\n        <GridItem md=\"6\">\n          <SourceSummaryCard />\n        </GridItem>\n        <GridItem md=\"6\">\n          <ApplicationsCard />\n        </GridItem>\n        <GridItem md=\"12\">{superKey ? <ResourcesTable /> : <ApplicationResourcesCard />}</GridItem>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Detail;\n"],"sourceRoot":""}