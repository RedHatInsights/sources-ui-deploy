{"version":3,"sources":["webpack://sources-ui/./src/components/CloudTiles/CloudEmptyState.js","webpack://sources-ui/./src/components/CloudTiles/CloudTiles.js","webpack://sources-ui/./src/components/RedHatTiles/RedHatEmptyState.js","webpack://sources-ui/./src/components/RedHatTiles/RedHatTiles.js","webpack://sources-ui/./src/components/SourcesErrorState.js","webpack://sources-ui/./src/components/SourcesTable/EmptyStateTable.js","webpack://sources-ui/./src/components/SourcesTable/SourcesTable.js","webpack://sources-ui/./src/components/TabNavigation.js","webpack://sources-ui/./src/components/TilesShared/DisabledTile.js","webpack://sources-ui/./src/components/TilesShared/ImageWithPlaceholder.js","webpack://sources-ui/./src/pages/Sources.js","webpack://sources-ui/./src/pages/Sources/helpers.js"],"names":["CLOUD_CATALOG_HREF","CloudEmptyState","setSelectedType","intl","useIntl","formatMessage","id","defaultMessage","a","chunks","propTypes","PropTypes","isRequired","mapper","type","openWizard","TileComponent","amazon","google","azure","CloudTiles","useSelector","sources","shallowEqual","sourceTypes","useHistory","push","hasWritePermissions","useHasWritePermissions","routes","Tile","DisabledTile","sort","b","product_name","localeCompare","map","name","RedHatEmptyState","RedHatTiles","icon","SourcesErrorState","ExclamationCircleIcon","window","location","href","EmptyStateTable","dispatch","useDispatch","EmptyStateVariant","small","SearchIcon","clearFilters","itemToCells","item","columns","appTypes","filter","column","title","hidden","col","formatter","value","renderSources","entities","removingSources","reduce","acc","isDeleting","includes","isOpen","expanded","cells","disableActions","prepareColumnsCells","transforms","wrappable","sortable","reducer","state","payload","initialState","rows","sortBy","isLoaded","insertEditAction","actions","isOrgAdmin","disabledProps","splice","onClick","_ev","_i","replaceRouteId","component","actionResolver","rowData","tooltip","isDisabled","className","isSourceEditable","imported","SourcesTable","loaded","useIsLoaded","writePermissions","sourceTypesLoaded","appTypesLoaded","sortDirection","numberOfEntities","reduxDispatch","notSortable","useReducer","sourcesColumns","refreshColumns","refreshSources","useEffect","shownRows","heightAuto","props","colSpan","COLUMN_COUNT","_event","key","direction","sortEntities","index","cell","indexOf","undefined","RowWrapperLoader","TabNavigation","activeVendor","_e","setActiveVendor","CLOUD_VENDOR","REDHAT_VENDOR","ImageWithPlaceholder","src","rest","useState","setLoaded","display","SourceRemoveModal","lazy","AddSourceWizard","then","module","selectedType","wizardInitialState","wizardInitialValues","initialValues","SourcesPage","stateDispatch","entitiesLoaded","history","filterValue","pageSize","pageNumber","fetchingError","paginationClicked","onSetPage","page","pageAndSize","onPerPageSelect","perPage","maximumPageNumber","Math","ceil","max","paginationConfig","itemCount","paginationConfigBottom","dropDirection","variant","isCompact","showPaginationLoader","filteredSourceTypes","filterVendorTypes","mainContent","items","label","filterValues","onChange","debouncedFiltering","setFilter","prepareSourceTypeSelection","source_type_id","prepareApplicationTypeSelection","filterVendorAppTypes","applications","event","_value","selectedValue","target","checked","AVAILABLE","UNAVAILABLE","availability_status","filters","prepareChips","onDelete","chips","deleteAll","filterSources","removeChips","hasSomeFilter","Object","entries","_key","Array","isArray","length","Boolean","showEmptyState","showInfoCards","loadedTypes","applicationTypes","onClose","afterSuccess","source","hideSourcesButton","submitCallback","checkSubmit","initialWizardState","awesomeDebounce","refresh","afterSuccessLoadParameters","loadEntities","display_name","chipsFormatters","category","sourceType","find","appType","keys","curr","chip","types","Date","now","pathname","split","pop","isErrored","wizardState","activeStep","activeStepIndex","maxStepIndex","prevSteps","registeredFieldsHistory","addMessage","description","values","actionLinks","removeMessage","computeSourceStatus","createdSource","availability_status_error","endpoint"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,IAAMA,kBAAkB,GAAG,kCAA3B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAyB;AAAA,MAAtBC,eAAsB,QAAtBA,eAAsB;AAC/C,MAAMC,IAAI,GAAGC,mDAAO,EAApB;AAEA,sBACE,2DAAC,sFAAD;AAAM,aAAS,EAAC;AAAhB,kBACE,2DAAC,gGAAD,QACGD,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,4BADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CADF,eAOE,2DAAC,8FAAD,qBACE,2DAAC,sFAAD,QACGJ,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,kCADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CADF,eAOE;AAAK,aAAS,EAAC;AAAf,kBACE,2DAAC,gDAAD;AAAY,mBAAe,EAAEL;AAA7B,IADF,CAPF,CAPF,eAkBE,2DAAC,kGAAD;AAAY,aAAS,EAAC;AAAtB,kBACE,2DAAC,sFAAD;AAAM,aAAS,EAAC;AAAhB,KACGC,IAAI,CAACE,aAAL,CACC;AACEC,MAAE,EAAE,8BADN;AAEEC,kBAAc,EAAE;AAFlB,GADD,EAKC;AACEC,KAAC,EAAE,WAACC,MAAD;AAAA,0BACD,2DAAC,sFAAD;AAAM,WAAG,EAAC,MAAV;AAAiB,iBAAS,EAAC,GAA3B;AAA+B,YAAI,EAAET,kBAArC;AAAyD,cAAM,EAAC,QAAhE;AAAyE,WAAG,EAAC;AAA7E,SACGS,MADH,CADC;AAAA;AADL,GALD,CADH,CADF,CAlBF,CADF;AAsCD,CAzCD;;AA2CAR,eAAe,CAACS,SAAhB,GAA4B;AAC1BR,iBAAe,EAAES,mEAAyBC;AADhB,CAA5B;AAIA,iEAAeX,eAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,IAAMY,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,UAAP,EAAmBC,aAAnB;AAAA,SACZ;AACCC,UAAM,eACJ,2DAAC,aAAD;AACE,eAAS,MADX;AAEE,SAAG,EAAEH,IAFP;AAGE,WAAK,EAAC,qBAHR;AAIE,aAAO,EAAE;AAAA,eAAMC,UAAU,CAAC,QAAD,CAAhB;AAAA,OAJX;AAKE,eAAS,EAAC,kDALZ;AAME,UAAI,eACF,2DAAC,sEAAD;AACE,iBAAS,EAAC,0BADZ;AAEE,WAAG,EAAC,8CAFN;AAGE,WAAG,EAAC;AAHN;AAPJ,MAFH;AAiBCG,UAAM,eACJ,2DAAC,aAAD;AACE,eAAS,MADX;AAEE,SAAG,EAAEJ,IAFP;AAGE,WAAK,EAAC,cAHR;AAIE,eAAS,EAAC,kDAJZ;AAKE,aAAO,EAAE;AAAA,eAAMC,UAAU,CAAC,QAAD,CAAhB;AAAA,OALX;AAME,UAAI,eACF,2DAAC,sEAAD;AACE,iBAAS,EAAC,wCADZ;AAEE,WAAG,EAAC,6DAFN;AAGE,WAAG,EAAC;AAHN;AAPJ,MAlBH;AAiCCI,SAAK,eACH,2DAAC,aAAD;AACE,eAAS,MADX;AAEE,SAAG,EAAEL,IAFP;AAGE,WAAK,EAAC,iBAHR;AAIE,aAAO,EAAE;AAAA,eAAMC,UAAU,CAAC,OAAD,CAAhB;AAAA,OAJX;AAKE,eAAS,EAAC,kDALZ;AAME,UAAI,eACF,2DAAC,sEAAD;AACE,iBAAS,EAAC,0BADZ;AAEE,WAAG,EAAC,gEAFN;AAGE,WAAG,EAAC;AAHN;AAPJ;AAlCH,IAiDCD,IAjDD,CADY;AAAA,CAAf;;AAoDA,IAAMM,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA,MAAtBlB,eAAsB,QAAtBA,eAAsB;;AAAA,qBAClBmB,wDAAW,CAAC;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,WAAiBA,OAAjB;AAAA,GAAD,EAA2BC,qDAA3B,CADO;AAAA,MAClCC,WADkC,gBAClCA,WADkC;;AAAA,oBAEzBC,4DAAU,EAFe;AAAA,MAElCC,IAFkC,eAElCA,IAFkC;;AAG1C,MAAMC,mBAAmB,GAAGC,qFAAsB,EAAlD;;AAEA,MAAMb,UAAU,GAAG,SAAbA,UAAa,CAACD,IAAD,EAAU;AAC3BZ,mBAAe,CAACY,IAAD,CAAf;AACAY,QAAI,CAACG,2DAAD,CAAJ;AACD,GAHD;;AAKA,MAAMb,aAAa,GAAGW,mBAAmB,GAAGG,sFAAH,GAAUC,8DAAnD;AAEA,SAAOP,WAAW,CACfQ,IADI,CACC,UAACxB,CAAD,EAAIyB,CAAJ;AAAA,WAAUzB,CAAC,CAAC0B,YAAF,CAAeC,aAAf,CAA6BF,CAAC,CAACC,YAA/B,CAAV;AAAA,GADD,EAEJE,GAFI,CAEA;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAAcxB,MAAM,CAACwB,IAAD,EAAOtB,UAAP,EAAmBC,aAAnB,CAApB;AAAA,GAFA,CAAP;AAGD,CAfD;;AAiBAI,UAAU,CAACV,SAAX,GAAuB;AACrBR,iBAAe,EAAES,mEAAyBC;AADrB,CAAvB;AAIA,iEAAeQ,UAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,IAAMkB,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAyB;AAAA,MAAtBpC,eAAsB,QAAtBA,eAAsB;AAChD,MAAMC,IAAI,GAAGC,mDAAO,EAApB;AAEA,sBACE,2DAAC,sFAAD;AAAM,aAAS,EAAC;AAAhB,kBACE,2DAAC,gGAAD,QACGD,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,6BADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CADF,eAOE,2DAAC,8FAAD,qBACE,2DAAC,sFAAD,QACGJ,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,mCADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CADF,eAOE;AAAK,aAAS,EAAC;AAAf,kBACE,2DAAC,iDAAD;AAAa,mBAAe,EAAEL;AAA9B,IADF,CAPF,CAPF,CADF;AAqBD,CAxBD;;AA0BAoC,gBAAgB,CAAC5B,SAAjB,GAA6B;AAC3BR,iBAAe,EAAES,mEAAyBC;AADf,CAA7B;AAIA,iEAAe0B,gBAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyB;AAAA,MAAtBrC,eAAsB,QAAtBA,eAAsB;;AAAA,oBAC1BuB,4DAAU,EADgB;AAAA,MACnCC,IADmC,eACnCA,IADmC;;AAE3C,MAAMC,mBAAmB,GAAGC,qFAAsB,EAAlD;;AAEA,MAAMb,UAAU,GAAG,SAAbA,UAAa,CAACD,IAAD,EAAU;AAC3BZ,mBAAe,CAACY,IAAD,CAAf;AACAY,QAAI,CAACG,2DAAD,CAAJ;AACD,GAHD;;AAKA,MAAMb,aAAa,GAAGW,mBAAmB,GAAGG,sFAAH,GAAUC,8DAAnD;AAEA,MAAMS,IAAI,gBACR,2DAAC,sEAAD;AAAsB,aAAS,EAAC,aAAhC;AAA8C,OAAG,EAAC,iDAAlD;AAAoG,OAAG,EAAC;AAAxG,IADF;AAIA,sBACE,2DAAC,uDAAD,qBACE,2DAAC,aAAD;AACE,aAAS,MADX;AAEE,SAAK,EAAC,6BAFR;AAGE,WAAO,EAAE;AAAA,aAAMzB,UAAU,CAAC,eAAD,CAAhB;AAAA,KAHX;AAIE,aAAS,EAAC,kDAJZ;AAKE,QAAI,EAAEyB;AALR,IADF,eAQE,2DAAC,aAAD;AACE,aAAS,MADX;AAEE,SAAK,EAAC,8BAFR;AAGE,aAAS,EAAC,kDAHZ;AAIE,WAAO,EAAE;AAAA,aAAMzB,UAAU,CAAC,WAAD,CAAhB;AAAA,KAJX;AAKE,QAAI,EAAEyB;AALR,IARF,CADF;AAkBD,CAjCD;;AAmCAD,WAAW,CAAC7B,SAAZ,GAAwB;AACtBR,iBAAe,EAAES,mEAAyBC;AADpB,CAAxB;AAIA,iEAAe2B,WAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,MAAMtC,IAAI,GAAGC,mDAAO,EAApB;AAEA,sBACE,2DAAC,+FAAD,qBACE,2DAAC,wGAAD;AAAY,aAAS,EAAC;AAAtB,kBACE,2DAAC,gHAAD;AAAgB,QAAI,EAAEsC,mGAAtB;AAA6C,SAAK,EAAC;AAAnD,IADF,eAEE,2DAAC,yFAAD;AAAO,gBAAY,EAAC,IAApB;AAAyB,QAAI,EAAC;AAA9B,KACGvC,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,yBADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CAFF,eAQE,2DAAC,gHAAD,QACGJ,IAAI,CAACE,aAAL,CACC;AACEC,MAAE,EAAE,wBADN;AAEEC,kBAAc,EACZ;AAHJ,GADD,EAMC;AACE;AACAC,KAAC,EAAE,WAACC,MAAD;AAAA,0BACD,2DAAC,sFAAD;AAAM,WAAG,EAAC,MAAV;AAAiB,iBAAS,EAAC,GAA3B;AAA+B,YAAI,EAAC,mCAApC;AAAwE,cAAM,EAAC,QAA/E;AAAwF,WAAG,EAAC;AAA5F,SACGA,MADH,CADC;AAAA;AAFL,GAND,CADH,CARF,eAyBE,2DAAC,4FAAD;AAAQ,aAAS,EAAC,YAAlB;AAA+B,WAAO,EAAC,SAAvC;AAAiD,aAAS,EAAC,GAA3D;AAA+D,QAAI,EAAEkC,MAAM,CAACC,QAAP,CAAgBC;AAArF,KACG1C,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,eADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CAzBF,CADF,CADF;AAoCD,CAvCD;;AAyCA,iEAAekC,iBAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAM3C,IAAI,GAAGC,mDAAO,EAApB;AACA,MAAM2C,QAAQ,GAAGC,wDAAW,EAA5B;AAEA,sBACE,2DAAC,+FAAD,qBACE,2DAAC,wGAAD;AAAY,WAAO,EAAEC,qHAAuBC;AAA5C,kBACE,2DAAC,gHAAD;AAAgB,QAAI,EAAEC,uFAAUA;AAAhC,IADF,eAEE,2DAAC,yFAAD;AAAO,gBAAY,EAAC,IAApB;AAAyB,QAAI,EAAC;AAA9B,KACGhD,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,6BADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CAFF,eAQE,2DAAC,gHAAD,QACGJ,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,mCADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CARF,eAcE,2DAAC,6FAAD;AAAQ,WAAO,EAAC,MAAhB;AAAuB,WAAO,EAAE;AAAA,aAAMwC,QAAQ,CAACK,oEAAY,EAAb,CAAd;AAAA;AAAhC,KACGjD,IAAI,CAACE,aAAL,CAAmB;AAClBC,MAAE,EAAE,yBADc;AAElBC,kBAAc,EAAE;AAFE,GAAnB,CADH,CAdF,CADF,CADF;AAyBD,CA7BD;;AA+BA,iEAAeuC,eAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,OAAP,EAAgB/B,WAAhB,EAA6BgC,QAA7B;AAAA,SAClBD,OAAO,CACJE,MADH,CACU,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,KAAP,IAAgBD,MAAM,CAACE,MAAnC;AAAA,GADV,EAEGxB,GAFH,CAEO,UAACyB,GAAD;AAAA,WAAU;AACbF,WAAK,EAAEE,GAAG,CAACC,SAAJ,GACHD,GAAG,CAACC,SAAJ,CAAcR,IAAI,CAACO,GAAG,CAACE,KAAL,CAAlB,EAA+BT,IAA/B,EAAqC;AACnC9B,mBAAW,EAAXA,WADmC;AAEnCgC,gBAAQ,EAARA;AAFmC,OAArC,CADG,GAKHF,IAAI,CAACO,GAAG,CAACE,KAAL,CAAJ,IAAmB;AANV,KAAV;AAAA,GAFP,CADkB;AAAA,CAApB;;AAYA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAWV,OAAX,EAAoB/B,WAApB,EAAiCgC,QAAjC,EAA2CU,eAA3C;AAAA,SACpBD,QAAQ,CACLR,MADH,CACU;AAAA,QAAGG,MAAH,QAAGA,MAAH;AAAA,WAAgB,CAACA,MAAjB;AAAA,GADV,EAEGO,MAFH,CAEU,UAACC,GAAD,EAAMd,IAAN,EAAe;AACrB,QAAMe,UAAU,GAAGH,eAAe,CAACI,QAAhB,CAAyBhB,IAAI,CAAChD,EAA9B,CAAnB;AAEA,qGACK8D,GADL,oCAGOd,IAHP;AAIIiB,YAAM,EAAE,CAAC,CAACjB,IAAI,CAACkB,QAJnB;AAKIC,WAAK,EAAEpB,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgB/B,WAAhB,EAA6BgC,QAA7B,CALtB;AAMIkB,oBAAc,EAAEL,UANpB;AAOIA,gBAAU,EAAVA;AAPJ;AAUD,GAfH,EAeK,EAfL,CADoB;AAAA,CAAtB;;AAkBO,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACpB,OAAD;AAAA,SACjCA,OAAO,CACJE,MADH,CACU,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACC,KAAP,IAAgBD,MAAM,CAACE,MAAnC;AAAA,GADV,EAEGxB,GAFH,CAEO,UAACsB,MAAD;AAAA;AACHC,WAAK,EAAED,MAAM,CAACC,KAAP,IAAgB,EADpB;AAEHI,WAAK,EAAEL,MAAM,CAACK,KAFX;AAGHH,YAAM,EAAEF,MAAM,CAACE,MAHZ;AAIHgB,gBAAU,EAAE,CAACC,8DAAD;AAJT,OAKCnB,MAAM,CAACoB,QAAP,IAAmB;AAAEF,gBAAU,EAAE,CAACE,6DAAD,EAAWD,8DAAX;AAAd,KALpB;AAAA,GAFP,CADiC;AAAA,CAA5B;;AAWP,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,OAAR;AAAA,yCAA0BD,KAA1B,GAAoCC,OAApC;AAAA,CAAhB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAC3B,OAAD;AAAA,SAAc;AACjC4B,QAAI,EAAE,EAD2B;AAEjCC,UAAM,EAAE,EAFyB;AAGjCC,YAAQ,EAAE,KAHuB;AAIjCZ,SAAK,EAAEE,mBAAmB,CAACpB,OAAD;AAJO,GAAd;AAAA,CAArB;;AAOO,IAAM+B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAUpF,IAAV,EAAgBuB,IAAhB,EAAsB8D,UAAtB,EAAkCC,aAAlC;AAAA,SAC9BF,OAAO,CAACG,MAAR,CAAe,CAAf,EAAkB,CAAlB;AACE/B,SAAK,EAAExD,IAAI,CAACE,aAAL,CAAmB;AACxBC,QAAE,EAAE,cADoB;AAExBC,oBAAc,EAAE;AAFQ,KAAnB,CADT;AAKEoF,WAAO,EAAE,iBAACC,GAAD,EAAMC,EAAN;AAAA,UAAYvF,EAAZ,SAAYA,EAAZ;AAAA,aAAqBoB,IAAI,CAACoE,wDAAc,CAACjE,+DAAD,EAA4BvB,EAA5B,CAAf,CAAzB;AAAA;AALX,KAMM,CAACkF,UAAD,GAAcC,aAAd,GAA8B;AAAEM,aAAS,EAAE;AAAb,GANpC,EAD8B;AAAA,CAAzB;AAUA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAC7F,IAAD,EAAOuB,IAAP,EAAa8D,UAAb;AAAA,SAA4B,UAACS,OAAD,EAAa;AACrE,QAAMC,OAAO,GAAG/F,IAAI,CAACE,aAAL,CAAmB;AACjCC,QAAE,EAAE,wBAD6B;AAEjCC,oBAAc,EAAE;AAFiB,KAAnB,CAAhB;AAKA,QAAMkF,aAAa,GAAG;AACpBS,aAAO,EAAPA,OADoB;AAEpBC,gBAAU,EAAE,IAFQ;AAGpBC,eAAS,EAAE;AAHS,KAAtB;AAMA,QAAMb,OAAO,GAAG,EAAhB;AAEA,QAAMc,gBAAgB,GAAG,CAACJ,OAAO,CAACK,QAAlC;;AAEA,QAAID,gBAAJ,EAAsB;AACpBf,sBAAgB,CAACC,OAAD,EAAUpF,IAAV,EAAgBuB,IAAhB,EAAsB8D,UAAtB,EAAkCC,aAAlC,CAAhB;AACD;;AAEDF,WAAO,CAAC7D,IAAR;AACEiC,WAAK,EAAExD,IAAI,CAACE,aAAL,CAAmB;AACxBC,UAAE,EAAE,gBADoB;AAExBC,sBAAc,EAAE;AAFQ,OAAnB,CADT;AAKEoF,aAAO,EAAE,iBAACC,GAAD,EAAMC,EAAN;AAAA,YAAYvF,EAAZ,SAAYA,EAAZ;AAAA,eAAqBoB,IAAI,CAACoE,wDAAc,CAACjE,+DAAD,EAA4BvB,EAA5B,CAAf,CAAzB;AAAA;AALX,OAMM,CAACkF,UAAD,GAAcC,aAAd,GAA8B;AAAEM,eAAS,EAAE;AAAb,KANpC;AASA,WAAOR,OAAP;AACD,GA9B6B;AAAA,CAAvB;;AAgCP,IAAMgB,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,oBACR9E,4DAAU,EADF;AAAA,MACjBC,IADiB,eACjBA,IADiB;;AAEzB,MAAMvB,IAAI,GAAGC,oDAAO,EAApB;AAEA,MAAMoG,MAAM,GAAGC,gEAAW,EAA1B;AACA,MAAMC,gBAAgB,GAAG9E,sFAAsB,EAA/C;;AALyB,qBAiBrBP,wDAAW,CAAC;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,WAAiBA,OAAjB;AAAA,GAAD,EAA2BC,qDAA3B,CAjBU;AAAA,MAQvBiC,QARuB,gBAQvBA,QARuB;AAAA,MASvBS,QATuB,gBASvBA,QATuB;AAAA,MAUvBzC,WAVuB,gBAUvBA,WAVuB;AAAA,MAWvBmF,iBAXuB,gBAWvBA,iBAXuB;AAAA,MAYvBC,cAZuB,gBAYvBA,cAZuB;AAAA,MAavBxB,MAbuB,gBAavBA,MAbuB;AAAA,MAcvByB,aAduB,gBAcvBA,aAduB;AAAA,MAevBC,gBAfuB,gBAevBA,gBAfuB;AAAA,MAgBvB5C,eAhBuB,gBAgBvBA,eAhBuB;;AAkBzB,MAAM6C,aAAa,GAAG/D,wDAAW,EAAjC;AAEA,MAAMgE,WAAW,GAAGF,gBAAgB,KAAK,CAArB,IAA0B,CAACN,MAA/C;;AApByB,oBAsBCS,iDAAU,CAAClC,OAAD,EAAUG,YAAY,CAACgC,4EAAc,CAAC/G,IAAD,EAAO6G,WAAP,CAAf,CAAtB,CAtBX;AAAA;AAAA,MAsBlBhC,KAtBkB;AAAA,MAsBXjC,QAtBW;;AAwBzB,MAAMoE,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAM5D,OAAO,GAAG2D,4EAAc,CAAC/G,IAAD,EAAO6G,WAAP,CAA9B;AAEA,WAAOjE,QAAQ,CAAC;AACd0B,WAAK,EAAEE,mBAAmB,CAACpB,OAAD;AADZ,KAAD,CAAf;AAGD,GAND;;AAQA,MAAM6D,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAM7D,OAAO,GAAG2D,4EAAc,CAAC/G,IAAD,EAAO6G,WAAP,CAA9B;AAEA,WAAOjE,QAAQ,CAAC;AACdoC,UAAI,EAAEnB,aAAa,CAACC,QAAD,EAAWV,OAAX,EAAoB/B,WAApB,EAAiCgC,QAAjC,EAA2CU,eAA3C,CADL;AAEdO,WAAK,EAAEE,mBAAmB,CAACpB,OAAD;AAFZ,KAAD,CAAf;AAID,GAPD;;AASA8D,kDAAS,CAAC,YAAM;AACd,QAAIb,MAAM,IAAIG,iBAAV,IAA+BC,cAAnC,EAAmD;AACjD7D,cAAQ,CAAC;AAAEsC,gBAAQ,EAAE;AAAZ,OAAD,CAAR;AACA+B,oBAAc;AACf,KAHD,MAGO;AACLrE,cAAQ,CAAC;AAAEsC,gBAAQ,EAAE;AAAZ,OAAD,CAAR;AACA8B,oBAAc;AACf;AACF,GARQ,EAQN,CAACX,MAAD,EAASG,iBAAT,EAA4BC,cAA5B,CARM,CAAT;AAUAS,kDAAS,CAAC,YAAM;AACd,QAAIrC,KAAK,CAACK,QAAV,EAAoB;AAClB+B,oBAAc;AACf;AACF,GAJQ,EAIN,CAACnD,QAAD,EAAWC,eAAX,CAJM,CAAT;AAMA,MAAIoD,SAAS,GAAGtC,KAAK,CAACG,IAAtB;;AACA,MAAI2B,gBAAgB,KAAK,CAArB,IAA0B9B,KAAK,CAACK,QAApC,EAA8C;AAC5CiC,aAAS,GAAG,CACV;AACEC,gBAAU,EAAE,IADd;AAEE9C,WAAK,EAAE,CACL;AACE+C,aAAK,EAAE;AAAEC,iBAAO,EAAEC,sEAAYA;AAAvB,SADT;AAEE/D,aAAK,eAAE,2DAAC,sDAAD;AAFT,OADK;AAFT,KADU,CAAZ;AAWD,GAZD,MAYO,IAAI,CAAC6C,MAAD,IAAW,CAACI,cAAZ,IAA8B,CAACD,iBAAnC,EAAsD;AAC3DW,aAAS,GAAG,CACV;AACEC,gBAAU,EAAE,IADd;AAEE9C,WAAK,EAAE,CACL;AACE+C,aAAK,EAAE;AACLC,iBAAO,EAAEC,sEADJ;AAELtB,mBAAS,EAAE;AAFN,SADT;AAKEzC,aAAK,eAAE,2DAAC,sDAAD;AALT,OADK;AAFT,KADU,CAAZ;AAcD;;AAED,sBACE,2DAAC,0DAAD;AACE,kBAAc,EAAC,SADjB;AAEE,kBAAYxD,IAAI,CAACE,aAAL,CAAmB;AAC7BC,QAAE,EAAE,cADyB;AAE7BC,oBAAc,EAAE;AAFa,KAAnB,CAFd;AAME,UAAM,EAAE,gBAACoH,MAAD,EAASC,GAAT,EAAcC,SAAd;AAAA,aAA4Bd,aAAa,CAACe,oEAAY,CAAC9C,KAAK,CAACP,KAAN,CAAYmD,GAAZ,EAAiB7D,KAAlB,EAAyB8D,SAAzB,CAAb,CAAzC;AAAA,KANV;AAOE,UAAM,EAAE;AACNE,WAAK,EAAE/C,KAAK,CAACP,KAAN,CAAYrC,GAAZ,CAAgB,UAAC4F,IAAD;AAAA,eAAWA,IAAI,CAACpE,MAAL,GAAc,QAAd,GAAyBoE,IAAI,CAACjE,KAAzC;AAAA,OAAhB,EAAiEkE,OAAjE,CAAyE7C,MAAzE,CADD;AAENyC,eAAS,EAAEhB;AAFL,KAPV;AAWE,QAAI,EAAES,SAXR;AAYE,SAAK,EAAEtC,KAAK,CAACP,KAZf;AAaE,kBAAc,EAAE+B,MAAM,IAAIM,gBAAgB,GAAG,CAA7B,GAAiCd,cAAc,CAAC7F,IAAD,EAAOuB,IAAP,EAAagF,gBAAb,CAA/C,GAAgFwB,SAblG;AAcE,cAAU,EAAEC,sDAAgBA;AAd9B,kBAgBE,2DAAC,gEAAD,OAhBF,eAiBE,2DAAC,8DAAD,OAjBF,CADF;AAqBD,CA5GD;;AA8GA,iEAAe5B,YAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxNA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,IAAM6B,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,MAAMjI,IAAI,GAAGC,mDAAO,EAApB;AACA,MAAM2C,QAAQ,GAAGC,wDAAW,EAA5B;AACA,MAAMqF,YAAY,GAAGhH,wDAAW,CAAC;AAAA,QAAGC,OAAH,QAAGA,OAAH;AAAA,WAAiBA,OAAO,CAAC+G,YAAzB;AAAA,GAAD,CAAhC;AAEA,sBACE,2DAAC,sFAAD;AAAM,aAAS,EAAEA,YAAjB;AAA+B,YAAQ,EAAE,kBAACC,EAAD,EAAKV,GAAL;AAAA,aAAa7E,QAAQ,CAACwF,uEAAe,CAACX,GAAD,CAAhB,CAArB;AAAA,KAAzC;AAAsF,aAAS,EAAC;AAAhG,kBACE,2DAAC,oFAAD;AACE,YAAQ,EAAEY,8DADZ;AAEE,SAAK,eACH,2DAAC,uDAAD,qBACE,2DAAC,sGAAD,qBACE,2DAAC,sFAAD,OADF,CADF,eAIE,2DAAC,sGAAD,QAAerI,IAAI,CAACE,aAAL,CAAmB;AAAEC,QAAE,EAAE,sBAAN;AAA8BC,oBAAc,EAAE;AAA9C,KAAnB,CAAf,CAJF;AAHJ,IADF,eAYE,2DAAC,oFAAD;AACE,YAAQ,EAAEkI,+DADZ;AAEE,SAAK,eACH,2DAAC,uDAAD,qBACE,2DAAC,sGAAD,qBACE,2DAAC,wFAAD,OADF,CADF,eAIE,2DAAC,sGAAD,QAAetI,IAAI,CAACE,aAAL,CAAmB;AAAEC,QAAE,EAAE,uBAAN;AAA+BC,oBAAc,EAAE;AAA/C,KAAnB,CAAf,CAJF;AAHJ,IAZF,CADF;AA0BD,CA/BD;;AAiCA,iEAAe6H,aAAf,E;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAEA;AACA;;AAEA,IAAMrG,YAAY,GAAG,SAAfA,YAAe,CAACyF,KAAD,EAAW;AAC9B,MAAMrH,IAAI,GAAGC,mDAAO,EAApB;AAEA,MAAM8F,OAAO,GAAG/F,IAAI,CAACE,aAAL,CAAmB;AACjCC,MAAE,EAAE,wBAD6B;AAEjCC,kBAAc,EAAE;AAFiB,GAAnB,CAAhB;AAKA,sBACE,2DAAC,+FAAD;AAAS,WAAO,EAAE2F;AAAlB,kBACE;AAAK,aAAS,EAAC;AAAf,kBACE,2DAAC,sFAAD,4EAAUsB,KAAV;AAAiB,cAAU;AAA3B,KADF,CADF,CADF;AAOD,CAfD;;AAiBA,iEAAezF,YAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAEA;;AAEA,IAAM2G,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAsB;AAAA,MAAnBC,GAAmB,QAAnBA,GAAmB;AAAA,MAAXC,IAAW;;AAAA,kBACrBC,+CAAQ,CAAC,KAAD,CADa;AAAA;AAAA,MAC1CrC,MAD0C;AAAA,MAClCsC,SADkC;;AAGjD,sBACE,2DAAC,uDAAD,QACG,CAACtC,MAAD,iBAAW,2DAAC,yDAAD;AAAQ,UAAM,EAAC,MAAf;AAAsB,SAAK,EAAC;AAA5B,KAAwCoC,IAAxC,EADd,eAEE;AAAK,OAAG,EAAED,GAAV;AAAe,UAAM,EAAE;AAAA,aAAMG,SAAS,CAAC,IAAD,CAAf;AAAA,KAAvB;AAA8C,SAAK,EAAE;AAAEC,aAAO,EAAEvC,MAAM,GAAG,SAAH,GAAe;AAAhC;AAArD,KAAmGoC,IAAnG,EAFF,CADF;AAMD,CATD;;AAWAF,oBAAoB,CAAChI,SAArB,GAAiC;AAC/BiI,KAAG,EAAEhI,qEAA2BC;AADD,CAAjC;AAIA,iEAAe8H,oBAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,IAAMM,iBAAiB,gBAAGC,2CAAI,CAAC;AAAA,SAC7B,iRAD6B;AAAA,CAAD,CAA9B;AAMA,IAAMC,eAAe,gBAAGD,2CAAI,CAAC;AAAA,SAC3B,kfAEEE,IAFF,CAEO,UAACC,MAAD;AAAA,WAAa;AAAE,iBAASA,MAAM,CAACF;AAAlB,KAAb;AAAA,GAFP,CAD2B;AAAA,CAAD,CAA5B;AAMA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMhE,YAAY,GAAG;AACnBzB,QAAM,EAAEyE,SADW;AAEnBmB,cAAY,EAAEnB,SAFK;AAGnBoB,oBAAkB,EAAEpB,SAHD;AAInBqB,qBAAmB,EAAErB;AAJF,CAArB;;AAOA,IAAMnD,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,QAAuE;AAAA,MAA7DlE,IAA6D,QAA7DA,IAA6D;AAAA,MAAvDiD,KAAuD,QAAvDA,KAAuD;AAAA,MAAhDsF,YAAgD,QAAhDA,YAAgD;AAAA,MAAlCG,aAAkC,QAAlCA,aAAkC;AAAA,MAAnBtE,YAAmB,QAAnBA,YAAmB;;AACrF,UAAQpE,IAAR;AACE,SAAK,gBAAL;AACE,6CAAYkE,KAAZ;AAAmBvB,cAAM,EAAEM;AAA3B;;AACF,SAAK,iBAAL;AACE,6CAAYiB,KAAZ;AAAmBqE,oBAAY,EAAZA;AAAnB;;AACF,SAAK,aAAL;AACE,6CAAYrE,KAAZ;AAAmBsE,0BAAkB,EAAEpE,YAAvC;AAAqDqE,2BAAmB,EAAEC;AAA1E;;AACF,SAAK,aAAL;AACE,6CAAYxE,KAAZ;AAAmBqE,oBAAY,EAAEnB,SAAjC;AAA4CoB,0BAAkB,EAAEpB,SAAhE;AAA2EqB,2BAAmB,EAAErB;AAAhG;AARJ;AAUD,CAXD;;AAaA,IAAMuB,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,oBACmExC,iDAAU,CAAClC,OAAD,EAAUG,YAAV,CAD7E;AAAA;AAAA;AAAA,MACfzB,MADe,iBACfA,MADe;AAAA,MACP4F,YADO,iBACPA,YADO;AAAA,MACOC,kBADP,iBACOA,kBADP;AAAA,MAC2BC,mBAD3B,iBAC2BA,mBAD3B;AAAA,MACkDG,aADlD;;AAGxB,MAAMC,cAAc,GAAGlD,gEAAW,EAAlC;AACA,MAAM9E,mBAAmB,GAAGC,sFAAsB,EAAlD;AAEA,MAAMgI,OAAO,GAAGnI,4DAAU,EAA1B;AACA,MAAMtB,IAAI,GAAGC,oDAAO,EAApB;AAEA,MAAMkB,OAAO,GAAGD,wDAAW,CAAC;AAAA,QAAGC,OAAH,SAAGA,OAAH;AAAA,WAAiBA,OAAjB;AAAA,GAAD,EAA2BC,qDAA3B,CAA3B;AATwB,MAYtBsI,WAZsB,GAuBpBvI,OAvBoB,CAYtBuI,WAZsB;AAAA,MAatB/C,gBAbsB,GAuBpBxF,OAvBoB,CAatBwF,gBAbsB;AAAA,MActBtD,QAdsB,GAuBpBlC,OAvBoB,CActBkC,QAdsB;AAAA,MAetBsG,QAfsB,GAuBpBxI,OAvBoB,CAetBwI,QAfsB;AAAA,MAgBtBC,UAhBsB,GAuBpBzI,OAvBoB,CAgBtByI,UAhBsB;AAAA,MAiBtBC,aAjBsB,GAuBpB1I,OAvBoB,CAiBtB0I,aAjBsB;AAAA,MAkBtBxI,WAlBsB,GAuBpBF,OAvBoB,CAkBtBE,WAlBsB;AAAA,MAmBtByI,iBAnBsB,GAuBpB3I,OAvBoB,CAmBtB2I,iBAnBsB;AAAA,MAoBtBrD,cApBsB,GAuBpBtF,OAvBoB,CAoBtBsF,cApBsB;AAAA,MAqBtBD,iBArBsB,GAuBpBrF,OAvBoB,CAqBtBqF,iBArBsB;AAAA,MAsBtB0B,YAtBsB,GAuBpB/G,OAvBoB,CAsBtB+G,YAtBsB;AAyBxB,MAAM7B,MAAM,GAAGmD,cAAc,IAAIhD,iBAAlB,IAAuCC,cAAtD;AAEA,MAAM7D,QAAQ,GAAGC,wDAAW,EAA5B;AAEAqE,kDAAS,CAAC,YAAM;AACd,QAAI5D,MAAM,KAAKoG,WAAW,CAACxH,IAA3B,EAAiC;AAC/BqH,mBAAa,CAAC;AAAE5I,YAAI,EAAE,gBAAR;AAA0BiD,aAAK,EAAE8F,WAAW,CAACxH;AAA7C,OAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACwH,WAAW,CAACxH,IAAb,CAJM,CAAT;;AAMA,MAAM6H,SAAS,GAAG,SAAZA,SAAY,CAAC5B,EAAD,EAAK6B,IAAL;AAAA,WAAcpH,QAAQ,CAACqH,mEAAW,CAACD,IAAD,EAAOL,QAAP,CAAZ,CAAtB;AAAA,GAAlB;;AAEA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAC/B,EAAD,EAAKgC,OAAL;AAAA,WAAiBvH,QAAQ,CAACqH,mEAAW,CAAC,CAAD,EAAIE,OAAJ,CAAZ,CAAzB;AAAA,GAAxB;;AAEA,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,IAAL,CAAU3D,gBAAgB,GAAGgD,QAA7B,CAA1B;AAEAzC,kDAAS,CAAC,YAAM;AACd,QAAIb,MAAM,IAAIM,gBAAgB,GAAG,CAA7B,IAAkCiD,UAAU,GAAGS,IAAI,CAACE,GAAL,CAASH,iBAAT,EAA4B,CAA5B,CAAnD,EAAmF;AACjFL,eAAS,CAAC,EAAD,EAAKK,iBAAL,CAAT;AACD;AACF,GAJQ,CAAT;AAMA,MAAMI,gBAAgB,GAAG;AACvBC,aAAS,EAAE9D,gBADY;AAEvBqD,QAAI,EAAEJ,UAFiB;AAGvBO,WAAO,EAAER,QAHc;AAIvBI,aAAS,EAATA,SAJuB;AAKvBG,mBAAe,EAAfA,eALuB;AAMvBjE,aAAS,EAAE;AANY,GAAzB;;AASA,MAAMyE,sBAAsB,mCACvBF,gBADuB;AAE1BG,iBAAa,EAAE,IAFW;AAG1BC,WAAO,EAAE,QAHiB;AAI1BC,aAAS,EAAE,KAJe;AAK1B5E,aAAS,EAAE;AALe,IAA5B;;AAQA,MAAM6E,oBAAoB,GAAG,CAAC,CAACzE,MAAD,IAAW,CAACI,cAAZ,IAA8B,CAACD,iBAAhC,KAAsD,CAACsD,iBAApF;AAEA,MAAMiB,mBAAmB,GAAG1J,WAAW,CAACiC,MAAZ,CAAmB0H,iHAAnB,CAA5B;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,wBAClB,2DAAC,uDAAD,qBACE,2DAAC,+FAAD;AACE,gBAAU,EAAEH,oBAAoB,gBAAG,2DAAC,+EAAD,OAAH,GAA0BnE,gBAAgB,GAAG,CAAnB,GAAuB6D,gBAAvB,GAA0CzC,SADtG;AAEE,mBAAa,EACXvG,mBAAmB,GACf;AACE4D,eAAO,EAAE,cACP,2DAAC,kDAAD;AAAM,YAAE,EAAE1D,4DAAV;AAAkC,aAAG,EAAC;AAAtC,wBACE,2DAAC,6FAAD;AAAQ,iBAAO,EAAC,SAAhB;AAA0B,YAAE,EAAC;AAA7B,WACG1B,IAAI,CAACE,aAAL,CAAmB;AAClBC,YAAE,EAAE,mBADc;AAElBC,wBAAc,EAAE;AAFE,SAAnB,CADH,CADF,CADO;AADX,OADe,GAaf;AACEgF,eAAO,EAAE,cACP,2DAAC,gGAAD;AACE,iBAAO,EAAEpF,IAAI,CAACE,aAAL,CAAmB;AAC1BC,cAAE,EAAE,2BADsB;AAE1BC,0BAAc,EACZ;AAHwB,WAAnB,CADX;AAME,aAAG,EAAC;AANN,wBAQE;AAAM,kBAAQ,EAAC;AAAf,wBACE,2DAAC,6FAAD;AAAQ,iBAAO,EAAC,SAAhB;AAA0B,oBAAU,MAApC;AAAqC,YAAE,EAAC;AAAxC,WACGJ,IAAI,CAACE,aAAL,CAAmB;AAClBC,YAAE,EAAE,mBADc;AAElBC,wBAAc,EAAE;AAFE,SAAnB,CADH,CADF,CARF,CADO;AADX,OAhBR;AAsCE,kBAAY,EAAE;AACZ8K,aAAK,EAAE,CACL;AACEC,eAAK,EAAEnL,IAAI,CAACE,aAAL,CAAmB;AACxBC,cAAE,EAAE,cADoB;AAExBC,0BAAc,EAAE;AAFQ,WAAnB,CADT;AAKEgL,sBAAY,EAAE;AACZ,0BAAcpL,IAAI,CAACE,aAAL,CAAmB;AAC/BC,gBAAE,EAAE,sBAD2B;AAE/BC,4BAAc,EAAE;AAFe,aAAnB,CADF;AAKZiL,oBAAQ,EAAE,kBAAC7D,MAAD,EAAS5D,KAAT,EAAmB;AAC3B2F,2BAAa,CAAC;AAAE5I,oBAAI,EAAE,gBAAR;AAA0BiD,qBAAK,EAALA;AAA1B,eAAD,CAAb;AACA0H,mFAAkB,CAAC;AAAA,uBAAMC,4DAAS,CAAC,MAAD,EAAS3H,KAAT,EAAgBhB,QAAhB,CAAf;AAAA,eAAD,CAAlB;AACD,aARW;AASZgB,iBAAK,EAAEN;AATK;AALhB,SADK,EAkBL;AACE6H,eAAK,EAAEnL,IAAI,CAACE,aAAL,CAAmB;AACxBC,cAAE,EAAE,cADoB;AAExBC,0BAAc,EAAE;AAFQ,WAAnB,CADT;AAKEO,cAAI,EAAE,UALR;AAMEyK,sBAAY,EAAE;AACZC,oBAAQ,EAAE,kBAAC7D,MAAD,EAAS5D,KAAT;AAAA,qBAAmB2H,4DAAS,CAAC,gBAAD,EAAmB3H,KAAnB,EAA0BhB,QAA1B,CAA5B;AAAA,aADE;AAEZsI,iBAAK,EAAEM,6EAA0B,CAACT,mBAAD,CAFrB;AAGZnH,iBAAK,EAAE8F,WAAW,CAAC+B;AAHP;AANhB,SAlBK,EA8BL;AACEN,eAAK,EAAEnL,IAAI,CAACE,aAAL,CAAmB;AACxBC,cAAE,EAAE,qBADoB;AAExBC,0BAAc,EAAE;AAFQ,WAAnB,CADT;AAKEO,cAAI,EAAE,UALR;AAMEyK,sBAAY,EAAE;AACZC,oBAAQ,EAAE,kBAAC7D,MAAD,EAAS5D,KAAT;AAAA,qBAAmB2H,4DAAS,CAAC,cAAD,EAAiB3H,KAAjB,EAAwBhB,QAAxB,CAA5B;AAAA,aADE;AAEZsI,iBAAK,EAAEQ,kFAA+B,CAAC,CAAArI,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,CAAiBqI,uHAAoB,CAACZ,mBAAD,CAArC,MAA+D,EAAhE,CAF1B;AAGZnH,iBAAK,EAAE8F,WAAW,CAACkC;AAHP;AANhB,SA9BK,EA0CL;AACET,eAAK,EAAEnL,IAAI,CAACE,aAAL,CAAmB;AACxBC,cAAE,EAAE,4BADoB;AAExBC,0BAAc,EAAE;AAFQ,WAAnB,CADT;AAKEO,cAAI,EAAE,UALR;AAMEyK,sBAAY,EAAE;AACZC,oBAAQ,EAAE,kBAACQ,KAAD,EAAQC,MAAR,EAAgBC,aAAhB;AAAA,qBACRR,4DAAS,CAAC,qBAAD,EAAwBM,KAAK,CAACG,MAAN,CAAaC,OAAb,GAAuB,CAACF,aAAD,CAAvB,GAAyC,EAAjE,EAAqEnJ,QAArE,CADD;AAAA,aADE;AAGZsI,iBAAK,EAAE,CACL;AAAEC,mBAAK,EAAEnL,IAAI,CAACE,aAAL,CAAmB;AAAEC,kBAAE,EAAE,mBAAN;AAA2BC,8BAAc,EAAE;AAA3C,eAAnB,CAAT;AAAuFwD,mBAAK,EAAEsI,yDAASA;AAAvG,aADK,EAEL;AACEf,mBAAK,EAAEnL,IAAI,CAACE,aAAL,CAAmB;AAAEC,kBAAE,EAAE,qBAAN;AAA6BC,8BAAc,EAAE;AAA7C,eAAnB,CADT;AAEEwD,mBAAK,EAAEuI,2DAAWA;AAFpB,aAFK,CAHK;AAUZvI,iBAAK,EAAE8F,WAAW,CAAC0C;AAVP;AANhB,SA1CK;AADK,OAtChB;AAsGE,yBAAmB,EAAE;AACnBC,eAAO,EAAEC,+DAAY,CAAC5C,WAAD,EAAcrI,WAAd,EAA2BgC,QAA3B,EAAqCrD,IAArC,CADF;AAEnBuM,gBAAQ,EAAE,kBAAC/E,MAAD,EAASgF,KAAT,EAAgBC,SAAhB;AAAA,iBAA8B7J,QAAQ,CAAC8J,qEAAa,CAACC,8DAAW,CAACH,KAAD,EAAQ9C,WAAR,EAAqB+C,SAArB,CAAZ,CAAd,CAAtC;AAAA;AAFS;AAtGvB,MADF,eA4GE,2DAAC,0EAAD,OA5GF,eA6GE,2DAAC,+FAAD;AACE,gBAAU,EAAE3B,oBAAoB,gBAAG,2DAAC,+EAAD,OAAH,GAA0BnE,gBAAgB,GAAG,CAAnB,GAAuB+D,sBAAvB,GAAgD3C;AAD5G,MA7GF,CADkB;AAAA,GAApB;;AAoHA,MAAM6E,aAAa,GACjBC,MAAM,CAACC,OAAP,CAAepD,WAAf,EACGzH,GADH,CACO;AAAA;AAAA,QAAE8K,IAAF;AAAA,QAAQnJ,KAAR;;AAAA,WAAmBA,KAAK,KAAK,CAACoJ,KAAK,CAACC,OAAN,CAAcrJ,KAAd,CAAD,IAA0BoJ,KAAK,CAACC,OAAN,CAAcrJ,KAAd,KAAwBA,KAAK,CAACsJ,MAAN,GAAe,CAAtE,CAAxB;AAAA,GADP,EAEG5J,MAFH,CAEU6J,OAFV,EAEmBD,MAFnB,GAE4B,CAH9B;AAKA,MAAME,cAAc,GAAG/G,MAAM,IAAIM,gBAAgB,KAAK,CAA/B,IAAoC,CAACiG,aAA5D;AACA,MAAMS,aAAa,GAAGnF,YAAY,KAAKG,+DAAjB,IAAiC,CAAC+E,cAAxD;;AAEA,MAAMrN,eAAe,GAAG,SAAlBA,eAAkB,CAACmJ,YAAD;AAAA,WAAkBK,aAAa,CAAC;AAAE5I,UAAI,EAAE,iBAAR;AAA2BuI,kBAAY,EAAZA;AAA3B,KAAD,CAA/B;AAAA,GAAxB;;AAEA,sBACE,2DAAC,uDAAD,qBACE,2DAAC,2CAAD;AAAU,YAAQ,EAAE;AAApB,kBACE,2DAAC,yEAAD;AAAa,SAAK,MAAlB;AAAmB,SAAK,EAAExH,0DAA1B;AAAgD,aAAS,EAAEmH;AAA3D,IADF,eAEE,2DAAC,yEAAD;AACE,SAAK,MADP;AAEE,SAAK,EAAEnH,uDAFT;AAGE,aAAS,EAAEqH,eAHb;AAIE,kBAAc,EAAE;AACd1H,iBAAW,EAAEiM,8DAAW,CAACjM,WAAD,EAAcmF,iBAAd,CADV;AAEd+G,sBAAgB,EAAED,8DAAW,CAACjK,QAAD,EAAWoD,cAAX,CAFf;AAGdrC,YAAM,EAAE,IAHM;AAIdoJ,aAAO,EAAE,mBAAM;AACbjE,qBAAa,CAAC;AAAE5I,cAAI,EAAE;AAAR,SAAD,CAAb;AACA8I,eAAO,CAAClI,IAAR,CAAaG,yDAAb;AACD,OAPa;AAQd+L,kBAAY,EAAE,sBAACC,MAAD;AAAA,eAAYD,+DAAY,CAAC7K,QAAD,EAAW8K,MAAX,CAAxB;AAAA,OARA;AASdC,uBAAiB,EAAE,IATL;AAUdzE,kBAAY,EAAZA,YAVc;AAWd0E,oBAAc,EAAE,wBAAC/I,KAAD;AAAA,eAAWgJ,8DAAW,CAAChJ,KAAD,EAAQjC,QAAR,EAAkB6G,OAAO,CAAClI,IAA1B,EAAgCvB,IAAhC,EAAsCuJ,aAAtC,CAAtB;AAAA,OAXF;AAYdF,mBAAa,EAAED,mBAZD;AAad0E,wBAAkB,EAAE3E;AAbN;AAJlB,IAFF,CADF,eAwBE,2DAAC,2FAAD;AAAY,aAAS,EAAC;AAAtB,kBACE,2DAAC,2FAAD;AACE,SAAK,EAAEnJ,IAAI,CAACE,aAAL,CAAmB;AACxBC,QAAE,EAAE,iBADoB;AAExBC,oBAAc,EAAE;AAFQ,KAAnB;AADT,IADF,eAOE,2DAAC,+DAAD,OAPF,CAxBF,eAiCE,2DAAC,wFAAD;AAAS,QAAI,EAAC;AAAd,KACGiN,aAAa,iBAAI,2DAAC,uEAAD,OADpB,EAEGxD,aAAa,iBAAI,2DAAC,kEAAD,OAFpB,EAGG,CAACA,aAAD,IAAkBuD,cAAlB,IAAoClF,YAAY,KAAKG,+DAArD,iBACC,2DAAC,4EAAD;AAAiB,mBAAe,EAAEtI;AAAlC,IAJJ,EAMG,CAAC8J,aAAD,IAAkBuD,cAAlB,IAAoClF,YAAY,KAAKI,gEAArD,iBACC,2DAAC,8EAAD;AAAkB,mBAAe,EAAEvI;AAAnC,IAPJ,EASG,CAAC8J,aAAD,IAAkB,CAACuD,cAAnB,IAAqCnC,WAAW,EATnD,CAjCF,CADF;AA+CD,CAjPD;;AAmPA,iEAAe3B,WAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3TA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEO,IAAMgC,kBAAkB,GAAGyC,iEAAe,CAAC,UAACC,OAAD;AAAA,SAAaA,OAAO,EAApB;AAAA,CAAD,EAAyB,GAAzB,CAA1C;AAEA,IAAMC,0BAA0B,GAAG;AACxCrE,YAAU,EAAE,CAD4B;AAExC3E,QAAM,EAAE,YAFgC;AAGxCyB,eAAa,EAAE;AAHyB,CAAnC;AAMA,IAAM+G,YAAY,GAAG,SAAfA,YAAe,CAAC7K,QAAD;AAAA,SAAcA,QAAQ,CAACsL,oEAAY,CAACD,0BAAD,CAAb,CAAtB;AAAA,CAArB;AAEA,IAAMzC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACnK,WAAD;AAAA,SACxCA,WAAW,CAACY,GAAZ,CAAgB;AAAA,QAAG9B,EAAH,QAAGA,EAAH;AAAA,QAAO4B,YAAP,QAAOA,YAAP;AAAA,WAA2B;AAAEoJ,WAAK,EAAEpJ,YAAT;AAAuB6B,WAAK,EAAEzD;AAA9B,KAA3B;AAAA,GAAhB,EAAgF0B,IAAhF,CAAqF,UAACxB,CAAD,EAAIyB,CAAJ;AAAA,WAAUzB,CAAC,CAAC8K,KAAF,CAAQnJ,aAAR,CAAsBF,CAAC,CAACqJ,KAAxB,CAAV;AAAA,GAArF,CADwC;AAAA,CAAnC;AAGA,IAAMO,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACrI,QAAD;AAAA,SAC7CA,QAAQ,CAACpB,GAAT,CAAa;AAAA,QAAG9B,EAAH,SAAGA,EAAH;AAAA,QAAOgO,YAAP,SAAOA,YAAP;AAAA,WAA2B;AAAEhD,WAAK,EAAEgD,YAAT;AAAuBvK,WAAK,EAAEzD;AAA9B,KAA3B;AAAA,GAAb,EAA6E0B,IAA7E,CAAkF,UAACxB,CAAD,EAAIyB,CAAJ;AAAA,WAAUzB,CAAC,CAAC8K,KAAF,CAAQnJ,aAAR,CAAsBF,CAAC,CAACqJ,KAAxB,CAAV;AAAA,GAAlF,CAD6C;AAAA,CAAxC;AAGA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAChI,MAAD,EAASK,KAAT,EAAgBhB,QAAhB;AAAA,SACvBA,QAAQ,CACN8J,qEAAa,CAAC,iFACXnJ,MADU,EACDK,KADC,EADP,CADe;AAAA,CAAlB;AAOA,IAAMwK,eAAe,GAAG,SAAlBA,eAAkB,CAAC3G,GAAD,EAAMiC,WAAN,EAAmBrI,WAAnB,EAAgCgC,QAAhC,EAA0CrD,IAA1C;AAAA,SAC5B;AACCkC,QAAI,EAAE;AAAA,aAAO;AAAEA,YAAI,EAAEwH,WAAW,CAACjC,GAAD,CAAnB;AAA0BA,WAAG,EAAHA;AAA1B,OAAP;AAAA,KADP;AAECgE,kBAAc,EAAE;AAAA,aAAO;AACrB4C,gBAAQ,EAAE,aADW;AAErB5G,WAAG,EAAHA,GAFqB;AAGrB+E,aAAK,EAAE9C,WAAW,CAACjC,GAAD,CAAX,CAAiBxF,GAAjB,CAAqB,UAAC9B,EAAD,EAAQ;AAClC,cAAMmO,UAAU,GAAGjN,WAAW,CAACkN,IAAZ,CAAiB,UAAC5N,IAAD;AAAA,mBAAUA,IAAI,CAACR,EAAL,KAAYA,EAAtB;AAAA,WAAjB,CAAnB;AAEA,iBAAO;AAAE+B,gBAAI,EAAEoM,UAAU,GAAGA,UAAU,CAACvM,YAAd,GAA6B5B,EAA/C;AAAmDyD,iBAAK,EAAEzD;AAA1D,WAAP;AACD,SAJM;AAHc,OAAP;AAAA,KAFjB;AAWCyL,gBAAY,EAAE;AAAA,aAAO;AACnByC,gBAAQ,EAAE,aADS;AAEnB5G,WAAG,EAAHA,GAFmB;AAGnB+E,aAAK,EAAE9C,WAAW,CAACjC,GAAD,CAAX,CAAiBxF,GAAjB,CAAqB,UAAC9B,EAAD,EAAQ;AAClC,cAAMqO,OAAO,GAAGnL,QAAQ,CAACkL,IAAT,CAAc,UAAC5N,IAAD;AAAA,mBAAUA,IAAI,CAACR,EAAL,KAAYA,EAAtB;AAAA,WAAd,CAAhB;AAEA,iBAAO;AAAE+B,gBAAI,EAAEsM,OAAO,GAAGA,OAAO,CAACL,YAAX,GAA0BhO,EAAzC;AAA6CyD,iBAAK,EAAEzD;AAApD,WAAP;AACD,SAJM;AAHY,OAAP;AAAA,KAXf;AAoBCiM,uBAAmB,EAAE;AAAA,aAAO;AAC1BiC,gBAAQ,EAAE,QADgB;AAE1B5G,WAAG,EAAHA,GAF0B;AAG1B+E,aAAK,EAAE,CACL;AACE5I,eAAK,EAAE8F,WAAW,CAACjC,GAAD,CAAX,CAAiB,CAAjB,CADT;AAEEvF,cAAI,EACFwH,WAAW,CAACjC,GAAD,CAAX,CAAiB,CAAjB,MAAwByE,wDAAxB,GACIlM,IAAI,CAACE,aAAL,CAAmB;AACjBC,cAAE,EAAE,mBADa;AAEjBC,0BAAc,EAAE;AAFC,WAAnB,CADJ,GAKIJ,IAAI,CAACE,aAAL,CAAmB;AACjBC,cAAE,EAAE,qBADa;AAEjBC,0BAAc,EAAE;AAFC,WAAnB;AARR,SADK;AAHmB,OAAP;AAAA;AApBtB,IAuCCqH,GAvCD,KAuCU;AAAA,WAAO;AAAEvF,UAAI,EAAEuF;AAAR,KAAP;AAAA,GAxCkB;AAAA,CAAxB;AA0CA,IAAM6E,YAAY,GAAG,SAAfA,YAAe,CAAC5C,WAAD,EAAcrI,WAAd,EAA2BgC,QAA3B,EAAqCrD,IAArC;AAAA,SAC1B6M,MAAM,CAAC4B,IAAP,CAAY/E,WAAZ,EACGzH,GADH,CACO,UAACwF,GAAD;AAAA,WACHiC,WAAW,CAACjC,GAAD,CAAX,IAAoBiC,WAAW,CAACjC,GAAD,CAAX,CAAiByF,MAAjB,GAA0B,CAA9C,GACIkB,eAAe,CAAC3G,GAAD,EAAMiC,WAAN,EAAmBrI,WAAnB,EAAgCgC,QAAhC,EAA0CrD,IAA1C,CAAf,EADJ,GAEI+H,SAHD;AAAA,GADP,EAMGzE,MANH,CAMU6J,OANV,CAD0B;AAAA,CAArB;AASA,IAAMR,WAAW,GAAG,SAAdA,WAAc,CAACH,KAAD,EAAQ9C,WAAR,EAAqB+C,SAArB,EAAmC;AAC5D,MAAIA,SAAJ,EAAe;AACb,WAAOI,MAAM,CAAC4B,IAAP,CAAY/E,WAAZ,EAAyB1F,MAAzB,CACL,UAACC,GAAD,EAAMyK,IAAN;AAAA,6CACKzK,GADL,wFAEGyK,IAFH,EAEU3G,SAFV;AAAA,KADK,EAKL,EALK,CAAP;AAOD;;AAED,MAAM4G,IAAI,GAAGnC,KAAK,CAAC,CAAD,CAAlB;AAEA,yCACK9C,WADL,wFAEGiF,IAAI,CAAClH,GAFR,EAEckH,IAAI,CAACnC,KAAL,GAAa9C,WAAW,CAACiF,IAAI,CAAClH,GAAN,CAAX,CAAsBnE,MAAtB,CAA6B,UAACM,KAAD;AAAA,WAAWA,KAAK,KAAK+K,IAAI,CAACnC,KAAL,CAAW,CAAX,EAAc5I,KAAnC;AAAA,GAA7B,CAAb,GAAsFmE,SAFpG;AAID,CAjBM;AAmBA,IAAMuF,WAAW,GAAG,SAAdA,WAAc,CAACsB,KAAD,EAAQvI,MAAR;AAAA,SAAoBA,MAAM,IAAIuI,KAAK,CAAC1B,MAAN,GAAe,CAAzB,GAA6B0B,KAA7B,GAAqC7G,SAAzD;AAAA,CAApB;AAEA,IAAM8F,WAAW,GAAG,SAAdA,WAAc,CAAChJ,KAAD,EAAQjC,QAAR,EAAkBrB,IAAlB,EAAwBvB,IAAxB,EAA8BuJ,aAA9B,EAAgD;AAAA;;AACzE,MAAMpJ,EAAE,yCAAkC0O,IAAI,CAACC,GAAL,EAAlC,CAAR;;AAEA,MAAIrM,QAAQ,CAACsM,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B1L,MAA7B,CAAoC6J,OAApC,EAA6C8B,GAA7C,OAAuDvN,iEAAA,CAA6B,GAA7B,EAAkCuN,GAAlC,EAA3D,EAAoG;AAClG,QAAIpK,KAAK,CAACqK,SAAV,EAAqB;AAAA,+BACuErK,KAAK,CAACsK,WAD7E;AAAA,UACXC,UADW,sBACXA,UADW;AAAA,UACCC,eADD,sBACCA,eADD;AAAA,UACkBC,YADlB,sBACkBA,YADlB;AAAA,UACgCC,SADhC,sBACgCA,SADhC;AAAA,UAC2CC,uBAD3C,sBAC2CA,uBAD3C;AAGnB5M,cAAQ,CACN6M,kEAAU,CAAC;AACTjM,aAAK,EAAExD,IAAI,CAACE,aAAL,CAAmB;AACxBC,YAAE,EAAE,mBADoB;AAExBC,wBAAc,EAAE;AAFQ,SAAnB,CADE;AAKTsP,mBAAW,EAAE1P,IAAI,CAACE,aAAL,CACX;AACEC,YAAE,EAAE,yBADN;AAEEC,wBAAc,EACZ;AAHJ,SADW,EAMX;AAAE8B,cAAI,eAAE,sEAAI2C,KAAK,CAAC8K,MAAN,CAAajC,MAAb,CAAoBxL,IAAxB;AAAR,SANW,CALJ;AAaT0I,eAAO,EAAE,QAbA;AAcTzK,UAAE,EAAFA,EAdS;AAeTyP,mBAAW,eACT,2DAAC,6GAAD;AACE,iBAAO,EAAE,mBAAM;AACbrG,yBAAa,CAAC;AACZ5I,kBAAI,EAAE,aADM;AAEZ0I,2BAAa,EAAExE,KAAK,CAAC8K,MAFT;AAGZ5K,0BAAY,EAAE;AAAEqK,0BAAU,EAAVA,UAAF;AAAcC,+BAAe,EAAfA,eAAd;AAA+BC,4BAAY,EAAZA,YAA/B;AAA6CC,yBAAS,EAATA,SAA7C;AAAwDC,uCAAuB,EAAvBA;AAAxD;AAHF,aAAD,CAAb;AAKA5M,oBAAQ,CAACiN,qEAAa,CAAC1P,EAAD,CAAd,CAAR;AACAoB,gBAAI,CAACG,2DAAD,CAAJ;AACD;AATH,WAWG1B,IAAI,CAACE,aAAL,CAAmB;AAClBC,YAAE,EAAE,kBADc;AAElBC,wBAAc,EAAE;AAFE,SAAnB,CAXH;AAhBO,OAAD,CADJ,CAAR;AAoCD,KAvCD,MAuCO;AACL,cAAQ0P,mHAAmB,CAACjL,KAAK,CAACkL,aAAP,CAA3B;AACE,aAAK,aAAL;AACEnN,kBAAQ,CACN6M,kEAAU,CAAC;AACTjM,iBAAK,EAAExD,IAAI,CAACE,aAAL,CAAmB;AACxBC,gBAAE,EAAE,mBADoB;AAExBC,4BAAc,EAAE;AAFQ,aAAnB,CADE;AAKTsP,uBAAW,eACT,2DAAC,uDAAD,QACG,0BAAA7K,KAAK,CAACkL,aAAN,CAAoBnE,YAApB,0GAAmC,CAAnC,mFAAuCoE,yBAAvC,gCACCnL,KAAK,CAACkL,aAAN,CAAoBE,QADrB,qFACC,uBAA+B,CAA/B,CADD,2DACC,uBAAmCD,yBADpC,KAEChQ,IAAI,CAACE,aAAL,CAAmB;AACjBC,gBAAE,EAAE,qBADa;AAEjBC,4BAAc,EAAE;AAFC,aAAnB,CAHJ,wBAOS,sEAAIyE,KAAK,CAACkL,aAAN,CAAoB7N,IAAxB,CAPT,MANO;AAgBT0I,mBAAO,EAAE,QAhBA;AAiBTzK,cAAE,EAAFA,EAjBS;AAkBTyP,uBAAW,eACT,2DAAC,6GAAD;AACE,qBAAO,EAAE,mBAAM;AACbhN,wBAAQ,CAACiN,qEAAa,CAAC1P,EAAD,CAAd,CAAR;AACAoB,oBAAI,CAACoE,uDAAc,CAACjE,8DAAD,EAA4BmD,KAAK,CAACkL,aAAN,CAAoB5P,EAAhD,CAAf,CAAJ;AACD;AAJH,eAMGH,IAAI,CAACE,aAAL,CAAmB;AAClBC,gBAAE,EAAE,wBADc;AAElBC,4BAAc,EAAE;AAFE,aAAnB,CANH;AAnBO,WAAD,CADJ,CAAR;AAkCA;;AACF,aAAK,SAAL;AACEwC,kBAAQ,CACN6M,kEAAU,CAAC;AACTjM,iBAAK,EAAExD,IAAI,CAACE,aAAL,CAAmB;AACxBC,gBAAE,EAAE,qBADoB;AAExBC,4BAAc,EAAE;AAFQ,aAAnB,CADE;AAKTsP,uBAAW,EAAE1P,IAAI,CAACE,aAAL,CACX;AACEC,gBAAE,EAAE,2BADN;AAEEC,4BAAc,EACZ;AAHJ,aADW,EAMX;AAAE8B,kBAAI,eAAE,sEAAI2C,KAAK,CAACkL,aAAN,CAAoB7N,IAAxB;AAAR,aANW,CALJ;AAaT0I,mBAAO,EAAE;AAbA,WAAD,CADJ,CAAR;AAiBA;;AACF;AACEhI,kBAAQ,CACN6M,kEAAU,CAAC;AACTjM,iBAAK,EAAExD,IAAI,CAACE,aAAL,CACL;AACEC,gBAAE,EAAE,qBADN;AAEEC,4BAAc,EAAE;AAFlB,aADK,EAKL;AAAEO,kBAAI,2BAAEkE,KAAK,CAACxD,WAAN,CAAkBkN,IAAlB,CAAuB;AAAA,oBAAGpO,EAAH,SAAGA,EAAH;AAAA,uBAAYA,EAAE,KAAK0E,KAAK,CAACkL,aAAN,CAAoBtE,cAAvC;AAAA,eAAvB,CAAF,0DAAE,sBAA+E1J;AAAvF,aALK,CADE;AAQT2N,uBAAW,EAAE1P,IAAI,CAACE,aAAL,CACX;AACEC,gBAAE,EAAE,2BADN;AAEEC,4BAAc,EAAE;AAFlB,aADW,EAKX;AAAE8B,kBAAI,eAAE,sEAAI2C,KAAK,CAACkL,aAAN,CAAoB7N,IAAxB;AAAR,aALW,CARJ;AAeT0I,mBAAO,EAAE,SAfA;AAgBTzK,cAAE,EAAFA,EAhBS;AAiBTyP,uBAAW,eACT,2DAAC,6GAAD;AACE,qBAAO,EAAE,mBAAM;AACbhN,wBAAQ,CAACiN,qEAAa,CAAC1P,EAAD,CAAd,CAAR;AACAoB,oBAAI,CAACoE,uDAAc,CAACjE,8DAAD,EAA4BmD,KAAK,CAACkL,aAAN,CAAoB5P,EAAhD,CAAf,CAAJ;AACD;AAJH,eAMGH,IAAI,CAACE,aAAL,CAAmB;AAClBC,gBAAE,EAAE,oBADc;AAElBC,4BAAc,EAAE;AAFE,aAAnB,CANH;AAlBO,WAAD,CADJ,CAAR;AAiCA;AA1FJ;AA4FD;AACF;AACF,CA1IM,C","file":"js/sourcesPage.5d16fa163daa9c2f990b.js","sourcesContent":["/* eslint-disable react/display-name */\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/esm/components/Card/CardBody';\nimport { CardTitle } from '@patternfly/react-core/dist/esm/components/Card/CardTitle';\nimport { CardFooter } from '@patternfly/react-core/dist/esm/components/Card/CardFooter';\nimport { Text } from '@patternfly/react-core/dist/esm/components/Text/Text';\n\nimport CloudTiles from './CloudTiles';\n\nconst CLOUD_CATALOG_HREF = 'https://catalog.redhat.com/cloud';\n\nconst CloudEmptyState = ({ setSelectedType }) => {\n  const intl = useIntl();\n\n  return (\n    <Card className=\"ins-c-sources__cloud-empty-state-card pf-u-mt-md pf-u-mt-0-on-md\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'cloud.emptystate.cardTitle',\n          defaultMessage: 'Get started by connecting to your public clouds',\n        })}\n      </CardTitle>\n      <CardBody>\n        <Text>\n          {intl.formatMessage({\n            id: 'cloud.emptystate.cardDescription',\n            defaultMessage: 'Select an available provider.',\n          })}\n        </Text>\n        <div className=\"provider-tiles pf-u-mt-md pf-u-mb-lg\">\n          <CloudTiles setSelectedType={setSelectedType} />\n        </div>\n      </CardBody>\n      <CardFooter className=\"cloud-footer\">\n        <Text className=\"catalog-link pf-u-mt-lg\">\n          {intl.formatMessage(\n            {\n              id: 'cloud.emptystate.catalogLink',\n              defaultMessage: 'Looking for a different provider? <a>See all Red Hat Certified Cloud and Service Providers</a>',\n            },\n            {\n              a: (chunks) => (\n                <Text key=\"link\" component=\"a\" href={CLOUD_CATALOG_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {chunks}\n                </Text>\n              ),\n            }\n          )}\n        </Text>\n      </CardFooter>\n    </Card>\n  );\n};\n\nCloudEmptyState.propTypes = {\n  setSelectedType: PropTypes.func.isRequired,\n};\n\nexport default CloudEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { routes } from '../../Routes';\n\nimport { Tile } from '@patternfly/react-core/dist/esm/components/Tile/Tile';\n\nimport ImageWithPlaceholder from '../TilesShared/ImageWithPlaceholder';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport DisabledTile from '../TilesShared/DisabledTile';\n\nconst mapper = (type, openWizard, TileComponent) =>\n  ({\n    amazon: (\n      <TileComponent\n        isStacked\n        key={type}\n        title=\"Amazon Web Services\"\n        onClick={() => openWizard('amazon')}\n        className=\"tile pf-u-mr-md-on-md pf-u-mt-md pf-u-mt-0-on-md\"\n        icon={\n          <ImageWithPlaceholder\n            className=\"provider-icon pf-u-mb-sm\"\n            src=\"/apps/frontend-assets/partners-icons/aws.svg\"\n            alt=\"aws logo\"\n          />\n        }\n      />\n    ),\n    google: (\n      <TileComponent\n        isStacked\n        key={type}\n        title=\"Google Cloud\"\n        className=\"tile pf-u-mr-md-on-md pf-u-mt-md pf-u-mt-0-on-md\"\n        onClick={() => openWizard('google')}\n        icon={\n          <ImageWithPlaceholder\n            className=\"provider-icon pf-u-mb-sm disabled-icon\"\n            src=\"/apps/frontend-assets/partners-icons/google-cloud-short.svg\"\n            alt=\"google logo\"\n          />\n        }\n      />\n    ),\n    azure: (\n      <TileComponent\n        isStacked\n        key={type}\n        title=\"Microsoft Azure\"\n        onClick={() => openWizard('azure')}\n        className=\"tile pf-u-mr-md-on-md pf-u-mt-md pf-u-mt-0-on-md\"\n        icon={\n          <ImageWithPlaceholder\n            className=\"provider-icon pf-u-mb-sm\"\n            src=\"/apps/frontend-assets/partners-icons/microsoft-azure-short.svg\"\n            alt=\"azure logo\"\n          />\n        }\n      />\n    ),\n  }[type]);\n\nconst CloudTiles = ({ setSelectedType }) => {\n  const { sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n  const { push } = useHistory();\n  const hasWritePermissions = useHasWritePermissions();\n\n  const openWizard = (type) => {\n    setSelectedType(type);\n    push(routes.sourcesNew.path);\n  };\n\n  const TileComponent = hasWritePermissions ? Tile : DisabledTile;\n\n  return sourceTypes\n    .sort((a, b) => a.product_name.localeCompare(b.product_name))\n    .map(({ name }) => mapper(name, openWizard, TileComponent));\n};\n\nCloudTiles.propTypes = {\n  setSelectedType: PropTypes.func.isRequired,\n};\n\nexport default CloudTiles;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Card } from '@patternfly/react-core/dist/esm/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/esm/components/Card/CardBody';\nimport { CardTitle } from '@patternfly/react-core/dist/esm/components/Card/CardTitle';\nimport { Text } from '@patternfly/react-core/dist/esm/components/Text/Text';\n\nimport RedHatTiles from './RedHatTiles';\n\nconst RedHatEmptyState = ({ setSelectedType }) => {\n  const intl = useIntl();\n\n  return (\n    <Card className=\"ins-c-sources__cloud-empty-state-card pf-u-mt-md pf-u-mt-0-on-md\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'redhat.emptystate.cardTitle',\n          defaultMessage: 'Get started by connecting to your Red Hat applications',\n        })}\n      </CardTitle>\n      <CardBody>\n        <Text>\n          {intl.formatMessage({\n            id: 'redhat.emptystate.cardDescription',\n            defaultMessage: 'Select an available application.',\n          })}\n        </Text>\n        <div className=\"provider-tiles pf-u-mt-md pf-u-mb-lg\">\n          <RedHatTiles setSelectedType={setSelectedType} />\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nRedHatEmptyState.propTypes = {\n  setSelectedType: PropTypes.func.isRequired,\n};\n\nexport default RedHatEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '../../Routes';\n\nimport { Tile } from '@patternfly/react-core/dist/esm/components/Tile/Tile';\n\nimport ImageWithPlaceholder from '../TilesShared/ImageWithPlaceholder';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport DisabledTile from '../TilesShared/DisabledTile';\n\nconst RedHatTiles = ({ setSelectedType }) => {\n  const { push } = useHistory();\n  const hasWritePermissions = useHasWritePermissions();\n\n  const openWizard = (type) => {\n    setSelectedType(type);\n    push(routes.sourcesNew.path);\n  };\n\n  const TileComponent = hasWritePermissions ? Tile : DisabledTile;\n\n  const icon = (\n    <ImageWithPlaceholder className=\"redhat-icon\" src=\"/apps/frontend-assets/red-hat-logos/stacked.svg\" alt=\"red hat logo\" />\n  );\n\n  return (\n    <React.Fragment>\n      <TileComponent\n        isStacked\n        title=\"Ansible Automation Platform\"\n        onClick={() => openWizard('ansible-tower')}\n        className=\"tile pf-u-mr-md-on-md pf-u-mt-md pf-u-mt-0-on-md\"\n        icon={icon}\n      />\n      <TileComponent\n        isStacked\n        title=\"OpenShift Container Platfrom\"\n        className=\"tile pf-u-mr-md-on-md pf-u-mt-md pf-u-mt-0-on-md\"\n        onClick={() => openWizard('openshift')}\n        icon={icon}\n      />\n    </React.Fragment>\n  );\n};\n\nRedHatTiles.propTypes = {\n  setSelectedType: PropTypes.func.isRequired,\n};\n\nexport default RedHatTiles;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { EmptyState } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody';\nimport { Bullseye } from '@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport { Text } from '@patternfly/react-core/dist/esm/components/Text/Text';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\n\nconst SourcesErrorState = () => {\n  const intl = useIntl();\n\n  return (\n    <Bullseye>\n      <EmptyState className=\"ins-c-sources__empty-state\">\n        <EmptyStateIcon icon={ExclamationCircleIcon} color=\"var(--pf-global--danger-color--100)\" />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'sources.errorStateTitle',\n            defaultMessage: 'Something went wrong',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage(\n            {\n              id: 'sources.errorStateBody',\n              defaultMessage:\n                'There was a problem processing the request. Try refreshing the page. If the problem persists, contact <a>Red Hat support.</a>',\n            },\n            {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <Text key=\"link\" component=\"a\" href=\"https://access.redhat.com/support\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  {chunks}\n                </Text>\n              ),\n            }\n          )}\n        </EmptyStateBody>\n        <Button className=\"pf-u-mt-xl\" variant=\"primary\" component=\"a\" href={window.location.href}>\n          {intl.formatMessage({\n            id: 'sources.retry',\n            defaultMessage: 'Retry',\n          })}\n        </Button>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default SourcesErrorState;\n","import React from 'react';\n\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody';\nimport { Bullseye } from '@patternfly/react-core/dist/esm/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/esm/components/Title/Title';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport { clearFilters } from '../../redux/sources/actions';\n\nconst EmptyStateTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  return (\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={SearchIcon} />\n        <Title headingLevel=\"h2\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'sources.noResultsFoundTitle',\n            defaultMessage: 'No sources found',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage({\n            id: 'sources.noResultsFoundDescription',\n            defaultMessage: 'No sources match the filter criteria. Remove all filters or clear all filters to show sources.',\n          })}\n        </EmptyStateBody>\n        <Button variant=\"link\" onClick={() => dispatch(clearFilters())}>\n          {intl.formatMessage({\n            id: 'sources.clearAllFilters',\n            defaultMessage: 'Clear all filters',\n          })}\n        </Button>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default EmptyStateTable;\n","import React, { useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, sortable, wrappable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\n\nimport { sortEntities } from '../../redux/sources/actions';\nimport { PlaceHolderTable, RowWrapperLoader } from './loaders';\nimport { sourcesColumns, COLUMN_COUNT } from '../../views/sourcesViewDefinition';\nimport EmptyStateTable from './EmptyStateTable';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { replaceRouteId, routes } from '../../Routes';\n\nconst itemToCells = (item, columns, sourceTypes, appTypes) =>\n  columns\n    .filter((column) => column.title || column.hidden)\n    .map((col) => ({\n      title: col.formatter\n        ? col.formatter(item[col.value], item, {\n            sourceTypes,\n            appTypes,\n          })\n        : item[col.value] || '',\n    }));\n\nconst renderSources = (entities, columns, sourceTypes, appTypes, removingSources) =>\n  entities\n    .filter(({ hidden }) => !hidden)\n    .reduce((acc, item) => {\n      const isDeleting = removingSources.includes(item.id);\n\n      return [\n        ...acc,\n        {\n          ...item,\n          isOpen: !!item.expanded,\n          cells: itemToCells(item, columns, sourceTypes, appTypes),\n          disableActions: isDeleting,\n          isDeleting,\n        },\n      ];\n    }, []);\n\nexport const prepareColumnsCells = (columns) =>\n  columns\n    .filter((column) => column.title || column.hidden)\n    .map((column) => ({\n      title: column.title || '',\n      value: column.value,\n      hidden: column.hidden,\n      transforms: [wrappable],\n      ...(column.sortable && { transforms: [sortable, wrappable] }),\n    }));\n\nconst reducer = (state, payload) => ({ ...state, ...payload });\n\nconst initialState = (columns) => ({\n  rows: [],\n  sortBy: {},\n  isLoaded: false,\n  cells: prepareColumnsCells(columns),\n});\n\nexport const insertEditAction = (actions, intl, push, isOrgAdmin, disabledProps) =>\n  actions.splice(1, 0, {\n    title: intl.formatMessage({\n      id: 'sources.edit',\n      defaultMessage: 'Edit',\n    }),\n    onClick: (_ev, _i, { id }) => push(replaceRouteId(routes.sourcesDetail.path, id)),\n    ...(!isOrgAdmin ? disabledProps : { component: 'button' }),\n  });\n\nexport const actionResolver = (intl, push, isOrgAdmin) => (rowData) => {\n  const tooltip = intl.formatMessage({\n    id: 'sources.notAdminButton',\n    defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n  });\n\n  const disabledProps = {\n    tooltip,\n    isDisabled: true,\n    className: 'ins-c-sources__disabled-drodpown-item',\n  };\n\n  const actions = [];\n\n  const isSourceEditable = !rowData.imported;\n\n  if (isSourceEditable) {\n    insertEditAction(actions, intl, push, isOrgAdmin, disabledProps);\n  }\n\n  actions.push({\n    title: intl.formatMessage({\n      id: 'sources.remove',\n      defaultMessage: 'Remove',\n    }),\n    onClick: (_ev, _i, { id }) => push(replaceRouteId(routes.sourcesRemove.path, id)),\n    ...(!isOrgAdmin ? disabledProps : { component: 'button' }),\n  });\n\n  return actions;\n};\n\nconst SourcesTable = () => {\n  const { push } = useHistory();\n  const intl = useIntl();\n\n  const loaded = useIsLoaded();\n  const writePermissions = useHasWritePermissions();\n\n  const {\n    appTypes,\n    entities,\n    sourceTypes,\n    sourceTypesLoaded,\n    appTypesLoaded,\n    sortBy,\n    sortDirection,\n    numberOfEntities,\n    removingSources,\n  } = useSelector(({ sources }) => sources, shallowEqual);\n  const reduxDispatch = useDispatch();\n\n  const notSortable = numberOfEntities === 0 || !loaded;\n\n  const [state, dispatch] = useReducer(reducer, initialState(sourcesColumns(intl, notSortable)));\n\n  const refreshColumns = () => {\n    const columns = sourcesColumns(intl, notSortable);\n\n    return dispatch({\n      cells: prepareColumnsCells(columns),\n    });\n  };\n\n  const refreshSources = () => {\n    const columns = sourcesColumns(intl, notSortable);\n\n    return dispatch({\n      rows: renderSources(entities, columns, sourceTypes, appTypes, removingSources),\n      cells: prepareColumnsCells(columns),\n    });\n  };\n\n  useEffect(() => {\n    if (loaded && sourceTypesLoaded && appTypesLoaded) {\n      dispatch({ isLoaded: true });\n      refreshSources();\n    } else {\n      dispatch({ isLoaded: false });\n      refreshColumns();\n    }\n  }, [loaded, sourceTypesLoaded, appTypesLoaded]);\n\n  useEffect(() => {\n    if (state.isLoaded) {\n      refreshSources();\n    }\n  }, [entities, removingSources]);\n\n  let shownRows = state.rows;\n  if (numberOfEntities === 0 && state.isLoaded) {\n    shownRows = [\n      {\n        heightAuto: true,\n        cells: [\n          {\n            props: { colSpan: COLUMN_COUNT },\n            title: <EmptyStateTable />,\n          },\n        ],\n      },\n    ];\n  } else if (!loaded || !appTypesLoaded || !sourceTypesLoaded) {\n    shownRows = [\n      {\n        heightAuto: true,\n        cells: [\n          {\n            props: {\n              colSpan: COLUMN_COUNT,\n              className: 'sources-placeholder-row',\n            },\n            title: <PlaceHolderTable />,\n          },\n        ],\n      },\n    ];\n  }\n\n  return (\n    <Table\n      gridBreakPoint=\"grid-lg\"\n      aria-label={intl.formatMessage({\n        id: 'sources.list',\n        defaultMessage: 'List of Sources',\n      })}\n      onSort={(_event, key, direction) => reduxDispatch(sortEntities(state.cells[key].value, direction))}\n      sortBy={{\n        index: state.cells.map((cell) => (cell.hidden ? 'hidden' : cell.value)).indexOf(sortBy),\n        direction: sortDirection,\n      }}\n      rows={shownRows}\n      cells={state.cells}\n      actionResolver={loaded && numberOfEntities > 0 ? actionResolver(intl, push, writePermissions) : undefined}\n      rowWrapper={RowWrapperLoader}\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nexport default SourcesTable;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Tabs } from '@patternfly/react-core/dist/esm/components/Tabs/Tabs';\nimport { Tab } from '@patternfly/react-core/dist/esm/components/Tabs/Tab';\nimport { TabTitleIcon } from '@patternfly/react-core/dist/esm/components/Tabs/TabTitleIcon';\nimport { TabTitleText } from '@patternfly/react-core/dist/esm/components/Tabs/TabTitleText';\nimport RedhatIcon from '@patternfly/react-icons/dist/esm/icons/redhat-icon';\nimport CloudIcon from '@patternfly/react-icons/dist/esm/icons/cloud-icon';\n\nimport { setActiveVendor } from '../redux/sources/actions';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\n\nconst TabNavigation = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const activeVendor = useSelector(({ sources }) => sources.activeVendor);\n\n  return (\n    <Tabs activeKey={activeVendor} onSelect={(_e, key) => dispatch(setActiveVendor(key))} className=\"pf-u-mt-md\">\n      <Tab\n        eventKey={CLOUD_VENDOR}\n        title={\n          <React.Fragment>\n            <TabTitleIcon>\n              <CloudIcon />\n            </TabTitleIcon>\n            <TabTitleText>{intl.formatMessage({ id: 'sources.cloudSources', defaultMessage: 'Cloud sources' })}</TabTitleText>\n          </React.Fragment>\n        }\n      />\n      <Tab\n        eventKey={REDHAT_VENDOR}\n        title={\n          <React.Fragment>\n            <TabTitleIcon>\n              <RedhatIcon />\n            </TabTitleIcon>\n            <TabTitleText>{intl.formatMessage({ id: 'sources.redhatSources', defaultMessage: 'Red Hat sources' })}</TabTitleText>\n          </React.Fragment>\n        }\n      />\n    </Tabs>\n  );\n};\n\nexport default TabNavigation;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Tile } from '@patternfly/react-core/dist/esm/components/Tile/Tile';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\n\nconst DisabledTile = (props) => {\n  const intl = useIntl();\n\n  const tooltip = intl.formatMessage({\n    id: 'sources.notAdminButton',\n    defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n  });\n\n  return (\n    <Tooltip content={tooltip}>\n      <div className=\"disabled-tile-with-tooltip\">\n        <Tile {...props} isDisabled />\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default DisabledTile;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loader } from '../SourcesTable/loaders';\n\nconst ImageWithPlaceholder = ({ src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <React.Fragment>\n      {!loaded && <Loader height=\"40px\" width=\"110px\" {...rest} />}\n      <img src={src} onLoad={() => setLoaded(true)} style={{ display: loaded ? 'initial' : 'none' }} {...rest} />\n    </React.Fragment>\n  );\n};\n\nImageWithPlaceholder.propTypes = {\n  src: PropTypes.string.isRequired,\n};\n\nexport default ImageWithPlaceholder;\n","import React, { useEffect, lazy, Suspense, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button/Button';\nimport { useIntl } from 'react-intl';\n\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\nimport { filterVendorAppTypes } from '@redhat-cloud-services/frontend-components-sources/esm/filterApps';\nimport { filterVendorTypes } from '@redhat-cloud-services/frontend-components-sources/esm/filterTypes';\n\nimport { filterSources, pageAndSize } from '../redux/sources/actions';\nimport SourcesTable from '../components/SourcesTable/SourcesTable';\nimport SourcesErrorState from '../components/SourcesErrorState';\nimport { routes } from '../Routes';\n\nconst SourceRemoveModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"remove\" */\n    '../components/SourceRemoveModal/SourceRemoveModal'\n  )\n);\nconst AddSourceWizard = lazy(() =>\n  import(\n    /* webpackChunkName: \"addSource\" */ '@redhat-cloud-services/frontend-components-sources/esm/addSourceWizard'\n  ).then((module) => ({ default: module.AddSourceWizard }))\n);\n\nimport {\n  prepareChips,\n  removeChips,\n  setFilter,\n  debouncedFiltering,\n  prepareSourceTypeSelection,\n  afterSuccess,\n  loadedTypes,\n  prepareApplicationTypeSelection,\n  checkSubmit,\n} from './Sources/helpers';\nimport { useIsLoaded } from '../hooks/useIsLoaded';\nimport { useHasWritePermissions } from '../hooks/useHasWritePermissions';\nimport CustomRoute from '../components/CustomRoute/CustomRoute';\nimport { Tooltip } from '@patternfly/react-core/dist/esm/components/Tooltip/Tooltip';\nimport { PaginationLoader } from '../components/SourcesTable/loaders';\nimport TabNavigation from '../components/TabNavigation';\nimport CloudCards from '../components/CloudTiles/CloudCards';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\nimport CloudEmptyState from '../components/CloudTiles/CloudEmptyState';\nimport { AVAILABLE, UNAVAILABLE } from '../views/formatters';\nimport RedHatEmptyState from '../components/RedHatTiles/RedHatEmptyState';\n\nconst initialState = {\n  filter: undefined,\n  selectedType: undefined,\n  wizardInitialState: undefined,\n  wizardInitialValues: undefined,\n};\n\nconst reducer = (state, { type, value, selectedType, initialValues, initialState }) => {\n  switch (type) {\n    case 'setFilterValue':\n      return { ...state, filter: value };\n    case 'setSelectedType':\n      return { ...state, selectedType };\n    case 'retryWizard':\n      return { ...state, wizardInitialState: initialState, wizardInitialValues: initialValues };\n    case 'closeWizard':\n      return { ...state, selectedType: undefined, wizardInitialState: undefined, wizardInitialValues: undefined };\n  }\n};\n\nconst SourcesPage = () => {\n  const [{ filter, selectedType, wizardInitialState, wizardInitialValues }, stateDispatch] = useReducer(reducer, initialState);\n\n  const entitiesLoaded = useIsLoaded();\n  const hasWritePermissions = useHasWritePermissions();\n\n  const history = useHistory();\n  const intl = useIntl();\n\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n\n  const {\n    filterValue,\n    numberOfEntities,\n    appTypes,\n    pageSize,\n    pageNumber,\n    fetchingError,\n    sourceTypes,\n    paginationClicked,\n    appTypesLoaded,\n    sourceTypesLoaded,\n    activeVendor,\n  } = sources;\n\n  const loaded = entitiesLoaded && sourceTypesLoaded && appTypesLoaded;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (filter !== filterValue.name) {\n      stateDispatch({ type: 'setFilterValue', value: filterValue.name });\n    }\n  }, [filterValue.name]);\n\n  const onSetPage = (_e, page) => dispatch(pageAndSize(page, pageSize));\n\n  const onPerPageSelect = (_e, perPage) => dispatch(pageAndSize(1, perPage));\n\n  const maximumPageNumber = Math.ceil(numberOfEntities / pageSize);\n\n  useEffect(() => {\n    if (loaded && numberOfEntities > 0 && pageNumber > Math.max(maximumPageNumber, 1)) {\n      onSetPage({}, maximumPageNumber);\n    }\n  });\n\n  const paginationConfig = {\n    itemCount: numberOfEntities,\n    page: pageNumber,\n    perPage: pageSize,\n    onSetPage,\n    onPerPageSelect,\n    className: 'top-pagination',\n  };\n\n  const paginationConfigBottom = {\n    ...paginationConfig,\n    dropDirection: 'up',\n    variant: 'bottom',\n    isCompact: false,\n    className: 'bottom-pagination',\n  };\n\n  const showPaginationLoader = (!loaded || !appTypesLoaded || !sourceTypesLoaded) && !paginationClicked;\n\n  const filteredSourceTypes = sourceTypes.filter(filterVendorTypes);\n\n  const mainContent = () => (\n    <React.Fragment>\n      <PrimaryToolbar\n        pagination={showPaginationLoader ? <PaginationLoader /> : numberOfEntities > 0 ? paginationConfig : undefined}\n        actionsConfig={\n          hasWritePermissions\n            ? {\n                actions: [\n                  <Link to={routes.sourcesNew.path} key=\"addSourceButton\">\n                    <Button variant=\"primary\" id=\"addSourceButton\">\n                      {intl.formatMessage({\n                        id: 'sources.addSource',\n                        defaultMessage: 'Add source',\n                      })}\n                    </Button>\n                  </Link>,\n                ],\n              }\n            : {\n                actions: [\n                  <Tooltip\n                    content={intl.formatMessage({\n                      id: 'sources.notAdminAddButton',\n                      defaultMessage:\n                        'To add a source, you must be granted write permissions from your Organization Administrator.',\n                    })}\n                    key=\"addSourceButton\"\n                  >\n                    <span tabIndex=\"0\">\n                      <Button variant=\"primary\" isDisabled id=\"addSourceButton\">\n                        {intl.formatMessage({\n                          id: 'sources.addSource',\n                          defaultMessage: 'Add source',\n                        })}\n                      </Button>\n                    </span>\n                  </Tooltip>,\n                ],\n              }\n        }\n        filterConfig={{\n          items: [\n            {\n              label: intl.formatMessage({\n                id: 'sources.name',\n                defaultMessage: 'Name',\n              }),\n              filterValues: {\n                'aria-label': intl.formatMessage({\n                  id: 'sources.filterByName',\n                  defaultMessage: 'Filter by name',\n                }),\n                onChange: (_event, value) => {\n                  stateDispatch({ type: 'setFilterValue', value });\n                  debouncedFiltering(() => setFilter('name', value, dispatch));\n                },\n                value: filter,\n              },\n            },\n            {\n              label: intl.formatMessage({\n                id: 'sources.type',\n                defaultMessage: 'Type',\n              }),\n              type: 'checkbox',\n              filterValues: {\n                onChange: (_event, value) => setFilter('source_type_id', value, dispatch),\n                items: prepareSourceTypeSelection(filteredSourceTypes),\n                value: filterValue.source_type_id,\n              },\n            },\n            {\n              label: intl.formatMessage({\n                id: 'sources.application',\n                defaultMessage: 'Application',\n              }),\n              type: 'checkbox',\n              filterValues: {\n                onChange: (_event, value) => setFilter('applications', value, dispatch),\n                items: prepareApplicationTypeSelection(appTypes?.filter(filterVendorAppTypes(filteredSourceTypes)) || []),\n                value: filterValue.applications,\n              },\n            },\n            {\n              label: intl.formatMessage({\n                id: 'sources.availabilityStatus',\n                defaultMessage: 'Status',\n              }),\n              type: 'checkbox',\n              filterValues: {\n                onChange: (event, _value, selectedValue) =>\n                  setFilter('availability_status', event.target.checked ? [selectedValue] : [], dispatch),\n                items: [\n                  { label: intl.formatMessage({ id: 'sources.available', defaultMessage: 'Available' }), value: AVAILABLE },\n                  {\n                    label: intl.formatMessage({ id: 'sources.unavailable', defaultMessage: 'Unavailable' }),\n                    value: UNAVAILABLE,\n                  },\n                ],\n                value: filterValue.availability_status,\n              },\n            },\n          ],\n        }}\n        activeFiltersConfig={{\n          filters: prepareChips(filterValue, sourceTypes, appTypes, intl),\n          onDelete: (_event, chips, deleteAll) => dispatch(filterSources(removeChips(chips, filterValue, deleteAll))),\n        }}\n      />\n      <SourcesTable />\n      <PrimaryToolbar\n        pagination={showPaginationLoader ? <PaginationLoader /> : numberOfEntities > 0 ? paginationConfigBottom : undefined}\n      />\n    </React.Fragment>\n  );\n\n  const hasSomeFilter =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value && (!Array.isArray(value) || (Array.isArray(value) && value.length > 0)))\n      .filter(Boolean).length > 0;\n\n  const showEmptyState = loaded && numberOfEntities === 0 && !hasSomeFilter;\n  const showInfoCards = activeVendor === CLOUD_VENDOR && !showEmptyState;\n\n  const setSelectedType = (selectedType) => stateDispatch({ type: 'setSelectedType', selectedType });\n\n  return (\n    <React.Fragment>\n      <Suspense fallback={null}>\n        <CustomRoute exact route={routes.sourcesRemove} Component={SourceRemoveModal} />\n        <CustomRoute\n          exact\n          route={routes.sourcesNew}\n          Component={AddSourceWizard}\n          componentProps={{\n            sourceTypes: loadedTypes(sourceTypes, sourceTypesLoaded),\n            applicationTypes: loadedTypes(appTypes, appTypesLoaded),\n            isOpen: true,\n            onClose: () => {\n              stateDispatch({ type: 'closeWizard' });\n              history.push(routes.sources.path);\n            },\n            afterSuccess: (source) => afterSuccess(dispatch, source),\n            hideSourcesButton: true,\n            selectedType,\n            submitCallback: (state) => checkSubmit(state, dispatch, history.push, intl, stateDispatch),\n            initialValues: wizardInitialValues,\n            initialWizardState: wizardInitialState,\n          }}\n        />\n      </Suspense>\n      <PageHeader className=\"pf-u-pb-0\">\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n        <TabNavigation />\n      </PageHeader>\n      <Section type=\"content\">\n        {showInfoCards && <CloudCards />}\n        {fetchingError && <SourcesErrorState />}\n        {!fetchingError && showEmptyState && activeVendor === CLOUD_VENDOR && (\n          <CloudEmptyState setSelectedType={setSelectedType} />\n        )}\n        {!fetchingError && showEmptyState && activeVendor === REDHAT_VENDOR && (\n          <RedHatEmptyState setSelectedType={setSelectedType} />\n        )}\n        {!fetchingError && !showEmptyState && mainContent()}\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport default SourcesPage;\n","import React from 'react';\nimport awesomeDebounce from 'awesome-debounce-promise';\n\nimport { AlertActionLink } from '@patternfly/react-core/dist/esm/components/Alert/AlertActionLink';\n\nimport computeSourceStatus from '@redhat-cloud-services/frontend-components-sources/esm/computeSourceStatus';\n\nimport { loadEntities, filterSources, addMessage, removeMessage } from '../../redux/sources/actions';\nimport { replaceRouteId, routes } from '../../Routes';\nimport { AVAILABLE } from '../../views/formatters';\n\nexport const debouncedFiltering = awesomeDebounce((refresh) => refresh(), 500);\n\nexport const afterSuccessLoadParameters = {\n  pageNumber: 1,\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n};\n\nexport const afterSuccess = (dispatch) => dispatch(loadEntities(afterSuccessLoadParameters));\n\nexport const prepareSourceTypeSelection = (sourceTypes) =>\n  sourceTypes.map(({ id, product_name }) => ({ label: product_name, value: id })).sort((a, b) => a.label.localeCompare(b.label));\n\nexport const prepareApplicationTypeSelection = (appTypes) =>\n  appTypes.map(({ id, display_name }) => ({ label: display_name, value: id })).sort((a, b) => a.label.localeCompare(b.label));\n\nexport const setFilter = (column, value, dispatch) =>\n  dispatch(\n    filterSources({\n      [column]: value,\n    })\n  );\n\nexport const chipsFormatters = (key, filterValue, sourceTypes, appTypes, intl) =>\n  ({\n    name: () => ({ name: filterValue[key], key }),\n    source_type_id: () => ({\n      category: 'Source Type',\n      key,\n      chips: filterValue[key].map((id) => {\n        const sourceType = sourceTypes.find((type) => type.id === id);\n\n        return { name: sourceType ? sourceType.product_name : id, value: id };\n      }),\n    }),\n    applications: () => ({\n      category: 'Application',\n      key,\n      chips: filterValue[key].map((id) => {\n        const appType = appTypes.find((type) => type.id === id);\n\n        return { name: appType ? appType.display_name : id, value: id };\n      }),\n    }),\n    availability_status: () => ({\n      category: 'Status',\n      key,\n      chips: [\n        {\n          value: filterValue[key][0],\n          name:\n            filterValue[key][0] === AVAILABLE\n              ? intl.formatMessage({\n                  id: 'sources.available',\n                  defaultMessage: 'Available',\n                })\n              : intl.formatMessage({\n                  id: 'sources.unavailable',\n                  defaultMessage: 'Unavailable',\n                }),\n        },\n      ],\n    }),\n  }[key] || (() => ({ name: key })));\n\nexport const prepareChips = (filterValue, sourceTypes, appTypes, intl) =>\n  Object.keys(filterValue)\n    .map((key) =>\n      filterValue[key] && filterValue[key].length > 0\n        ? chipsFormatters(key, filterValue, sourceTypes, appTypes, intl)()\n        : undefined\n    )\n    .filter(Boolean);\n\nexport const removeChips = (chips, filterValue, deleteAll) => {\n  if (deleteAll) {\n    return Object.keys(filterValue).reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: undefined,\n      }),\n      {}\n    );\n  }\n\n  const chip = chips[0];\n\n  return {\n    ...filterValue,\n    [chip.key]: chip.chips ? filterValue[chip.key].filter((value) => value !== chip.chips[0].value) : undefined,\n  };\n};\n\nexport const loadedTypes = (types, loaded) => (loaded && types.length > 0 ? types : undefined);\n\nexport const checkSubmit = (state, dispatch, push, intl, stateDispatch) => {\n  const id = `sources-wizard-notification-${Date.now()}`;\n\n  if (location.pathname.split('/').filter(Boolean).pop() !== routes.sourcesNew.path.split('/').pop()) {\n    if (state.isErrored) {\n      const { activeStep, activeStepIndex, maxStepIndex, prevSteps, registeredFieldsHistory } = state.wizardState;\n\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({\n            id: 'alert.error.title',\n            defaultMessage: 'Error adding source',\n          }),\n          description: intl.formatMessage(\n            {\n              id: 'alert.error.description',\n              defaultMessage:\n                'There was a problem while trying to add source {name}. Please try again. If the error persists, open a support case.',\n            },\n            { name: <b>{state.values.source.name}</b> }\n          ),\n          variant: 'danger',\n          id,\n          actionLinks: (\n            <AlertActionLink\n              onClick={() => {\n                stateDispatch({\n                  type: 'retryWizard',\n                  initialValues: state.values,\n                  initialState: { activeStep, activeStepIndex, maxStepIndex, prevSteps, registeredFieldsHistory },\n                });\n                dispatch(removeMessage(id));\n                push(routes.sourcesNew.path);\n              }}\n            >\n              {intl.formatMessage({\n                id: 'alert.error.link',\n                defaultMessage: 'Retry',\n              })}\n            </AlertActionLink>\n          ),\n        })\n      );\n    } else {\n      switch (computeSourceStatus(state.createdSource)) {\n        case 'unavailable':\n          dispatch(\n            addMessage({\n              title: intl.formatMessage({\n                id: 'alert.error.title',\n                defaultMessage: 'Source configuration unsuccessful',\n              }),\n              description: (\n                <React.Fragment>\n                  {state.createdSource.applications?.[0]?.availability_status_error ||\n                    state.createdSource.endpoint?.[0]?.availability_status_error ||\n                    intl.formatMessage({\n                      id: 'wizard.unknownError',\n                      defaultMessage: 'Unknown error',\n                    })}\n                  &nbsp;[<b>{state.createdSource.name}</b>]\n                </React.Fragment>\n              ),\n              variant: 'danger',\n              id,\n              actionLinks: (\n                <AlertActionLink\n                  onClick={() => {\n                    dispatch(removeMessage(id));\n                    push(replaceRouteId(routes.sourcesDetail.path, state.createdSource.id));\n                  }}\n                >\n                  {intl.formatMessage({\n                    id: 'alert.unavailable.link',\n                    defaultMessage: 'Edit source',\n                  })}\n                </AlertActionLink>\n              ),\n            })\n          );\n          break;\n        case 'timeout':\n          dispatch(\n            addMessage({\n              title: intl.formatMessage({\n                id: 'alert.timeout.title',\n                defaultMessage: 'Source configuration in progress',\n              }),\n              description: intl.formatMessage(\n                {\n                  id: 'alert.timeout.description',\n                  defaultMessage:\n                    'We are still working to confirm credentials for source {name}. To track progress, check the Status column in the Sources table.',\n                },\n                { name: <b>{state.createdSource.name}</b> }\n              ),\n              variant: 'info',\n            })\n          );\n          break;\n        default:\n          dispatch(\n            addMessage({\n              title: intl.formatMessage(\n                {\n                  id: 'alert.success.title',\n                  defaultMessage: '{type} connection successful',\n                },\n                { type: state.sourceTypes.find(({ id }) => id === state.createdSource.source_type_id)?.product_name }\n              ),\n              description: intl.formatMessage(\n                {\n                  id: 'alert.success.description',\n                  defaultMessage: 'Source {name} was successfully added',\n                },\n                { name: <b>{state.createdSource.name}</b> }\n              ),\n              variant: 'success',\n              id,\n              actionLinks: (\n                <AlertActionLink\n                  onClick={() => {\n                    dispatch(removeMessage(id));\n                    push(replaceRouteId(routes.sourcesDetail.path, state.createdSource.id));\n                  }}\n                >\n                  {intl.formatMessage({\n                    id: 'alert.success.link',\n                    defaultMessage: 'View source details',\n                  })}\n                </AlertActionLink>\n              ),\n            })\n          );\n          break;\n      }\n    }\n  }\n};\n"],"sourceRoot":""}