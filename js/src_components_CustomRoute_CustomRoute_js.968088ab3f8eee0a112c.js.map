{"version":3,"sources":["webpack://sources-ui/./src/components/CustomRoute/CustomRoute.js","webpack://sources-ui/./src/components/RedirectNoId/RedirectNoId.js","webpack://sources-ui/./src/components/RedirectNoWriteAccess/RedirectNoWriteAccess.js","webpack://sources-ui/./src/hooks/useHasWritePermissions.js","webpack://sources-ui/./src/hooks/useIsLoaded.js","webpack://sources-ui/./src/hooks/useSource.js"],"names":["CustomRouteInternal","route","children","source","redirectNoId","useSource","writeAccess","propTypes","PropTypes","path","bool","isRequired","CustomRoute","componentProps","Component","props","RedirectNoId","useParams","id","intl","useIntl","loaded","useIsLoaded","useSelector","sources","shallowEqual","appTypesLoaded","sourceTypesLoaded","dispatch","useDispatch","useState","applicationIsLoaded","setIsApplicationLoaded","useEffect","doLoadSource","then","addHiddenSource","addMessage","title","formatMessage","defaultMessage","variant","description","routes","RedirectNoWriteAccess","writePermissions","useHasWritePermissions","user","orgAdmin","isOrgAdmin","undefined","isLoaded","entities","find"],"mappings":"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","file":"js/src_components_CustomRoute_CustomRoute_js.968088ab3f8eee0a112c.js","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport RedirectNoWriteAccess from '../RedirectNoWriteAccess/RedirectNoWriteAccess';\nimport { useSource } from '../../hooks/useSource';\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\n\nconst CustomRouteInternal = ({ route, children }) => {\n  const source = route.redirectNoId && useSource();\n\n  if (!source && route.redirectNoId) {\n    return <RedirectNoId />;\n  }\n\n  return (\n    <React.Fragment>\n      {route.writeAccess && <RedirectNoWriteAccess />}\n      {children}\n    </React.Fragment>\n  );\n};\n\nCustomRouteInternal.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst CustomRoute = ({ route, componentProps, Component, ...props }) => (\n  <Route {...props} path={route.path}>\n    <CustomRouteInternal route={route}>\n      <Component {...componentProps} />\n    </CustomRouteInternal>\n  </Route>\n);\n\nCustomRoute.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n  }).isRequired,\n  componentProps: PropTypes.any,\n  Component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n};\n\nexport default CustomRoute;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage, addHiddenSource } from '../../redux/sources/actions';\nimport { doLoadSource } from '../../api/entities';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\n\nconst RedirectNoId = () => {\n  const { id } = useParams();\n  const intl = useIntl();\n  const source = useSource();\n\n  const loaded = useIsLoaded();\n\n  const { appTypesLoaded, sourceTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n  const dispatch = useDispatch();\n\n  const [applicationIsLoaded, setIsApplicationLoaded] = useState(false);\n\n  useEffect(() => {\n    if (loaded && appTypesLoaded && sourceTypesLoaded) {\n      doLoadSource(id)\n        .then(({ sources: [source] }) => {\n          dispatch(addHiddenSource(source));\n          return source;\n        })\n        .then((source) => {\n          if (!source) {\n            dispatch(\n              addMessage({\n                title: intl.formatMessage({\n                  id: 'sources.sourceNotFoundTitle',\n                  defaultMessage: 'Requested source was not found',\n                }),\n                variant: 'danger',\n                description: intl.formatMessage(\n                  {\n                    id: 'sources.sourceNotFoundTitleDescription',\n                    defaultMessage: 'Source with { id } was not found. Try it again later.',\n                  },\n                  { id }\n                ),\n              })\n            );\n          }\n\n          setIsApplicationLoaded(true);\n        });\n    }\n  }, [loaded, appTypesLoaded, sourceTypesLoaded]);\n\n  if (applicationIsLoaded && !source) {\n    return <Redirect to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoId;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { routes } from '../../Routes';\n\nconst RedirectNoWriteAccess = () => {\n  const intl = useIntl();\n\n  const writePermissions = useHasWritePermissions();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (writePermissions === false) {\n      const title = intl.formatMessage({\n        id: 'sources.insufficietnPerms',\n        defaultMessage: 'Insufficient permissions',\n      });\n      const description = intl.formatMessage({\n        id: 'sources.notAdminButton',\n        defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n      });\n\n      dispatch(addMessage({ title, variant: 'danger', description }));\n    }\n  }, [writePermissions]);\n\n  if (writePermissions === false) {\n    return <Redirect to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoWriteAccess;\n","import { useSelector } from 'react-redux';\n\nexport const useHasWritePermissions = () => {\n  const { orgAdmin, writePermissions } = useSelector(({ user }) => ({\n    orgAdmin: user?.isOrgAdmin,\n    writePermissions: user?.writePermissions,\n  }));\n\n  if (typeof orgAdmin !== 'boolean' && typeof writePermissions !== 'boolean') {\n    return undefined;\n  }\n\n  return !!orgAdmin || !!writePermissions;\n};\n","import { useSelector } from 'react-redux';\n\nexport const useIsLoaded = () => {\n  const isLoaded = useSelector(({ sources }) => sources.loaded);\n\n  return isLoaded <= 0;\n};\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nexport const useSource = () => {\n  const { id } = useParams();\n  const source = useSelector(({ sources }) => sources.entities.find((source) => source.id === id));\n\n  return source;\n};\n"],"sourceRoot":""}