{"version":3,"file":"js/1995.f7c89749727f15c0c5fa.js","mappings":"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","sources":["webpack:///./src/components/ErrorBoundary.js","webpack:///./src/redux/user/actions.js","webpack:///./src/components/PermissionsChecker.js","webpack:///./src/components/DataLoader.js","webpack:///./src/App.js","webpack:///./src/components/RedirectNoWriteAccess/RedirectNoWriteAccess.js","webpack:///./src/components/RedirectNoPaused/RedirectNoPaused.js","webpack:///./src/components/ElementWrapper/ElementWrapper.js","webpack:///./src/Routing.js","webpack:///./src/api/constants.js","webpack:///./src/api/entities.js","webpack:///./src/frontend-components-copies/interceptors.js","webpack:///./src/api/handleError.js","webpack:///./src/components/AppLink/index.js","webpack:///./src/components/AppNavigate/index.js","webpack:///./src/components/CloudTiles/CloudCards.js","webpack:///./src/components/RedirectNoId/RedirectNoId.js","webpack:///./src/components/SourcesTable/loaders.js","webpack:///./src/components/constants.js","webpack:///./src/hooks/useHasWritePermissions.js","webpack:///./src/hooks/useIsLoaded.js","webpack:///./src/hooks/useSource.js","webpack:///./src/redux/sources/actionTypes.js","webpack:///./src/redux/sources/actions.js","webpack:///./src/api/source_types.js","webpack:///./src/api/checkAccountHCS.js","webpack:///./src/redux/user/actionTypes.js","webpack:///./src/utilities/constants.js","webpack:///./src/utilities/disabledTooltipProps.js","webpack:///./src/utilities/intlShared.js","webpack:///./src/redux/sources/reducer.js","webpack:///./src/redux/user/reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/utilities/tryAgainMessage.js","webpack:///./src/utilities/urlQuery.js","webpack:///./src/utilities/utils.js","webpack:///./src/views/formatters.js","webpack:///./src/views/sourcesViewDefinition.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport { addMessage } from '../redux/sources/actions';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error, errorInfo) {\n    return { error, errorInfo };\n  }\n\n  componentDidCatch(error) {\n    const sentryId = Sentry.captureException(error);\n    this.props.dispatch(\n      addMessage({\n        title: `${error.toString()} (Sentry ID: ${sentryId})`,\n        variant: 'danger',\n        description: error.stack,\n      }),\n    );\n  }\n\n  render() {\n    const { error } = this.state;\n    const { children } = this.props;\n\n    if (error) {\n      return <Fragment>Error occurred</Fragment>;\n    }\n\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nErrorBoundary.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default connect()(ErrorBoundary);\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const loadWritePermissions = (getUserPermissions) => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING });\n\n  return getUserPermissions('sources', true) // bypassCache = true\n    .then((permissions) => {\n      const allPermission = permissions.reduce((acc, curr) => [...acc, curr?.permission], []);\n      const writePermissions = allPermission.includes('sources:*:*') || allPermission.includes('sources:*:write');\n\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED,\n        payload: writePermissions,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      }),\n    );\n};\n\nexport const loadIntegrationsEndpointsPermissions = (getUserPermissions) => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_PENDING });\n\n  return getUserPermissions('integrations', true) // bypassCache = true\n    .then((permissions) => {\n      const allPermission = permissions.map((curr) => curr?.permission);\n      const integrationsEndpointsPermissions =\n        allPermission.includes('integrations:*:*') ||\n        allPermission.includes('integrations:endpoints:read') ||\n        allPermission.includes('integrations:endpoints:write');\n\n      dispatch({\n        type: ACTION_TYPES.SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_FULFILLED,\n        payload: integrationsEndpointsPermissions,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      }),\n    );\n};\n\nexport const loadOrgAdmin = (getUser) => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_ORG_ADMIN_PENDING });\n\n  return getUser()\n    .then(\n      ({\n        identity: {\n          user: { is_org_admin },\n        },\n      }) => {\n        dispatch({\n          type: ACTION_TYPES.SET_ORG_ADMIN_FULFILLED,\n          payload: is_org_admin,\n        });\n      },\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_ORG_ADMIN_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      }),\n    );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport { loadIntegrationsEndpointsPermissions, loadOrgAdmin, loadWritePermissions } from '../redux/user/actions';\n\nconst PermissionsChecker = ({ children }) => {\n  const dispatch = useDispatch();\n  const {\n    auth: { getUser },\n    getUserPermissions,\n  } = useChrome();\n\n  useEffect(() => {\n    Promise.all([\n      dispatch(loadWritePermissions(getUserPermissions)),\n      dispatch(loadOrgAdmin(getUser)),\n      dispatch(loadIntegrationsEndpointsPermissions(getUserPermissions)),\n    ]);\n  }, []);\n\n  return children;\n};\n\nexport default PermissionsChecker;\n","import { useEffect, useRef } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { loadAppTypes, loadEntities, loadHcsEnrollment, loadSourceTypes } from '../redux/sources/actions';\nimport { loadEnhancedAttributes, parseQuery, updateQuery } from '../utilities/urlQuery';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst DataLoader = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n  const previousPathname = useRef(pathname);\n  const {\n    auth: { getToken },\n    isProd,\n  } = useChrome();\n\n  const loadData = async () => {\n    const { applications, types } = loadEnhancedAttributes();\n    const token = await getToken();\n\n    if (applications || types) {\n      Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadHcsEnrollment(token, isProd()))]).then(\n        () => dispatch(loadEntities(parseQuery)),\n      );\n    } else {\n      Promise.all([\n        dispatch(loadSourceTypes()),\n        dispatch(loadAppTypes()),\n        dispatch(loadEntities(parseQuery)),\n        dispatch(loadHcsEnrollment(token, isProd())),\n      ]);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (previousPathname.current !== pathname) {\n      updateQuery(sources);\n      previousPathname.current = pathname;\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default DataLoader;\n","import React, { useEffect } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { IntlProvider } from 'react-intl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport Routing from './Routing';\n\nimport './App.scss';\nimport './styles/authSelect.scss';\nimport './styles/cardSelect.scss';\nimport './styles/costManagement.scss';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PermissionsChecker from './components/PermissionsChecker';\nimport DataLoader from './components/DataLoader';\nimport { CLOUD_CARDS_KEY } from './components/CloudTiles/CloudCards';\nimport { initAxios } from './api/entities';\n\nconst App = () => {\n  const chrome = useChrome();\n\n  chrome?.updateDocumentTitle?.('Integrations');\n\n  useEffect(() => {\n    initAxios(chrome.auth.getUser, chrome.auth.logout);\n    return () => {\n      sessionStorage.removeItem(CLOUD_CARDS_KEY);\n    };\n  }, []);\n\n  return (\n    <IntlProvider locale=\"en\">\n      <React.Fragment>\n        <NotificationsPortal />\n        <ErrorBoundary>\n          <PermissionsChecker>\n            <section className=\"pf-v5-u-p-0 src-c-section-main\">\n              <DataLoader />\n              <Routing />\n            </section>\n          </PermissionsChecker>\n        </ErrorBoundary>\n      </React.Fragment>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { routes } from '../../Routing';\nimport { disabledMessage } from '../../utilities/disabledTooltipProps';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoWriteAccess = () => {\n  const intl = useIntl();\n\n  const writePermissions = useHasWritePermissions();\n  const isOrgAdmin = useSelector(({ user }) => user.isOrgAdmin);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (writePermissions === false) {\n      const title = intl.formatMessage({\n        id: 'sources.insufficietnPerms',\n        defaultMessage: 'Insufficient permissions',\n      });\n      const description = disabledMessage(intl, isOrgAdmin);\n\n      dispatch(addMessage({ title, variant: 'danger', description }));\n    }\n  }, [writePermissions]);\n\n  if (writePermissions === false) {\n    return <AppNavigate to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoWriteAccess;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { replaceRouteId, routes } from '../../Routing';\nimport { useSource } from '../../hooks/useSource';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoPaused = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (source.paused_at) {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({\n            id: 'sources.sourcePausedRedirect',\n            defaultMessage: 'Integration is paused',\n          }),\n          variant: 'danger',\n          description: intl.formatMessage({\n            id: 'sources.sourcePausedRedirectDescription',\n            defaultMessage: 'You cannot perform this action on a paused integration.',\n          }),\n        }),\n      );\n    }\n  }, [source.paused_at]);\n\n  if (source.paused_at) {\n    return <AppNavigate to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoPaused;\n","import React, { cloneElement } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { useSource } from '../../hooks/useSource';\nimport RedirectNoWriteAccess from '../RedirectNoWriteAccess/RedirectNoWriteAccess';\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\nimport RedirectNoPaused from '../RedirectNoPaused/RedirectNoPaused';\n\nconst ElementWrapperInternal = ({ route, children }) => {\n  const source = route.redirectNoId && useSource();\n\n  if (!source && route.redirectNoId) {\n    return <RedirectNoId />;\n  }\n\n  return (\n    <React.Fragment>\n      {route.noPaused && <RedirectNoPaused />}\n      {route.writeAccess && <RedirectNoWriteAccess />}\n      {children}\n    </React.Fragment>\n  );\n};\n\nElementWrapperInternal.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n    noPaused: PropTypes.bool,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst ElementWrapper = ({ route, children }) => {\n  const componentProps = useOutletContext();\n  return <ElementWrapperInternal route={route}>{cloneElement(children, componentProps)}</ElementWrapperInternal>;\n};\n\nElementWrapper.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n    noPaused: PropTypes.bool,\n  }).isRequired,\n  componentProps: PropTypes.any,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ElementWrapper;\n","import React, { Suspense, lazy, useMemo } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { AppPlaceholder } from './components/SourcesTable/loaders';\nimport ElementWrapper from './components/ElementWrapper/ElementWrapper';\n\nconst SourcesPage = lazy(() => import(/* webpackChunkName: \"sourcesPage\" */ './pages/Sources'));\nconst SourceDetail = lazy(() => import(/* webpackChunkName: \"sourceDetail\" */ './pages/Detail'));\nconst AddSourceWizard = lazy(() => import(/* webpackChunkName: \"addSourceWizard\" */ './components/addSourceWizard'));\nconst SourceRemoveModal = lazy(() =>\n  import(/* webpackChunkName: \"removeSource\" */ './components/SourceRemoveModal/SourceRemoveModal'),\n);\n\nconst AddApplication = lazy(() => import(/* webpackChunkName \"addApp\" */ './components/AddApplication/AddApplication'));\nconst RemoveAppModal = lazy(() => import(/* webpackChunkName \"removeApp\" */ './components/AddApplication/RemoveAppModal'));\nconst SourceRenameModal = lazy(() => import(/* webpackChunkName \"renameSource\" */ './components/SourceDetail/SourceRenameModal'));\nconst CredentialsForm = lazy(() =>\n  import(/* webpackChunkName \"credentialsForm\" */ './components/CredentialsForm/CredentialsForm'),\n);\n\nexport const routes = {\n  sources: {\n    path: '/',\n  },\n  sourcesNew: {\n    path: 'new',\n    writeAccess: true,\n  },\n  sourcesRemove: {\n    path: 'remove/:id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetail: {\n    path: 'detail/:id',\n    redirectNoId: true,\n  },\n  sourcesDetailRename: {\n    path: 'detail/:id/rename',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemove: {\n    path: 'detail/:id/remove',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailAddApp: {\n    path: 'detail/:id/add_app/:app_type_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemoveApp: {\n    path: 'detail/:id/remove_app/:app_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailEditCredentials: {\n    path: 'detail/:id/edit_credentials',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n};\n\nexport const replaceRouteId = (path, id) => path.replace(':id', id);\n\nconst routeMap = [\n  {\n    route: {\n      path: '/',\n    },\n    element: SourcesPage,\n    childRoutes: [\n      {\n        route: routes.sourcesRemove,\n        element: SourceRemoveModal,\n        elementProps: {\n          backPath: routes.sources.path,\n        },\n      },\n      {\n        route: routes.sourcesNew,\n        element: AddSourceWizard,\n      },\n    ],\n  },\n  {\n    route: routes.sourcesDetail,\n    element: SourceDetail,\n    childRoutes: [\n      {\n        route: routes.sourcesDetail,\n        path: 'remove',\n        element: SourceRemoveModal,\n      },\n      {\n        route: routes.sourcesDetailAddApp,\n        path: 'add_app/:app_type_id',\n        element: AddApplication,\n      },\n      {\n        route: routes.sourcesDetailRemoveApp,\n        path: 'remove_app/:app_id',\n        element: RemoveAppModal,\n      },\n      {\n        route: routes.sourcesDetail,\n        path: 'rename',\n        element: SourceRenameModal,\n      },\n      {\n        route: routes.sourcesDetail,\n        path: 'edit_credentials',\n        element: CredentialsForm,\n      },\n    ],\n  },\n];\n\nconst renderRoutes = (routes = []) =>\n  routes.map(({ route, path, element: Element, childRoutes, elementProps }) => (\n    <Route\n      key={path || route.path}\n      path={path || route.path}\n      element={\n        <ElementWrapper route={route}>\n          <Element {...elementProps} />\n        </ElementWrapper>\n      }\n    >\n      {renderRoutes(childRoutes)}\n    </Route>\n  ));\n\nconst Routing = () => {\n  const routes = useMemo(() => renderRoutes(routeMap), [routeMap]);\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Routes>{routes}</Routes>\n    </Suspense>\n  );\n};\n\nexport default Routing;\n","export const SOURCES_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/sources/v3.1`;\nexport const COST_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/cost-management/v1`;\n","import axios from 'axios';\n\nimport * as interceptors from '../frontend-components-copies/interceptors';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\nimport { AVAILABLE, PARTIALLY_UNAVAILABLE, UNAVAILABLE } from '../views/formatters';\n\nimport { COST_API_BASE_V3, SOURCES_API_BASE_V3 } from './constants';\n\nexport const graphQlErrorInterceptor = (response) => {\n  if (response.errors && response.errors.length > 0) {\n    return Promise.reject({ detail: response.errors[0].message });\n  }\n\n  return response;\n};\n\nexport const interceptor403 = (error) => {\n  if (error.errors && error.errors[0].status === 403) {\n    return Promise.reject({\n      detail: error.errors[0].detail,\n      title: 'Forbidden access',\n    });\n  }\n\n  throw error;\n};\n\nconst axiosInstanceInsights = axios.create();\n\naxiosInstanceInsights.interceptors.response.use(interceptors.responseDataInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor500);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.errorInterceptor);\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptor403);\n\nexport const initAxios = (getUser, logout) => {\n  axiosInstanceInsights.interceptors.request.use(interceptors.createAuthInterceptor(getUser));\n  axiosInstanceInsights.interceptors.response.use(null, interceptors.createInterceptor401(logout));\n};\n\nexport { axiosInstanceInsights as axiosInstance };\n\nexport const getSourcesApi = () => ({\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  updateSource: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/sources/${id}`, data),\n  updateEndpoint: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/endpoints/${id}`, data),\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  updateAuthentication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/authentications/${id}`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  showSource: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  listSourceEndpoints: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/endpoints`),\n  listSourceApplications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/applications`),\n  listEndpointAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}/authentications`),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  doLoadAppTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  deleteApplication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  deleteAuthentication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  showAuthentication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  updateApplication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/applications/${id}`, data),\n  showApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  listSourceAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/authentications`),\n  createSource: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources`, data),\n  getEndpoint: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}`),\n  getGoogleAccount: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account`),\n  bulkCreate: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/bulk_create`, data),\n  pauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/pause`),\n  unpauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/unpause`),\n  pauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/pause`),\n  unpauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/unpause`),\n  getLighthouseLink: () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=azure_lighthouse_template`),\n  getProvAppType: () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types?filter[name]=/insights/platform/provisioning`),\n  getProvMetadata: (provAppTypeId) =>\n    axiosInstanceInsights.get(\n      `${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=aws_wizard_account_number&application_type_id=${provAppTypeId}`,\n    ),\n  getProvisioningServiceAccount: (provAppTypeId) =>\n    axiosInstanceInsights.get(\n      `${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account&application_type_id=${provAppTypeId}`,\n    ),\n});\n\nexport const getCostApi = () => ({\n  listAwsRegions: (limit = 10000, offset = 0) =>\n    axiosInstanceInsights.get(`${COST_API_BASE_V3}/sources/aws-s3-regions/?limit=${limit}&offset=${offset}`),\n});\n\nexport const doLoadAppTypes = () => getSourcesApi().doLoadAppTypes();\n\nexport const doRemoveSource = (sourceId) =>\n  getSourcesApi()\n    .deleteSource(sourceId)\n    .catch((error) => {\n      throw { error: { detail: error.errors[0].detail } };\n    });\n\nexport const pagination = (pageSize, pageNumber) => `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) => {\n  if (!sortBy) {\n    return '';\n  }\n\n  if (sortBy === 'source_type_id') {\n    return `sort_by: { name: \"source_type.product_name\", direction: ${sortDirection} }`;\n  }\n\n  if (sortBy === 'applications') {\n    return `sort_by: { name: \"applications\", direction: ${sortDirection} }`;\n  }\n\n  return `sort_by: { name: \"${sortBy}\", direction: ${sortDirection} }`;\n};\n\nexport const filtering = (filterValue = {}, category) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`{ name: \"name\", operation: \"contains_i\", value: \"${filterValue.name}\" }`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterQueries.push(\n      `{ name: \"source_type_id\", operation: \"eq\", value: [${filterValue.source_type_id.map((x) => `\"${x}\"`).join(', ')}] }`,\n    );\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterQueries.push(\n      `{ name: \"applications.application_type_id\", operation: \"eq\", value: [${filterValue.applications\n        .map((x) => `\"${x}\"`)\n        .join(', ')}] }`,\n    );\n  }\n\n  if (category === CLOUD_VENDOR) {\n    filterQueries.push(`{ name: \"source_type.category\", operation: \"eq\", value: \"Cloud\" }`);\n  }\n\n  if (category === REDHAT_VENDOR) {\n    filterQueries.push(`{ name: \"source_type.category\", operation: \"eq\", value: \"Red Hat\" }`);\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`{ name: \"availability_status\", operation: \"eq\", value: \"${AVAILABLE}\" }`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(\n        `{ name: \"availability_status\", operation: \"eq\", value: [\"${PARTIALLY_UNAVAILABLE}\", \"${UNAVAILABLE}\"] }`,\n      );\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return `filter: [ ${filterQueries.join(', ')} ]`;\n  }\n\n  return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    imported,\n    availability_status,\n    source_ref,\n    last_checked_at,\n    updated_at,\n    last_available_at,\n    app_creation_workflow,\n    paused_at,\n    authentications { authtype, username, availability_status_error, availability_status }\n    applications { application_type_id, id, availability_status_error, availability_status, paused_at, authentications { id, resource_type } },\n    endpoints { id, scheme, host, port, path, receptor_node, role, certificate_authority, verify_ssl, availability_status_error, availability_status, authentications { authtype, availability_status, availability_status_error } }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory }) => {\n  const filter = filtering(filterValue, activeCategory);\n\n  const filterSection = [pagination(pageSize, pageNumber), sorting(sortBy, sortDirection), filter].join(',');\n\n  return getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(${filterSection})\n      { ${graphQlAttributes} },\n     meta{count}\n    }`,\n    })\n    .then(({ data }) => data);\n};\n\nexport const doCreateApplication = (data) => getSourcesApi().createApplication(data);\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n  getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => {\n      throw { error: { title: errorMessage, detail } };\n    });\n\nexport const restFilterGenerator = (filterValue = {}, category) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterValue.applications.map((id) => filterQueries.push(`filter[applications][application_type_id][eq][]=${id}`));\n  }\n\n  if (category === CLOUD_VENDOR) {\n    filterQueries.push(`filter[source_type][category]=Cloud`);\n  }\n\n  if (category === REDHAT_VENDOR) {\n    filterQueries.push('filter[source_type][category]=Red Hat');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`filter[availability_status]=${AVAILABLE}`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`filter[availability_status][]=${PARTIALLY_UNAVAILABLE}`);\n      filterQueries.push(`filter[availability_status][]=${UNAVAILABLE}`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return filterQueries.join('&');\n  }\n\n  return '';\n};\n\nexport const doLoadSource = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { name: \"id\", operation: \"eq\", value: \"${id}\" })\n            { ${graphQlAttributes} }\n        }`,\n    })\n    .then(({ data }) => data);\n\nexport const doLoadApplicationsForEdit = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { name: \"id\", operation: \"eq\", value: \"${id}\" })\n          { applications {\n              application_type_id,\n              id,\n              availability_status_error,\n              availability_status,\n              paused_at,\n              extra,\n              authentications {\n                  id\n              }\n          } }\n      }`,\n    })\n    .then(({ data }) => data);\n\nexport const doDeleteAuthentication = (id) => getSourcesApi().deleteAuthentication(id);\n","import axios from 'axios';\nimport { captureException, configureScope } from '@sentry/minimal';\n\nexport const createAuthInterceptor = (getUser) => async (config) => {\n  await getUser();\n  return config;\n};\n\nexport function responseDataInterceptor(response) {\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}\n\nexport const createInterceptor401 = (logout) => (error) => {\n  if (error.response && error.response.status === 401) {\n    logout();\n    return false;\n  }\n\n  throw error;\n};\n\nexport function interceptor500(error) {\n  if (error.response && error.response.status >= 500 && error.response.status < 600) {\n    configureScope((scope) => {\n      scope.setTag('request_id', error.response.req_id);\n    });\n  }\n\n  throw error;\n}\n\nexport function errorInterceptor(err) {\n  if (!axios.isCancel(err)) {\n    try {\n      const errObject = { ...err };\n      if (errObject.response && errObject.response.data) {\n        throw errObject.response.data;\n      }\n\n      throw err;\n    } catch (customError) {\n      const sentryId = captureException(customError);\n      customError.sentryId = sentryId;\n      throw customError;\n    }\n  }\n}\n","import { getSourcesApi } from './entities';\nimport get from 'lodash/get';\n\nexport const handleError = (error, sourceId = undefined) => {\n  let errorMessage;\n\n  if (!error) {\n    errorMessage = 'Undefined error';\n  }\n\n  if (!errorMessage && typeof error === 'string') {\n    errorMessage = error;\n  }\n\n  if (!errorMessage) {\n    errorMessage = get(error, 'errors[0].detail', JSON.stringify(error, null, 2));\n  }\n\n  if (!sourceId) {\n    return errorMessage;\n  }\n\n  return getSourcesApi()\n    .deleteSource(sourceId)\n    .then(() => errorMessage)\n    .catch((errorDelete) => {\n      const errorDeleteDetail = get(errorDelete, 'errors[0].detail', JSON.stringify(errorDelete, null, 2));\n\n      return `${errorMessage}. The source was not removed, try remove it later: ${errorDeleteDetail}`;\n    });\n};\n\nexport default handleError;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../../utilities/utils';\nimport PropTypes from 'prop-types';\n\nconst AppLink = React.forwardRef((props, ref) => <Link {...props} ref={ref} to={mergeToBasename(props.to, linkBasename)} />);\nAppLink.displayName = 'AppLink';\n\nAppLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AppLink;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../../utilities/utils';\nimport PropTypes from 'prop-types';\n\nconst AppNavigate = (props) => <Navigate {...props} to={mergeToBasename(props.to, linkBasename)} />;\nAppNavigate.displayName = 'AppNavigate';\n\nAppNavigate.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AppNavigate;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport {\n  Card,\n  CardBody,\n  CardExpandableContent,\n  CardHeader,\n  CardTitle,\n  Grid,\n  GridItem,\n  Icon,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport BuilderImageIcon from '@patternfly/react-icons/dist/esm/icons/builder-image-icon';\nimport TrendUpIcon from '@patternfly/react-icons/dist/esm/icons/trend-up-icon';\nimport ListIcon from '@patternfly/react-icons/dist/esm/icons/list-icon';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nexport const CLOUD_CARDS_KEY = 'ins-c-sources__cloud_cards_expanded';\nconst GOLD_IMAGES_AWS =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-aws_cloud-access';\nconst GOLD_IMAGES_AZURE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-azure_cloud-access';\nconst GOLD_IMAGES_MORE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access';\nconst INSIGHTS_REF = 'https://www.redhat.com/en/technologies/management/insights';\nconst SUBWATCH_MORE_HREF = 'https://access.redhat.com/products/subscription-central';\n\nconst CloudCards = () => {\n  const [isExpanded, setExpanded] = useState(() => {\n    const session = sessionStorage.getItem(CLOUD_CARDS_KEY);\n\n    return session ? session === 'true' : true;\n  });\n  const intl = useIntl();\n  const { isBeta } = useChrome();\n\n  useEffect(() => {\n    sessionStorage.setItem(CLOUD_CARDS_KEY, isExpanded);\n  }, [isExpanded]);\n\n  const PREFIX = isBeta() ? 'preview/' : '';\n\n  const INSIGHTS_SERVICES = `/${PREFIX}settings/connector`;\n  const SUBWATCH_HREF = `/${PREFIX}insights/subscriptions/rhel`;\n\n  return (\n    <Card isExpanded={isExpanded} className=\"pf-v5-u-mb-lg pf-v5-u-mt-md pf-v5-u-mt-0-on-md src-c-card-info\">\n      <CardHeader onExpand={() => setExpanded(!isExpanded)}>\n        <CardTitle>{intl.formatMessage({ id: 'cloud.nowWhat', defaultMessage: 'I connected to cloud. Now what?' })}</CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        <CardBody>\n          <TextContent>\n            <Grid hasGutter>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-v5-u-mb-sm\">\n                    <Text className=\"pf-v5-u-font-size-sm pf-v5-u-font-weight-bold pf-v5-u-link-color-hover\">\n                      <Icon size=\"md\" className=\"pf-v5-u-pl-sm pf-v5-u-pr-md\">\n                        <BuilderImageIcon color=\"#0066cc\" aria-label=\"Builder image icon\" />\n                      </Icon>\n                      {intl.formatMessage({ id: 'cloud.goldImages', defaultMessage: 'Use gold images' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-v5-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.description',\n                        defaultMessage:\n                          'Connecting to Amazon Web Services or Microsoft Azure unlocks automatic access to Red Hat gold images. View gold images in your provider console.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AWS} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.awsLink',\n                        defaultMessage: 'Use Red Hat gold images on AWS',\n                      })}\n                    </Text>\n                    <br />\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AZURE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.azureLink',\n                        defaultMessage: 'Use Red Hat gold images on Microsoft Azure',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-v5-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_MORE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.moreLink',\n                        defaultMessage: 'Learn more about Red Hat gold images',\n                      })}\n                      <ArrowRightIcon className=\"pf-v5-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-v5-u-mb-sm\">\n                    <Text className=\"pf-v5-u-font-size-sm pf-v5-u-font-weight-bold pf-v5-u-link-color-hover\">\n                      <Icon size=\"md\" className=\"pf-v5-u-pl-sm pf-v5-u-pr-md\">\n                        <TrendUpIcon color=\"#0066cc\" aria-label=\"Trend up icon\" />\n                      </Icon>\n                      {intl.formatMessage({ id: 'cloud.insights', defaultMessage: 'Explore Red Hat Insights' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-v5-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.description',\n                        defaultMessage:\n                          'Use RHEL instances in the cloud and gain other value-add services, such as predictive analytics.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_REF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.insightsLinkt',\n                        defaultMessage: 'Learn more about Red Hat Insights',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-v5-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_SERVICES} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.moreLink',\n                        defaultMessage: 'Enable additional Insights services',\n                      })}\n                      <ArrowRightIcon className=\"pf-v5-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-v5-u-mb-sm\">\n                    <Text className=\"pf-v5-u-font-size-sm pf-v5-u-font-weight-bold pf-v5-u-link-color-hover\">\n                      <Icon size=\"md\" className=\"pf-v5-u-pl-sm pf-v5-u-pr-md\">\n                        <ListIcon color=\"#0066cc\" aria-label=\"List icon\" />\n                      </Icon>\n                      {intl.formatMessage({ id: 'cloud.subwatch', defaultMessage: 'Track usage with Subscriptions' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-v5-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.description',\n                        defaultMessage:\n                          'Use the Subscriptions service to monitor account-level summaries of your Red Hat subscription profile.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_MORE_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.learnMore',\n                        defaultMessage: 'Learn more about Subscriptions',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-v5-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.goTo',\n                        defaultMessage: 'Go to Subscriptions',\n                      })}\n                      <ArrowRightIcon className=\"pf-v5-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </CardBody>\n      </CardExpandableContent>\n    </Card>\n  );\n};\n\nexport default React.memo(CloudCards);\n","import React, { useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addHiddenSource, addMessage } from '../../redux/sources/actions';\nimport { doLoadSource } from '../../api/entities';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { routes } from '../../Routing';\nimport { useSource } from '../../hooks/useSource';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoId = () => {\n  const { id } = useParams();\n  const intl = useIntl();\n  const source = useSource();\n\n  const loaded = useIsLoaded();\n\n  const { appTypesLoaded, sourceTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n  const dispatch = useDispatch();\n\n  const [applicationIsLoaded, setIsApplicationLoaded] = useState(false);\n\n  useEffect(() => {\n    if (loaded && appTypesLoaded && sourceTypesLoaded) {\n      doLoadSource(id)\n        .then(({ sources: [source] }) => {\n          dispatch(addHiddenSource(source));\n          return source;\n        })\n        .then((source) => {\n          if (!source) {\n            dispatch(\n              addMessage({\n                title: intl.formatMessage({\n                  id: 'sources.sourceNotFoundTitle',\n                  defaultMessage: 'Requested source was not found',\n                }),\n                variant: 'danger',\n                description: intl.formatMessage(\n                  {\n                    id: 'sources.sourceNotFoundTitleDescription',\n                    defaultMessage: 'Source with { id } was not found. Try it again later.',\n                  },\n                  { id },\n                ),\n              }),\n            );\n          }\n\n          setIsApplicationLoaded(true);\n        });\n    }\n  }, [loaded, appTypesLoaded, sourceTypesLoaded]);\n\n  if (applicationIsLoaded && !source) {\n    return <AppNavigate to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoId;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\nimport { Bullseye, Card, CardBody, Grid, GridItem, Spinner } from '@patternfly/react-core';\n\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nimport './loaders.scss';\nimport { useIntl } from 'react-intl';\n\nexport const Loader = ({ width = '100%', height = '100%', className = '' }) => (\n  <span className={`src-c-loader ${className}`} style={{ width, height }} role=\"progressbar\" />\n);\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport const AppPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Integrations',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        <div className=\"src-c-fake_content pf-v5-u-p-lg\">\n          <Loader />\n        </div>\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport const PaginationLoader = () => <Loader className=\"top-pagination\" height={30} width={200} />;\n\nexport const PlaceHolderTable = () => (\n  <Bullseye className=\"src-c-bullseye__placeholder-loader\" data-testid=\"placeholder-table\">\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) =>\n  isDeleting ? (\n    <tr>\n      <td colSpan={COLUMN_COUNT} className=\"pf-v5-u-p-md\" data-testid=\"removing-row\">\n        <Loader height={100} />\n      </td>\n    </tr>\n  ) : (\n    <RowWrapper {...initialProps} row={row} className=\"src-c-row-vertical-centered\" data-testid=\"row\" />\n  );\n\nRowWrapperLoader.propTypes = {\n  row: PropTypes.object.isRequired,\n};\n\nexport const CardLoader = (props) => (\n  <Card className=\"pf-v5-u-m-md\">\n    <CardBody>\n      <Loader {...props} />\n    </CardBody>\n  </Card>\n);\n\nexport const DetailLoader = () => (\n  <div className=\"src-c-detail-page\">\n    <PageHeader>\n      <Loader height={96} />\n    </PageHeader>\n    <Grid>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"12\">\n        <CardLoader height={324} />\n      </GridItem>\n    </Grid>\n  </div>\n);\n","// app_creation_workflow constants\nexport const MANUAL_CONFIGURATION = 'manual_configuration';\nexport const ACCOUNT_AUTHORIZATION = 'account_authorization';\n","import { useSelector } from 'react-redux';\n\nexport const useHasWritePermissions = () => {\n  const writePermissions = useSelector(({ user }) => user?.writePermissions);\n\n  if (typeof writePermissions !== 'boolean') {\n    return undefined;\n  }\n\n  return !!writePermissions;\n};\n","import { useSelector } from 'react-redux';\n\nexport const useIsLoaded = () => {\n  const isLoaded = useSelector(({ sources }) => sources.loaded);\n\n  return isLoaded <= 0;\n};\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nexport const useSource = () => {\n  const { id } = useParams();\n  const source = useSelector(({ sources }) => sources.entities.find((source) => source.id === id));\n\n  return source;\n};\n","export const ACTION_TYPES = [\n  'LOAD_ENTITIES',\n  'CREATE_SOURCE',\n  'REMOVE_SOURCE',\n  'LOAD_HCS_ENROLLMENT',\n  'LOAD_SOURCE_TYPES',\n  'LOAD_APP_TYPES',\n  'REMOVE_APPLICATION',\n  'RENAME_SOURCE',\n].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {},\n);\n\nexport const SORT_ENTITIES = 'SORT_ENTITIES';\nexport const PAGE_AND_SIZE = 'PAGE_AND_SIZE';\nexport const FILTER_SOURCES = 'FILTER_SOURCES';\nexport const ADD_APP_TO_SOURCE = 'ADD_APP_TO_SOURCE';\nexport const SET_COUNT = 'SET_COUNT';\nexport const ADD_HIDDEN_SOURCE = 'ADD_HIDDEN_SOURCE';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const SET_CATEGORY = 'SET_CATEGORY';\nexport const STATUS_CHECK_PENDING = 'STATUS_CHECK_PENDING';\n","import React from 'react';\n\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\nimport PlayIcon from '@patternfly/react-icons/dist/esm/icons/play-icon';\n\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport {\n  ACTION_TYPES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  FILTER_SOURCES,\n  PAGE_AND_SIZE,\n  SET_CATEGORY,\n  SORT_ENTITIES,\n  STATUS_CHECK_PENDING,\n} from './actionTypes';\nimport { doDeleteApplication, doLoadAppTypes, doLoadEntities, doRemoveSource, getSourcesApi } from '../../api/entities';\nimport { doLoadSourceTypes } from '../../api/source_types';\nimport { bold } from '../../utilities/intlShared';\nimport handleError from '../../api/handleError';\nimport tryAgainMessage from '../../utilities/tryAgainMessage';\nimport { checkAccountHCS } from '../../api/checkAccountHCS';\nimport { INTEGRATIONS } from '../../utilities/constants';\n\nexport const loadEntities = (options) => (dispatch, getState) => {\n  dispatch({\n    type: ACTION_TYPES.LOAD_ENTITIES_PENDING,\n    options: typeof options === 'function' ? options(getState) : options,\n  });\n\n  const { pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory } = getState().sources;\n\n  return doLoadEntities({\n    pageSize,\n    pageNumber,\n    sortBy,\n    sortDirection,\n    filterValue,\n    activeCategory,\n  })\n    .then(({ sources, meta }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_FULFILLED,\n        payload: { sources, meta },\n      }),\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_REJECTED,\n        meta: { noError: true },\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: error.title || 'Fetching data failed, try refresh page',\n          },\n        },\n      }),\n    );\n};\n\nexport const loadSourceTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING });\n\n  return doLoadSourceTypes()\n    .then((sourceTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED,\n        payload: sourceTypes,\n      }),\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      }),\n    );\n};\n\nexport const loadHcsEnrollment = (token, isProd) => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_PENDING });\n\n  return checkAccountHCS(token, isProd)\n    .then(({ hcsDeal }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_FULFILLED,\n        payload: hcsDeal,\n      }),\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      }),\n    );\n};\n\nexport const loadAppTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_APP_TYPES_PENDING });\n\n  return doLoadAppTypes()\n    .then((appTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_FULFILLED,\n        payload: appTypes.data,\n      }),\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      }),\n    );\n};\n\nexport const sortEntities = (column, direction) => (dispatch) => {\n  dispatch({\n    type: SORT_ENTITIES,\n    payload: { column, direction },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pageAndSize = (page, size) => (dispatch) => {\n  dispatch({\n    type: PAGE_AND_SIZE,\n    payload: { page, size },\n  });\n\n  return dispatch(loadEntities({ paginationClicked: true }));\n};\n\nexport const filterSources = (value) => (dispatch) => {\n  dispatch({\n    type: FILTER_SOURCES,\n    payload: { value },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const addMessage = (props) => (dispatch) =>\n  dispatch({\n    type: ADD_NOTIFICATION,\n    payload: {\n      dismissable: true,\n      ...props,\n    },\n  });\n\nexport const removeSource = (sourceId, title) => (dispatch) => {\n  dispatch({\n    type: ACTION_TYPES.REMOVE_SOURCE_PENDING,\n    meta: {\n      sourceId,\n    },\n  });\n\n  return doRemoveSource(sourceId)\n    .then(() => dispatch(loadEntities({ loaded: 0 })))\n    .then(() => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_FULFILLED,\n        meta: {\n          sourceId,\n        },\n      });\n      dispatch(addMessage({ title, variant: 'success' }));\n    })\n    .catch(() =>\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_REJECTED,\n        meta: {\n          sourceId,\n        },\n      }),\n    );\n};\n\nexport const removeMessage = (id) => ({\n  type: REMOVE_NOTIFICATION,\n  payload: id,\n});\n\nexport const removeApplication = (appId, sourceId, successTitle, errorTitle) => ({\n  type: ACTION_TYPES.REMOVE_APPLICATION,\n  payload: () => doDeleteApplication(appId, errorTitle),\n  meta: {\n    appId,\n    sourceId,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: successTitle,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const addAppToSource = (sourceId, app) => ({\n  type: ADD_APP_TO_SOURCE,\n  payload: {\n    sourceId,\n    app,\n  },\n});\n\nexport const addHiddenSource = (source) => ({\n  type: ADD_HIDDEN_SOURCE,\n  payload: {\n    source,\n  },\n});\n\nexport const setCheckPenging = (sourceId) => ({\n  type: STATUS_CHECK_PENDING,\n  payload: {\n    sourceId,\n  },\n});\n\nexport const clearFilters = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_FILTERS,\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const renameSource = (id, name, errorTitle) => (dispatch, getState) => {\n  const oldName = getState().sources.entities.find((source) => source.id === id)?.name;\n\n  dispatch({ type: ACTION_TYPES.RENAME_SOURCE_PENDING, payload: { id, name } });\n\n  return getSourcesApi()\n    .updateSource(id, { name })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.RENAME_SOURCE_REJECTED,\n        payload: { error: { detail: error.errors?.[0]?.detail || error, title: errorTitle }, id, name: oldName },\n      }),\n    );\n};\n\nexport const setActiveCategory = (category) => (dispatch) => {\n  dispatch({\n    type: SET_CATEGORY,\n    payload: { category },\n  });\n\n  return category !== INTEGRATIONS && dispatch(loadEntities({ pageNumber: 1 }));\n};\n\nexport const pauseSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .pauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.title', defaultMessage: 'Integration paused' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.paused.alert.description',\n              defaultMessage:\n                'Integration <b>{ sourceName }</b> is now paused. Data collection for all connected applications will be disabled until the integration is resumed.',\n            },\n            { sourceName, b: bold },\n          ),\n          variant: 'default',\n          customIcon: <PauseIcon />,\n        }),\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.error', defaultMessage: 'Integration pause failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        }),\n      );\n    });\n};\n\nexport const resumeSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .unpauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resumed.alert.title', defaultMessage: 'Integration resumed' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.resumed.alert.description',\n              defaultMessage: 'Integration <b>{ sourceName }</b> will recontinue data collection for connected applications.',\n            },\n            { sourceName, b: bold },\n          ),\n          variant: 'default',\n          customIcon: <PlayIcon />,\n        }),\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resume.alert.error', defaultMessage: 'Integration resume failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        }),\n      );\n    });\n};\n","import { getSourcesApi } from './entities.js';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => data.data);\n","export const checkAccountHCS = async (jwtToken, isProd) => {\n  return fetch(`https://billing.${isProd ? '' : 'stage.'}api.redhat.com/v1/authorization/hcsEnrollment`, {\n    headers: { Authorization: `Bearer ${jwtToken}` },\n  })\n    .then((response) => {\n      if (response.status !== 200) {\n        return { hcsDeal: false };\n      }\n\n      return response.json();\n    })\n    .catch((e) => {\n      // eslint-disable-next-line no-console\n      console.error(e);\n      // eslint-disable-next-line no-console\n      console.log('Failed to check HCS enrollment');\n      return { hcsDeal: false };\n    });\n};\n","export const ACTION_TYPES = ['SET_WRITE_PERMISSIONS', 'SET_ORG_ADMIN', 'SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS'].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {},\n);\n","export const HCS_NAME = 'hcs';\nexport const SATELLITE_NAME = 'satellite';\nexport const ANSIBLE_TOWER_NAME = 'ansible-tower';\nexport const AZURE_NAME = 'azure';\nexport const GOOGLE_NAME = 'google';\nexport const REDHAT_VENDOR = 'Red Hat';\nexport const CLOUD_VENDOR = 'Cloud';\nexport const INTEGRATIONS = 'Integrations';\nexport const COMMUNICATIONS = 'Communications';\nexport const REPORTING = 'Reporting';\nexport const WEBHOOKS = 'Webhooks';\nexport const TOPOLOGY_INV_NAME = '/insights/platform/topological-inventory';\nexport const REMEDIATIONS_NAME = '/insights/platform/fifi';\nexport const COST_MANAGEMENT_APP_NAME = '/insights/platform/cost-management';\nexport const CLOUD_METER_APP_NAME = '/insights/platform/cloud-meter';\nexport const PROVISIONING_APP_NAME = '/insights/platform/provisioning';\nexport const CATALOG_APP = '/insights/platform/catalog';\nexport const OPENSHIFT_NAME = 'openshift';\n\nexport const HCS_APP_NAME = 'Hybrid Committed Spend';\nexport const COST_MANAGEMENT_APP_ID = '2'; // use only for Cost overwrite to HCS!\n\nexport const getActiveCategory = () => new URLSearchParams(window.location.search).get('activeCategory');\n\nexport const timeoutedApps = (appTypes) => [\n  appTypes.find(({ name }) => name === CLOUD_METER_APP_NAME)?.id,\n  appTypes.find(({ name }) => name === COST_MANAGEMENT_APP_NAME)?.id,\n];\n","export const disabledMessage = (intl, isOrgAdmin) =>\n  isOrgAdmin\n    ? intl.formatMessage({\n        id: 'sources.notAdminButton',\n        defaultMessage: 'To perform this action, you must add Cloud Integration Administrator permissions to your user.',\n      })\n    : intl.formatMessage({\n        id: 'sources.notWritePermissionButton',\n        defaultMessage:\n          'To perform this action, your Organization Administrator must grant you Cloud Integration Administrator permissions.',\n      });\n\nconst disabledTooltipProps = (intl, isOrgAdmin) => ({\n  // need both for table actions and regular dropdowns\n  // FIXME: Make it configurable or split the implementation\n  tooltipProps: { content: disabledMessage(intl, isOrgAdmin) },\n  tooltip: disabledMessage(intl, isOrgAdmin),\n  isDisabled: true,\n  className: 'src-m-dropdown-item-disabled',\n});\n\nexport default disabledTooltipProps;\n","import React from 'react';\n\nlet boldId = 0;\n\nexport const bold = (chunks) => <b key={`b-${chunks.length}-${boldId++}}`}>{chunks}</b>;\n","import {\n  ACTION_TYPES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  FILTER_SOURCES,\n  PAGE_AND_SIZE,\n  SET_CATEGORY,\n  SET_COUNT,\n  SORT_ENTITIES,\n  STATUS_CHECK_PENDING,\n} from './actionTypes';\nimport { CLOUD_VENDOR } from '../../utilities/constants';\n\nexport const defaultSourcesState = {\n  loaded: 0,\n  pageSize: 50,\n  pageNumber: 1,\n  entities: [],\n  numberOfEntities: 0,\n  appTypesLoaded: false,\n  sourceTypesLoaded: false,\n  filterValue: {},\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n  removingSources: [],\n  activeCategory: CLOUD_VENDOR,\n  appTypes: [],\n  sourceTypes: [],\n  hcsEnrolled: false,\n  hcsEnrolledLoaded: false,\n};\n\nexport const entitiesPending = (state, { options }) => ({\n  ...state,\n  loaded: state.loaded + 1,\n  paginationClicked: false,\n  ...options,\n});\n\nexport const entitiesLoaded = (state, { payload: { sources, meta }, options }) => ({\n  ...state,\n  loaded: Math.max(state.loaded - 1, 0),\n  entities: sources,\n  numberOfEntities: meta?.count,\n  ...options,\n});\n\nexport const entitiesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesPending = (state) => ({\n  ...state,\n  sourceTypes: [],\n  sourceTypesLoaded: false,\n});\n\nexport const sourceTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesLoaded = (state, { payload: sourceTypes }) => ({\n  ...state,\n  sourceTypes,\n  sourceTypesLoaded: true,\n});\n\nexport const hcsEnrolledPending = (state) => ({\n  ...state,\n  hcsEnrolled: false,\n  hcsEnrolledLoaded: false,\n});\n\nexport const hcsEnrolledRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const hcsEnrolledLoaded = (state, { payload: hcsDeal }) => ({\n  ...state,\n  hcsEnrolled: hcsDeal,\n  hcsEnrolledLoaded: true,\n});\n\nexport const appTypesPending = (state) => ({\n  ...state,\n  appTypes: [],\n  appTypesLoaded: false,\n});\n\nexport const appTypesLoaded = (state, { payload: appTypes }) => ({\n  ...state,\n  appTypes,\n  appTypesLoaded: true,\n});\n\nexport const appTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sortEntities = (state, { payload: { column, direction } }) => ({\n  ...state,\n  sortBy: column,\n  sortDirection: direction,\n});\n\nexport const setPageAndSize = (state, { payload: { page, size } }) => ({\n  ...state,\n  pageSize: size,\n  pageNumber: page,\n});\n\nexport const filterSources = (state, { payload: { value } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    ...value,\n  },\n  pageNumber: 1,\n});\n\nexport const sourceEditRemovePending = (state, { meta }) => ({\n  ...state,\n  removingSources: [...state.removingSources, meta.sourceId],\n});\n\nexport const sourceEditRemoveFulfilled = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n  entities: state.entities.filter((entity) => entity.id !== meta.sourceId),\n});\n\nexport const sourceEditRemoveRejected = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n});\n\nexport const appRemovingPending = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: true,\n                }\n              : app,\n          ),\n        }\n      : entity,\n  ),\n});\n\nexport const appRemovingFulfilled = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.filter((app) => app.id !== meta.appId),\n        }\n      : entity,\n  ),\n});\n\nexport const appRemovingRejected = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: undefined,\n                }\n              : app,\n          ),\n        }\n      : entity,\n  ),\n});\n\nexport const addAppToSource = (state, { payload: { sourceId, app } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          applications: [...entity.applications, app],\n        }\n      : entity,\n  ),\n});\n\nexport const setCount = (state, { payload: { count } }) => ({\n  ...state,\n  numberOfEntities: count,\n});\n\nexport const addHiddenSource = (state, { payload: { source } }) => ({\n  ...state,\n  entities: [...state.entities, { ...source, hidden: true }],\n});\n\nexport const clearFilters = (state) => ({\n  ...state,\n  filterValue: {},\n  pageNumber: 1,\n});\n\nexport const sourceRenamePending = (state, { payload: { id, name } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === id\n      ? {\n          ...entity,\n          name,\n        }\n      : entity,\n  ),\n});\n\nexport const sourceStatusCheckPending = (state, { payload: { sourceId } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          isCheckPending: true,\n        }\n      : entity,\n  ),\n});\n\nconst setCategory = (state, { payload: { category } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    source_type_id: [],\n    applications: [],\n  },\n  activeCategory: category,\n});\n\nexport default {\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n  [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n  [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: entitiesRejected,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING]: sourceTypesPending,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED]: sourceTypesLoaded,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED]: sourceTypesRejected,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_PENDING]: hcsEnrolledPending,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_FULFILLED]: hcsEnrolledLoaded,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_REJECTED]: hcsEnrolledRejected,\n  [ACTION_TYPES.LOAD_APP_TYPES_PENDING]: appTypesPending,\n  [ACTION_TYPES.LOAD_APP_TYPES_FULFILLED]: appTypesLoaded,\n  [ACTION_TYPES.LOAD_APP_TYPES_REJECTED]: appTypesRejected,\n  [ACTION_TYPES.REMOVE_SOURCE_PENDING]: sourceEditRemovePending,\n  [ACTION_TYPES.REMOVE_SOURCE_FULFILLED]: sourceEditRemoveFulfilled,\n  [ACTION_TYPES.REMOVE_SOURCE_REJECTED]: sourceEditRemoveRejected,\n  [ACTION_TYPES.REMOVE_APPLICATION_PENDING]: appRemovingPending,\n  [ACTION_TYPES.REMOVE_APPLICATION_FULFILLED]: appRemovingFulfilled,\n  [ACTION_TYPES.REMOVE_APPLICATION_REJECTED]: appRemovingRejected,\n  [ACTION_TYPES.RENAME_SOURCE_PENDING]: sourceRenamePending,\n  [ACTION_TYPES.RENAME_SOURCE_REJECTED]: sourceRenamePending,\n\n  [SORT_ENTITIES]: sortEntities,\n  [PAGE_AND_SIZE]: setPageAndSize,\n  [FILTER_SOURCES]: filterSources,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [SET_COUNT]: setCount,\n  [ADD_HIDDEN_SOURCE]: addHiddenSource,\n  [STATUS_CHECK_PENDING]: sourceStatusCheckPending,\n  [CLEAR_FILTERS]: clearFilters,\n  [SET_CATEGORY]: setCategory,\n};\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const defaultUserState = {\n  writePermissions: undefined,\n  integrationsEndpointsPermissions: undefined,\n  isOrgAdmin: undefined,\n};\n\nexport const writePermissionsPending = (state) => ({\n  ...state,\n  writePermissions: undefined,\n});\n\nexport const writePermissionsLoaded = (state, { payload: writePermissions }) => ({\n  ...state,\n  writePermissions,\n});\n\nexport const isOrgAdminPending = (state) => ({\n  ...state,\n  isOrgAdmin: undefined,\n});\n\nexport const isOrgAdminLoaded = (state, { payload: isOrgAdmin }) => ({\n  ...state,\n  isOrgAdmin,\n});\n\nexport const integrationsEndpointsPermissionsPending = (state) => ({\n  ...state,\n  integrationsEndpointsPermissions: undefined,\n});\n\nexport const integrationsEndpointsPermissionsLoaded = (state, { payload: integrationsEndpointsPermissions }) => ({\n  ...state,\n  integrationsEndpointsPermissions,\n});\n\nexport default {\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING]: writePermissionsPending,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED]: writePermissionsLoaded,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED]: writePermissionsPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_PENDING]: isOrgAdminPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_FULFILLED]: isOrgAdminLoaded,\n  [ACTION_TYPES.SET_ORG_ADMIN_REJECTED]: isOrgAdminPending,\n  [ACTION_TYPES.SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_PENDING]: integrationsEndpointsPermissionsPending,\n  [ACTION_TYPES.SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_FULFILLED]: integrationsEndpointsPermissionsLoaded,\n  [ACTION_TYPES.SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_REJECTED]: integrationsEndpointsPermissionsPending,\n};\n","import ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport SourcesReducer, { defaultSourcesState } from '../redux/sources/reducer';\nimport UserReducer, { defaultUserState } from '../redux/user/reducer';\nimport { parseQuery, updateQuery } from './urlQuery';\nimport { ACTION_TYPES, SET_CATEGORY } from '../redux/sources/actionTypes';\nimport { CLOUD_VENDOR, COMMUNICATIONS, INTEGRATIONS, REDHAT_VENDOR, REPORTING, WEBHOOKS } from './constants';\n\nexport const urlQueryMiddleware = (store) => (next) => (action) => {\n  if (action.type === ACTION_TYPES.LOAD_ENTITIES_PENDING) {\n    const sources = store.getState().sources;\n    updateQuery({ ...sources, ...action.options });\n  } else if (action.type === SET_CATEGORY && action.payload?.category === INTEGRATIONS) {\n    updateQuery({ removeQuery: true, activeCategory: action.payload?.category });\n  }\n\n  next(action);\n};\n\nexport const getStore = (addMiddlewares = [], initialState = {}) => {\n  const middlewares = [\n    thunk,\n    notificationsMiddleware({\n      errorTitleKey: 'error.title',\n      errorDescriptionKey: 'error.detail',\n    }),\n    promise,\n    urlQueryMiddleware,\n    ...addMiddlewares,\n  ];\n  const params = parseQuery();\n\n  const registry = new ReducerRegistry({}, middlewares);\n  registry.register({\n    sources: applyReducerHash(SourcesReducer, {\n      ...defaultSourcesState,\n      ...initialState.sources,\n      activeCategory: [CLOUD_VENDOR, REDHAT_VENDOR, COMMUNICATIONS, REPORTING, WEBHOOKS].includes(params?.activeCategory)\n        ? params.activeCategory\n        : initialState.sources?.activeCategory || defaultSourcesState?.activeCategory || CLOUD_VENDOR,\n    }),\n  });\n  registry.register({ user: applyReducerHash(UserReducer, { ...defaultUserState, ...initialState.user }) });\n  registry.register({ notifications: notificationsReducer });\n\n  return registry.getStore();\n};\n\nexport const getProdStore = () => getStore();\n","const tryAgainMessage = (intl, error) =>\n  intl.formatMessage(\n    {\n      id: 'tryAgain.text',\n      defaultMessage: '{ error }. Please try again.',\n    },\n    { error },\n  );\n\nexport default tryAgainMessage;\n","import { restFilterGenerator } from '../api/entities';\nimport { AVAILABLE, UNAVAILABLE } from '../views/formatters';\nimport { sourcesColumns } from '../views/sourcesViewDefinition';\nimport { CLOUD_VENDOR, COMMUNICATIONS, REDHAT_VENDOR, REPORTING, WEBHOOKS } from './constants';\n\nexport const updateQuery = ({ sortBy, sortDirection, pageNumber, pageSize, filterValue, activeCategory, removeQuery }) => {\n  const sortQuery = `sort_by[]=${sortBy}:${sortDirection}`;\n\n  const paginationQuery = `limit=${pageSize}&offset=${(pageNumber - 1) * pageSize}&category=${activeCategory || CLOUD_VENDOR}`;\n\n  const filterQuery = restFilterGenerator(filterValue);\n\n  const query = `?${sortQuery}&${paginationQuery}${filterQuery ? `&${filterQuery}` : ''}`;\n\n  const fullHref = decodeURIComponent(`${window.location.pathname}${removeQuery ? `?category=${activeCategory}` : query}`);\n\n  if (location.href !== fullHref) {\n    return history.replaceState('', '', fullHref);\n  }\n\n  return null;\n};\n\nexport const loadEnhancedAttributes = (params) => {\n  const urlParams = params || new URLSearchParams(window.location.search);\n\n  const applications = urlParams.getAll('application');\n  const types = urlParams.getAll('type');\n  const category = urlParams.getAll('category');\n\n  return {\n    applications: applications.length && applications,\n    types: types.length && types,\n    category,\n  };\n};\n\nexport const parseQuery = (getState) => {\n  let fetchOptions = {};\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const sortByRaw = urlParams.get('sort_by[]');\n\n  let sortBy;\n  let sortDirection;\n\n  if (sortByRaw) {\n    sortBy = sortByRaw.split(':')[0];\n    sortDirection = sortByRaw.split(':')[1];\n\n    sortBy = sourcesColumns({ formatMessage: () => '' })\n      .filter(({ sortable }) => sortable)\n      .map(({ value }) => value)\n      .includes(sortBy)\n      ? sortBy\n      : 'created_at';\n    sortDirection = ['desc', 'asc'].includes(sortDirection) ? sortDirection : 'desc';\n  }\n\n  if (sortBy && sortDirection) {\n    fetchOptions = {\n      sortBy,\n      sortDirection,\n    };\n  }\n\n  const pageSize = urlParams.get('limit');\n  const offset = urlParams.get('offset');\n\n  let pageNumber;\n\n  if (offset && pageSize) {\n    pageNumber = offset / pageSize + 1;\n    if (isNaN(pageNumber)) {\n      pageNumber = undefined;\n    }\n  }\n\n  if (pageSize && pageNumber) {\n    fetchOptions = {\n      ...fetchOptions,\n      pageNumber: parseInt(pageNumber, 10),\n      pageSize: Math.min(parseInt(pageSize, 10), 100),\n    };\n  }\n\n  let filterValue = {};\n\n  const name = urlParams.get('filter[name][contains_i]');\n\n  if (name) {\n    filterValue = { name };\n  }\n\n  const sourceTypes = urlParams.getAll('filter[source_type_id][]');\n\n  if (sourceTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      source_type_id: sourceTypes,\n    };\n  }\n\n  const applicationTypes = urlParams.getAll('filter[applications][application_type_id][eq][]');\n\n  if (applicationTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      applications: applicationTypes,\n    };\n  }\n\n  if (urlParams.get('filter[availability_status]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [AVAILABLE],\n    };\n  } else if (urlParams.get('filter[availability_status][]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [UNAVAILABLE],\n    };\n  }\n\n  const { applications, types } = loadEnhancedAttributes(urlParams);\n\n  if (applications || types) {\n    const { appTypes, sourceTypes } = getState().sources;\n\n    const applicationIds = applications.map?.((app) => appTypes.find(({ name }) => name.includes(app))?.id).filter(Boolean);\n    const typeIds = types.map?.((type) => sourceTypes.find(({ name }) => name === type)?.id).filter(Boolean);\n\n    filterValue = {\n      ...filterValue,\n      ...(applicationIds?.length && { applications: applicationIds }),\n      ...(typeIds?.length && { source_type_id: typeIds }),\n    };\n  }\n\n  const hasSomeFilterValue =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value)\n      .filter(Boolean).length > 0;\n\n  if (hasSomeFilterValue) {\n    fetchOptions = {\n      ...fetchOptions,\n      filterValue,\n    };\n  }\n\n  const activeCategory = urlParams.get('category') || urlParams.get('activeVendor');\n\n  if ([CLOUD_VENDOR, REDHAT_VENDOR, COMMUNICATIONS, REPORTING, WEBHOOKS].includes(activeCategory)) {\n    fetchOptions = {\n      ...fetchOptions,\n      activeCategory,\n    };\n  }\n\n  return fetchOptions;\n};\n","export const linkBasename = '/settings/integrations';\nexport const mergeToBasename = (to, basename) => {\n  if (typeof to === 'string') {\n    // replace possible \"//\" after basename\n    return `${basename}/${to}`.replaceAll('//', '/');\n  }\n\n  return {\n    ...to,\n    pathname: `${basename}/${to.pathname}`.replaceAll('//', '/'),\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Badge, Button, Label, LabelGroup, Popover, Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\n\nimport { ACCOUNT_AUTHORIZATION } from '../components/constants';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { replaceRouteId, routes } from '../Routing';\nimport AppLink from '../components/AppLink';\n\nexport const defaultPort = (scheme) =>\n  ({\n    http: '80',\n    https: '443',\n  })[scheme];\n\nexport const importsTexts = (value) =>\n  ({\n    cfme: (\n      <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n      />\n    ),\n  })[value.toLowerCase()];\n\nexport const schemaToPort = (schema, port) => (port && String(port) !== defaultPort(schema) ? `:${port}` : '');\n\nexport const endpointToUrl = (endpoint) => {\n  const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n  const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n  const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n  if (url === '://') {\n    return;\n  }\n\n  return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n  return type && type.name === 'openshift';\n};\n\nexport const formatURL = (source) => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n  const type = sourceTypes.find((type) => type.id === sourceType);\n  return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = (str) => (\n  <span className=\"src-c-help-cursor\">\n    <DateFormat type=\"relative\" date={str} />\n  </span>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n  <TextContent>\n    <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>{name}</Link>\n    <br key={`${source.id}-br`} />\n    <Text key={source.id} component={TextVariants.small}>\n      {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n    </Text>\n  </TextContent>\n);\n\nexport const importedFormatter = (value) => {\n  if (!value) {\n    return null;\n  }\n\n  const text = importsTexts(value);\n\n  if (text) {\n    return (\n      <Tooltip content={text}>\n        <Badge isRead className=\"src-m-help-cursor\">\n          <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n        </Badge>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Badge isRead>\n      <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n    </Badge>\n  );\n};\n\nexport const AVAILABLE = 'available';\nexport const UNAVAILABLE = 'unavailable';\nexport const UNKNOWN = 'unknown';\nexport const PARTIALLY_UNAVAILABLE = 'partially_available';\nexport const IN_PROGRESS = 'in_progress';\nexport const PAUSED = 'paused_at';\n\nexport const getStatusColor = (status) =>\n  ({\n    [UNAVAILABLE]: 'red',\n    [AVAILABLE]: 'green',\n    [PARTIALLY_UNAVAILABLE]: 'orange',\n    [PAUSED]: 'cyan',\n  })[status] || 'grey';\n\nexport const getStatusText = (status) =>\n  ({\n    [UNAVAILABLE]: <FormattedMessage id=\"sources.unavailable\" defaultMessage=\"Unavailable\" />,\n    [AVAILABLE]: <FormattedMessage id=\"sources.available\" defaultMessage=\"Available\" />,\n    [PARTIALLY_UNAVAILABLE]: <FormattedMessage id=\"sources.partiallyAvailable\" defaultMessage=\"Partially available\" />,\n    [IN_PROGRESS]: <FormattedMessage id=\"sources.inProgress\" defaultMessage=\"In progress\" />,\n    [PAUSED]: <FormattedMessage id=\"sources.paused\" defaultMessage=\"Paused\" />,\n  })[status] || <FormattedMessage id=\"sources.unknown\" defaultMessage=\"Unknown\" />;\n\nexport const UnknownError = () => <FormattedMessage id=\"sources.unknownError\" defaultMessage=\"unavailable\" />;\n\nexport const formatAvailibilityErrors = (appTypes, errors) => (\n  <React.Fragment>\n    {errors.source && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.sourceError\"\n          defaultMessage=\"Source's status: { error }\"\n          values={{ error: errors.source }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.endpoint && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.endpointError\"\n          defaultMessage=\"Endpoint error: { error }\"\n          values={{ error: errors.endpoint }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.authentications && (\n      <FormattedMessage\n        id=\"sources.authErrors\"\n        defaultMessage=\"Authentication {count, plural, one {status} other {statuses}} : { errors }\"\n        values={{\n          count: errors.authentications.length,\n          errors: errors.authentications.map(({ error, type }) => (\n            <React.Fragment key={type}>\n              <FormattedMessage id=\"sources.errorAuthTemplate\" defaultMessage=\"{ type }: { error }\" values={{ error, type }} />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n    {errors.applications && (\n      <FormattedMessage\n        id=\"sources.appErrors\"\n        defaultMessage=\"Application {count, plural, one {status} other {statutes}}: { errors }\"\n        values={{\n          count: errors.applications.length,\n          errors: errors.applications.map(({ error, id }) => (\n            <React.Fragment key={id}>\n              <FormattedMessage\n                id=\"sources.errorAppTemplate\"\n                defaultMessage=\"{ app }: { error }\"\n                values={{\n                  error,\n                  app: appTypes.find((app) => app.id === id)?.display_name || id,\n                }}\n              />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport const getStatusTooltipText = (status, appTypes, errors = {}) =>\n  ({\n    [UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [AVAILABLE]: <FormattedMessage id=\"sources.appStatusOK\" defaultMessage=\"Everything works fine.\" />,\n    [PARTIALLY_UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n    [PAUSED]: (\n      <FormattedMessage\n        id=\"sources.pausedStatus\"\n        defaultMessage=\"Data collection is temporarily disabled. Resume source to reestablish connection.\"\n      />\n    ),\n  })[status] || <FormattedMessage id=\"sources.appStatusUnknown\" defaultMessage=\"Status has not been verified.\" />;\n\nexport const getAllErrors = ({\n  availability_status,\n  availability_status_error,\n  applications = [],\n  endpoints: [endpoint] = [],\n}) => {\n  if (availability_status === IN_PROGRESS) {\n    return { errors: {}, status: IN_PROGRESS };\n  }\n\n  let errors = {};\n  let statusesCount = 0;\n  let errorsCount = 0;\n\n  if (availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      source: availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  applications.map((app) => {\n    if (app.availability_status === UNAVAILABLE) {\n      errors = {\n        ...errors,\n        applications: [\n          ...(errors.applications ? errors.applications : []),\n          {\n            id: app.application_type_id,\n            error: app.availability_status_error || <UnknownError />,\n          },\n        ],\n      };\n      statusesCount++;\n      errorsCount++;\n    } else if (app.availability_status === AVAILABLE) {\n      statusesCount++;\n    }\n  });\n\n  if (endpoint?.availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      endpoint: endpoint.availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (endpoint?.availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  if (endpoint?.authentications) {\n    endpoint.authentications.map((auth) => {\n      if (auth.availability_status === UNAVAILABLE) {\n        errors = {\n          ...errors,\n          authentications: [\n            ...(errors.authentications ? errors.authentications : []),\n            {\n              type: auth.authtype,\n              error: auth.availability_status_error || <UnknownError />,\n            },\n          ],\n        };\n        statusesCount++;\n        errorsCount++;\n      } else if (auth.availability_status === AVAILABLE) {\n        statusesCount++;\n      }\n    });\n  }\n\n  return {\n    errors,\n    status:\n      errorsCount === 0\n        ? statusesCount === 0\n          ? UNKNOWN\n          : AVAILABLE\n        : errorsCount === statusesCount\n        ? UNAVAILABLE\n        : PARTIALLY_UNAVAILABLE,\n  };\n};\n\nexport const availabilityFormatter = (_status, source, { appTypes }) => {\n  const meta = getAllErrors(source);\n  const status = source.paused_at ? PAUSED : meta.status;\n\n  return (\n    <span>\n      <Popover\n        showClose={false}\n        aria-label={`${status} popover`}\n        bodyContent={getStatusTooltipText(status, appTypes, meta.errors)}\n      >\n        <Label\n          className=\"src-m-clickable\"\n          color={getStatusColor(status)}\n          {...(source.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n          {...(source.paused_at && { icon: <PauseIcon /> })}\n        >\n          {getStatusText(status)}\n        </Label>\n      </Popover>\n    </span>\n  );\n};\n\nexport const getStatusTooltipTextApp = (status, error, intl) =>\n  ({\n    [AVAILABLE]: intl.formatMessage({\n      id: 'sources.appStatusOK',\n      defaultMessage: 'Everything works fine.',\n    }),\n    [UNAVAILABLE]: error || intl.formatMessage({ id: 'sources.unknownError', defaultMessage: 'Unknown error' }),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n  })[status] ||\n  intl.formatMessage({\n    id: 'sources.appStatusUnknown',\n    defaultMessage: 'Status has not been verified.',\n  });\n\nexport const ApplicationLabel = ({ app, showStatusText, ...props }) => {\n  const intl = useIntl();\n\n  const statusText = getStatusTooltipTextApp(app.availability_status, app.availability_status_error, intl);\n\n  return (\n    <Popover\n      showClose={false}\n      key={app.display_name}\n      aria-label={`${app.display_name} popover`}\n      bodyContent={\n        app.paused_at\n          ? `${statusText} ${intl.formatMessage({\n              id: 'appplication.paused.additionalText',\n              defaultMessage: 'Resume this application to continue data collection.',\n            })}`\n          : statusText\n      }\n      {...(app.paused_at && {\n        headerContent: intl.formatMessage({\n          id: 'application.paused.header',\n          defaultMessage: 'Application paused',\n        }),\n      })}\n    >\n      <Label\n        className=\"src-m-clickable\"\n        color={getStatusColor(app.availability_status)}\n        {...(app.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n        {...(app.paused_at && { icon: <PauseIcon /> })}\n        {...props}\n      >\n        {showStatusText ? getStatusText(app.availability_status) : app.display_name}\n      </Label>\n    </Popover>\n  );\n};\n\nApplicationLabel.propTypes = {\n  app: PropTypes.shape({\n    display_name: PropTypes.string,\n    availability_status: PropTypes.string,\n    availability_status_error: PropTypes.string,\n    paused_at: PropTypes.string,\n  }),\n  showStatusText: PropTypes.bool,\n};\n\nconst EnhancedLabelGroup = ({ applications, ...props }) => {\n  const intl = useIntl();\n\n  return (\n    <LabelGroup\n      {...props}\n      numLabels={2}\n      collapsedText={intl.formatMessage(\n        { id: 'applications.showMore', defaultMessage: '{remaining} more' },\n        { remaining: '${remaining}' },\n      )}\n    >\n      {applications.map((app, index) => (\n        <ApplicationLabel app={app} key={app.id || index} />\n      ))}\n    </LabelGroup>\n  );\n};\n\nEnhancedLabelGroup.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      display_name: PropTypes.string,\n      availability_status: PropTypes.string,\n      availability_status_error: PropTypes.string,\n      paused_at: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport const getAppStatus = (app, source, appTypes) => {\n  const application = appTypes.find((type) => type.id === app.application_type_id);\n\n  if (application) {\n    let availability_status = app.availability_status;\n    let availability_status_error = app.availability_status_error;\n\n    if (app.authentications?.[0]?.resource_type === 'Endpoint') {\n      availability_status = source.endpoints?.[0]?.availability_status;\n      availability_status_error = source.endpoints?.[0]?.availability_status_error;\n    }\n\n    return {\n      display_name: application.display_name,\n      paused_at: app.paused_at,\n      availability_status,\n      availability_status_error,\n    };\n  }\n};\n\nexport const applicationFormatter = (apps, item, { appTypes }) => {\n  const applications = apps\n    .map((app) => getAppStatus(app, item, appTypes))\n    .filter(Boolean)\n    .sort((a, b) => a.display_name.localeCompare(b.display_name));\n\n  if (applications.length === 0) {\n    return '--';\n  }\n\n  return <EnhancedLabelGroup numLabels={2} collapsedText applications={applications} />;\n};\n\nexport const configurationModeFormatter = (mode, item, { intl, sourceType }) => {\n  if (mode === ACCOUNT_AUTHORIZATION) {\n    const superKeyType = sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n    const superKeyAuth = item?.authentications?.find(({ authtype }) => authtype && authtype === superKeyType?.type);\n\n    return (\n      <React.Fragment>\n        {intl.formatMessage({\n          id: 'configurationMode.trust',\n          defaultMessage: 'Account authorization',\n        })}\n        {superKeyAuth?.availability_status === UNAVAILABLE && (\n          <Tooltip\n            position=\"top\"\n            content={\n              superKeyAuth.availability_status_error ||\n              intl.formatMessage({\n                id: 'configurationMode.trustmode.defaultError',\n                defaultMessage: 'Edit credentials required.',\n              })\n            }\n          >\n            <span className=\"pf-v5-u-ml-sm\">\n              <ExclamationCircleIcon fill=\"#C9190B\" />\n            </span>\n          </Tooltip>\n        )}\n        <div className=\"pf-v5-u-mt-sm\">\n          <AppLink to={replaceRouteId(routes.sourcesDetailEditCredentials.path, item.id)}>\n            <Button variant=\"link\" id=\"edit-super-credentials\" isInline>\n              {item.paused_at\n                ? intl.formatMessage({\n                    id: 'sources.viewCredentials',\n                    defaultMessage: 'View credentials',\n                  })\n                : intl.formatMessage({\n                    id: 'sources.editCredentials',\n                    defaultMessage: 'Edit credentials',\n                  })}\n            </Button>\n          </AppLink>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return intl.formatMessage({\n    id: 'configurationMode.manual',\n    defaultMessage: 'Manual configuration',\n  });\n};\n","import {\n  applicationFormatter,\n  availabilityFormatter,\n  dateFormatter,\n  importedFormatter,\n  nameFormatter,\n  sourceTypeFormatter,\n} from './formatters';\n\nexport const sourcesColumns = (intl, notSortable = false) => [\n  {\n    title: intl.formatMessage({\n      id: 'sources.name',\n      defaultMessage: 'Name',\n    }),\n    value: 'name',\n    formatter: nameFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.type',\n      defaultMessage: 'Type',\n    }),\n    value: 'source_type_id',\n    formatter: sourceTypeFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.connectedApplications',\n      defaultMessage: 'Connected applications',\n    }),\n    value: 'applications',\n    formatter: applicationFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.addedDate',\n      defaultMessage: 'Date added',\n    }),\n    value: 'created_at',\n    formatter: dateFormatter,\n    sortable: !notSortable,\n  },\n  {\n    hidden: true,\n    value: 'imported',\n    formatter: importedFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.status',\n      defaultMessage: 'Status',\n    }),\n    value: 'availability_status',\n    formatter: availabilityFormatter,\n  },\n];\n\nconst KEBAB_COLUMN = 1;\nconst COUNT_OF_COLUMNS = sourcesColumns({ formatMessage: () => '' }).length;\n\nexport const COLUMN_COUNT = COUNT_OF_COLUMNS + KEBAB_COLUMN;\n"],"names":["ErrorBoundary","Component","state","error","getDerivedStateFromError","errorInfo","componentDidCatch","sentryId","this","props","dispatch","title","toString","variant","description","stack","render","children","Fragment","propTypes","isRequired","loadWritePermissions","getUserPermissions","type","SET_WRITE_PERMISSIONS_PENDING","then","permissions","allPermission","reduce","acc","curr","permission","writePermissions","includes","SET_WRITE_PERMISSIONS_FULFILLED","payload","catch","SET_WRITE_PERMISSIONS_REJECTED","detail","data","loadIntegrationsEndpointsPermissions","SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_PENDING","map","integrationsEndpointsPermissions","SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_FULFILLED","SET_INTEGRATIONS_ENDPOINTS_PERMISSIONS_REJECTED","loadOrgAdmin","getUser","SET_ORG_ADMIN_PENDING","identity","user","is_org_admin","SET_ORG_ADMIN_FULFILLED","SET_ORG_ADMIN_REJECTED","auth","useChrome","useEffect","Promise","all","pathname","useLocation","sources","previousPathname","useRef","getToken","isProd","async","applications","types","token","loadData","current","chrome","updateDocumentTitle","logout","sessionStorage","removeItem","locale","className","Routing","intl","useHasWritePermissions","isOrgAdmin","formatMessage","id","defaultMessage","AppNavigate","to","routes","path","source","useSource","paused_at","replaceRouteId","sourcesDetail","ElementWrapperInternal","route","redirectNoId","noPaused","writeAccess","RedirectNoId","ElementWrapper","componentProps","useOutletContext","cloneElement","SourcesPage","lazy","SourceDetail","AddSourceWizard","SourceRemoveModal","AddApplication","RemoveAppModal","SourceRenameModal","CredentialsForm","sourcesNew","sourcesRemove","sourcesDetailRename","sourcesDetailRemove","sourcesDetailAddApp","sourcesDetailRemoveApp","sourcesDetailEditCredentials","replace","routeMap","element","childRoutes","elementProps","backPath","renderRoutes","Element","Route","key","useMemo","Suspense","fallback","Routes","SOURCES_API_BASE_V3","process","env","BASE_PATH","COST_API_BASE_V3","axiosInstanceInsights","interceptors","response","use","status","scope","setTag","req_id","err","errObject","customError","errors","length","reject","message","initAxios","request","config","getSourcesApi","checkAvailabilitySource","post","updateSource","patch","updateEndpoint","createEndpoint","updateAuthentication","createAuthentication","showSource","get","listSourceEndpoints","listSourceApplications","listEndpointAuthentications","deleteSource","delete","createApplication","postGraphQL","listSourceTypes","doLoadAppTypes","deleteApplication","createAuthApp","deleteAuthentication","showAuthentication","updateApplication","showApplication","listSourceAuthentications","createSource","getEndpoint","getGoogleAccount","bulkCreate","pauseApplication","unpauseApplication","pauseSource","unpauseSource","getLighthouseLink","getProvAppType","getProvMetadata","provAppTypeId","getProvisioningServiceAccount","getCostApi","listAwsRegions","limit","offset","doRemoveSource","sourceId","pagination","pageSize","pageNumber","sorting","sortBy","sortDirection","graphQlAttributes","doLoadEntities","filterValue","activeCategory","filter","category","filterQueries","name","push","source_type_id","x","join","availability_status","filtering","filterSection","query","doCreateApplication","doDeleteApplication","appId","errorMessage","restFilterGenerator","doLoadSource","doLoadApplicationsForEdit","handleError","undefined","JSON","stringify","errorDelete","errorDeleteDetail","AppLink","ref","Link","displayName","Navigate","CLOUD_CARDS_KEY","isExpanded","setExpanded","useState","session","getItem","isBeta","setItem","PREFIX","INSIGHTS_SERVICES","SUBWATCH_HREF","Card","CardHeader","onExpand","CardTitle","CardExpandableContent","CardBody","TextContent","Grid","hasGutter","GridItem","md","Stack","StackItem","Text","Icon","size","color","isFilled","component","href","target","rel","useParams","loaded","appTypesLoaded","sourceTypesLoaded","applicationIsLoaded","setIsApplicationLoaded","Loader","width","height","style","role","AppPlaceholder","PaginationLoader","PlaceHolderTable","Bullseye","Spinner","RowWrapperLoader","row","isDeleting","initialProps","colSpan","CardLoader","DetailLoader","MANUAL_CONFIGURATION","ACCOUNT_AUTHORIZATION","useIsLoaded","entities","find","ACTION_TYPES","SORT_ENTITIES","PAGE_AND_SIZE","FILTER_SOURCES","ADD_APP_TO_SOURCE","SET_COUNT","ADD_HIDDEN_SOURCE","CLEAR_FILTERS","SET_CATEGORY","STATUS_CHECK_PENDING","loadEntities","options","getState","LOAD_ENTITIES_PENDING","meta","LOAD_ENTITIES_FULFILLED","LOAD_ENTITIES_REJECTED","noError","loadSourceTypes","LOAD_SOURCE_TYPES_PENDING","sourceTypes","LOAD_SOURCE_TYPES_FULFILLED","LOAD_SOURCE_TYPES_REJECTED","loadHcsEnrollment","LOAD_HCS_ENROLLMENT_PENDING","jwtToken","fetch","headers","Authorization","hcsDeal","json","e","console","log","checkAccountHCS","LOAD_HCS_ENROLLMENT_FULFILLED","LOAD_HCS_ENROLLMENT_REJECTED","loadAppTypes","LOAD_APP_TYPES_PENDING","appTypes","LOAD_APP_TYPES_FULFILLED","LOAD_APP_TYPES_REJECTED","sortEntities","column","direction","pageAndSize","page","paginationClicked","filterSources","value","addMessage","dismissable","removeSource","REMOVE_SOURCE_PENDING","REMOVE_SOURCE_FULFILLED","REMOVE_SOURCE_REJECTED","removeMessage","removeApplication","successTitle","errorTitle","REMOVE_APPLICATION","notifications","fulfilled","addHiddenSource","setCheckPenging","clearFilters","renameSource","oldName","RENAME_SOURCE_PENDING","RENAME_SOURCE_REJECTED","setActiveCategory","sourceName","b","customIcon","tryAgainMessage","resumeSource","HCS_NAME","SATELLITE_NAME","ANSIBLE_TOWER_NAME","REDHAT_VENDOR","CLOUD_VENDOR","INTEGRATIONS","COMMUNICATIONS","REPORTING","WEBHOOKS","TOPOLOGY_INV_NAME","REMEDIATIONS_NAME","COST_MANAGEMENT_APP_NAME","CLOUD_METER_APP_NAME","PROVISIONING_APP_NAME","CATALOG_APP","HCS_APP_NAME","COST_MANAGEMENT_APP_ID","timeoutedApps","disabledMessage","tooltipProps","content","tooltip","isDisabled","boldId","bold","chunks","defaultSourcesState","numberOfEntities","removingSources","hcsEnrolled","hcsEnrolledLoaded","addAppToSource","app","entity","sourceRenamePending","Math","max","count","fetchingError","REMOVE_APPLICATION_PENDING","REMOVE_APPLICATION_FULFILLED","REMOVE_APPLICATION_REJECTED","hidden","isCheckPending","defaultUserState","writePermissionsPending","isOrgAdminPending","integrationsEndpointsPermissionsPending","urlQueryMiddleware","store","next","action","removeQuery","getProdStore","addMiddlewares","initialState","middlewares","notificationsMiddleware","errorTitleKey","errorDescriptionKey","params","registry","ReducerRegistry","register","getStore","updateQuery","sortQuery","paginationQuery","filterQuery","fullHref","decodeURIComponent","window","location","history","replaceState","loadEnhancedAttributes","urlParams","URLSearchParams","search","getAll","parseQuery","fetchOptions","sortByRaw","split","sortable","isNaN","parseInt","min","applicationTypes","applicationIds","Boolean","typeIds","Object","entries","_key","linkBasename","mergeToBasename","basename","replaceAll","defaultPort","scheme","http","https","endpointToUrl","endpoint","onlyTrueEndpointValues","keys","host","port","url","schema","String","schemaToPort","sourceTypeFormatter","sourceType","_item","product_name","dateFormatter","str","date","nameFormatter","TextVariants","small","sourceIsOpenShift","endpoints","formatURL","importedFormatter","text","cfme","toLowerCase","importsTexts","Tooltip","Badge","isRead","AVAILABLE","UNAVAILABLE","PARTIALLY_UNAVAILABLE","IN_PROGRESS","PAUSED","getStatusColor","getStatusText","UnknownError","formatAvailibilityErrors","values","authentications","display_name","getStatusTooltipText","availabilityFormatter","_status","availability_status_error","statusesCount","errorsCount","application_type_id","authtype","getAllErrors","Popover","showClose","bodyContent","Label","icon","ApplicationLabel","showStatusText","statusText","getStatusTooltipTextApp","headerContent","EnhancedLabelGroup","LabelGroup","numLabels","collapsedText","remaining","index","applicationFormatter","apps","item","application","resource_type","getAppStatus","sort","a","localeCompare","configurationModeFormatter","mode","superKeyType","authentication","is_superkey","superKeyAuth","position","fill","Button","isInline","sourcesColumns","notSortable","formatter","COLUMN_COUNT"],"sourceRoot":""}