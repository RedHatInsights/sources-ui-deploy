{"version":3,"file":"js/1995.e36b3c016539297ebd35.js","mappings":"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","sources":["webpack:///./src/components/ErrorBoundary.js","webpack:///./src/redux/user/actions.js","webpack:///./src/components/PermissionsChecker.js","webpack:///./src/components/DataLoader.js","webpack:///./src/App.js","webpack:///./src/components/RedirectNoWriteAccess/RedirectNoWriteAccess.js","webpack:///./src/components/RedirectNoPaused/RedirectNoPaused.js","webpack:///./src/components/ElementWrapper/ElementWrapper.js","webpack:///./src/Routing.js","webpack:///./src/api/constants.js","webpack:///./src/api/entities.js","webpack:///./src/frontend-components-copies/interceptors.js","webpack:///./src/api/handleError.js","webpack:///./src/components/AppLink/index.js","webpack:///./src/components/AppNavigate/index.js","webpack:///./src/components/CloudTiles/CloudCards.js","webpack:///./src/components/RedirectNoId/RedirectNoId.js","webpack:///./src/components/SourcesTable/loaders.js","webpack:///./src/components/constants.js","webpack:///./src/hooks/useHasWritePermissions.js","webpack:///./src/hooks/useIsLoaded.js","webpack:///./src/hooks/useSource.js","webpack:///./src/redux/sources/actionTypes.js","webpack:///./src/redux/sources/actions.js","webpack:///./src/api/source_types.js","webpack:///./src/api/checkAccountHCS.js","webpack:///./src/redux/user/actionTypes.js","webpack:///./src/utilities/constants.js","webpack:///./src/utilities/disabledTooltipProps.js","webpack:///./src/utilities/intlShared.js","webpack:///./src/redux/sources/reducer.js","webpack:///./src/redux/user/reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/utilities/tryAgainMessage.js","webpack:///./src/utilities/urlQuery.js","webpack:///./src/utilities/utils.js","webpack:///./src/views/formatters.js","webpack:///./src/views/sourcesViewDefinition.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport { addMessage } from '../redux/sources/actions';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error, errorInfo) {\n    return { error, errorInfo };\n  }\n\n  componentDidCatch(error) {\n    const sentryId = Sentry.captureException(error);\n    this.props.dispatch(\n      addMessage({\n        title: `${error.toString()} (Sentry ID: ${sentryId})`,\n        variant: 'danger',\n        description: error.stack,\n      }),\n    );\n  }\n\n  render() {\n    const { error } = this.state;\n    const { children } = this.props;\n\n    if (error) {\n      return <Fragment>Error occurred</Fragment>;\n    }\n\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nErrorBoundary.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default connect()(ErrorBoundary);\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const loadWritePermissions = (getUserPermissions) => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING });\n\n  return getUserPermissions('sources', true) // bypassCache = true\n    .then((permissions) => {\n      const allPermission = permissions.reduce((acc, curr) => [...acc, curr?.permission], []);\n      const writePermissions = allPermission.includes('sources:*:*') || allPermission.includes('sources:*:write');\n\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED,\n        payload: writePermissions,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      }),\n    );\n};\n\nexport const loadOrgAdmin = (getUser) => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_ORG_ADMIN_PENDING });\n\n  return getUser()\n    .then(\n      ({\n        identity: {\n          user: { is_org_admin },\n        },\n      }) => {\n        dispatch({\n          type: ACTION_TYPES.SET_ORG_ADMIN_FULFILLED,\n          payload: is_org_admin,\n        });\n      },\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_ORG_ADMIN_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      }),\n    );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport { loadOrgAdmin, loadWritePermissions } from '../redux/user/actions';\n\nconst PermissionsChecker = ({ children }) => {\n  const dispatch = useDispatch();\n  const {\n    auth: { getUser },\n    getUserPermissions,\n  } = useChrome();\n\n  useEffect(() => {\n    Promise.all([dispatch(loadWritePermissions(getUserPermissions)), dispatch(loadOrgAdmin(getUser))]);\n  }, []);\n\n  return children;\n};\n\nexport default PermissionsChecker;\n","import { useEffect, useRef } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { loadAppTypes, loadEntities, loadHcsEnrollment, loadSourceTypes } from '../redux/sources/actions';\nimport { loadEnhancedAttributes, parseQuery, updateQuery } from '../utilities/urlQuery';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst DataLoader = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n  const previousPathname = useRef(pathname);\n  const {\n    auth: { getToken },\n    isProd,\n  } = useChrome();\n\n  const loadData = async () => {\n    const { applications, types } = loadEnhancedAttributes();\n    const token = await getToken();\n\n    if (applications || types) {\n      Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadHcsEnrollment(token, isProd()))]).then(\n        () => dispatch(loadEntities(parseQuery)),\n      );\n    } else {\n      Promise.all([\n        dispatch(loadSourceTypes()),\n        dispatch(loadAppTypes()),\n        dispatch(loadEntities(parseQuery)),\n        dispatch(loadHcsEnrollment(token, isProd())),\n      ]);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (previousPathname.current !== pathname) {\n      updateQuery(sources);\n      previousPathname.current = pathname;\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default DataLoader;\n","import React, { useEffect } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { IntlProvider } from 'react-intl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport Routing from './Routing';\n\nimport './App.scss';\nimport './styles/authSelect.scss';\nimport './styles/cardSelect.scss';\nimport './styles/costManagement.scss';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PermissionsChecker from './components/PermissionsChecker';\nimport DataLoader from './components/DataLoader';\nimport { CLOUD_CARDS_KEY } from './components/CloudTiles/CloudCards';\nimport { initAxios } from './api/entities';\n\nconst App = () => {\n  const chrome = useChrome();\n\n  chrome?.updateDocumentTitle?.('Sources');\n\n  useEffect(() => {\n    initAxios(chrome.auth.getUser, chrome.auth.logout);\n    return () => {\n      sessionStorage.removeItem(CLOUD_CARDS_KEY);\n    };\n  }, []);\n\n  return (\n    <IntlProvider locale=\"en\">\n      <React.Fragment>\n        <NotificationsPortal />\n        <ErrorBoundary>\n          <PermissionsChecker>\n            <section className=\"pf-v5-u-p-0 src-c-section-main\">\n              <DataLoader />\n              <Routing />\n            </section>\n          </PermissionsChecker>\n        </ErrorBoundary>\n      </React.Fragment>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { routes } from '../../Routing';\nimport { disabledMessage } from '../../utilities/disabledTooltipProps';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoWriteAccess = () => {\n  const intl = useIntl();\n\n  const writePermissions = useHasWritePermissions();\n  const isOrgAdmin = useSelector(({ user }) => user.isOrgAdmin);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (writePermissions === false) {\n      const title = intl.formatMessage({\n        id: 'sources.insufficietnPerms',\n        defaultMessage: 'Insufficient permissions',\n      });\n      const description = disabledMessage(intl, isOrgAdmin);\n\n      dispatch(addMessage({ title, variant: 'danger', description }));\n    }\n  }, [writePermissions]);\n\n  if (writePermissions === false) {\n    return <AppNavigate to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoWriteAccess;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { replaceRouteId, routes } from '../../Routing';\nimport { useSource } from '../../hooks/useSource';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoPaused = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (source.paused_at) {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({\n            id: 'sources.sourcePausedRedirect',\n            defaultMessage: 'Source is paused',\n          }),\n          variant: 'danger',\n          description: intl.formatMessage({\n            id: 'sources.sourcePausedRedirectDescription',\n            defaultMessage: 'You cannot perform this action on a paused source.',\n          }),\n        }),\n      );\n    }\n  }, [source.paused_at]);\n\n  if (source.paused_at) {\n    return <AppNavigate to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoPaused;\n","import React, { cloneElement } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { useSource } from '../../hooks/useSource';\nimport RedirectNoWriteAccess from '../RedirectNoWriteAccess/RedirectNoWriteAccess';\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\nimport RedirectNoPaused from '../RedirectNoPaused/RedirectNoPaused';\n\nconst ElementWrapperInternal = ({ route, children }) => {\n  const source = route.redirectNoId && useSource();\n\n  if (!source && route.redirectNoId) {\n    return <RedirectNoId />;\n  }\n\n  return (\n    <React.Fragment>\n      {route.noPaused && <RedirectNoPaused />}\n      {route.writeAccess && <RedirectNoWriteAccess />}\n      {children}\n    </React.Fragment>\n  );\n};\n\nElementWrapperInternal.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n    noPaused: PropTypes.bool,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst ElementWrapper = ({ route, children }) => {\n  const componentProps = useOutletContext();\n  return <ElementWrapperInternal route={route}>{cloneElement(children, componentProps)}</ElementWrapperInternal>;\n};\n\nElementWrapper.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n    noPaused: PropTypes.bool,\n  }).isRequired,\n  componentProps: PropTypes.any,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ElementWrapper;\n","import React, { Suspense, lazy, useMemo } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { AppPlaceholder } from './components/SourcesTable/loaders';\nimport ElementWrapper from './components/ElementWrapper/ElementWrapper';\n\nconst SourcesPage = lazy(() => import(/* webpackChunkName: \"sourcesPage\" */ './pages/Sources'));\nconst SourceDetail = lazy(() => import(/* webpackChunkName: \"sourceDetail\" */ './pages/Detail'));\nconst AddSourceWizard = lazy(() => import(/* webpackChunkName: \"addSourceWizard\" */ './components/addSourceWizard'));\nconst SourceRemoveModal = lazy(() =>\n  import(/* webpackChunkName: \"removeSource\" */ './components/SourceRemoveModal/SourceRemoveModal'),\n);\n\nconst AddApplication = lazy(() => import(/* webpackChunkName \"addApp\" */ './components/AddApplication/AddApplication'));\nconst RemoveAppModal = lazy(() => import(/* webpackChunkName \"removeApp\" */ './components/AddApplication/RemoveAppModal'));\nconst SourceRenameModal = lazy(() => import(/* webpackChunkName \"renameSource\" */ './components/SourceDetail/SourceRenameModal'));\nconst CredentialsForm = lazy(() =>\n  import(/* webpackChunkName \"credentialsForm\" */ './components/CredentialsForm/CredentialsForm'),\n);\n\nexport const routes = {\n  sources: {\n    path: '/',\n  },\n  sourcesNew: {\n    path: 'new',\n    writeAccess: true,\n  },\n  sourcesRemove: {\n    path: 'remove/:id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetail: {\n    path: 'detail/:id',\n    redirectNoId: true,\n  },\n  sourcesDetailRename: {\n    path: 'detail/:id/rename',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemove: {\n    path: 'detail/:id/remove',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailAddApp: {\n    path: 'detail/:id/add_app/:app_type_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemoveApp: {\n    path: 'detail/:id/remove_app/:app_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailEditCredentials: {\n    path: 'detail/:id/edit_credentials',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n};\n\nexport const replaceRouteId = (path, id) => path.replace(':id', id);\n\nconst routeMap = [\n  {\n    route: {\n      path: '/',\n    },\n    element: SourcesPage,\n    childRoutes: [\n      {\n        route: routes.sourcesRemove,\n        element: SourceRemoveModal,\n        elementProps: {\n          backPath: routes.sources.path,\n        },\n      },\n      {\n        route: routes.sourcesNew,\n        element: AddSourceWizard,\n      },\n    ],\n  },\n  {\n    route: routes.sourcesDetail,\n    element: SourceDetail,\n    childRoutes: [\n      {\n        route: routes.sourcesDetail,\n        path: 'remove',\n        element: SourceRemoveModal,\n      },\n      {\n        route: routes.sourcesDetailAddApp,\n        path: 'add_app/:app_type_id',\n        element: AddApplication,\n      },\n      {\n        route: routes.sourcesDetailRemoveApp,\n        path: 'remove_app/:app_id',\n        element: RemoveAppModal,\n      },\n      {\n        route: routes.sourcesDetail,\n        path: 'rename',\n        element: SourceRenameModal,\n      },\n      {\n        route: routes.sourcesDetail,\n        path: 'edit_credentials',\n        element: CredentialsForm,\n      },\n    ],\n  },\n];\n\nconst renderRoutes = (routes = []) =>\n  routes.map(({ route, path, element: Element, childRoutes, elementProps }) => (\n    <Route\n      key={path || route.path}\n      path={path || route.path}\n      element={\n        <ElementWrapper route={route}>\n          <Element {...elementProps} />\n        </ElementWrapper>\n      }\n    >\n      {renderRoutes(childRoutes)}\n    </Route>\n  ));\n\nconst Routing = () => {\n  const routes = useMemo(() => renderRoutes(routeMap), [routeMap]);\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Routes>{routes}</Routes>\n    </Suspense>\n  );\n};\n\nexport default Routing;\n","export const SOURCES_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/sources/v3.1`;\nexport const COST_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/cost-management/v1`;\n","import axios from 'axios';\n\nimport * as interceptors from '../frontend-components-copies/interceptors';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\nimport { AVAILABLE, PARTIALLY_UNAVAILABLE, UNAVAILABLE } from '../views/formatters';\n\nimport { COST_API_BASE_V3, SOURCES_API_BASE_V3 } from './constants';\n\nexport const graphQlErrorInterceptor = (response) => {\n  if (response.errors && response.errors.length > 0) {\n    return Promise.reject({ detail: response.errors[0].message });\n  }\n\n  return response;\n};\n\nexport const interceptor403 = (error) => {\n  if (error.errors && error.errors[0].status === 403) {\n    return Promise.reject({\n      detail: error.errors[0].detail,\n      title: 'Forbidden access',\n    });\n  }\n\n  throw error;\n};\n\nconst axiosInstanceInsights = axios.create();\n\naxiosInstanceInsights.interceptors.response.use(interceptors.responseDataInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor500);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.errorInterceptor);\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptor403);\n\nexport const initAxios = (getUser, logout) => {\n  axiosInstanceInsights.interceptors.request.use(interceptors.createAuthInterceptor(getUser));\n  axiosInstanceInsights.interceptors.response.use(null, interceptors.createInterceptor401(logout));\n};\n\nexport { axiosInstanceInsights as axiosInstance };\n\nexport const getSourcesApi = () => ({\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  updateSource: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/sources/${id}`, data),\n  updateEndpoint: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/endpoints/${id}`, data),\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  updateAuthentication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/authentications/${id}`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  showSource: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  listSourceEndpoints: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/endpoints`),\n  listSourceApplications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/applications`),\n  listEndpointAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}/authentications`),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  doLoadAppTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  deleteApplication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  deleteAuthentication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  showAuthentication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  updateApplication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/applications/${id}`, data),\n  showApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  listSourceAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/authentications`),\n  createSource: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources`, data),\n  getEndpoint: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}`),\n  getGoogleAccount: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account`),\n  bulkCreate: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/bulk_create`, data),\n  pauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/pause`),\n  unpauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/unpause`),\n  pauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/pause`),\n  unpauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/unpause`),\n  getLighthouseLink: () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=azure_lighthouse_template`),\n  getProvAppType: () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types?filter[name]=/insights/platform/provisioning`),\n  getProvMetadata: (provAppTypeId) =>\n    axiosInstanceInsights.get(\n      `${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=aws_wizard_account_number&application_type_id=${provAppTypeId}`,\n    ),\n  getProvisioningServiceAccount: (provAppTypeId) =>\n    axiosInstanceInsights.get(\n      `${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account&application_type_id=${provAppTypeId}`,\n    ),\n});\n\nexport const getCostApi = () => ({\n  listAwsRegions: (limit = 10000, offset = 0) =>\n    axiosInstanceInsights.get(`${COST_API_BASE_V3}/sources/aws-s3-regions/?limit=${limit}&offset=${offset}`),\n});\n\nexport const doLoadAppTypes = () => getSourcesApi().doLoadAppTypes();\n\nexport const doRemoveSource = (sourceId) =>\n  getSourcesApi()\n    .deleteSource(sourceId)\n    .catch((error) => {\n      throw { error: { detail: error.errors[0].detail } };\n    });\n\nexport const pagination = (pageSize, pageNumber) => `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) => {\n  if (!sortBy) {\n    return '';\n  }\n\n  if (sortBy === 'source_type_id') {\n    return `sort_by: { name: \"source_type.product_name\", direction: ${sortDirection} }`;\n  }\n\n  if (sortBy === 'applications') {\n    return `sort_by: { name: \"applications\", direction: ${sortDirection} }`;\n  }\n\n  return `sort_by: { name: \"${sortBy}\", direction: ${sortDirection} }`;\n};\n\nexport const filtering = (filterValue = {}, category) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`{ name: \"name\", operation: \"contains_i\", value: \"${filterValue.name}\" }`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterQueries.push(\n      `{ name: \"source_type_id\", operation: \"eq\", value: [${filterValue.source_type_id.map((x) => `\"${x}\"`).join(', ')}] }`,\n    );\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterQueries.push(\n      `{ name: \"applications.application_type_id\", operation: \"eq\", value: [${filterValue.applications\n        .map((x) => `\"${x}\"`)\n        .join(', ')}] }`,\n    );\n  }\n\n  if (category === CLOUD_VENDOR) {\n    filterQueries.push(`{ name: \"source_type.category\", operation: \"eq\", value: \"Cloud\" }`);\n  }\n\n  if (category === REDHAT_VENDOR) {\n    filterQueries.push(`{ name: \"source_type.category\", operation: \"eq\", value: \"Red Hat\" }`);\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`{ name: \"availability_status\", operation: \"eq\", value: \"${AVAILABLE}\" }`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(\n        `{ name: \"availability_status\", operation: \"eq\", value: [\"${PARTIALLY_UNAVAILABLE}\", \"${UNAVAILABLE}\"] }`,\n      );\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return `filter: [ ${filterQueries.join(', ')} ]`;\n  }\n\n  return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    imported,\n    availability_status,\n    source_ref,\n    last_checked_at,\n    updated_at,\n    last_available_at,\n    app_creation_workflow,\n    paused_at,\n    authentications { authtype, username, availability_status_error, availability_status }\n    applications { application_type_id, id, availability_status_error, availability_status, paused_at, authentications { id, resource_type } },\n    endpoints { id, scheme, host, port, path, receptor_node, role, certificate_authority, verify_ssl, availability_status_error, availability_status, authentications { authtype, availability_status, availability_status_error } }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory }) => {\n  const filter = filtering(filterValue, activeCategory);\n\n  const filterSection = [pagination(pageSize, pageNumber), sorting(sortBy, sortDirection), filter].join(',');\n\n  return getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(${filterSection})\n      { ${graphQlAttributes} },\n     meta{count}\n    }`,\n    })\n    .then(({ data }) => data);\n};\n\nexport const doCreateApplication = (data) => getSourcesApi().createApplication(data);\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n  getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => {\n      throw { error: { title: errorMessage, detail } };\n    });\n\nexport const restFilterGenerator = (filterValue = {}, category) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterValue.applications.map((id) => filterQueries.push(`filter[applications][application_type_id][eq][]=${id}`));\n  }\n\n  if (category === CLOUD_VENDOR) {\n    filterQueries.push(`filter[source_type][category]=Cloud`);\n  }\n\n  if (category === REDHAT_VENDOR) {\n    filterQueries.push('filter[source_type][category]=Red Hat');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`filter[availability_status]=${AVAILABLE}`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`filter[availability_status][]=${PARTIALLY_UNAVAILABLE}`);\n      filterQueries.push(`filter[availability_status][]=${UNAVAILABLE}`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return filterQueries.join('&');\n  }\n\n  return '';\n};\n\nexport const doLoadSource = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { name: \"id\", operation: \"eq\", value: \"${id}\" })\n            { ${graphQlAttributes} }\n        }`,\n    })\n    .then(({ data }) => data);\n\nexport const doLoadApplicationsForEdit = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { name: \"id\", operation: \"eq\", value: \"${id}\" })\n          { applications {\n              application_type_id,\n              id,\n              availability_status_error,\n              availability_status,\n              paused_at,\n              extra,\n              authentications {\n                  id\n              }\n          } }\n      }`,\n    })\n    .then(({ data }) => data);\n\nexport const doDeleteAuthentication = (id) => getSourcesApi().deleteAuthentication(id);\n","import axios from 'axios';\nimport { captureException, configureScope } from '@sentry/minimal';\n\nexport const createAuthInterceptor = (getUser) => async (config) => {\n  await getUser();\n  return config;\n};\n\nexport function responseDataInterceptor(response) {\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}\n\nexport const createInterceptor401 = (logout) => (error) => {\n  if (error.response && error.response.status === 401) {\n    logout();\n    return false;\n  }\n\n  throw error;\n};\n\nexport function interceptor500(error) {\n  if (error.response && error.response.status >= 500 && error.response.status < 600) {\n    configureScope((scope) => {\n      scope.setTag('request_id', error.response.req_id);\n    });\n  }\n\n  throw error;\n}\n\nexport function errorInterceptor(err) {\n  if (!axios.isCancel(err)) {\n    try {\n      const errObject = { ...err };\n      if (errObject.response && errObject.response.data) {\n        throw errObject.response.data;\n      }\n\n      throw err;\n    } catch (customError) {\n      const sentryId = captureException(customError);\n      customError.sentryId = sentryId;\n      throw customError;\n    }\n  }\n}\n","import { getSourcesApi } from './entities';\nimport get from 'lodash/get';\n\nexport const handleError = (error, sourceId = undefined) => {\n  let errorMessage;\n\n  if (!error) {\n    errorMessage = 'Undefined error';\n  }\n\n  if (!errorMessage && typeof error === 'string') {\n    errorMessage = error;\n  }\n\n  if (!errorMessage) {\n    errorMessage = get(error, 'errors[0].detail', JSON.stringify(error, null, 2));\n  }\n\n  if (!sourceId) {\n    return errorMessage;\n  }\n\n  return getSourcesApi()\n    .deleteSource(sourceId)\n    .then(() => errorMessage)\n    .catch((errorDelete) => {\n      const errorDeleteDetail = get(errorDelete, 'errors[0].detail', JSON.stringify(errorDelete, null, 2));\n\n      return `${errorMessage}. The source was not removed, try remove it later: ${errorDeleteDetail}`;\n    });\n};\n\nexport default handleError;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../../utilities/utils';\nimport PropTypes from 'prop-types';\n\nconst AppLink = React.forwardRef((props, ref) => <Link {...props} ref={ref} to={mergeToBasename(props.to, linkBasename)} />);\nAppLink.displayName = 'AppLink';\n\nAppLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AppLink;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../../utilities/utils';\nimport PropTypes from 'prop-types';\n\nconst AppNavigate = (props) => <Navigate {...props} to={mergeToBasename(props.to, linkBasename)} />;\nAppNavigate.displayName = 'AppNavigate';\n\nAppNavigate.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AppNavigate;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport {\n  Card,\n  CardBody,\n  CardExpandableContent,\n  CardHeader,\n  CardTitle,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport BuilderImageIcon from '@patternfly/react-icons/dist/esm/icons/builder-image-icon';\nimport TrendUpIcon from '@patternfly/react-icons/dist/esm/icons/trend-up-icon';\nimport ListIcon from '@patternfly/react-icons/dist/esm/icons/list-icon';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nexport const CLOUD_CARDS_KEY = 'ins-c-sources__cloud_cards_expanded';\nconst GOLD_IMAGES_AWS =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-aws_cloud-access';\nconst GOLD_IMAGES_AZURE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-azure_cloud-access';\nconst GOLD_IMAGES_MORE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access';\nconst INSIGHTS_REF = 'https://www.redhat.com/en/technologies/management/insights';\nconst SUBWATCH_MORE_HREF = 'https://access.redhat.com/products/subscription-central';\n\nconst CloudCards = () => {\n  const [isExpanded, setExpanded] = useState(() => {\n    const session = sessionStorage.getItem(CLOUD_CARDS_KEY);\n\n    return session ? session === 'true' : true;\n  });\n  const intl = useIntl();\n  const { isBeta } = useChrome();\n\n  useEffect(() => {\n    sessionStorage.setItem(CLOUD_CARDS_KEY, isExpanded);\n  }, [isExpanded]);\n\n  const PREFIX = isBeta() ? 'preview/' : '';\n\n  const INSIGHTS_SERVICES = `/${PREFIX}settings/connector`;\n  const SUBWATCH_HREF = `/${PREFIX}insights/subscriptions/rhel`;\n\n  return (\n    <Card isExpanded={isExpanded} className=\"pf-v5-u-mb-lg pf-v5-u-mt-md pf-v5-u-mt-0-on-md src-c-card-info\">\n      <CardHeader onExpand={() => setExpanded(!isExpanded)}>\n        <CardTitle>{intl.formatMessage({ id: 'cloud.nowWhat', defaultMessage: 'I connected to cloud. Now what?' })}</CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        <CardBody>\n          <TextContent>\n            <Grid hasGutter>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-v5-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <BuilderImageIcon className=\"pf-v5-u-mr-sm\" color=\"#0066cc\" aria-label=\"Builder image icon\" />\n                      {intl.formatMessage({ id: 'cloud.goldImages', defaultMessage: 'Use gold images' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-v5-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.description',\n                        defaultMessage:\n                          'Connecting to Amazon Web Services or Microsoft Azure unlocks automatic access to Red Hat gold images. View gold images in your provider console.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AWS} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.awsLink',\n                        defaultMessage: 'Use Red Hat gold images on AWS',\n                      })}\n                    </Text>\n                    <br />\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AZURE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.azureLink',\n                        defaultMessage: 'Use Red Hat gold images on Microsoft Azure',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-v5-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_MORE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.moreLink',\n                        defaultMessage: 'Learn more about Red Hat gold images',\n                      })}\n                      <ArrowRightIcon className=\"pf-v5-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-v5-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <TrendUpIcon className=\"pf-v5-u-mr-sm\" color=\"#0066cc\" aria-label=\"Trend up icon\" />\n                      {intl.formatMessage({ id: 'cloud.insights', defaultMessage: 'Explore Red Hat Insights' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-v5-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.description',\n                        defaultMessage:\n                          'Use RHEL instances in the cloud and gain other value-add services, such as predictive analytics.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_REF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.insightsLinkt',\n                        defaultMessage: 'Learn more about Red Hat Insights',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-v5-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_SERVICES} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.moreLink',\n                        defaultMessage: 'Enable additional Insights services',\n                      })}\n                      <ArrowRightIcon className=\"pf-v5-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-v5-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <ListIcon className=\"pf-v5-u-mr-sm\" color=\"#0066cc\" aria-label=\"List icon\" />\n                      {intl.formatMessage({ id: 'cloud.subwatch', defaultMessage: 'Track usage with Subscriptions' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-v5-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.description',\n                        defaultMessage:\n                          'Use the Subscriptions service to monitor account-level summaries of your Red Hat subscription profile.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_MORE_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.learnMore',\n                        defaultMessage: 'Learn more about Subscriptions',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-v5-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.goTo',\n                        defaultMessage: 'Go to Subscriptions',\n                      })}\n                      <ArrowRightIcon className=\"pf-v5-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </CardBody>\n      </CardExpandableContent>\n    </Card>\n  );\n};\n\nexport default React.memo(CloudCards);\n","import React, { useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addHiddenSource, addMessage } from '../../redux/sources/actions';\nimport { doLoadSource } from '../../api/entities';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { routes } from '../../Routing';\nimport { useSource } from '../../hooks/useSource';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoId = () => {\n  const { id } = useParams();\n  const intl = useIntl();\n  const source = useSource();\n\n  const loaded = useIsLoaded();\n\n  const { appTypesLoaded, sourceTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n  const dispatch = useDispatch();\n\n  const [applicationIsLoaded, setIsApplicationLoaded] = useState(false);\n\n  useEffect(() => {\n    if (loaded && appTypesLoaded && sourceTypesLoaded) {\n      doLoadSource(id)\n        .then(({ sources: [source] }) => {\n          dispatch(addHiddenSource(source));\n          return source;\n        })\n        .then((source) => {\n          if (!source) {\n            dispatch(\n              addMessage({\n                title: intl.formatMessage({\n                  id: 'sources.sourceNotFoundTitle',\n                  defaultMessage: 'Requested source was not found',\n                }),\n                variant: 'danger',\n                description: intl.formatMessage(\n                  {\n                    id: 'sources.sourceNotFoundTitleDescription',\n                    defaultMessage: 'Source with { id } was not found. Try it again later.',\n                  },\n                  { id },\n                ),\n              }),\n            );\n          }\n\n          setIsApplicationLoaded(true);\n        });\n    }\n  }, [loaded, appTypesLoaded, sourceTypesLoaded]);\n\n  if (applicationIsLoaded && !source) {\n    return <AppNavigate to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoId;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\nimport { Bullseye, Card, CardBody, Grid, GridItem, Spinner } from '@patternfly/react-core';\n\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nimport './loaders.scss';\nimport { useIntl } from 'react-intl';\n\nexport const Loader = ({ width = '100%', height = '100%', className = '' }) => (\n  <span className={`src-c-loader ${className}`} style={{ width, height }} role=\"progressbar\" />\n);\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport const AppPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        <div className=\"src-c-fake_content pf-v5-u-p-lg\">\n          <Loader />\n        </div>\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport const PaginationLoader = () => <Loader className=\"top-pagination\" height={30} width={200} />;\n\nexport const PlaceHolderTable = () => (\n  <Bullseye className=\"src-c-bullseye__placeholder-loader\" data-testid=\"placeholder-table\">\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) =>\n  isDeleting ? (\n    <tr>\n      <td colSpan={COLUMN_COUNT} className=\"pf-v5-u-p-md\" data-testid=\"removing-row\">\n        <Loader height={100} />\n      </td>\n    </tr>\n  ) : (\n    <RowWrapper {...initialProps} row={row} className=\"src-c-row-vertical-centered\" data-testid=\"row\" />\n  );\n\nRowWrapperLoader.propTypes = {\n  row: PropTypes.object.isRequired,\n};\n\nexport const CardLoader = (props) => (\n  <Card className=\"pf-v5-u-m-md\">\n    <CardBody>\n      <Loader {...props} />\n    </CardBody>\n  </Card>\n);\n\nexport const DetailLoader = () => (\n  <div className=\"src-c-detail-page\">\n    <PageHeader>\n      <Loader height={96} />\n    </PageHeader>\n    <Grid>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"12\">\n        <CardLoader height={324} />\n      </GridItem>\n    </Grid>\n  </div>\n);\n","// app_creation_workflow constants\nexport const MANUAL_CONFIGURATION = 'manual_configuration';\nexport const ACCOUNT_AUTHORIZATION = 'account_authorization';\n","import { useSelector } from 'react-redux';\n\nexport const useHasWritePermissions = () => {\n  const writePermissions = useSelector(({ user }) => user?.writePermissions);\n\n  if (typeof writePermissions !== 'boolean') {\n    return undefined;\n  }\n\n  return !!writePermissions;\n};\n","import { useSelector } from 'react-redux';\n\nexport const useIsLoaded = () => {\n  const isLoaded = useSelector(({ sources }) => sources.loaded);\n\n  return isLoaded <= 0;\n};\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nexport const useSource = () => {\n  const { id } = useParams();\n  const source = useSelector(({ sources }) => sources.entities.find((source) => source.id === id));\n\n  return source;\n};\n","export const ACTION_TYPES = [\n  'LOAD_ENTITIES',\n  'CREATE_SOURCE',\n  'REMOVE_SOURCE',\n  'LOAD_HCS_ENROLLMENT',\n  'LOAD_SOURCE_TYPES',\n  'LOAD_APP_TYPES',\n  'REMOVE_APPLICATION',\n  'RENAME_SOURCE',\n].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {},\n);\n\nexport const SORT_ENTITIES = 'SORT_ENTITIES';\nexport const PAGE_AND_SIZE = 'PAGE_AND_SIZE';\nexport const FILTER_SOURCES = 'FILTER_SOURCES';\nexport const ADD_APP_TO_SOURCE = 'ADD_APP_TO_SOURCE';\nexport const SET_COUNT = 'SET_COUNT';\nexport const ADD_HIDDEN_SOURCE = 'ADD_HIDDEN_SOURCE';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const SET_CATEGORY = 'SET_CATEGORY';\nexport const STATUS_CHECK_PENDING = 'STATUS_CHECK_PENDING';\n","import React from 'react';\n\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\nimport PlayIcon from '@patternfly/react-icons/dist/esm/icons/play-icon';\n\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport {\n  ACTION_TYPES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  FILTER_SOURCES,\n  PAGE_AND_SIZE,\n  SET_CATEGORY,\n  SORT_ENTITIES,\n  STATUS_CHECK_PENDING,\n} from './actionTypes';\nimport { doDeleteApplication, doLoadAppTypes, doLoadEntities, doRemoveSource, getSourcesApi } from '../../api/entities';\nimport { doLoadSourceTypes } from '../../api/source_types';\nimport { bold } from '../../utilities/intlShared';\nimport handleError from '../../api/handleError';\nimport tryAgainMessage from '../../utilities/tryAgainMessage';\nimport { checkAccountHCS } from '../../api/checkAccountHCS';\nimport { INTEGRATIONS } from '../../utilities/constants';\n\nexport const loadEntities = (options) => (dispatch, getState) => {\n  dispatch({\n    type: ACTION_TYPES.LOAD_ENTITIES_PENDING,\n    options: typeof options === 'function' ? options(getState) : options,\n  });\n\n  const { pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory } = getState().sources;\n\n  return doLoadEntities({\n    pageSize,\n    pageNumber,\n    sortBy,\n    sortDirection,\n    filterValue,\n    activeCategory,\n  })\n    .then(({ sources, meta }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_FULFILLED,\n        payload: { sources, meta },\n      }),\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_REJECTED,\n        meta: { noError: true },\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: error.title || 'Fetching data failed, try refresh page',\n          },\n        },\n      }),\n    );\n};\n\nexport const loadSourceTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING });\n\n  return doLoadSourceTypes()\n    .then((sourceTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED,\n        payload: sourceTypes,\n      }),\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      }),\n    );\n};\n\nexport const loadHcsEnrollment = (token, isProd) => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_PENDING });\n\n  return checkAccountHCS(token, isProd)\n    .then(({ hcsDeal }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_FULFILLED,\n        payload: hcsDeal,\n      }),\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      }),\n    );\n};\n\nexport const loadAppTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_APP_TYPES_PENDING });\n\n  return doLoadAppTypes()\n    .then((appTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_FULFILLED,\n        payload: appTypes.data,\n      }),\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      }),\n    );\n};\n\nexport const sortEntities = (column, direction) => (dispatch) => {\n  dispatch({\n    type: SORT_ENTITIES,\n    payload: { column, direction },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pageAndSize = (page, size) => (dispatch) => {\n  dispatch({\n    type: PAGE_AND_SIZE,\n    payload: { page, size },\n  });\n\n  return dispatch(loadEntities({ paginationClicked: true }));\n};\n\nexport const filterSources = (value) => (dispatch) => {\n  dispatch({\n    type: FILTER_SOURCES,\n    payload: { value },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const addMessage = (props) => (dispatch) =>\n  dispatch({\n    type: ADD_NOTIFICATION,\n    payload: {\n      dismissable: true,\n      ...props,\n    },\n  });\n\nexport const removeSource = (sourceId, title) => (dispatch) => {\n  dispatch({\n    type: ACTION_TYPES.REMOVE_SOURCE_PENDING,\n    meta: {\n      sourceId,\n    },\n  });\n\n  return doRemoveSource(sourceId)\n    .then(() => dispatch(loadEntities({ loaded: 0 })))\n    .then(() => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_FULFILLED,\n        meta: {\n          sourceId,\n        },\n      });\n      dispatch(addMessage({ title, variant: 'success' }));\n    })\n    .catch(() =>\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_REJECTED,\n        meta: {\n          sourceId,\n        },\n      }),\n    );\n};\n\nexport const removeMessage = (id) => ({\n  type: REMOVE_NOTIFICATION,\n  payload: id,\n});\n\nexport const removeApplication = (appId, sourceId, successTitle, errorTitle) => ({\n  type: ACTION_TYPES.REMOVE_APPLICATION,\n  payload: () => doDeleteApplication(appId, errorTitle),\n  meta: {\n    appId,\n    sourceId,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: successTitle,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const addAppToSource = (sourceId, app) => ({\n  type: ADD_APP_TO_SOURCE,\n  payload: {\n    sourceId,\n    app,\n  },\n});\n\nexport const addHiddenSource = (source) => ({\n  type: ADD_HIDDEN_SOURCE,\n  payload: {\n    source,\n  },\n});\n\nexport const setCheckPenging = (sourceId) => ({\n  type: STATUS_CHECK_PENDING,\n  payload: {\n    sourceId,\n  },\n});\n\nexport const clearFilters = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_FILTERS,\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const renameSource = (id, name, errorTitle) => (dispatch, getState) => {\n  const oldName = getState().sources.entities.find((source) => source.id === id)?.name;\n\n  dispatch({ type: ACTION_TYPES.RENAME_SOURCE_PENDING, payload: { id, name } });\n\n  return getSourcesApi()\n    .updateSource(id, { name })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.RENAME_SOURCE_REJECTED,\n        payload: { error: { detail: error.errors?.[0]?.detail || error, title: errorTitle }, id, name: oldName },\n      }),\n    );\n};\n\nexport const setActiveCategory = (category) => (dispatch) => {\n  dispatch({\n    type: SET_CATEGORY,\n    payload: { category },\n  });\n\n  return category !== INTEGRATIONS && dispatch(loadEntities({ pageNumber: 1 }));\n};\n\nexport const pauseSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .pauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.title', defaultMessage: 'Source paused' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.paused.alert.description',\n              defaultMessage:\n                'Source <b>{ sourceName }</b> is now paused. Data collection for all connected applications will be disabled until the source is resumed.',\n            },\n            { sourceName, b: bold },\n          ),\n          variant: 'default',\n          customIcon: <PauseIcon />,\n        }),\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.error', defaultMessage: 'Source pause failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        }),\n      );\n    });\n};\n\nexport const resumeSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .unpauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resumed.alert.title', defaultMessage: 'Source resumed' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.resumed.alert.description',\n              defaultMessage: 'Source <b>{ sourceName }</b> will recontinue data collection for connected applications.',\n            },\n            { sourceName, b: bold },\n          ),\n          variant: 'default',\n          customIcon: <PlayIcon />,\n        }),\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resume.alert.error', defaultMessage: 'Source resume failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        }),\n      );\n    });\n};\n","import { getSourcesApi } from './entities.js';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => data.data);\n","export const checkAccountHCS = async (jwtToken, isProd) => {\n  return fetch(`https://billing.${isProd ? '' : 'stage.'}api.redhat.com/v1/authorization/hcsEnrollment`, {\n    headers: { Authorization: `Bearer ${jwtToken}` },\n  })\n    .then((response) => {\n      if (response.status !== 200) {\n        return { hcsDeal: false };\n      }\n\n      return response.json();\n    })\n    .catch((e) => {\n      // eslint-disable-next-line no-console\n      console.error(e);\n      // eslint-disable-next-line no-console\n      console.log('Failed to check HCS enrollment');\n      return { hcsDeal: false };\n    });\n};\n","export const ACTION_TYPES = ['SET_WRITE_PERMISSIONS', 'SET_ORG_ADMIN'].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {},\n);\n","export const HCS_NAME = 'hcs';\nexport const SATELLITE_NAME = 'satellite';\nexport const ANSIBLE_TOWER_NAME = 'ansible-tower';\nexport const AZURE_NAME = 'azure';\nexport const GOOGLE_NAME = 'google';\nexport const REDHAT_VENDOR = 'Red Hat';\nexport const CLOUD_VENDOR = 'Cloud';\nexport const INTEGRATIONS = 'Integrations';\nexport const COMMUNICATIONS = 'Communications';\nexport const REPORTING = 'Reporting';\nexport const WEBHOOKS = 'Webhooks';\nexport const TOPOLOGY_INV_NAME = '/insights/platform/topological-inventory';\nexport const COST_MANAGEMENT_APP_NAME = '/insights/platform/cost-management';\nexport const CLOUD_METER_APP_NAME = '/insights/platform/cloud-meter';\nexport const PROVISIONING_APP_NAME = '/insights/platform/provisioning';\nexport const CATALOG_APP = '/insights/platform/catalog';\nexport const OPENSHIFT_NAME = 'openshift';\n\nexport const HCS_APP_NAME = 'Hybrid Committed Spend';\nexport const COST_MANAGEMENT_APP_ID = '2'; // use only for Cost overwrite to HCS!\n\nexport const getActiveCategory = () => new URLSearchParams(window.location.search).get('activeCategory');\n\nexport const timeoutedApps = (appTypes) => [\n  appTypes.find(({ name }) => name === CLOUD_METER_APP_NAME)?.id,\n  appTypes.find(({ name }) => name === COST_MANAGEMENT_APP_NAME)?.id,\n];\n","export const disabledMessage = (intl, isOrgAdmin) =>\n  isOrgAdmin\n    ? intl.formatMessage({\n        id: 'sources.notAdminButton',\n        defaultMessage: 'To perform this action, you must add Sources Administrator permissions to your user.',\n      })\n    : intl.formatMessage({\n        id: 'sources.notWritePermissionButton',\n        defaultMessage:\n          'To perform this action, your Organization Administrator must grant you Sources Administrator permissions.',\n      });\n\nconst disabledTooltipProps = (intl, isOrgAdmin) => ({\n  // need both for table actions and regular dropdowns\n  // FIXME: Make it configurable or split the implementation\n  tooltipProps: { content: disabledMessage(intl, isOrgAdmin) },\n  tooltip: disabledMessage(intl, isOrgAdmin),\n  isDisabled: true,\n  className: 'src-m-dropdown-item-disabled',\n});\n\nexport default disabledTooltipProps;\n","import React from 'react';\n\nlet boldId = 0;\n\nexport const bold = (chunks) => <b key={`b-${chunks.length}-${boldId++}}`}>{chunks}</b>;\n","import {\n  ACTION_TYPES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  FILTER_SOURCES,\n  PAGE_AND_SIZE,\n  SET_CATEGORY,\n  SET_COUNT,\n  SORT_ENTITIES,\n  STATUS_CHECK_PENDING,\n} from './actionTypes';\nimport { CLOUD_VENDOR } from '../../utilities/constants';\n\nexport const defaultSourcesState = {\n  loaded: 0,\n  pageSize: 50,\n  pageNumber: 1,\n  entities: [],\n  numberOfEntities: 0,\n  appTypesLoaded: false,\n  sourceTypesLoaded: false,\n  filterValue: {},\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n  removingSources: [],\n  activeCategory: CLOUD_VENDOR,\n  appTypes: [],\n  sourceTypes: [],\n  hcsEnrolled: false,\n  hcsEnrolledLoaded: false,\n};\n\nexport const entitiesPending = (state, { options }) => ({\n  ...state,\n  loaded: state.loaded + 1,\n  paginationClicked: false,\n  ...options,\n});\n\nexport const entitiesLoaded = (state, { payload: { sources, meta }, options }) => ({\n  ...state,\n  loaded: Math.max(state.loaded - 1, 0),\n  entities: sources,\n  numberOfEntities: meta?.count,\n  ...options,\n});\n\nexport const entitiesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesPending = (state) => ({\n  ...state,\n  sourceTypes: [],\n  sourceTypesLoaded: false,\n});\n\nexport const sourceTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesLoaded = (state, { payload: sourceTypes }) => ({\n  ...state,\n  sourceTypes,\n  sourceTypesLoaded: true,\n});\n\nexport const hcsEnrolledPending = (state) => ({\n  ...state,\n  hcsEnrolled: false,\n  hcsEnrolledLoaded: false,\n});\n\nexport const hcsEnrolledRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const hcsEnrolledLoaded = (state, { payload: hcsDeal }) => ({\n  ...state,\n  hcsEnrolled: hcsDeal,\n  hcsEnrolledLoaded: true,\n});\n\nexport const appTypesPending = (state) => ({\n  ...state,\n  appTypes: [],\n  appTypesLoaded: false,\n});\n\nexport const appTypesLoaded = (state, { payload: appTypes }) => ({\n  ...state,\n  appTypes,\n  appTypesLoaded: true,\n});\n\nexport const appTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sortEntities = (state, { payload: { column, direction } }) => ({\n  ...state,\n  sortBy: column,\n  sortDirection: direction,\n});\n\nexport const setPageAndSize = (state, { payload: { page, size } }) => ({\n  ...state,\n  pageSize: size,\n  pageNumber: page,\n});\n\nexport const filterSources = (state, { payload: { value } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    ...value,\n  },\n  pageNumber: 1,\n});\n\nexport const sourceEditRemovePending = (state, { meta }) => ({\n  ...state,\n  removingSources: [...state.removingSources, meta.sourceId],\n});\n\nexport const sourceEditRemoveFulfilled = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n  entities: state.entities.filter((entity) => entity.id !== meta.sourceId),\n});\n\nexport const sourceEditRemoveRejected = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n});\n\nexport const appRemovingPending = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: true,\n                }\n              : app,\n          ),\n        }\n      : entity,\n  ),\n});\n\nexport const appRemovingFulfilled = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.filter((app) => app.id !== meta.appId),\n        }\n      : entity,\n  ),\n});\n\nexport const appRemovingRejected = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: undefined,\n                }\n              : app,\n          ),\n        }\n      : entity,\n  ),\n});\n\nexport const addAppToSource = (state, { payload: { sourceId, app } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          applications: [...entity.applications, app],\n        }\n      : entity,\n  ),\n});\n\nexport const setCount = (state, { payload: { count } }) => ({\n  ...state,\n  numberOfEntities: count,\n});\n\nexport const addHiddenSource = (state, { payload: { source } }) => ({\n  ...state,\n  entities: [...state.entities, { ...source, hidden: true }],\n});\n\nexport const clearFilters = (state) => ({\n  ...state,\n  filterValue: {},\n  pageNumber: 1,\n});\n\nexport const sourceRenamePending = (state, { payload: { id, name } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === id\n      ? {\n          ...entity,\n          name,\n        }\n      : entity,\n  ),\n});\n\nexport const sourceStatusCheckPending = (state, { payload: { sourceId } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          isCheckPending: true,\n        }\n      : entity,\n  ),\n});\n\nconst setCategory = (state, { payload: { category } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    source_type_id: [],\n    applications: [],\n  },\n  activeCategory: category,\n});\n\nexport default {\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n  [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n  [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: entitiesRejected,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING]: sourceTypesPending,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED]: sourceTypesLoaded,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED]: sourceTypesRejected,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_PENDING]: hcsEnrolledPending,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_FULFILLED]: hcsEnrolledLoaded,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_REJECTED]: hcsEnrolledRejected,\n  [ACTION_TYPES.LOAD_APP_TYPES_PENDING]: appTypesPending,\n  [ACTION_TYPES.LOAD_APP_TYPES_FULFILLED]: appTypesLoaded,\n  [ACTION_TYPES.LOAD_APP_TYPES_REJECTED]: appTypesRejected,\n  [ACTION_TYPES.REMOVE_SOURCE_PENDING]: sourceEditRemovePending,\n  [ACTION_TYPES.REMOVE_SOURCE_FULFILLED]: sourceEditRemoveFulfilled,\n  [ACTION_TYPES.REMOVE_SOURCE_REJECTED]: sourceEditRemoveRejected,\n  [ACTION_TYPES.REMOVE_APPLICATION_PENDING]: appRemovingPending,\n  [ACTION_TYPES.REMOVE_APPLICATION_FULFILLED]: appRemovingFulfilled,\n  [ACTION_TYPES.REMOVE_APPLICATION_REJECTED]: appRemovingRejected,\n  [ACTION_TYPES.RENAME_SOURCE_PENDING]: sourceRenamePending,\n  [ACTION_TYPES.RENAME_SOURCE_REJECTED]: sourceRenamePending,\n\n  [SORT_ENTITIES]: sortEntities,\n  [PAGE_AND_SIZE]: setPageAndSize,\n  [FILTER_SOURCES]: filterSources,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [SET_COUNT]: setCount,\n  [ADD_HIDDEN_SOURCE]: addHiddenSource,\n  [STATUS_CHECK_PENDING]: sourceStatusCheckPending,\n  [CLEAR_FILTERS]: clearFilters,\n  [SET_CATEGORY]: setCategory,\n};\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const defaultUserState = {\n  writePermissions: undefined,\n  isOrgAdmin: undefined,\n};\n\nexport const writePermissionsPending = (state) => ({\n  ...state,\n  writePermissions: undefined,\n});\n\nexport const writePermissionsLoaded = (state, { payload: writePermissions }) => ({\n  ...state,\n  writePermissions,\n});\n\nexport const isOrgAdminPending = (state) => ({\n  ...state,\n  isOrgAdmin: undefined,\n});\n\nexport const isOrgAdminLoaded = (state, { payload: isOrgAdmin }) => ({\n  ...state,\n  isOrgAdmin,\n});\n\nexport default {\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING]: writePermissionsPending,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED]: writePermissionsLoaded,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED]: writePermissionsPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_PENDING]: isOrgAdminPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_FULFILLED]: isOrgAdminLoaded,\n  [ACTION_TYPES.SET_ORG_ADMIN_REJECTED]: isOrgAdminPending,\n};\n","import ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport SourcesReducer, { defaultSourcesState } from '../redux/sources/reducer';\nimport UserReducer, { defaultUserState } from '../redux/user/reducer';\nimport { parseQuery, updateQuery } from './urlQuery';\nimport { ACTION_TYPES, SET_CATEGORY } from '../redux/sources/actionTypes';\nimport { CLOUD_VENDOR, COMMUNICATIONS, INTEGRATIONS, REDHAT_VENDOR, REPORTING, WEBHOOKS } from './constants';\n\nexport const urlQueryMiddleware = (store) => (next) => (action) => {\n  if (action.type === ACTION_TYPES.LOAD_ENTITIES_PENDING) {\n    const sources = store.getState().sources;\n    updateQuery({ ...sources, ...action.options });\n  } else if (action.type === SET_CATEGORY && action.payload?.category === INTEGRATIONS) {\n    updateQuery({ removeQuery: true, activeCategory: action.payload?.category });\n  }\n\n  next(action);\n};\n\nexport const getStore = (addMiddlewares = [], initialState = {}) => {\n  const middlewares = [\n    thunk,\n    notificationsMiddleware({\n      errorTitleKey: 'error.title',\n      errorDescriptionKey: 'error.detail',\n    }),\n    promise,\n    urlQueryMiddleware,\n    ...addMiddlewares,\n  ];\n  const params = parseQuery();\n\n  const registry = new ReducerRegistry({}, middlewares);\n  registry.register({\n    sources: applyReducerHash(SourcesReducer, {\n      ...defaultSourcesState,\n      ...initialState.sources,\n      activeCategory: [CLOUD_VENDOR, REDHAT_VENDOR, COMMUNICATIONS, REPORTING, WEBHOOKS].includes(params?.activeCategory)\n        ? params.activeCategory\n        : initialState.sources?.activeCategory || defaultSourcesState?.activeCategory || CLOUD_VENDOR,\n    }),\n  });\n  registry.register({ user: applyReducerHash(UserReducer, { ...defaultUserState, ...initialState.user }) });\n  registry.register({ notifications: notificationsReducer });\n\n  return registry.getStore();\n};\n\nexport const getProdStore = () => getStore();\n","const tryAgainMessage = (intl, error) =>\n  intl.formatMessage(\n    {\n      id: 'tryAgain.text',\n      defaultMessage: '{ error }. Please try again.',\n    },\n    { error },\n  );\n\nexport default tryAgainMessage;\n","import { restFilterGenerator } from '../api/entities';\nimport { AVAILABLE, UNAVAILABLE } from '../views/formatters';\nimport { sourcesColumns } from '../views/sourcesViewDefinition';\nimport { CLOUD_VENDOR, COMMUNICATIONS, REDHAT_VENDOR, REPORTING, WEBHOOKS } from './constants';\n\nexport const updateQuery = ({ sortBy, sortDirection, pageNumber, pageSize, filterValue, activeCategory, removeQuery }) => {\n  const sortQuery = `sort_by[]=${sortBy}:${sortDirection}`;\n\n  const paginationQuery = `limit=${pageSize}&offset=${(pageNumber - 1) * pageSize}&category=${activeCategory || CLOUD_VENDOR}`;\n\n  const filterQuery = restFilterGenerator(filterValue);\n\n  const query = `?${sortQuery}&${paginationQuery}${filterQuery ? `&${filterQuery}` : ''}`;\n\n  const fullHref = decodeURIComponent(`${window.location.pathname}${removeQuery ? `?category=${activeCategory}` : query}`);\n\n  if (location.href !== fullHref) {\n    return history.replaceState('', '', fullHref);\n  }\n\n  return null;\n};\n\nexport const loadEnhancedAttributes = (params) => {\n  const urlParams = params || new URLSearchParams(window.location.search);\n\n  const applications = urlParams.getAll('application');\n  const types = urlParams.getAll('type');\n  const category = urlParams.getAll('category');\n\n  return {\n    applications: applications.length && applications,\n    types: types.length && types,\n    category,\n  };\n};\n\nexport const parseQuery = (getState) => {\n  let fetchOptions = {};\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const sortByRaw = urlParams.get('sort_by[]');\n\n  let sortBy;\n  let sortDirection;\n\n  if (sortByRaw) {\n    sortBy = sortByRaw.split(':')[0];\n    sortDirection = sortByRaw.split(':')[1];\n\n    sortBy = sourcesColumns({ formatMessage: () => '' })\n      .filter(({ sortable }) => sortable)\n      .map(({ value }) => value)\n      .includes(sortBy)\n      ? sortBy\n      : 'created_at';\n    sortDirection = ['desc', 'asc'].includes(sortDirection) ? sortDirection : 'desc';\n  }\n\n  if (sortBy && sortDirection) {\n    fetchOptions = {\n      sortBy,\n      sortDirection,\n    };\n  }\n\n  const pageSize = urlParams.get('limit');\n  const offset = urlParams.get('offset');\n\n  let pageNumber;\n\n  if (offset && pageSize) {\n    pageNumber = offset / pageSize + 1;\n    if (isNaN(pageNumber)) {\n      pageNumber = undefined;\n    }\n  }\n\n  if (pageSize && pageNumber) {\n    fetchOptions = {\n      ...fetchOptions,\n      pageNumber: parseInt(pageNumber, 10),\n      pageSize: Math.min(parseInt(pageSize, 10), 100),\n    };\n  }\n\n  let filterValue = {};\n\n  const name = urlParams.get('filter[name][contains_i]');\n\n  if (name) {\n    filterValue = { name };\n  }\n\n  const sourceTypes = urlParams.getAll('filter[source_type_id][]');\n\n  if (sourceTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      source_type_id: sourceTypes,\n    };\n  }\n\n  const applicationTypes = urlParams.getAll('filter[applications][application_type_id][eq][]');\n\n  if (applicationTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      applications: applicationTypes,\n    };\n  }\n\n  if (urlParams.get('filter[availability_status]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [AVAILABLE],\n    };\n  } else if (urlParams.get('filter[availability_status][]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [UNAVAILABLE],\n    };\n  }\n\n  const { applications, types } = loadEnhancedAttributes(urlParams);\n\n  if (applications || types) {\n    const { appTypes, sourceTypes } = getState().sources;\n\n    const applicationIds = applications.map?.((app) => appTypes.find(({ name }) => name.includes(app))?.id).filter(Boolean);\n    const typeIds = types.map?.((type) => sourceTypes.find(({ name }) => name === type)?.id).filter(Boolean);\n\n    filterValue = {\n      ...filterValue,\n      ...(applicationIds?.length && { applications: applicationIds }),\n      ...(typeIds?.length && { source_type_id: typeIds }),\n    };\n  }\n\n  const hasSomeFilterValue =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value)\n      .filter(Boolean).length > 0;\n\n  if (hasSomeFilterValue) {\n    fetchOptions = {\n      ...fetchOptions,\n      filterValue,\n    };\n  }\n\n  const activeCategory = urlParams.get('category') || urlParams.get('activeVendor');\n\n  if ([CLOUD_VENDOR, REDHAT_VENDOR, COMMUNICATIONS, REPORTING, WEBHOOKS].includes(activeCategory)) {\n    fetchOptions = {\n      ...fetchOptions,\n      activeCategory,\n    };\n  }\n\n  return fetchOptions;\n};\n","export const linkBasename = '/settings/integrations';\nexport const mergeToBasename = (to, basename) => {\n  if (typeof to === 'string') {\n    // replace possible \"//\" after basename\n    return `${basename}/${to}`.replaceAll('//', '/');\n  }\n\n  return {\n    ...to,\n    pathname: `${basename}/${to.pathname}`.replaceAll('//', '/'),\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Badge, Button, Label, LabelGroup, Popover, Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\n\nimport { ACCOUNT_AUTHORIZATION } from '../components/constants';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { replaceRouteId, routes } from '../Routing';\nimport AppLink from '../components/AppLink';\n\nexport const defaultPort = (scheme) =>\n  ({\n    http: '80',\n    https: '443',\n  })[scheme];\n\nexport const importsTexts = (value) =>\n  ({\n    cfme: (\n      <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n      />\n    ),\n  })[value.toLowerCase()];\n\nexport const schemaToPort = (schema, port) => (port && String(port) !== defaultPort(schema) ? `:${port}` : '');\n\nexport const endpointToUrl = (endpoint) => {\n  const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n  const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n  const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n  if (url === '://') {\n    return;\n  }\n\n  return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n  return type && type.name === 'openshift';\n};\n\nexport const formatURL = (source) => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n  const type = sourceTypes.find((type) => type.id === sourceType);\n  return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = (str) => (\n  <span className=\"src-c-help-cursor\">\n    <DateFormat type=\"relative\" date={str} />\n  </span>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n  <TextContent>\n    <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>{name}</Link>\n    <br key={`${source.id}-br`} />\n    <Text key={source.id} component={TextVariants.small}>\n      {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n    </Text>\n  </TextContent>\n);\n\nexport const importedFormatter = (value) => {\n  if (!value) {\n    return null;\n  }\n\n  const text = importsTexts(value);\n\n  if (text) {\n    return (\n      <Tooltip content={text}>\n        <Badge isRead className=\"src-m-help-cursor\">\n          <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n        </Badge>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Badge isRead>\n      <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n    </Badge>\n  );\n};\n\nexport const AVAILABLE = 'available';\nexport const UNAVAILABLE = 'unavailable';\nexport const UNKNOWN = 'unknown';\nexport const PARTIALLY_UNAVAILABLE = 'partially_available';\nexport const IN_PROGRESS = 'in_progress';\nexport const PAUSED = 'paused_at';\n\nexport const getStatusColor = (status) =>\n  ({\n    [UNAVAILABLE]: 'red',\n    [AVAILABLE]: 'green',\n    [PARTIALLY_UNAVAILABLE]: 'orange',\n    [PAUSED]: 'cyan',\n  })[status] || 'grey';\n\nexport const getStatusText = (status) =>\n  ({\n    [UNAVAILABLE]: <FormattedMessage id=\"sources.unavailable\" defaultMessage=\"Unavailable\" />,\n    [AVAILABLE]: <FormattedMessage id=\"sources.available\" defaultMessage=\"Available\" />,\n    [PARTIALLY_UNAVAILABLE]: <FormattedMessage id=\"sources.partiallyAvailable\" defaultMessage=\"Partially available\" />,\n    [IN_PROGRESS]: <FormattedMessage id=\"sources.inProgress\" defaultMessage=\"In progress\" />,\n    [PAUSED]: <FormattedMessage id=\"sources.paused\" defaultMessage=\"Paused\" />,\n  })[status] || <FormattedMessage id=\"sources.unknown\" defaultMessage=\"Unknown\" />;\n\nexport const UnknownError = () => <FormattedMessage id=\"sources.unknownError\" defaultMessage=\"unavailable\" />;\n\nexport const formatAvailibilityErrors = (appTypes, errors) => (\n  <React.Fragment>\n    {errors.source && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.sourceError\"\n          defaultMessage=\"Source's status: { error }\"\n          values={{ error: errors.source }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.endpoint && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.endpointError\"\n          defaultMessage=\"Endpoint error: { error }\"\n          values={{ error: errors.endpoint }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.authentications && (\n      <FormattedMessage\n        id=\"sources.authErrors\"\n        defaultMessage=\"Authentication {count, plural, one {status} other {statuses}} : { errors }\"\n        values={{\n          count: errors.authentications.length,\n          errors: errors.authentications.map(({ error, type }) => (\n            <React.Fragment key={type}>\n              <FormattedMessage id=\"sources.errorAuthTemplate\" defaultMessage=\"{ type }: { error }\" values={{ error, type }} />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n    {errors.applications && (\n      <FormattedMessage\n        id=\"sources.appErrors\"\n        defaultMessage=\"Application {count, plural, one {status} other {statutes}}: { errors }\"\n        values={{\n          count: errors.applications.length,\n          errors: errors.applications.map(({ error, id }) => (\n            <React.Fragment key={id}>\n              <FormattedMessage\n                id=\"sources.errorAppTemplate\"\n                defaultMessage=\"{ app }: { error }\"\n                values={{\n                  error,\n                  app: appTypes.find((app) => app.id === id)?.display_name || id,\n                }}\n              />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport const getStatusTooltipText = (status, appTypes, errors = {}) =>\n  ({\n    [UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [AVAILABLE]: <FormattedMessage id=\"sources.appStatusOK\" defaultMessage=\"Everything works fine.\" />,\n    [PARTIALLY_UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n    [PAUSED]: (\n      <FormattedMessage\n        id=\"sources.pausedStatus\"\n        defaultMessage=\"Data collection is temporarily disabled. Resume source to reestablish connection.\"\n      />\n    ),\n  })[status] || <FormattedMessage id=\"sources.appStatusUnknown\" defaultMessage=\"Status has not been verified.\" />;\n\nexport const getAllErrors = ({\n  availability_status,\n  availability_status_error,\n  applications = [],\n  endpoints: [endpoint] = [],\n}) => {\n  if (availability_status === IN_PROGRESS) {\n    return { errors: {}, status: IN_PROGRESS };\n  }\n\n  let errors = {};\n  let statusesCount = 0;\n  let errorsCount = 0;\n\n  if (availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      source: availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  applications.map((app) => {\n    if (app.availability_status === UNAVAILABLE) {\n      errors = {\n        ...errors,\n        applications: [\n          ...(errors.applications ? errors.applications : []),\n          {\n            id: app.application_type_id,\n            error: app.availability_status_error || <UnknownError />,\n          },\n        ],\n      };\n      statusesCount++;\n      errorsCount++;\n    } else if (app.availability_status === AVAILABLE) {\n      statusesCount++;\n    }\n  });\n\n  if (endpoint?.availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      endpoint: endpoint.availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (endpoint?.availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  if (endpoint?.authentications) {\n    endpoint.authentications.map((auth) => {\n      if (auth.availability_status === UNAVAILABLE) {\n        errors = {\n          ...errors,\n          authentications: [\n            ...(errors.authentications ? errors.authentications : []),\n            {\n              type: auth.authtype,\n              error: auth.availability_status_error || <UnknownError />,\n            },\n          ],\n        };\n        statusesCount++;\n        errorsCount++;\n      } else if (auth.availability_status === AVAILABLE) {\n        statusesCount++;\n      }\n    });\n  }\n\n  return {\n    errors,\n    status:\n      errorsCount === 0\n        ? statusesCount === 0\n          ? UNKNOWN\n          : AVAILABLE\n        : errorsCount === statusesCount\n        ? UNAVAILABLE\n        : PARTIALLY_UNAVAILABLE,\n  };\n};\n\nexport const availabilityFormatter = (_status, source, { appTypes }) => {\n  const meta = getAllErrors(source);\n  const status = source.paused_at ? PAUSED : meta.status;\n\n  return (\n    <span>\n      <Popover\n        showClose={false}\n        aria-label={`${status} popover`}\n        bodyContent={getStatusTooltipText(status, appTypes, meta.errors)}\n      >\n        <Label\n          className=\"src-m-clickable\"\n          color={getStatusColor(status)}\n          {...(source.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n          {...(source.paused_at && { icon: <PauseIcon /> })}\n        >\n          {getStatusText(status)}\n        </Label>\n      </Popover>\n    </span>\n  );\n};\n\nexport const getStatusTooltipTextApp = (status, error, intl) =>\n  ({\n    [AVAILABLE]: intl.formatMessage({\n      id: 'sources.appStatusOK',\n      defaultMessage: 'Everything works fine.',\n    }),\n    [UNAVAILABLE]: error || intl.formatMessage({ id: 'sources.unknownError', defaultMessage: 'Unknown error' }),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n  })[status] ||\n  intl.formatMessage({\n    id: 'sources.appStatusUnknown',\n    defaultMessage: 'Status has not been verified.',\n  });\n\nexport const ApplicationLabel = ({ app, showStatusText, ...props }) => {\n  const intl = useIntl();\n\n  const statusText = getStatusTooltipTextApp(app.availability_status, app.availability_status_error, intl);\n\n  return (\n    <Popover\n      showClose={false}\n      key={app.display_name}\n      aria-label={`${app.display_name} popover`}\n      bodyContent={\n        app.paused_at\n          ? `${statusText} ${intl.formatMessage({\n              id: 'appplication.paused.additionalText',\n              defaultMessage: 'Resume this application to continue data collection.',\n            })}`\n          : statusText\n      }\n      {...(app.paused_at && {\n        headerContent: intl.formatMessage({\n          id: 'application.paused.header',\n          defaultMessage: 'Application paused',\n        }),\n      })}\n    >\n      <Label\n        className=\"src-m-clickable\"\n        color={getStatusColor(app.availability_status)}\n        {...(app.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n        {...(app.paused_at && { icon: <PauseIcon /> })}\n        {...props}\n      >\n        {showStatusText ? getStatusText(app.availability_status) : app.display_name}\n      </Label>\n    </Popover>\n  );\n};\n\nApplicationLabel.propTypes = {\n  app: PropTypes.shape({\n    display_name: PropTypes.string,\n    availability_status: PropTypes.string,\n    availability_status_error: PropTypes.string,\n    paused_at: PropTypes.string,\n  }),\n  showStatusText: PropTypes.bool,\n};\n\nconst EnhancedLabelGroup = ({ applications, ...props }) => {\n  const intl = useIntl();\n\n  return (\n    <LabelGroup\n      {...props}\n      numLabels={2}\n      collapsedText={intl.formatMessage(\n        { id: 'applications.showMore', defaultMessage: '{remaining} more' },\n        { remaining: '${remaining}' },\n      )}\n    >\n      {applications.map((app, index) => (\n        <ApplicationLabel app={app} key={app.id || index} />\n      ))}\n    </LabelGroup>\n  );\n};\n\nEnhancedLabelGroup.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      display_name: PropTypes.string,\n      availability_status: PropTypes.string,\n      availability_status_error: PropTypes.string,\n      paused_at: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport const getAppStatus = (app, source, appTypes) => {\n  const application = appTypes.find((type) => type.id === app.application_type_id);\n\n  if (application) {\n    let availability_status = app.availability_status;\n    let availability_status_error = app.availability_status_error;\n\n    if (app.authentications?.[0]?.resource_type === 'Endpoint') {\n      availability_status = source.endpoints?.[0]?.availability_status;\n      availability_status_error = source.endpoints?.[0]?.availability_status_error;\n    }\n\n    return {\n      display_name: application.display_name,\n      paused_at: app.paused_at,\n      availability_status,\n      availability_status_error,\n    };\n  }\n};\n\nexport const applicationFormatter = (apps, item, { appTypes }) => {\n  const applications = apps\n    .map((app) => getAppStatus(app, item, appTypes))\n    .filter(Boolean)\n    .sort((a, b) => a.display_name.localeCompare(b.display_name));\n\n  if (applications.length === 0) {\n    return '--';\n  }\n\n  return <EnhancedLabelGroup numLabels={2} collapsedText applications={applications} />;\n};\n\nexport const configurationModeFormatter = (mode, item, { intl, sourceType }) => {\n  if (mode === ACCOUNT_AUTHORIZATION) {\n    const superKeyType = sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n    const superKeyAuth = item?.authentications?.find(({ authtype }) => authtype && authtype === superKeyType?.type);\n\n    return (\n      <React.Fragment>\n        {intl.formatMessage({\n          id: 'configurationMode.trust',\n          defaultMessage: 'Account authorization',\n        })}\n        {superKeyAuth?.availability_status === UNAVAILABLE && (\n          <Tooltip\n            position=\"top\"\n            content={\n              superKeyAuth.availability_status_error ||\n              intl.formatMessage({\n                id: 'configurationMode.trustmode.defaultError',\n                defaultMessage: 'Edit credentials required.',\n              })\n            }\n          >\n            <span className=\"pf-v5-u-ml-sm\">\n              <ExclamationCircleIcon fill=\"#C9190B\" />\n            </span>\n          </Tooltip>\n        )}\n        <div className=\"pf-v5-u-mt-sm\">\n          <AppLink to={replaceRouteId(routes.sourcesDetailEditCredentials.path, item.id)}>\n            <Button variant=\"link\" id=\"edit-super-credentials\" isInline>\n              {item.paused_at\n                ? intl.formatMessage({\n                    id: 'sources.viewCredentials',\n                    defaultMessage: 'View credentials',\n                  })\n                : intl.formatMessage({\n                    id: 'sources.editCredentials',\n                    defaultMessage: 'Edit credentials',\n                  })}\n            </Button>\n          </AppLink>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return intl.formatMessage({\n    id: 'configurationMode.manual',\n    defaultMessage: 'Manual configuration',\n  });\n};\n","import {\n  applicationFormatter,\n  availabilityFormatter,\n  dateFormatter,\n  importedFormatter,\n  nameFormatter,\n  sourceTypeFormatter,\n} from './formatters';\n\nexport const sourcesColumns = (intl, notSortable = false) => [\n  {\n    title: intl.formatMessage({\n      id: 'sources.name',\n      defaultMessage: 'Name',\n    }),\n    value: 'name',\n    formatter: nameFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.type',\n      defaultMessage: 'Type',\n    }),\n    value: 'source_type_id',\n    formatter: sourceTypeFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.connectedApplications',\n      defaultMessage: 'Connected applications',\n    }),\n    value: 'applications',\n    formatter: applicationFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.addedDate',\n      defaultMessage: 'Date added',\n    }),\n    value: 'created_at',\n    formatter: dateFormatter,\n    sortable: !notSortable,\n  },\n  {\n    hidden: true,\n    value: 'imported',\n    formatter: importedFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.status',\n      defaultMessage: 'Status',\n    }),\n    value: 'availability_status',\n    formatter: availabilityFormatter,\n  },\n];\n\nconst KEBAB_COLUMN = 1;\nconst COUNT_OF_COLUMNS = sourcesColumns({ formatMessage: () => '' }).length;\n\nexport const COLUMN_COUNT = COUNT_OF_COLUMNS + KEBAB_COLUMN;\n"],"names":["ErrorBoundary","Component","state","error","getDerivedStateFromError","errorInfo","componentDidCatch","sentryId","this","props","dispatch","title","toString","variant","description","stack","render","children","Fragment","propTypes","isRequired","loadWritePermissions","getUserPermissions","type","SET_WRITE_PERMISSIONS_PENDING","then","permissions","allPermission","reduce","acc","curr","permission","writePermissions","includes","SET_WRITE_PERMISSIONS_FULFILLED","payload","catch","SET_WRITE_PERMISSIONS_REJECTED","detail","data","loadOrgAdmin","getUser","SET_ORG_ADMIN_PENDING","identity","user","is_org_admin","SET_ORG_ADMIN_FULFILLED","SET_ORG_ADMIN_REJECTED","auth","useChrome","useEffect","Promise","all","pathname","useLocation","sources","previousPathname","useRef","getToken","isProd","async","applications","types","token","loadData","current","chrome","updateDocumentTitle","logout","sessionStorage","removeItem","locale","className","Routing","intl","useHasWritePermissions","isOrgAdmin","formatMessage","id","defaultMessage","AppNavigate","to","routes","path","source","useSource","paused_at","replaceRouteId","sourcesDetail","ElementWrapperInternal","route","redirectNoId","noPaused","writeAccess","RedirectNoId","ElementWrapper","componentProps","useOutletContext","cloneElement","SourcesPage","lazy","SourceDetail","AddSourceWizard","SourceRemoveModal","AddApplication","RemoveAppModal","SourceRenameModal","CredentialsForm","sourcesNew","sourcesRemove","sourcesDetailRename","sourcesDetailRemove","sourcesDetailAddApp","sourcesDetailRemoveApp","sourcesDetailEditCredentials","replace","routeMap","element","childRoutes","elementProps","backPath","renderRoutes","map","Element","Route","key","useMemo","Suspense","fallback","Routes","SOURCES_API_BASE_V3","process","env","BASE_PATH","COST_API_BASE_V3","axiosInstanceInsights","interceptors","response","use","status","scope","setTag","req_id","err","errObject","customError","errors","length","reject","message","initAxios","request","config","getSourcesApi","checkAvailabilitySource","post","updateSource","patch","updateEndpoint","createEndpoint","updateAuthentication","createAuthentication","showSource","get","listSourceEndpoints","listSourceApplications","listEndpointAuthentications","deleteSource","delete","createApplication","postGraphQL","listSourceTypes","doLoadAppTypes","deleteApplication","createAuthApp","deleteAuthentication","showAuthentication","updateApplication","showApplication","listSourceAuthentications","createSource","getEndpoint","getGoogleAccount","bulkCreate","pauseApplication","unpauseApplication","pauseSource","unpauseSource","getLighthouseLink","getProvAppType","getProvMetadata","provAppTypeId","getProvisioningServiceAccount","getCostApi","listAwsRegions","limit","offset","doRemoveSource","sourceId","pagination","pageSize","pageNumber","sorting","sortBy","sortDirection","graphQlAttributes","doLoadEntities","filterValue","activeCategory","filter","category","filterQueries","name","push","source_type_id","x","join","availability_status","filtering","filterSection","query","doCreateApplication","doDeleteApplication","appId","errorMessage","restFilterGenerator","doLoadSource","doLoadApplicationsForEdit","handleError","undefined","JSON","stringify","errorDelete","errorDeleteDetail","AppLink","ref","Link","displayName","Navigate","CLOUD_CARDS_KEY","isExpanded","setExpanded","useState","session","getItem","isBeta","setItem","PREFIX","INSIGHTS_SERVICES","SUBWATCH_HREF","Card","CardHeader","onExpand","CardTitle","CardExpandableContent","CardBody","TextContent","Grid","hasGutter","GridItem","md","Stack","StackItem","Text","color","isFilled","component","href","target","rel","useParams","loaded","appTypesLoaded","sourceTypesLoaded","applicationIsLoaded","setIsApplicationLoaded","Loader","width","height","style","role","AppPlaceholder","PaginationLoader","PlaceHolderTable","Bullseye","Spinner","size","RowWrapperLoader","row","isDeleting","initialProps","colSpan","CardLoader","DetailLoader","MANUAL_CONFIGURATION","ACCOUNT_AUTHORIZATION","useIsLoaded","entities","find","ACTION_TYPES","SORT_ENTITIES","PAGE_AND_SIZE","FILTER_SOURCES","ADD_APP_TO_SOURCE","SET_COUNT","ADD_HIDDEN_SOURCE","CLEAR_FILTERS","SET_CATEGORY","STATUS_CHECK_PENDING","loadEntities","options","getState","LOAD_ENTITIES_PENDING","meta","LOAD_ENTITIES_FULFILLED","LOAD_ENTITIES_REJECTED","noError","loadSourceTypes","LOAD_SOURCE_TYPES_PENDING","sourceTypes","LOAD_SOURCE_TYPES_FULFILLED","LOAD_SOURCE_TYPES_REJECTED","loadHcsEnrollment","LOAD_HCS_ENROLLMENT_PENDING","jwtToken","fetch","headers","Authorization","hcsDeal","json","e","console","log","checkAccountHCS","LOAD_HCS_ENROLLMENT_FULFILLED","LOAD_HCS_ENROLLMENT_REJECTED","loadAppTypes","LOAD_APP_TYPES_PENDING","appTypes","LOAD_APP_TYPES_FULFILLED","LOAD_APP_TYPES_REJECTED","sortEntities","column","direction","pageAndSize","page","paginationClicked","filterSources","value","addMessage","dismissable","removeSource","REMOVE_SOURCE_PENDING","REMOVE_SOURCE_FULFILLED","REMOVE_SOURCE_REJECTED","removeMessage","removeApplication","successTitle","errorTitle","REMOVE_APPLICATION","notifications","fulfilled","addHiddenSource","setCheckPenging","clearFilters","renameSource","oldName","RENAME_SOURCE_PENDING","RENAME_SOURCE_REJECTED","setActiveCategory","sourceName","b","customIcon","tryAgainMessage","resumeSource","HCS_NAME","SATELLITE_NAME","ANSIBLE_TOWER_NAME","REDHAT_VENDOR","CLOUD_VENDOR","INTEGRATIONS","COMMUNICATIONS","REPORTING","WEBHOOKS","TOPOLOGY_INV_NAME","COST_MANAGEMENT_APP_NAME","CLOUD_METER_APP_NAME","PROVISIONING_APP_NAME","CATALOG_APP","HCS_APP_NAME","COST_MANAGEMENT_APP_ID","timeoutedApps","disabledMessage","tooltipProps","content","tooltip","isDisabled","boldId","bold","chunks","defaultSourcesState","numberOfEntities","removingSources","hcsEnrolled","hcsEnrolledLoaded","addAppToSource","app","entity","sourceRenamePending","Math","max","count","fetchingError","REMOVE_APPLICATION_PENDING","REMOVE_APPLICATION_FULFILLED","REMOVE_APPLICATION_REJECTED","hidden","isCheckPending","defaultUserState","writePermissionsPending","isOrgAdminPending","urlQueryMiddleware","store","next","action","removeQuery","getProdStore","addMiddlewares","initialState","middlewares","notificationsMiddleware","errorTitleKey","errorDescriptionKey","params","registry","ReducerRegistry","register","getStore","updateQuery","sortQuery","paginationQuery","filterQuery","fullHref","decodeURIComponent","window","location","history","replaceState","loadEnhancedAttributes","urlParams","URLSearchParams","search","getAll","parseQuery","fetchOptions","sortByRaw","split","sortable","isNaN","parseInt","min","applicationTypes","applicationIds","Boolean","typeIds","Object","entries","_key","linkBasename","mergeToBasename","basename","replaceAll","defaultPort","scheme","http","https","endpointToUrl","endpoint","onlyTrueEndpointValues","keys","host","port","url","schema","String","schemaToPort","sourceTypeFormatter","sourceType","_item","product_name","dateFormatter","str","date","nameFormatter","TextVariants","small","sourceIsOpenShift","endpoints","formatURL","importedFormatter","text","cfme","toLowerCase","importsTexts","Tooltip","Badge","isRead","AVAILABLE","UNAVAILABLE","PARTIALLY_UNAVAILABLE","IN_PROGRESS","PAUSED","getStatusColor","getStatusText","UnknownError","formatAvailibilityErrors","values","authentications","display_name","getStatusTooltipText","availabilityFormatter","_status","availability_status_error","statusesCount","errorsCount","application_type_id","authtype","getAllErrors","Popover","showClose","bodyContent","Label","icon","ApplicationLabel","showStatusText","statusText","getStatusTooltipTextApp","headerContent","EnhancedLabelGroup","LabelGroup","numLabels","collapsedText","remaining","index","applicationFormatter","apps","item","application","resource_type","getAppStatus","sort","a","localeCompare","configurationModeFormatter","mode","superKeyType","authentication","is_superkey","superKeyAuth","position","fill","Button","isInline","sourcesColumns","notSortable","formatter","COLUMN_COUNT"],"sourceRoot":""}