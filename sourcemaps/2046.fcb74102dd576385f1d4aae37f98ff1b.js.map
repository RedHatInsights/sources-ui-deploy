{"version":3,"file":"js/2046.1651244002909.819dcf64d29a3672dd6f.js","mappings":"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","sources":["webpack:///./src/api/handleError.js","webpack:///./src/components/CloudTiles/CloudCards.js","webpack:///./src/redux/sources/actionTypes.js","webpack:///./src/redux/sources/actions.js","webpack:///./src/utilities/intlShared.js","webpack:///./src/utilities/tryAgainMessage.js"],"sourcesContent":["import { getSourcesApi } from './entities';\nimport get from 'lodash/get';\n\nexport const handleError = (error, sourceId = undefined) => {\n  let errorMessage;\n\n  if (!error) {\n    errorMessage = 'Undefined error';\n  }\n\n  if (!errorMessage && typeof error === 'string') {\n    errorMessage = error;\n  }\n\n  if (!errorMessage) {\n    errorMessage = get(error, 'errors[0].detail', JSON.stringify(error, null, 2));\n  }\n\n  if (!sourceId) {\n    return errorMessage;\n  }\n\n  return getSourcesApi()\n    .deleteSource(sourceId)\n    .then(() => errorMessage)\n    .catch((errorDelete) => {\n      const errorDeleteDetail = get(errorDelete, 'errors[0].detail', JSON.stringify(errorDelete, null, 2));\n\n      return `${errorMessage}. The source was not removed, try remove it later: ${errorDeleteDetail}`;\n    });\n};\n\nexport default handleError;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  CardExpandableContent,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport BuilderImageIcon from '@patternfly/react-icons/dist/esm/icons/builder-image-icon';\nimport TrendUpIcon from '@patternfly/react-icons/dist/esm/icons/trend-up-icon';\nimport ListIcon from '@patternfly/react-icons/dist/esm/icons/list-icon';\n\nconst PREFIX = insights.chrome.isBeta() ? 'beta/' : '';\n\nconst GOLD_IMAGES_AWS =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-aws_cloud-access';\nconst GOLD_IMAGES_AZURE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-azure_cloud-access';\nconst GOLD_IMAGES_MORE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access';\nconst INSIGHTS_REF = 'https://www.redhat.com/en/technologies/management/insights';\nconst INSIGHTS_SERVICES = `/${PREFIX}settings/connector`;\nconst SUBWATCH_HREF = `/${PREFIX}insights/subscriptions/rhel`;\nconst SUBWATCH_MORE_HREF = 'https://access.redhat.com/products/subscription-central';\n\nexport const CLOUD_CARDS_KEY = 'ins-c-sources__cloud_cards_expanded';\n\nconst CloudCards = () => {\n  const [isExpanded, setExpanded] = useState(() => {\n    const session = sessionStorage.getItem(CLOUD_CARDS_KEY);\n\n    return session ? session === 'true' : true;\n  });\n  const intl = useIntl();\n\n  useEffect(() => {\n    sessionStorage.setItem(CLOUD_CARDS_KEY, isExpanded);\n  }, [isExpanded]);\n\n  return (\n    <Card isExpanded={isExpanded} className=\"pf-u-mb-lg pf-u-mt-md pf-u-mt-0-on-md src-c-card-info\">\n      <CardHeader onExpand={() => setExpanded(!isExpanded)}>\n        <CardTitle>{intl.formatMessage({ id: 'cloud.nowWhat', defaultMessage: 'I connected to cloud. Now what?' })}</CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        <CardBody>\n          <TextContent>\n            <Grid hasGutter>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <BuilderImageIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"Builder image icon\" />\n                      {intl.formatMessage({ id: 'cloud.goldImages', defaultMessage: 'Use gold images' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.description',\n                        defaultMessage:\n                          'Connecting to Amazon Web Services or Microsoft Azure unlocks automatic access to Red Hat gold images. View gold images in your provider console.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AWS} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.awsLink',\n                        defaultMessage: 'Use Red Hat gold images on AWS',\n                      })}\n                    </Text>\n                    <br />\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AZURE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.azureLink',\n                        defaultMessage: 'Use Red Hat gold images on Microsoft Azure',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_MORE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.moreLink',\n                        defaultMessage: 'Learn more about Red Hat gold images',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <TrendUpIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"Trend up icon\" />\n                      {intl.formatMessage({ id: 'cloud.insights', defaultMessage: 'Explore Red Hat Insights' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.description',\n                        defaultMessage:\n                          'Use RHEL instances in the cloud and gain other value-add services, such as predictive analytics.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_REF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.insightsLinkt',\n                        defaultMessage: 'Learn more about Red Hat Insights',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_SERVICES} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.moreLink',\n                        defaultMessage: 'Enable additional Insights services',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <ListIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"List icon\" />\n                      {intl.formatMessage({ id: 'cloud.subwatch', defaultMessage: 'Track usage with Subscriptions' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.description',\n                        defaultMessage:\n                          'Use the Subscriptions service to monitor account-level summaries of your Red Hat subscription profile.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_MORE_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.learnMore',\n                        defaultMessage: 'Learn more about Subscriptions',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.goTo',\n                        defaultMessage: 'Go to Subscriptions',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </CardBody>\n      </CardExpandableContent>\n    </Card>\n  );\n};\n\nexport default React.memo(CloudCards);\n","export const ACTION_TYPES = [\n  'LOAD_ENTITIES',\n  'CREATE_SOURCE',\n  'REMOVE_SOURCE',\n  'LOAD_SOURCE_TYPES',\n  'LOAD_APP_TYPES',\n  'REMOVE_APPLICATION',\n  'RENAME_SOURCE',\n].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n\nexport const SORT_ENTITIES = 'SORT_ENTITIES';\nexport const PAGE_AND_SIZE = 'PAGE_AND_SIZE';\nexport const FILTER_SOURCES = 'FILTER_SOURCES';\nexport const ADD_APP_TO_SOURCE = 'ADD_APP_TO_SOURCE';\nexport const SET_COUNT = 'SET_COUNT';\nexport const ADD_HIDDEN_SOURCE = 'ADD_HIDDEN_SOURCE';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const SET_CATEGORY = 'SET_CATEGORY';\n","import React from 'react';\n\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\nimport PlayIcon from '@patternfly/react-icons/dist/esm/icons/play-icon';\n\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport {\n  ACTION_TYPES,\n  SORT_ENTITIES,\n  PAGE_AND_SIZE,\n  FILTER_SOURCES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  SET_CATEGORY,\n} from './actionTypes';\nimport { doLoadAppTypes, doRemoveSource, doLoadEntities, doDeleteApplication, getSourcesApi } from '../../api/entities';\nimport { doLoadSourceTypes } from '../../api/source_types';\nimport { bold } from '../../utilities/intlShared';\nimport handleError from '../../api/handleError';\nimport tryAgainMessage from '../../utilities/tryAgainMessage';\n\nexport const loadEntities = (options) => (dispatch, getState) => {\n  dispatch({\n    type: ACTION_TYPES.LOAD_ENTITIES_PENDING,\n    options: typeof options === 'function' ? options(getState) : options,\n  });\n\n  const { pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory } = getState().sources;\n\n  return doLoadEntities({\n    pageSize,\n    pageNumber,\n    sortBy,\n    sortDirection,\n    filterValue,\n    activeCategory,\n  })\n    .then(({ sources, meta }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_FULFILLED,\n        payload: { sources, meta },\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_REJECTED,\n        meta: { noError: true },\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: error.title || 'Fetching data failed, try refresh page',\n          },\n        },\n      })\n    );\n};\n\nexport const loadSourceTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING });\n\n  return doLoadSourceTypes()\n    .then((sourceTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED,\n        payload: sourceTypes,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const loadAppTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_APP_TYPES_PENDING });\n\n  return doLoadAppTypes()\n    .then((appTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_FULFILLED,\n        payload: appTypes.data,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const sortEntities = (column, direction) => (dispatch) => {\n  dispatch({\n    type: SORT_ENTITIES,\n    payload: { column, direction },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pageAndSize = (page, size) => (dispatch) => {\n  dispatch({\n    type: PAGE_AND_SIZE,\n    payload: { page, size },\n  });\n\n  return dispatch(loadEntities({ paginationClicked: true }));\n};\n\nexport const filterSources = (value) => (dispatch) => {\n  dispatch({\n    type: FILTER_SOURCES,\n    payload: { value },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const addMessage = (props) => (dispatch) =>\n  dispatch({\n    type: ADD_NOTIFICATION,\n    payload: {\n      dismissable: true,\n      ...props,\n    },\n  });\n\nexport const removeSource = (sourceId, title) => (dispatch) => {\n  dispatch({\n    type: ACTION_TYPES.REMOVE_SOURCE_PENDING,\n    meta: {\n      sourceId,\n    },\n  });\n\n  return doRemoveSource(sourceId)\n    .then(() => dispatch(loadEntities({ loaded: 0 })))\n    .then(() => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_FULFILLED,\n        meta: {\n          sourceId,\n        },\n      });\n      dispatch(addMessage({ title, variant: 'success' }));\n    })\n    .catch(() =>\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_REJECTED,\n        meta: {\n          sourceId,\n        },\n      })\n    );\n};\n\nexport const removeMessage = (id) => ({\n  type: REMOVE_NOTIFICATION,\n  payload: id,\n});\n\nexport const removeApplication = (appId, sourceId, successTitle, errorTitle) => ({\n  type: ACTION_TYPES.REMOVE_APPLICATION,\n  payload: () => doDeleteApplication(appId, errorTitle),\n  meta: {\n    appId,\n    sourceId,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: successTitle,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const addAppToSource = (sourceId, app) => ({\n  type: ADD_APP_TO_SOURCE,\n  payload: {\n    sourceId,\n    app,\n  },\n});\n\nexport const addHiddenSource = (source) => ({\n  type: ADD_HIDDEN_SOURCE,\n  payload: {\n    source,\n  },\n});\n\nexport const clearFilters = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_FILTERS,\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const renameSource = (id, name, errorTitle) => (dispatch, getState) => {\n  const oldName = getState().sources.entities.find((source) => source.id === id)?.name;\n\n  dispatch({ type: ACTION_TYPES.RENAME_SOURCE_PENDING, payload: { id, name } });\n\n  return getSourcesApi()\n    .updateSource(id, { name })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.RENAME_SOURCE_REJECTED,\n        payload: { error: { detail: error.errors?.[0]?.detail || error, title: errorTitle }, id, name: oldName },\n      })\n    );\n};\n\nexport const setActiveCategory = (category) => (dispatch) => {\n  dispatch({\n    type: SET_CATEGORY,\n    payload: { category },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pauseSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .pauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.title', defaultMessage: 'Source paused' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.paused.alert.description',\n              defaultMessage:\n                'Source <b>{ sourceName }</b> is now paused. Data collection for all connected applications will be disabled until the source is resumed.',\n            },\n            { sourceName, b: bold }\n          ),\n          variant: 'default',\n          customIcon: <PauseIcon />,\n        })\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.error', defaultMessage: 'Source pause failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        })\n      );\n    });\n};\n\nexport const resumeSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .unpauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resumed.alert.title', defaultMessage: 'Source resumed' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.resumed.alert.description',\n              defaultMessage: 'Source <b>{ sourceName }</b> will recontinue data collection for connected applications.',\n            },\n            { sourceName, b: bold }\n          ),\n          variant: 'default',\n          customIcon: <PlayIcon />,\n        })\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resume.alert.error', defaultMessage: 'Source resume failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        })\n      );\n    });\n};\n","import React from 'react';\n\nlet boldId = 0;\n\nexport const bold = (chunks) => <b key={`b-${chunks.length}-${boldId++}}`}>{chunks}</b>;\n","const tryAgainMessage = (intl, error) =>\n  intl.formatMessage(\n    {\n      id: 'tryAgain.text',\n      defaultMessage: '{ error }. Please try again.',\n    },\n    { error }\n  );\n\nexport default tryAgainMessage;\n"],"names":["handleError","error","errorMessage","sourceId","undefined","get","JSON","stringify","getSourcesApi","deleteSource","then","errorDelete","errorDeleteDetail","PREFIX","insights","chrome","isBeta","INSIGHTS_SERVICES","SUBWATCH_HREF","CLOUD_CARDS_KEY","CloudCards","useState","session","sessionStorage","getItem","isExpanded","setExpanded","intl","useIntl","useEffect","setItem","Card","className","CardHeader","onExpand","CardTitle","formatMessage","id","defaultMessage","CardExpandableContent","CardBody","TextContent","Grid","hasGutter","GridItem","md","Stack","StackItem","Text","color","isFilled","component","href","target","rel","React","ACTION_TYPES","reduce","acc","curr","SORT_ENTITIES","PAGE_AND_SIZE","FILTER_SOURCES","ADD_APP_TO_SOURCE","SET_COUNT","ADD_HIDDEN_SOURCE","CLEAR_FILTERS","SET_CATEGORY","loadEntities","options","dispatch","getState","type","sources","pageSize","pageNumber","sortBy","sortDirection","filterValue","activeCategory","doLoadEntities","meta","payload","noError","detail","data","title","loadSourceTypes","doLoadSourceTypes","sourceTypes","loadAppTypes","doLoadAppTypes","appTypes","sortEntities","column","direction","pageAndSize","page","size","paginationClicked","filterSources","value","addMessage","props","ADD_NOTIFICATION","dismissable","removeSource","doRemoveSource","loaded","variant","removeMessage","REMOVE_NOTIFICATION","removeApplication","appId","successTitle","errorTitle","doDeleteApplication","notifications","fulfilled","addHiddenSource","source","clearFilters","renameSource","name","oldName","entities","find","updateSource","errors","setActiveCategory","category","pauseSource","sourceName","description","b","bold","customIcon","tryAgainMessage","resumeSource","unpauseSource","boldId","chunks","key","length"],"sourceRoot":""}