{"version":3,"file":"js/2281.d6605f5589ff3518aac8.js","mappings":"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","sources":["webpack:///./node_modules/lodash/merge.js","webpack:///./src/components/AddApplication/AuthTypeSetter.js","webpack:///./src/components/AddApplication/schema/selectAuthenticationStep.js","webpack:///./src/components/AddApplication/AddApplicationSchema.js","webpack:///./src/components/AddApplication/schema/generateFirstAuthStep.js","webpack:///./src/components/AddApplication/schema/authenticationSelectionStep.js","webpack:///./src/components/AddApplication/WizardBody.js","webpack:///./node_modules/deep-object-diff/mjs/utils.js","webpack:///./node_modules/deep-object-diff/mjs/added.js","webpack:///./node_modules/deep-object-diff/mjs/updated.js","webpack:///./src/api/doAttachApp.js","webpack:///./src/components/AddApplication/reducer.js","webpack:///./node_modules/deep-object-diff/mjs/diff.js","webpack:///./src/components/AddApplication/AddApplication.js","webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/components/CloseModal.js","webpack:///./src/components/steps/AmazonFinishedStep.js","webpack:///./src/components/steps/FinishedStep.js","webpack:///./src/components/steps/TimeoutStep.js","webpack:///./src/utilities/computeSourceError.js","webpack:///./src/utilities/computeSourceStatus.js","webpack:///./src/utilities/computeSourcesUrl.js"],"sourcesContent":["var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nexport const innerSetter = ({ formOptions, authenticationValues, selectedAuthentication }) => {\n  if (!selectedAuthentication.startsWith('new-')) {\n    const authentication = authenticationValues.find(({ id }) => id === selectedAuthentication);\n\n    formOptions.change('authentication', authentication);\n  } else {\n    const authtype = selectedAuthentication.replace('new-', '');\n\n    formOptions.change('authentication', { authtype });\n  }\n};\n\nexport const AuthTypeSetter = ({ authenticationValues }) => {\n  const formOptions = useFormApi();\n\n  const selectedAuthentication = formOptions.getState().values.selectedAuthentication;\n\n  const [initialValue, setInitialValue] = useState(selectedAuthentication);\n\n  useEffect(() => {\n    if (initialValue !== selectedAuthentication) {\n      innerSetter({\n        formOptions,\n        authenticationValues,\n        selectedAuthentication,\n      });\n      setInitialValue(undefined);\n    }\n  }, [selectedAuthentication]);\n\n  return null;\n};\n\nAuthTypeSetter.propTypes = {\n  authenticationValues: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { useIntl } from 'react-intl';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { AuthTypeSetter } from '../AuthTypeSetter';\n\nexport const SelectAuthenticationDescription = ({ applicationTypeName, authenticationTypeName }) => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'sources.selectAuthenticationDescription',\n            defaultMessage:\n              'Selected application { applicationTypeName } supports { authenticationTypeName } authentication type. You can use already defined authentication values or define new.',\n          },\n          { applicationTypeName, authenticationTypeName },\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nSelectAuthenticationDescription.propTypes = {\n  applicationTypeName: PropTypes.string,\n  authenticationTypeName: PropTypes.string,\n};\n\nexport const generateAuthSelectionOptions = ({\n  authenticationValues,\n  supportedAuthTypeName,\n  supportedAuthType,\n  applicationTypes,\n  source,\n}) =>\n  authenticationValues\n    .filter(({ authtype }) => authtype === supportedAuthType)\n    .map((values) => {\n      const includeUsername = values.username ? `-${values.username}` : '';\n\n      const app = source.applications.find(({ authentications }) => authentications.find(({ id }) => id === values.id));\n      const appType = app && app.application_type_id ? applicationTypes.find(({ id }) => id === app.application_type_id) : '';\n      const includeAppName = appType ? `-${appType.display_name}` : `-unused-${values.id}`;\n      const label = `${supportedAuthTypeName}${includeUsername}${includeAppName}`;\n\n      return {\n        label,\n        value: values.id,\n      };\n    });\n\nconst selectAuthenticationStep = ({ intl, source, authenticationValues, sourceType, app, applicationTypes }) => {\n  const nextStep = ({ values: { authtype, authentication } }) =>\n    `${sourceType.name}-${app.id}-${authtype || authentication?.authtype}`;\n\n  const fields = [\n    {\n      component: 'description',\n      name: 'authtypesetter',\n      Content: AuthTypeSetter,\n      authenticationValues,\n      hideField: true,\n    },\n  ];\n\n  const ifAppSupported = app.supported_source_types.includes(sourceType.name);\n  const isAppAvailable = !source.applications?.find(({ application_type_id }) => application_type_id === app.id);\n\n  if (ifAppSupported && isAppAvailable) {\n    const supportedAuthTypes = get(app, `supported_authentication_types[${sourceType.name}]`, []);\n\n    supportedAuthTypes.forEach((supportedAuthType) => {\n      const hasAvailableAuthentications = authenticationValues.find(({ authtype }) => authtype === supportedAuthType);\n\n      if (hasAvailableAuthentications) {\n        const supportedAuthTypeName = get(sourceType, `schema.authentication`, {}).find(\n          ({ type }) => type === supportedAuthType,\n        ).name;\n\n        fields.push({\n          component: componentTypes.SUB_FORM,\n          name: `${app.name}-subform`,\n          fields: [\n            {\n              name: `${app.name}-select-authentication-summary`,\n              component: 'description',\n              Content: SelectAuthenticationDescription,\n              applicationTypeName: app.display_name,\n              authenticationTypeName: supportedAuthTypeName,\n            },\n            {\n              component: componentTypes.RADIO,\n              name: 'selectedAuthentication',\n              label: intl.formatMessage({\n                id: 'sources.selectAuthenticationTitle',\n                defaultMessage: 'Select authentication',\n              }),\n              isRequired: true,\n              validate: [{ type: validatorTypes.REQUIRED }],\n              options: [\n                {\n                  label: intl.formatMessage(\n                    {\n                      id: 'sources.selectAuthenticationradioLabel',\n                      defaultMessage: 'Define new { supportedAuthTypeName }',\n                    },\n                    { supportedAuthTypeName },\n                  ),\n                  value: `new-${supportedAuthType}`,\n                },\n                ...generateAuthSelectionOptions({\n                  authenticationValues,\n                  supportedAuthTypeName,\n                  supportedAuthType,\n                  applicationTypes,\n                  source,\n                }),\n              ],\n            },\n          ],\n        });\n      }\n    });\n  }\n\n  return {\n    name: 'selectAuthentication',\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication',\n    }),\n    fields,\n    nextStep,\n  };\n};\n\nexport default selectAuthenticationStep;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\n\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\nimport * as schemaBuilder from '../../components/addSourceWizard/schemaBuilder';\nimport get from 'lodash/get';\n\nimport authenticationSelectionStep from './schema/authenticationSelectionStep';\nimport generateFirstAuthStep from './schema/generateFirstAuthStep';\nimport selectAuthenticationStep from './schema/selectAuthenticationStep';\nimport emptyAuthType from '../addSourceWizard/emptyAuthType';\nexport const ApplicationSummary = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'sources.reviewAddAppSummary',\n          defaultMessage:\n            'Review the information below and click Add to add the application to your source. Use the Back button to make changes.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n  authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nconst fields = (\n  intl,\n  sourceType,\n  appType,\n  authenticationValues,\n  source,\n  container,\n  title,\n  description,\n  applicationTypes,\n  enableLighthouse,\n) => {\n  let authenticationFields = [];\n  let firstStep;\n  let hasMultipleAuthTypes;\n  let hasAlreadyType;\n\n  if (!source.imported) {\n    const appendEndpoint = sourceType.schema.endpoint?.hidden ? sourceType.schema.endpoint?.fields : [];\n    const hasEndpointStep = typeof sourceType.schema.endpoint === 'undefined' ? false : appendEndpoint.length === 0;\n\n    const shouldAddEmpty =\n      !appType.supported_authentication_types[sourceType.name] ||\n      appType.supported_authentication_types[sourceType.name].length === 0;\n\n    const authTypes = shouldAddEmpty ? [emptyAuthType.type] : appType.supported_authentication_types[sourceType.name];\n    const authentications = shouldAddEmpty ? [emptyAuthType] : sourceType.schema.authentication;\n\n    if (appType.supported_source_types.includes(sourceType.name)) {\n      authTypes.forEach((authtype) => {\n        authenticationFields.push(\n          generateFirstAuthStep(sourceType, appType, appendEndpoint, authtype, intl, shouldAddEmpty, enableLighthouse),\n        );\n      });\n    }\n\n    authentications.forEach((auth) => {\n      if (appType.supported_source_types.includes(sourceType.name)) {\n        const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name, enableLighthouse);\n\n        if (appAdditionalSteps.length > 0) {\n          authenticationFields.push(\n            ...schemaBuilder.createAdditionalSteps(\n              appAdditionalSteps,\n              sourceType.name,\n              auth.type,\n              hasEndpointStep,\n              auth.fields,\n              appType.name,\n            ),\n          );\n        }\n      }\n    });\n\n    if (hasEndpointStep) {\n      authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n    }\n\n    firstStep = authenticationFields[0];\n\n    hasMultipleAuthTypes = appType?.supported_authentication_types[sourceType.name]?.length > 1;\n\n    if (hasMultipleAuthTypes) {\n      firstStep = authenticationSelectionStep(sourceType, appType, intl, authenticationValues);\n    }\n\n    hasAlreadyType = hasAlreadySupportedAuthType(authenticationValues, appType, sourceType.name);\n\n    if (hasAlreadyType) {\n      firstStep = selectAuthenticationStep({\n        intl,\n        source,\n        authenticationValues,\n        sourceType,\n        app: appType,\n        applicationTypes,\n      });\n    }\n  }\n\n  const appTypeSetter = {\n    component: componentTypes.TEXT_FIELD,\n    name: 'application.application_type_id',\n    hideField: true,\n    initialValue: appType.id,\n  };\n\n  return {\n    fields: [\n      {\n        component: componentTypes.WIZARD,\n        className: 'sources',\n        name: 'wizard',\n        title,\n        inModal: true,\n        container,\n        showTitles: true,\n        crossroads: ['selectedAuthentication', 'authtype'],\n        description,\n        closeButtonAriaLabel: intl.formatMessage({\n          id: 'wizard.close',\n          defaultMessage: 'Close wizard',\n        }),\n        buttonLabels: {\n          submit: intl.formatMessage({\n            id: 'sources.add',\n            defaultMessage: 'Add',\n          }),\n          cancel: intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          }),\n          back: intl.formatMessage({\n            id: 'sources.back',\n            defaultMessage: 'Back',\n          }),\n        },\n        fields: [\n          ...(source.imported\n            ? []\n            : [\n                {\n                  ...firstStep,\n                  fields: [...firstStep.fields, appTypeSetter],\n                },\n              ]),\n          {\n            title: intl.formatMessage({\n              id: 'sources.reviewDetails',\n              defaultMessage: 'Review details',\n            }),\n            name: 'summary',\n            fields: [\n              {\n                component: 'description',\n                name: 'description-summary',\n                Content: ApplicationSummary,\n              },\n              {\n                component: 'summary',\n                name: 'summary',\n                sourceTypes: [sourceType],\n                applicationTypes: [appType],\n              },\n              ...(source.imported ? [appTypeSetter] : []),\n            ],\n          },\n          ...(hasAlreadyType || hasMultipleAuthTypes ? authenticationFields : authenticationFields.splice(1)),\n        ],\n      },\n    ],\n  };\n};\n\nexport default fields;\n","import * as schemaBuilder from '../../../components/addSourceWizard/schemaBuilder';\nimport emptyAuthType from '../../addSourceWizard/emptyAuthType';\n\nconst generateFirstAuthStep = (type, appType, endpointFields, authtype, intl, shouldAddEmpty, enableLighthouse) => {\n  let fields = [...endpointFields];\n  const hasEndpoint = type.schema.endpoint && !type.schema.enpoint?.hidden;\n\n  if (schemaBuilder.shouldUseAppAuth(type.name, authtype, appType.name)) {\n    fields = [];\n  }\n\n  const auth = [...type.schema.authentication, shouldAddEmpty ? emptyAuthType : undefined].find(({ type }) => type === authtype);\n\n  const additionalStepName = `${type.name}-${authtype}-${appType.name}-additional-step`;\n\n  const skipEndpoint = schemaBuilder.shouldSkipEndpoint(type.name, authtype, appType.name);\n  const customSteps = schemaBuilder.hasCustomSteps(type.name, authtype, appType.name);\n\n  let nextStep;\n\n  if (schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name, enableLighthouse).length > 0) {\n    nextStep = additionalStepName;\n  } else if (endpointFields.length === 0 && !skipEndpoint && hasEndpoint) {\n    nextStep = `${type.name}-endpoint`;\n  } else {\n    nextStep = 'summary';\n  }\n\n  const additionalIncludesStepKeys = schemaBuilder.getAdditionalStepKeys(type.name, authtype, appType.name);\n  const hasCustomStep = schemaBuilder.shouldSkipSelection(type.name, authtype, appType.name);\n\n  let stepProps = {};\n\n  if (hasCustomStep) {\n    const firstAdditonalStep = schemaBuilder\n      .getAdditionalSteps(type.name, authtype, appType.name, enableLighthouse)\n      .find(({ name }) => !name);\n    const additionalFields = schemaBuilder.getAdditionalStepFields(auth.fields, additionalStepName);\n\n    if (firstAdditonalStep.nextStep) {\n      nextStep = firstAdditonalStep.nextStep;\n    } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps && hasEndpoint) {\n      nextStep = `${type.name}-endpoint`;\n    } else {\n      nextStep = 'summary';\n    }\n\n    stepProps = {\n      ...firstAdditonalStep,\n      fields: [\n        ...fields,\n        ...schemaBuilder.injectAuthFieldsInfo(\n          [...firstAdditonalStep.fields, ...additionalFields],\n          type.name,\n          authtype,\n          appType.name,\n        ),\n      ],\n    };\n  }\n\n  return {\n    name: `${type.name}-${appType.id}-${authtype}`,\n    title: intl.formatMessage({\n      id: 'sources.configureCredentials',\n      defaultMessage: 'Configure credentials',\n    }),\n    fields: [\n      ...fields,\n      ...schemaBuilder.getAdditionalAuthFields(type.name, authtype, appType.name),\n      ...schemaBuilder.injectAuthFieldsInfo(\n        schemaBuilder.getNoStepsFields(auth.fields, additionalIncludesStepKeys),\n        type.name,\n        authtype,\n        appType.name,\n      ),\n    ],\n    nextStep,\n    ...stepProps,\n  };\n};\n\nexport default generateFirstAuthStep;\n","import componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nconst authenticationSelectionStep = (sourceType, appType, intl, authenticationValues) => {\n  const nextStep = ({ values: { application, authtype } }) => {\n    if (authtype) {\n      const hasSupportedAuthType = authenticationValues.find((auth) => auth.authtype === authtype);\n\n      if (hasSupportedAuthType) {\n        return 'selectAuthentication';\n      }\n\n      return `${sourceType.name}-${application && application.application_type_id}-${authtype}`;\n    }\n  };\n\n  return {\n    name: `selectAuthType-${appType.id}`,\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication type',\n    }),\n    fields: [\n      {\n        component: componentTypes.RADIO,\n        name: 'authtype',\n        options: appType.supported_authentication_types[sourceType.name].map((type) => ({\n          value: type,\n          label: sourceType.schema.authentication.find((authtype) => authtype.type === type)?.name || 'Unknown type',\n        })),\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n      },\n    ],\n    nextStep,\n  };\n};\n\nexport default authenticationSelectionStep;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Wizard } from '@patternfly/react-core/deprecated';\n\nconst WizardBodyAttach = ({ step, goToSources, title, description }) => (\n  <Wizard\n    isOpen={true}\n    onClose={goToSources}\n    title={title}\n    description={description}\n    steps={[\n      {\n        name: 'Finish',\n        component: step,\n        isFinishedStep: true,\n      },\n    ]}\n  />\n);\n\nWizardBodyAttach.propTypes = {\n  step: PropTypes.node.isRequired,\n  goToSources: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default WizardBodyAttach;\n","export const isDate = d => d instanceof Date;\nexport const isEmpty = o => Object.keys(o).length === 0;\nexport const isObject = o => o != null && typeof o === 'object';\nexport const hasOwnProperty = (o, ...args) => Object.prototype.hasOwnProperty.call(o, ...args)\nexport const isEmptyObject = (o) => isObject(o) && isEmpty(o);\nexport const makeObjectWithoutPrototype = () => Object.create(null);\n","import { isEmpty, isObject, hasOwnProperty, makeObjectWithoutPrototype } from './utils.js';\n\nconst addedDiff = (lhs, rhs) => {\n\n  if (lhs === rhs || !isObject(lhs) || !isObject(rhs)) return {};\n\n\n  return Object.keys(rhs).reduce((acc, key) => {\n    if (hasOwnProperty(lhs, key)) {\n      const difference = addedDiff(lhs[key], rhs[key]);\n\n      if (isObject(difference) && isEmpty(difference)) return acc;\n\n      acc[key] = difference;\n      return acc;\n    }\n\n    acc[key] = rhs[key];\n    return acc;\n  }, makeObjectWithoutPrototype());\n};\n\nexport default addedDiff;\n","import { isDate, isEmptyObject, isObject, hasOwnProperty, makeObjectWithoutPrototype } from './utils.js';\n\nconst updatedDiff = (lhs, rhs) => {\n  if (lhs === rhs) return {};\n\n  if (!isObject(lhs) || !isObject(rhs)) return rhs;\n\n  if (isDate(lhs) || isDate(rhs)) {\n    if (lhs.valueOf() == rhs.valueOf()) return {};\n    return rhs;\n  }\n\n  return Object.keys(rhs).reduce((acc, key) => {\n    if (hasOwnProperty(lhs, key)) {\n      const difference = updatedDiff(lhs[key], rhs[key]);\n\n      // If the difference is empty, and the lhs is an empty object or the rhs is not an empty object\n      if (isEmptyObject(difference) && !isDate(difference) && (isEmptyObject(lhs[key]) || !isEmptyObject(rhs[key])))\n        return acc; // return no diff\n\n      acc[key] = difference;\n      return acc;\n    }\n\n    return acc;\n  }, makeObjectWithoutPrototype());\n};\n\nexport default updatedDiff;\n","import { addedDiff, updatedDiff } from 'deep-object-diff';\n\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { doCreateApplication, getSourcesApi } from './entities';\nimport { urlOrHost } from './doUpdateSource';\nimport { checkAppAvailability } from '../api/getApplicationStatus';\nimport handleError from '../api/handleError';\nimport { timeoutedApps } from '../utilities/constants';\nimport emptyAuthType from '../components/addSourceWizard/emptyAuthType';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    if (obj[key] && typeof obj[key] === 'object') {\n      if (isEmpty(obj[key])) {\n        delete obj[key];\n      } else {\n        removeEmpty(obj[key]);\n      }\n    } else if (typeof obj[key] === 'undefined') {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\n\nexport const doAttachApp = async (values, formApi, authenticationInitialValues, initialValues, appTypes = []) => {\n  let appId;\n\n  const formState = formApi.getState();\n\n  const allFormValues = formState.values;\n\n  const selectedAuthId = allFormValues.authentication?.id;\n\n  const authInitialValues = selectedAuthId && authenticationInitialValues.find(({ id }) => id === selectedAuthId);\n\n  const { authentication, ...valuesWithoutAuth } = values;\n\n  const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n  const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n  const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n  const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n  const filteredValues = removeEmpty({\n    ...merge(cloneDeep(newAddedValues), updatedValues),\n    authentication: {\n      ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues),\n    },\n  });\n\n  try {\n    if (!allFormValues?.source?.id) {\n      throw 'Missing source id';\n    }\n\n    const startDate = new Date();\n    const sourceId = allFormValues.source.id;\n    let endpointId = allFormValues?.endpoint?.id;\n\n    const promises = [];\n\n    if (filteredValues.source && !isEmpty(filteredValues.source)) {\n      promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n    const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n    if (hasModifiedEndpoint || hasModifiedUrl) {\n      const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n      const endPointPort = parseInt(port, 10);\n\n      const endpointData = removeEmpty({\n        ...filteredValues.endpoint,\n        scheme,\n        host,\n        port: isNaN(endPointPort) ? undefined : endPointPort,\n        path,\n      });\n\n      if (endpointId) {\n        promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n      } else {\n        const createEndpointData = {\n          ...endpointData,\n          default: true,\n          source_id: sourceId,\n        };\n\n        promises.push(getSourcesApi().createEndpoint(createEndpointData));\n      }\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    if (filteredValues.application?.application_type_id) {\n      const applicationData = {\n        ...filteredValues.application,\n        source_id: sourceId,\n      };\n\n      promises.push(doCreateApplication(applicationData));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const [_sourceDataOut, endpointDataOut, applicationDataOut] = await Promise.all(promises);\n\n    appId = applicationDataOut?.id;\n\n    let authenticationDataOut;\n\n    if (\n      filteredValues.authentication &&\n      !isEmpty(filteredValues.authentication) &&\n      filteredValues.authentication.authtype !== emptyAuthType.type\n    ) {\n      if (selectedAuthId) {\n        authenticationDataOut = await getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication);\n      } else {\n        const authenticationData = {\n          ...filteredValues.authentication,\n          resource_id: endpointDataOut?.id || applicationDataOut?.id,\n          resource_type: endpointDataOut?.id ? 'Endpoint' : 'Application',\n        };\n\n        authenticationDataOut = await getSourcesApi().createAuthentication(authenticationData);\n      }\n    }\n\n    const authenticationId = selectedAuthId || authenticationDataOut?.id;\n\n    if (applicationDataOut?.id && authenticationId) {\n      const authAppData = {\n        application_id: applicationDataOut.id,\n        authentication_id: authenticationId,\n      };\n\n      await getSourcesApi().createAuthApp(authAppData);\n    }\n\n    let endpoint;\n    if (endpointId) {\n      endpoint = await checkAppAvailability(endpointId, undefined, undefined, 'getEndpoint', startDate);\n    }\n\n    if (applicationDataOut) {\n      const timeout = timeoutedApps(appTypes).includes(applicationDataOut.application_type_id) ? 10000 : 0;\n      const app = await checkAppAvailability(applicationDataOut.id, timeout);\n\n      return { id: app.id, applications: [app], ...(endpoint && { endpoint: [endpoint] }) };\n    }\n\n    return {};\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    if (appId) {\n      await getSourcesApi().deleteApplication(appId);\n    }\n\n    const errorMessage = await handleError(error);\n    throw errorMessage;\n  }\n};\n","export const initialState = {\n  state: 'loading',\n  error: '',\n  values: {},\n  authenticationsValues: [],\n  sourceAppsLength: 0,\n  initialValues: {},\n  isCancelling: false,\n};\n\nconst reducer = (state, { type, length, authenticationsValues, initialValues, error, values, data, formApi }) => {\n  switch (type) {\n    case 'setSourceAppslength':\n      return {\n        ...state,\n        sourceAppsLength: length,\n      };\n    case 'loadAuthentications':\n      return {\n        ...state,\n        authenticationsValues,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'loadWithoutAuthentications':\n      return {\n        ...state,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'reset':\n      return {\n        ...state,\n        state: 'wizard',\n      };\n    case 'submit':\n      return {\n        ...state,\n        values,\n        formApi,\n        state: 'submitting',\n      };\n    case 'finish':\n      return {\n        ...state,\n        state: 'finished',\n        data,\n      };\n    case 'error':\n      return {\n        ...state,\n        state: 'errored',\n        error,\n      };\n    case 'toggleCancelling':\n      return {\n        ...state,\n        isCancelling: !state.isCancelling,\n        ...(values && { values }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { isDate, isEmptyObject, isObject, hasOwnProperty, makeObjectWithoutPrototype } from './utils.js';\n\nconst diff = (lhs, rhs) => {\n  if (lhs === rhs) return {}; // equal return no diff\n\n  if (!isObject(lhs) || !isObject(rhs)) return rhs; // return updated rhs\n\n  const deletedValues = Object.keys(lhs).reduce((acc, key) => {\n    if (!hasOwnProperty(rhs, key)) {\n      acc[key] = undefined;\n      \n    }\n\n    return acc;\n  }, makeObjectWithoutPrototype());\n\n  if (isDate(lhs) || isDate(rhs)) {\n    if (lhs.valueOf() == rhs.valueOf()) return {};\n    return rhs;\n  }\n\n  return Object.keys(rhs).reduce((acc, key) => {\n    if (!hasOwnProperty(lhs, key)){\n      acc[key] = rhs[key]; // return added r key\n      return acc;\n    } \n\n    const difference = diff(lhs[key], rhs[key]);\n\n    // If the difference is empty, and the lhs is an empty object or the rhs is not an empty object\n    if (isEmptyObject(difference) && !isDate(difference) && (isEmptyObject(lhs[key]) || !isEmptyObject(rhs[key])))\n      return acc; // return no diff\n\n    acc[key] = difference // return updated key\n    return acc; // return updated key\n  }, deletedValues);\n};\n\nexport default diff;\n","import React, { useEffect, useReducer, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport isEmpty from 'lodash/isEmpty';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../../views/formatters';\nimport { replaceRouteId, routes } from '../../Routing';\n\nimport { doAttachApp } from '../../api/doAttachApp';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nimport reducer, { initialState } from './reducer';\nimport { Button, Text } from '@patternfly/react-core';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { diff } from 'deep-object-diff';\nimport LoadingStep from '../steps/LoadingStep';\nimport ErroredStep from '../steps/ErroredStep';\nimport AmazonFinishedStep from '../steps/AmazonFinishedStep';\nimport FinishedStep from '../steps/FinishedStep';\nimport TimeoutStep from '../steps/TimeoutStep';\nimport computeSourceStatus from '../../utilities/computeSourceStatus';\nimport filterApps from '../../utilities/filterApps';\nimport computeSourceError from '../../utilities/computeSourceError';\nimport CloseModal from '../CloseModal';\nimport { useAppNavigate } from '../../hooks/useAppNavigate';\nimport AppLink from '../AppLink';\nimport AppNavigate from '../AppNavigate';\n\nexport const onSubmit = (\n  values,\n  formApi,\n  authenticationInitialValues,\n  dispatch,\n  setState,\n  initialValues,\n  appTypes,\n  setSelectedApp,\n) => {\n  setState({ type: 'submit', values, formApi });\n\n  return doAttachApp(values, formApi, authenticationInitialValues, initialValues, appTypes)\n    .then(async (data) => {\n      checkSourceStatus(initialValues.source.id);\n      await dispatch(loadEntities());\n      setSelectedApp({ values: { application: null } });\n      return setState({ type: 'finish', data });\n    })\n    .catch((error) =>\n      setState({\n        type: 'error',\n        error,\n      }),\n    );\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst AddApplication = () => {\n  const intl = useIntl();\n  const navigate = useAppNavigate();\n  const selectedApp = useRef();\n  const enableLighthouse = useFlag('sources.wizard.lighthouse');\n  const saveSelectedApp = ({ values: { application } }) => (selectedApp.current = application);\n  const { app_type_id } = useParams();\n\n  const loaded = useIsLoaded();\n\n  const { appTypes, sourceTypesLoaded, appTypesLoaded, sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const [state, setState] = useReducer(reducer, initialState);\n\n  const container = useRef(document.createElement('div'));\n\n  const applicationType = appTypes.find(({ id }) => id === app_type_id);\n\n  const removeApp = () => {\n    setState({ type: 'reset' });\n\n    return removeAppSubmit(\n      {\n        id: state.data?.id,\n        display_name: appTypes.find(({ id }) => id === state.data?.applications?.[0]?.application_type_id)?.display_name,\n      },\n      intl,\n      undefined,\n      dispatch,\n      source,\n    );\n  };\n\n  useEffect(() => {\n    if (source) {\n      // When app is only removed, there is no need to reload values\n      const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n      setState({\n        type: 'setSourceAppslength',\n        length: source.applications.length,\n      });\n\n      if (!removeAppAction) {\n        if (source.endpoints && source.endpoints[0]) {\n          getSourcesApi()\n            .listEndpointAuthentications(source.endpoints[0].id)\n            .then(({ data }) =>\n              setState({\n                type: 'loadAuthentications',\n                authenticationsValues: data,\n                initialValues: {\n                  source,\n                  endpoint: source.endpoints[0],\n                  url: endpointToUrl(source.endpoints[0]),\n                  application: selectedApp.current,\n                },\n                values: {},\n              }),\n            );\n        } else {\n          setState({\n            type: 'loadWithoutAuthentications',\n            initialValues: { source, application: selectedApp.current },\n            values: {},\n          });\n        }\n      }\n    }\n  }, [source]);\n\n  const goToSources = () => navigate(replaceRouteId(routes.sourcesDetail.path, source.id));\n\n  const title = intl.formatMessage(\n    {\n      id: 'sources.addApplicationNameTitle',\n      defaultMessage: 'Connect {appName}',\n    },\n    {\n      appName: applicationType?.display_name || 'application',\n    },\n  );\n  const description = intl.formatMessage(\n    {\n      id: 'sources.addApplicationNameDescription',\n      defaultMessage: 'Configure {appName} for this source.',\n    },\n    {\n      appName: applicationType?.display_name || 'application',\n    },\n  );\n\n  if ((!appTypesLoaded || !sourceTypesLoaded || !loaded || state.state === 'loading') && state.state !== 'submitting') {\n    return (\n      <WizardBody\n        goToSources={goToSources}\n        title={title}\n        description={description}\n        step={\n          <LoadingStep\n            customText={intl.formatMessage({\n              id: 'sources.loading',\n              defaultMessage: 'Loading, please wait.',\n            })}\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n          />\n        }\n      />\n    );\n  }\n\n  const onSubmitWrapper = (values, formApi) =>\n    onSubmit(values, formApi, state.authenticationsValues, dispatch, setState, state.initialValues, appTypes, saveSelectedApp);\n\n  if (state.state === 'submitting') {\n    return (\n      <WizardBody\n        title={title}\n        description={description}\n        goToSources={goToSources}\n        step={\n          <LoadingStep\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n            customText={intl.formatMessage({\n              id: 'wizard.loadingText',\n              defaultMessage: 'Validating credentials',\n            })}\n            description={intl.formatMessage({\n              id: 'wizard.loadingDescription',\n              defaultMessage:\n                'This could take a minute. If you prefer not to wait, close this dialog and the process will continue.',\n            })}\n          />\n        }\n      />\n    );\n  }\n\n  const onReset = () => setState({ type: 'reset' });\n\n  const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n\n  if (state.state !== 'wizard') {\n    let shownStep;\n\n    if (state.state !== 'finished') {\n      shownStep = (\n        <ErroredStep\n          onRetry={onReset}\n          onClose={goToSources}\n          returnButtonTitle={intl.formatMessage({\n            id: 'sources.retry',\n            defaultMessage: 'Retry',\n          })}\n          primaryAction={() => onSubmitWrapper(state.values, state.formApi)}\n          secondaryActions={\n            <Text\n              component=\"a\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage({\n                id: 'wizard.openTicket',\n                defaultMessage: 'Open a support case',\n              })}\n            </Text>\n          }\n        />\n      );\n    } else {\n      switch (computeSourceStatus(state.data)) {\n        default:\n          if (sourceType.name === 'amazon') {\n            shownStep = <AmazonFinishedStep onClose={goToSources} />;\n          } else {\n            shownStep = (\n              <FinishedStep\n                title={intl.formatMessage({\n                  id: 'sources.configurationSuccessful',\n                  defaultMessage: 'Configuration successful',\n                })}\n                hideSourcesButton={true}\n                onClose={goToSources}\n                returnButtonTitle={intl.formatMessage({\n                  id: 'sources.exit',\n                  defaultMessage: 'Exit',\n                })}\n                successfulMessage={intl.formatMessage({\n                  id: 'sources.successAddApp',\n                  defaultMessage: 'Your application was successfully added.',\n                })}\n              />\n            );\n          }\n\n          break;\n        case 'unavailable':\n          shownStep = (\n            <ErroredStep\n              onRetry={onReset}\n              onClose={goToSources}\n              message={computeSourceError(state.data, intl)}\n              title={intl.formatMessage({\n                id: 'sources.configurationSuccessful',\n                defaultMessage: 'Configuration unsuccessful',\n              })}\n              secondaryActions={\n                <Button variant=\"link\" onClick={removeApp}>\n                  {intl.formatMessage({\n                    id: 'wizard.removeApp',\n                    defaultMessage: 'Remove application',\n                  })}\n                </Button>\n              }\n              Component={() => (\n                <AppLink to={replaceRouteId(routes.sourcesDetail.path, source.id)}>\n                  <Button variant=\"primary\" className=\"pf-v5-u-mt-xl\">\n                    {intl.formatMessage({\n                      id: 'wizard.editSource',\n                      defaultMessage: 'Edit source',\n                    })}\n                  </Button>\n                </AppLink>\n              )}\n            />\n          );\n          break;\n        case 'timeout':\n          shownStep = (\n            <TimeoutStep\n              returnButtonTitle={intl.formatMessage({\n                id: 'sources.exit',\n                defaultMessage: 'Exit',\n              })}\n              onClose={goToSources}\n            />\n          );\n          break;\n      }\n    }\n\n    return <WizardBody title={title} description={description} goToSources={goToSources} step={shownStep} />;\n  }\n\n  const sourceTypeName = sourceType && sourceType.name;\n  const filteredAppTypes = appTypes\n    .filter((type) => type.supported_source_types.includes(sourceTypeName))\n    .filter(filterApps)\n    .map((type) => ({\n      value: type.id,\n      label: type.display_name,\n    }));\n\n  if (\n    !applicationType ||\n    source.applications.find(({ application_type_id }) => application_type_id === app_type_id) ||\n    !applicationType.supported_source_types.includes(sourceType.name)\n  ) {\n    return <AppNavigate to={'/' + replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const schema = createSchema(\n    intl,\n    sourceType,\n    applicationType,\n    state.authenticationsValues,\n    source,\n    container.current,\n    title,\n    description,\n    appTypes,\n    enableLighthouse,\n  );\n\n  const hasAvailableApps = filteredAppTypes.length > 0;\n  const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n  const onStay = () => {\n    container.current.style.opacity = 1;\n    container.current.setAttribute('aria-hidden', 'false');\n\n    setState({ type: 'toggleCancelling' });\n  };\n\n  const cancelBeforeExit = (values) => {\n    // eslint-disable-next-line no-unused-vars\n    const { application: _a, ...initialValues } = state.initialValues;\n    // eslint-disable-next-line no-unused-vars\n    const { application: _a1, ...newValues } = values;\n\n    const isChanged = !isEmpty(diff(initialValues, newValues));\n\n    if (isChanged) {\n      container.current.style.opacity = 0;\n      container.current.setAttribute('aria-hidden', 'true');\n      setState({ type: 'toggleCancelling', values });\n    } else {\n      goToSources();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {state.isCancelling && (\n        <CloseModal\n          title={intl.formatMessage({\n            id: 'sources.manageAppsCloseModalTitle',\n            defaultMessage: 'Exit application adding?',\n          })}\n          onStay={onStay}\n          onExit={goToSources}\n        />\n      )}\n      <SourcesFormRenderer\n        schema={schema}\n        showFormControls={false}\n        onSubmit={onSubmitFinal}\n        onCancel={cancelBeforeExit}\n        initialValues={state.initialValues}\n        subscription={{ values: true }}\n        debug={saveSelectedApp}\n        clearedValue={null}\n        FormTemplate={FormTemplateWrapper}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddApplication;\n","import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    },\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    },\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { Button, Modal, Title } from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\n\nconst CloseModal = ({ onExit, onStay, title, exitTitle, stayTitle, description }) => {\n  const intl = useIntl();\n\n  const isMounted = useRef(false);\n\n  return (\n    <Modal\n      onEscapePress={(e) => {\n        isMounted.current ? onStay(e) : undefined;\n        isMounted.current = true;\n      }}\n      className=\"sources\"\n      variant=\"small\"\n      title={title}\n      aria-label={intl.formatMessage({ id: 'wizard.closeAriaLabel', defaultMessage: 'Close add source wizard' })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"src-c-warning-icon\" aria-label=\"Exclamation icon\" />\n          {title}\n        </Title>\n      }\n      isOpen\n      onClose={onStay}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" id=\"on-exit-button\" onClick={onExit}>\n          {exitTitle}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" id=\"on-stay-button\" onClick={onStay}>\n          {stayTitle}\n        </Button>,\n      ]}\n    >\n      {description}\n    </Modal>\n  );\n};\n\nCloseModal.propTypes = {\n  onExit: PropTypes.func.isRequired,\n  onStay: PropTypes.func.isRequired,\n  title: PropTypes.node,\n  exitTitle: PropTypes.node,\n  stayTitle: PropTypes.node,\n  description: PropTypes.node,\n};\n\nCloseModal.defaultProps = {\n  title: <FormattedMessage id=\"wizard.closeTitle\" defaultMessage=\"Exit source creation?\" />,\n  exitTitle: <FormattedMessage id=\"wizard.exitText\" defaultMessage=\"Exit\" />,\n  stayTitle: <FormattedMessage id=\"wizard.stayText\" defaultMessage=\"Stay\" />,\n  description: <FormattedMessage id=\"wizard.closeWarning\" defaultMessage=\"All inputs will be discarded.\" />,\n};\n\nexport default CloseModal;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport {\n  Alert,\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateActions,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Grid,\n  GridItem,\n  Text,\n  Title,\n} from '@patternfly/react-core';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst AwsLink = ({ href, children }) => (\n  <React.Fragment>\n    <CheckCircleIcon className=\"pf-v5-u-mr-sm\" fill=\"var(--pf-v5-global--success-color--100)\" />\n    <Text component=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Text>\n  </React.Fragment>\n);\n\nAwsLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst GOLDIMAGES_HREF = 'https://access.redhat.com/management/cloud';\nconst LEARNMORE_HREF = 'https://access.redhat.com/public-cloud/aws';\n\nconst AmazonFinishedStep = ({ onClose }) => {\n  const intl = useIntl();\n  const { isBeta } = useChrome();\n  const PREFIX = isBeta() ? 'preview/' : '';\n\n  const SUBWATCH_HREF = `/${PREFIX}subscriptions`;\n  const INSIGHTS_HREF = `/${PREFIX}insights`;\n  const COST_HREF = `/${PREFIX}cost-management`;\n\n  return (\n    <Fragment>\n      <Alert\n        variant=\"info\"\n        isInline\n        title={intl.formatMessage({ id: 'aws.alertTitle', defaultMessage: 'Allow 24 hours for full activation' })}\n      >\n        {intl.formatMessage({\n          id: 'aws.alertDescription',\n          defaultMessage: 'Manage connections for this source at any time in Settings > Sources.',\n        })}\n      </Alert>\n      <Bullseye>\n        <EmptyState variant={EmptyStateVariant.full} className=\"pf-v5-u-mt-md\">\n          <EmptyStateIcon icon={CheckCircleIcon} color=\"var(--pf-v5-global--success-color--100)\" className=\"pf-v5-u-mb-0\" />\n          <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-v5-u-mt-xl\">\n            {intl.formatMessage({ id: 'aws.successTitle', defaultMessage: 'Amazon Web Services connection established' })}\n          </Title>\n          <EmptyStateBody>\n            {intl.formatMessage({\n              id: 'aws.successDescription',\n              defaultMessage: 'Discover the benefits of your connection or exit to manage your new source.',\n            })}\n            <Grid hasGutter className=\"src-c-aws-grid pf-v5-u-mt-md\">\n              <GridItem md=\"6\">\n                <AwsLink href={GOLDIMAGES_HREF}>\n                  {intl.formatMessage({ id: 'aws.goldImages', defaultMessage: 'View enabled AWS gold images' })}\n                </AwsLink>\n              </GridItem>\n              <GridItem md=\"6\">\n                <AwsLink href={SUBWATCH_HREF}>\n                  {intl.formatMessage({ id: 'aws.subwtachUsage', defaultMessage: 'Subscription Watch usage' })}\n                </AwsLink>\n              </GridItem>\n              <GridItem md=\"6\">\n                <AwsLink href={INSIGHTS_HREF}>\n                  {intl.formatMessage({ id: 'aws.insights', defaultMessage: 'Get started with Red Hat Insights' })}\n                </AwsLink>\n              </GridItem>\n              <GridItem md=\"6\">\n                <AwsLink href={COST_HREF}>\n                  {intl.formatMessage({ id: 'aws.costLink', defaultMessage: 'Cost Management reporting' })}\n                </AwsLink>\n              </GridItem>\n            </Grid>\n          </EmptyStateBody>\n          <Button variant=\"primary\" onClick={onClose} className=\"pf-v5-u-mt-xl\">\n            {intl.formatMessage({ id: 'exit', defaultMessage: 'Exit' })}\n          </Button>\n          <EmptyStateActions>\n            <Text component=\"a\" href={LEARNMORE_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n              {intl.formatMessage({ id: 'aws.learnMore', defaultMessage: 'Learn more about this Cloud' })}\n            </Text>\n          </EmptyStateActions>\n        </EmptyState>\n      </Bullseye>\n    </Fragment>\n  );\n};\n\nAmazonFinishedStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AmazonFinishedStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { ClipboardCopy } from '@patternfly/react-core';\n\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateActions,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Form,\n  FormGroup,\n  Title,\n} from '@patternfly/react-core';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport computeSourcesUrl from '../../utilities/computeSourcesUrl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst FinishedStep = ({\n  onClose,\n  successfulMessage,\n  hideSourcesButton,\n  returnButtonTitle,\n  title,\n  linkText,\n  secondaryActions,\n  uuid,\n}) => {\n  const { isBeta } = useChrome();\n  return (\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full} className=\"pf-v5-u-mt-4xl\">\n        <EmptyStateIcon icon={CheckCircleIcon} color=\"var(--pf-v5-global--success-color--100)\" className=\"pf-v5-u-mb-0\" />\n        <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-v5-u-mt-xl\">\n          {title}\n        </Title>\n        <EmptyStateBody className=\"src-c-wizard--step-text\">{successfulMessage}</EmptyStateBody>\n        {uuid && (\n          <Form className=\"src-c-uuid\">\n            <FormGroup label={<FormattedMessage id=\"wizard.sourcesUid\" defaultMessage=\"Source UUID\" />} fieldId=\"source-uuid\">\n              <ClipboardCopy id=\"source-uuid\" isReadOnly hoverTip=\"Source UUID\" clickTip=\"Copied\" className=\"pf-v5-u-mt-md\">\n                {uuid}\n              </ClipboardCopy>\n            </FormGroup>\n          </Form>\n        )}\n        <Button variant=\"primary\" onClick={onClose} className=\"pf-v5-u-mt-xl\">\n          {returnButtonTitle}\n        </Button>\n        {!hideSourcesButton && (\n          <EmptyStateActions>\n            <Button variant=\"link\" component=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href={computeSourcesUrl(isBeta())}>\n              {linkText}\n            </Button>\n          </EmptyStateActions>\n        )}\n        {secondaryActions && <EmptyStateActions>{secondaryActions}</EmptyStateActions>}\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nFinishedStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  successfulMessage: PropTypes.node.isRequired,\n  hideSourcesButton: PropTypes.bool,\n  returnButtonTitle: PropTypes.node.isRequired,\n  title: PropTypes.node,\n  linkText: PropTypes.node,\n  secondaryActions: PropTypes.node,\n  uuid: PropTypes.string,\n};\n\nFinishedStep.defaultProps = {\n  title: <FormattedMessage id=\"wizard.succConfiguration\" defaultMessage=\"Configuration successful\" />,\n  linkText: <FormattedMessage id=\"wizard.toSources\" defaultMessage=\"Take me to sources\" />,\n};\n\nexport default FinishedStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ClipboardCopy } from '@patternfly/react-core';\n\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateActions,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\n\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\n\nconst TimeoutStep = ({ onClose, returnButtonTitle, title, secondaryActions, uuid }) => {\n  const intl = useIntl();\n\n  return (\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full} className=\"pf-v5-u-mt-4xl\">\n        <EmptyStateIcon icon={WrenchIcon} color=\"var(--pf-v5-global--Color--200)\" className=\"pf-v5-u-mb-0\" />\n        <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-v5-u-mt-xl\">\n          {title}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage(\n            {\n              id: 'wizard.uncompleteConfigurationDescription',\n              defaultMessage:\n                'We are still working to confirm credentials and app settings.{newLine}To track progress, check the Status column in the Sources table.',\n            },\n            { newLine: <br key=\"br\" /> },\n          )}\n          {uuid ?? (\n            <ClipboardCopy isReadOnly hoverTip=\"Source UUID\" clickTip=\"Copied\" className=\"pf-v5-u-mt-md\">\n              {uuid}\n            </ClipboardCopy>\n          )}\n        </EmptyStateBody>\n        <Button variant=\"primary\" onClick={onClose} className=\"pf-v5-u-mt-xl\">\n          {returnButtonTitle}\n        </Button>\n        {secondaryActions && <EmptyStateActions>{secondaryActions}</EmptyStateActions>}\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nTimeoutStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  returnButtonTitle: PropTypes.node.isRequired,\n  title: PropTypes.node,\n  secondaryActions: PropTypes.node,\n  uuid: PropTypes.string,\n};\n\nTimeoutStep.defaultProps = {\n  title: <FormattedMessage id=\"wizard.uncompleteConfigurationTitle\" defaultMessage=\"Configuration in progress\" />,\n};\n\nexport default TimeoutStep;\n","const computeSourceError = (source, intl) =>\n  source.applications?.filter(Boolean).find(({ availability_status_error }) => availability_status_error)\n    ?.availability_status_error ||\n  source.endpoint?.filter(Boolean).find(({ availability_status_error }) => availability_status_error)\n    ?.availability_status_error ||\n  source.authentications?.filter(Boolean).find(({ availability_status_error }) => availability_status_error)\n    ?.availability_status_error ||\n  intl.formatMessage({ id: 'wizard.unknownError', defaultMessage: 'Unknown error' });\n\nexport default computeSourceError;\n","export const computeSourceStatus = (source) => {\n  const appStatuses =\n    source.applications?.filter(Boolean).map(({ availability_status }) => availability_status || 'timeout') || [];\n  const endpointStatuses =\n    source.endpoint?.filter(Boolean).map(({ availability_status }) => availability_status || 'timeout') || [];\n  const authenticationsStatuses =\n    source.authentications?.filter(Boolean).map(({ availability_status }) => availability_status || 'timeout') || [];\n\n  const statuses = [...appStatuses, ...endpointStatuses, ...authenticationsStatuses];\n\n  if (statuses.includes('unavailable')) {\n    return 'unavailable';\n  }\n\n  if (statuses.length > 0 && statuses.every((status) => status === 'available')) {\n    return 'available';\n  }\n\n  if (statuses.includes('timeout')) {\n    return 'timeout';\n  }\n\n  return 'finished';\n};\n\nexport default computeSourceStatus;\n","const computeSourcesUrl = (isBeta = false) => (isBeta ? `/preview/settings/integrations` : `/settings/integrations`);\n\nexport default computeSourcesUrl;\n"],"names":["baseMerge","merge","createAssigner","object","source","srcIndex","module","exports","AuthTypeSetter","authenticationValues","formOptions","selectedAuthentication","getState","values","initialValue","setInitialValue","useState","useEffect","startsWith","authtype","replace","change","authentication","find","id","innerSetter","undefined","propTypes","SelectAuthenticationDescription","applicationTypeName","authenticationTypeName","intl","TextContent","Text","component","TextVariants","p","formatMessage","defaultMessage","generateAuthSelectionOptions","supportedAuthTypeName","supportedAuthType","applicationTypes","filter","map","includeUsername","username","app","applications","authentications","appType","application_type_id","includeAppName","display_name","label","value","ApplicationSummary","sourceType","container","title","description","enableLighthouse","firstStep","hasMultipleAuthTypes","hasAlreadyType","authenticationFields","imported","appendEndpoint","schema","endpoint","hidden","fields","hasEndpointStep","length","shouldAddEmpty","supported_authentication_types","name","authTypes","emptyAuthType","type","supported_source_types","includes","forEach","push","endpointFields","hasEndpoint","enpoint","schemaBuilder","auth","additionalStepName","skipEndpoint","customSteps","nextStep","additionalIncludesStepKeys","stepProps","firstAdditonalStep","additionalFields","appAdditionalSteps","RADIO","options","isRequired","validate","REQUIRED","application","authValues","sourceTypeName","hasAlreadySupportedAuthType","Content","hideField","ifAppSupported","isAppAvailable","SUB_FORM","appTypeSetter","TEXT_FIELD","WIZARD","className","inModal","showTitles","crossroads","closeButtonAriaLabel","buttonLabels","submit","cancel","back","sourceTypes","splice","WizardBodyAttach","step","goToSources","Wizard","isOpen","onClose","steps","isFinishedStep","PropTypes","node","func","string","isDate","d","Date","o","Object","keys","isObject","args","prototype","hasOwnProperty","call","isEmptyObject","makeObjectWithoutPrototype","create","addedDiff","lhs","rhs","reduce","acc","key","difference","updatedDiff","valueOf","removeEmpty","obj","initialState","state","error","authenticationsValues","sourceAppsLength","initialValues","isCancelling","data","formApi","diff","deletedValues","onSubmit","authenticationInitialValues","dispatch","setState","appTypes","setSelectedApp","async","appId","allFormValues","selectedAuthId","authInitialValues","valuesWithoutAuth","newAddedValues","added","updatedValues","updated","newAddedAuthValues","updatedAuthValues","filteredValues","startDate","sourceId","endpointId","promises","updateSource","Promise","resolve","hasModifiedEndpoint","hasModifiedUrl","url","scheme","host","port","path","endPointPort","parseInt","endpointData","isNaN","updateEndpoint","createEndpointData","default","source_id","createEndpoint","applicationData","_sourceDataOut","endpointDataOut","applicationDataOut","all","authenticationDataOut","updateAuthentication","authenticationData","resource_id","resource_type","createAuthentication","authenticationId","authAppData","application_id","authentication_id","createAuthApp","timeout","console","deleteApplication","handleError","doAttachApp","then","checkSourceStatus","catch","FormTemplateWrapper","props","showFormControls","navigate","useAppNavigate","selectedApp","useRef","useFlag","saveSelectedApp","current","app_type_id","useParams","loaded","useIsLoaded","sourceTypesLoaded","appTypesLoaded","sources","useSource","useReducer","document","createElement","applicationType","removeApp","removeAppSubmit","removeAppAction","endpoints","listEndpointAuthentications","sourcesDetail","appName","WizardBody","LoadingStep","customText","cancelTitle","onSubmitWrapper","onReset","source_type_id","shownStep","ErroredStep","onRetry","returnButtonTitle","primaryAction","secondaryActions","target","href","rel","computeSourceStatus","AmazonFinishedStep","FinishedStep","hideSourcesButton","successfulMessage","message","computeSourceError","Button","variant","onClick","Component","AppLink","to","TimeoutStep","filteredAppTypes","filterApps","AppNavigate","onSubmitFinal","CloseModal","onStay","style","opacity","setAttribute","onExit","SourcesFormRenderer","onCancel","_a","_a1","newValues","subscription","debug","clearedValue","FormTemplate","titleSuccess","titleError","exitTitle","stayTitle","isMounted","Modal","onEscapePress","e","header","Title","headingLevel","size","actions","defaultProps","AwsLink","children","fill","isBeta","PREFIX","SUBWATCH_HREF","INSIGHTS_HREF","COST_HREF","Fragment","Alert","isInline","Bullseye","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","color","EmptyStateBody","Grid","hasGutter","GridItem","md","EmptyStateActions","linkText","uuid","Form","FormGroup","fieldId","ClipboardCopy","isReadOnly","hoverTip","clickTip","newLine","Boolean","availability_status_error","statuses","availability_status","every","status"],"sourceRoot":""}