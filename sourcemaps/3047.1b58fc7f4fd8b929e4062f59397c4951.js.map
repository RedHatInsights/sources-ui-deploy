{"version":3,"file":"js/3047.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./src/api/wizardHelpers.js","webpack:///./src/components/addSourceWizard/superKey/SuperKeyCredentials.js","webpack:///./src/components/addSourceWizard/superKey/configurationStep.js","webpack:///./src/components/addSourceWizard/descriptions/Point.js","webpack:///./src/components/addSourceWizard/descriptions/SubWatchDescription.js","webpack:///./src/components/addSourceWizard/descriptions/HybridCommittedSpendDescription.js","webpack:///./src/components/addSourceWizard/compileAllApplicationComboOptions.js","webpack:///./src/components/addSourceWizard/superKey/applicationsStep.js","webpack:///./src/components/addSourceWizard/SourceAddSchema.js","webpack:///./src/utilities/debouncePromise.js","webpack:///./src/components/addSourceWizard/superKey/generateSuperKeyFields.js"],"sourcesContent":["import { getSourcesApi } from './entities';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    // RH marketplace is not supposed to show up and is not supposed to even exist\n    // Until we know why we get in the UI, we filter it out for now\n    // Unable to use != query param\n    .then((data) => ({\n      sourceTypes: data.data.filter(({ name }) => name !== 'rh-marketplace'),\n    }));\n\nexport const doLoadApplicationTypes = () =>\n  getSourcesApi()\n    .doLoadAppTypes()\n    .then((data) => ({ applicationTypes: data.data }));\n\nexport const findSource = (name) =>\n  getSourcesApi().postGraphQL({\n    query: `{ sources(filter: {name: \"name\", value: \"${name}\"})\n        { id, name }\n    }`,\n  });\n","import PropTypes from 'prop-types';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport generateSuperKeyFields from './generateSuperKeyFields';\n\nconst SuperKeyCredentials = ({ sourceTypes }) => {\n  const { renderForm, getState } = useFormApi();\n\n  const values = getState().values;\n\n  return renderForm(generateSuperKeyFields(sourceTypes, values.source_type));\n};\n\nSuperKeyCredentials.propTypes = {\n  sourceTypes: PropTypes.array,\n};\n\nexport default SuperKeyCredentials;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Label } from '@patternfly/react-core';\n\nimport { ACCOUNT_AUTHORIZATION, MANUAL_CONFIGURATION } from '../../constants';\nimport SuperKeyCredentials from './SuperKeyCredentials';\nimport { bold } from '../../../utilities/intlShared';\n\nconst configurationStep = (intl, sourceTypes) => ({\n  name: 'configuration_step',\n  title: intl.formatMessage({\n    id: 'wizard.configurationStep',\n    defaultMessage: 'Select configuration',\n  }),\n  nextStep: ({ values }) => {\n    if (!values.source?.app_creation_workflow) {\n      return;\n    }\n\n    return values.source?.app_creation_workflow === ACCOUNT_AUTHORIZATION ? 'select_applications' : 'application_step';\n  },\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'conf-desc',\n      label: intl.formatMessage(\n        {\n          id: 'wizard.accountAuthDescription',\n          defaultMessage:\n            'Configure your integration manually or let us manage all necessary credentials by selecting <b>account authorization</b> configuration.',\n        },\n        {\n          b: bold,\n        },\n      ),\n    },\n    {\n      component: componentTypes.RADIO,\n      name: 'source.app_creation_workflow',\n      label: intl.formatMessage({\n        id: 'wizard.configurationMode',\n        defaultMessage: 'Select a configuration mode',\n      }),\n      isRequired: true,\n      resolveProps: (_p, _f, formOptions) => ({\n        options: [\n          {\n            label: (\n              <span className=\"src-c-wizard__rhel-mag-label\">\n                {intl.formatMessage({\n                  id: 'wizard.accountAuth',\n                  defaultMessage: 'Account authorization',\n                })}\n                <Label className=\"pf-v5-u-ml-sm\" color=\"purple\">\n                  {intl.formatMessage({ id: 'wizard.confMode.reccomended', defaultMessage: 'Recommended' })}\n                </Label>\n              </span>\n            ),\n            description: intl.formatMessage(\n              {\n                id: 'wizard.accountAuth.desc',\n                defaultMessage:\n                  'A new automated integration configuration method. Provide your {type} account credentials and let Red Hat configure and manage your integration for you.',\n              },\n              {\n                type:\n                  { amazon: 'AWS', azure: 'Azure' }[formOptions.getState().values.source_type] ||\n                  formOptions.getState().values.source_type,\n              },\n            ),\n            value: ACCOUNT_AUTHORIZATION,\n          },\n        ],\n      }),\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n    {\n      component: componentTypes.SUB_FORM,\n      name: 'sub-form',\n      fields: [\n        {\n          component: 'description',\n          name: 'super-key-credentials',\n          Content: SuperKeyCredentials,\n          sourceTypes,\n        },\n      ],\n      condition: { when: 'source.app_creation_workflow', is: ACCOUNT_AUTHORIZATION },\n      className: 'pf-v5-u-ml-md',\n    },\n    {\n      component: componentTypes.RADIO,\n      name: 'source.app_creation_workflow',\n      options: [\n        {\n          label: intl.formatMessage({\n            id: 'wizard.manualAuth',\n            defaultMessage: 'Manual configuration',\n          }),\n          description: intl.formatMessage({\n            id: 'wizard.manualAuth.desc',\n            defaultMessage:\n              'Configure and manage your integration manually if you do not wish to provide account authorization credentials. You will set up integrations the same way you do today.',\n          }),\n          value: MANUAL_CONFIGURATION,\n        },\n      ],\n    },\n  ],\n});\n\nexport default configurationStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem, StackItem, Text } from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\n\nconst Point = ({ title, description, isEnabled, ...props }) => (\n  <StackItem {...props}>\n    <Flex>\n      <FlexItem spacer={{ default: 'spacerSm' }}>\n        <CheckCircleIcon fill={isEnabled ? '#3E8635' : '#6A6E73'} />\n      </FlexItem>\n      <FlexItem>\n        <Text className=\"pf-v5-u-mb-xs src-c-wizard__rhel-desc-title\">{title}</Text>\n        <Text>{description}</Text>\n      </FlexItem>\n    </Flex>\n  </StackItem>\n);\n\nPoint.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  isEnabled: PropTypes.bool,\n};\n\nexport default Point;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { ACCOUNT_AUTHORIZATION } from '../../constants';\nimport { Stack } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport Point from './Point';\n\nconst SubWatchDescription = ({ id }) => {\n  const intl = useIntl();\n  const { getState } = useFormApi();\n\n  const values = getState().values;\n\n  const isEnabled =\n    (values.source.app_creation_workflow === ACCOUNT_AUTHORIZATION && values.applications?.includes(id)) ||\n    (values.source.app_creation_workflow !== ACCOUNT_AUTHORIZATION && values.application?.application_type_id === id);\n\n  if (values.source_type === 'azure') {\n    return (\n      <Stack>\n        <Point\n          title={intl.formatMessage({\n            id: 'rhelbundle.goldImages.title',\n            defaultMessage: 'Red Hat gold images',\n          })}\n          description={intl.formatMessage({\n            id: 'rhelbundle.goldImages.azure.description',\n            defaultMessage: 'Unlock cloud images in Microsoft Azure and bring your own subscription instead of paying hourly.',\n          })}\n          className=\"pf-v5-u-mb-sm\"\n          isEnabled={isEnabled}\n        />\n        <Point\n          title={intl.formatMessage({\n            id: 'rhelbundle.autoregistration.title',\n            defaultMessage: 'Autoregistration',\n          })}\n          description={intl.formatMessage({\n            id: 'rhelbundle.goldImages.description',\n            defaultMessage: 'Cloud instances automatically connect to console.redhat.com when provisioned.',\n          })}\n          isEnabled={isEnabled}\n        />\n      </Stack>\n    );\n  }\n\n  if (values.source_type === 'google') {\n    return (\n      <Stack>\n        <Point\n          title={intl.formatMessage({\n            id: 'rhelbundle.goldImages.title',\n            defaultMessage: 'Red Hat gold images',\n          })}\n          description={intl.formatMessage({\n            id: 'rhelbundle.goldImages.google.description',\n            defaultMessage: 'Unlock cloud images in Google Cloud and bring your own subscription instead of paying hourly.',\n          })}\n          className=\"pf-v5-u-mb-sm\"\n          isEnabled={isEnabled}\n        />\n        <Point\n          title={intl.formatMessage({\n            id: 'rhelbundle.autoregistration.title',\n            defaultMessage: 'Autoregistration',\n          })}\n          description={intl.formatMessage({\n            id: 'rhelbundle.goldImages.description',\n            defaultMessage: 'Cloud instances automatically connect to console.redhat.com when provisioned.',\n          })}\n          isEnabled={isEnabled}\n        />\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack>\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.goldImages.title',\n          defaultMessage: 'Red Hat gold images',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.goldImages.description',\n          defaultMessage: 'Unlock cloud images in AWS and bring your own subscription instead of paying hourly.',\n        })}\n        className=\"pf-v5-u-mb-sm\"\n        isEnabled={isEnabled}\n      />\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.subwatch.title',\n          defaultMessage: 'High precision subscription watch data',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.subwatch.description',\n          defaultMessage: 'View precise public cloud usage data in subscription watch.',\n        })}\n        className=\"pf-v5-u-mb-sm\"\n        isEnabled={isEnabled}\n      />\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.autoregistration.title',\n          defaultMessage: 'Autoregistration',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.goldImages.description',\n          defaultMessage: 'Cloud instances automatically connect to console.redhat.com when provisioned.',\n        })}\n        isEnabled={isEnabled}\n      />\n    </Stack>\n  );\n};\n\nSubWatchDescription.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default SubWatchDescription;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { Stack } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\n\nimport Point from './Point';\nimport { ACCOUNT_AUTHORIZATION } from '../../constants';\n\nconst HybridCommittedSpendDescription = ({ id }) => {\n  const intl = useIntl();\n  const { getState } = useFormApi();\n\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes, shallowEqual);\n  const values = getState().values;\n\n  const isEnabled = useMemo(\n    () =>\n      (values.source?.app_creation_workflow === ACCOUNT_AUTHORIZATION && values.applications?.includes(id)) ||\n      (values.source?.app_creation_workflow !== ACCOUNT_AUTHORIZATION && values.application?.application_type_id === id),\n    [values.application?.application_type_id],\n  );\n\n  return (\n    <Stack>\n      <Point\n        title={intl.formatMessage({\n          id: 'hcsbundle.track.title',\n          defaultMessage: 'Track Red Hat committed spend',\n        })}\n        description={intl.formatMessage(\n          {\n            id: 'hcsbundle.track.description',\n            defaultMessage: 'Track spend through {application} and apply them to your Red Hat committed spend.',\n          },\n          {\n            application: sourceTypes.find((type) => type.name === values.source_type)?.product_name,\n          },\n        )}\n        className=\"pf-v5-u-mb-sm\"\n        isEnabled={isEnabled}\n      />\n      <Point\n        title={intl.formatMessage({\n          id: 'cost.app.title',\n          defaultMessage: 'Cost management',\n        })}\n        description={intl.formatMessage({\n          id: 'cost.app.description',\n          defaultMessage: 'Analyze, forecast, and optimize your Red Hat OpenShift cluster costs in hybrid cloud environments.',\n        })}\n        isEnabled={isEnabled}\n      />\n    </Stack>\n  );\n};\n\nHybridCommittedSpendDescription.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default HybridCommittedSpendDescription;\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport SubWatchDescription from './descriptions/SubWatchDescription';\nimport HybridCommittedSpendDescription from './descriptions/HybridCommittedSpendDescription';\nimport { CLOUD_METER_APP_NAME, COST_MANAGEMENT_APP_NAME, HCS_APP_NAME, PROVISIONING_APP_NAME } from '../../utilities/constants';\n\nexport const descriptionMapper = (type, intl, hcsEnrolled) =>\n  ({\n    [COST_MANAGEMENT_APP_NAME]: hcsEnrolled ? (\n      <HybridCommittedSpendDescription id={type.id} />\n    ) : (\n      intl.formatMessage({\n        id: 'cost.app.description',\n        defaultMessage: 'Analyze, forecast, and optimize your Red Hat OpenShift cluster costs in hybrid cloud environments.',\n      })\n    ),\n    [CLOUD_METER_APP_NAME]: <SubWatchDescription id={type.id} />,\n    [PROVISIONING_APP_NAME]: intl.formatMessage({\n      id: 'provisioning.sources.description',\n      defaultMessage: 'Build and launch images with custom content as Virtual Machines in hybrid cloud environments.',\n    }),\n  })[type.name];\n\nexport const labelMapper = (type, intl, hcsEnrolled) =>\n  ({\n    [CLOUD_METER_APP_NAME]: (\n      <span className=\"src-c-wizard__rhel-mag-label\">\n        RHEL management{' '}\n        <Label className=\"pf-v5-u-ml-sm\" color=\"purple\">\n          {intl.formatMessage({ id: 'sub.bundle', defaultMessage: 'Bundle' })}\n        </Label>\n      </span>\n    ),\n    [PROVISIONING_APP_NAME]: intl.formatMessage({\n      id: 'provisioning.sources.label',\n      defaultMessage: 'Launch images',\n    }),\n    [COST_MANAGEMENT_APP_NAME]: hcsEnrolled ? (\n      <span className=\"src-c-wizard__rhel-mag-label\">\n        {`${HCS_APP_NAME} `}\n        <Label className=\"pf-v5-u-ml-sm\" color=\"purple\">\n          {intl.formatMessage({ id: 'sub.bundle', defaultMessage: 'Bundle' })}\n        </Label>\n      </span>\n    ) : (\n      type.display_name\n    ),\n  })[type.name];\n\nexport const compileAllApplicationComboOptions = (applicationTypes, intl, hcsEnrolled) => [\n  ...applicationTypes\n    .sort((a, b) => a.display_name.localeCompare(b.display_name))\n    .map((t) => ({\n      value: t.id,\n      label: labelMapper(t, intl, hcsEnrolled) || t.display_name,\n      description: descriptionMapper(t, intl, hcsEnrolled),\n    })),\n];\n","import componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { compileAllApplicationComboOptions } from '../compileAllApplicationComboOptions';\n\nconst applicationsStep = (applicationTypes, intl) => ({\n  name: 'select_applications',\n  title: intl.formatMessage({\n    id: 'applications.select',\n    defaultMessage: 'Select applications',\n  }),\n  nextStep: 'summary',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'conf-desc',\n      label: intl.formatMessage({\n        id: 'applications.description',\n        defaultMessage:\n          // eslint-disable-next-line max-len\n          'Configuring your cloud integrations provides additional capabilities included with your subscription. You can turn these features on or off at any time after integration creation.',\n      }),\n    },\n    {\n      component: 'switch-group',\n      name: 'applications',\n      label: intl.formatMessage({\n        id: 'applications.availableApplications',\n        defaultMessage: 'Available applications',\n      }),\n      options: compileAllApplicationComboOptions(applicationTypes, intl, undefined),\n      applicationTypes,\n    },\n  ],\n});\n\nexport default applicationsStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\n\nimport debouncePromise from '../../utilities/debouncePromise';\nimport { findSource } from '../../api/wizardHelpers';\nimport { schemaBuilder } from './schemaBuilder';\nimport { NO_APPLICATION_VALUE, wizardDescription, wizardTitle } from './stringConstants';\nimport configurationStep from './superKey/configurationStep';\nimport { compileAllApplicationComboOptions } from './compileAllApplicationComboOptions';\nimport applicationsStep from './superKey/applicationsStep';\nimport { REDHAT_VENDOR } from '../../utilities/constants';\nimport validated from '../../utilities/resolveProps/validated';\nimport handleError from '../../api/handleError';\nimport { bold } from '../../utilities/intlShared';\n\nexport const asyncValidator = async (value, sourceId = undefined, intl) => {\n  if (!value) {\n    return undefined;\n  }\n\n  let response;\n  try {\n    response = await findSource(value);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(handleError(error));\n    return undefined;\n  }\n\n  if (response.data.sources.find(({ id }) => id !== sourceId)) {\n    throw intl.formatMessage({ defaultMessage: 'That name is taken. Try another.', id: 'wizard.nameTaken' });\n  }\n\n  return undefined;\n};\n\nlet firstValidation = true;\nexport const setFirstValidated = (bool) => (firstValidation = bool);\nexport const getFirstValidated = () => firstValidation;\n\nexport const asyncValidatorDebounced = debouncePromise(asyncValidator);\n\nexport const asyncValidatorDebouncedWrapper = (intl) => {\n  if (getFirstValidated()) {\n    setFirstValidated(false);\n    return (value, id) => (value ? asyncValidator(value, id, intl) : undefined);\n  }\n\n  return asyncValidatorDebounced;\n};\n\nexport const compileAllSourcesComboOptions = (sourceTypes) => [\n  ...sourceTypes\n    .map((type) => ({\n      ...type,\n      product_name: type.category === 'Red Hat' ? type.product_name.replace('Red Hat ', '') : type.product_name,\n    }))\n    .sort((a, b) => a.product_name.localeCompare(b.product_name))\n    .map((t) => ({\n      value: t.name,\n      label: t.product_name,\n    })),\n];\n\nexport const appMutatorRedHat = (appTypes) => (option, formOptions) => {\n  const selectedSourceType = formOptions.getState().values.source_type;\n  const appType = appTypes.find((app) => app.id === option.value);\n  const isEnabled = selectedSourceType && appType ? appType.supported_source_types.includes(selectedSourceType) : true;\n\n  if (!isEnabled) {\n    return;\n  }\n\n  return option;\n};\n\nconst shortIcons = {\n  amazon: '/apps/frontend-assets/partners-icons/aws.svg',\n  'ansible-tower': '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  azure: '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg',\n  openshift: '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  satellite: '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  google: '/apps/frontend-assets/partners-icons/google-cloud-short.svg',\n};\n\n// eslint-disable-next-line react/display-name\nexport const iconMapper = (sourceTypes) => (name) => {\n  const sourceType = sourceTypes.find((type) => type.name === name);\n\n  if (!sourceType || (!sourceType.icon_url && !shortIcons[name])) {\n    return null;\n  }\n\n  const Icon = () => (\n    <img\n      src={shortIcons[name] || sourceType.icon_url}\n      alt={sourceType.product_name}\n      className={`src-c-wizard__icon ${sourceType.category === 'Red Hat' ? 'redhat-icon' : 'pf-v5-u-mb-sm'}`}\n    />\n  );\n\n  return Icon;\n};\n\nexport const nextStep =\n  (selectedType) =>\n  ({ values: { application, source_type } }) => {\n    if (selectedType) {\n      return 'application_step';\n    }\n\n    const appId = application && application.application_type_id !== NO_APPLICATION_VALUE && application.application_type_id;\n    const resultedStep = appId ? `${source_type}-${appId}` : `${source_type}-generic`;\n\n    return resultedStep;\n  };\n\nexport const hasSuperKeyType = (sourceType) => sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n\nexport const nextStepCloud =\n  (sourceTypes) =>\n  ({ values }) => {\n    const sourceType = sourceTypes.find(({ name }) => name === values.source_type);\n\n    return hasSuperKeyType(sourceType) ? 'configuration_step' : 'application_step';\n  };\n\nconst sourceTypeSelect = ({ intl, sourceTypes, applicationTypes }) => ({\n  component: 'card-select',\n  name: 'source_type',\n  isRequired: true,\n  label: intl.formatMessage({\n    id: 'wizard.selectYourSourceType',\n    defaultMessage: 'A. Select your integration type',\n  }),\n  iconMapper: iconMapper(sourceTypes),\n  validate: [\n    {\n      type: validatorTypes.REQUIRED,\n    },\n  ],\n  options: compileAllSourcesComboOptions(sourceTypes, applicationTypes),\n});\n\nconst redhatTypes = ({ intl, sourceTypes, applicationTypes, disableAppSelection }) => [\n  sourceTypeSelect({ intl, sourceTypes, applicationTypes }),\n  {\n    component: 'enhanced-radio',\n    name: 'application.application_type_id',\n    label: intl.formatMessage({\n      id: 'wizard.selectApplication',\n      defaultMessage: 'B. Application',\n    }),\n    options: compileAllApplicationComboOptions(applicationTypes, intl, REDHAT_VENDOR),\n    mutator: appMutatorRedHat(applicationTypes),\n    isDisabled: disableAppSelection,\n    isRequired: true,\n    validate: [{ type: validatorTypes.REQUIRED }],\n    condition: { when: 'source_type', isNotEmpty: true },\n  },\n];\n\nexport const applicationStep = (applicationTypes, intl, activeCategory, hcsEnrolled) => ({\n  name: 'application_step',\n  title: intl.formatMessage({\n    id: 'wizard.selectApplication',\n    defaultMessage: 'Select application',\n  }),\n  nextStep: nextStep(),\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'app-description',\n      label: intl.formatMessage({\n        id: 'wizard.applicationDescription',\n        defaultMessage:\n          'Select an application to connect to your integration. You can connect additional applications after integration creation.',\n      }),\n    },\n    {\n      component: 'enhanced-radio',\n      name: 'application.application_type_id',\n      label: intl.formatMessage({\n        id: 'wizard.selectApplicationType',\n        defaultMessage: 'Select an application',\n      }),\n      options: compileAllApplicationComboOptions(applicationTypes, intl, hcsEnrolled),\n      mutator: appMutatorRedHat(applicationTypes),\n      menuIsPortal: true,\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'source_type',\n      hideField: true,\n    },\n  ],\n});\n\nexport const typesStep = (sourceTypes, applicationTypes, disableAppSelection, intl) => ({\n  title: intl.formatMessage({\n    id: 'wizard.chooseAppAndType',\n    defaultMessage: 'Integration type and application',\n  }),\n  name: 'types_step',\n  nextStep: 'name_step',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text',\n      label: intl.formatMessage({\n        id: 'wizard.selectRedHatType',\n        defaultMessage:\n          'To import data for an application, you need to connect to a data source. Start by selecting your cloud provider and application.',\n      }),\n    },\n    ...redhatTypes({ intl, sourceTypes, applicationTypes, disableAppSelection }),\n  ],\n});\n\nexport const cloudTypesStep = (sourceTypes, applicationTypes, intl) => ({\n  title: intl.formatMessage({\n    id: 'wizard.chooseAppAndType',\n    defaultMessage: 'Select cloud provider',\n  }),\n  name: 'types_step',\n  nextStep: 'name_step',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text',\n      label: intl.formatMessage({\n        id: 'wizard.selectCloudType',\n        defaultMessage:\n          'To import data for an application, you need to connect to a data source. Start by selecting your cloud provider.',\n      }),\n    },\n    {\n      ...sourceTypeSelect({ intl, sourceTypes, applicationTypes }),\n      label: intl.formatMessage({\n        id: 'wizard.selectCloudProvider',\n        defaultMessage: 'Select a cloud provider',\n      }),\n    },\n  ],\n});\n\nexport const NameDescription = ({ sourceTypes }) => {\n  const intl = useIntl();\n  const { getState } = useFormApi();\n\n  const typeName = sourceTypes.find(({ name }) => name === getState().values.source_type)?.product_name;\n\n  return (\n    <TextContent key=\"step1\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'wizard.nameDescription',\n            defaultMessage: 'Enter a name for your {typeName} integration.',\n          },\n          { typeName },\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nNameDescription.propTypes = {\n  sourceTypes: PropTypes.array,\n};\n\nconst nameStep = (intl, selectedType, sourceTypes, activeCategory) => ({\n  title: intl.formatMessage({\n    id: 'wizard.nameSource',\n    defaultMessage: 'Name integration',\n  }),\n  name: 'name_step',\n  nextStep: activeCategory === REDHAT_VENDOR ? nextStep(selectedType) : nextStepCloud(sourceTypes),\n  fields: [\n    {\n      component: 'description',\n      name: 'description-summary',\n      Content: NameDescription,\n      sourceTypes,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'source.name',\n      type: 'text',\n      label: intl.formatMessage({\n        id: 'wizard.name',\n        defaultMessage: 'Integration name',\n      }),\n      placeholder: 'integration_name',\n      isRequired: true,\n      validate: [(value) => asyncValidatorDebouncedWrapper(intl)(value, undefined, intl), { type: validatorTypes.REQUIRED }],\n      resolveProps: validated,\n    },\n  ],\n});\n\nexport const SummaryDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'wizard.summaryDescription',\n            defaultMessage:\n              'Review the information below and click <b>Add</b> to add your integration. To edit details in previous steps, click <b>Back</b>.',\n          },\n          {\n            b: bold,\n          },\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nconst summaryStep = (sourceTypes, applicationTypes, intl) => ({\n  fields: [\n    {\n      component: 'description',\n      name: 'description-summary',\n      Content: SummaryDescription,\n    },\n    {\n      name: 'summary',\n      component: 'summary',\n      sourceTypes,\n      applicationTypes,\n    },\n    {\n      name: 'source_type',\n      component: componentTypes.TEXT_FIELD,\n      hideField: true,\n    },\n  ],\n  name: 'summary',\n  title: intl.formatMessage({\n    id: 'wizard.reviewDetails',\n    defaultMessage: 'Review details',\n  }),\n});\n\nexport default (\n  sourceTypes,\n  applicationTypes,\n  disableAppSelection,\n  container,\n  intl,\n  selectedType,\n  initialWizardState,\n  activeCategory,\n  enableLighthouse,\n  hcsEnrolled,\n) => {\n  setFirstValidated(true);\n  return {\n    fields: [\n      {\n        component: componentTypes.WIZARD,\n        name: 'wizard',\n        className: 'sources',\n        title: wizardTitle(activeCategory),\n        inModal: true,\n        description: wizardDescription(activeCategory),\n        buttonLabels: {\n          submit: intl.formatMessage({\n            id: 'sources.add',\n            defaultMessage: 'Add',\n          }),\n          back: intl.formatMessage({\n            id: 'wizard.back',\n            defaultMessage: 'Back',\n          }),\n          cancel: intl.formatMessage({\n            id: 'wizard.cancel',\n            defaultMessage: 'Cancel',\n          }),\n          next: intl.formatMessage({\n            id: 'wizard.next',\n            defaultMessage: 'Next',\n          }),\n        },\n        container,\n        showTitles: true,\n        initialState: initialWizardState,\n        closeButtonAriaLabel: intl.formatMessage({\n          id: 'wizard.close',\n          defaultMessage: 'Close wizard',\n        }),\n        crossroads: [\n          'application.application_type_id',\n          'source_type',\n          'auth_select',\n          'source.app_creation_workflow',\n          'application.extra.storage_only',\n        ],\n        fields: [\n          ...(!selectedType\n            ? activeCategory === REDHAT_VENDOR\n              ? [typesStep(sourceTypes, applicationTypes, disableAppSelection, intl)]\n              : [cloudTypesStep(sourceTypes, applicationTypes, intl)]\n            : []),\n          nameStep(intl, selectedType, sourceTypes, activeCategory),\n          configurationStep(intl, sourceTypes),\n          applicationsStep(applicationTypes, intl, hcsEnrolled),\n          applicationStep(applicationTypes, intl, activeCategory, hcsEnrolled),\n          ...schemaBuilder(sourceTypes, applicationTypes, undefined, enableLighthouse, hcsEnrolled),\n          summaryStep(sourceTypes, applicationTypes, intl),\n        ],\n      },\n    ],\n  };\n};\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nconst debouncePromise = (asyncFunction, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n\nexport default debouncePromise;\n","import { getAdditionalAuthFields, getAdditionalStepKeys, getNoStepsFields, injectAuthFieldsInfo } from '../schemaBuilder';\n\nconst generateSuperKeyFields = (sourceTypes, source_type) => {\n  const authype = sourceTypes\n    .find(({ name }) => name === source_type)\n    ?.schema.authentication.find(({ is_superkey, type }) => is_superkey || type === 'access_key_secret_key');\n\n  const additionalIncludesStepKeys = getAdditionalStepKeys(source_type, authype.type);\n\n  const fields = [\n    ...getAdditionalAuthFields(source_type, authype.type),\n    ...injectAuthFieldsInfo(getNoStepsFields(authype.fields, additionalIncludesStepKeys), source_type, authype.type),\n  ];\n\n  return fields;\n};\n\nexport default generateSuperKeyFields;\n"],"names":["doLoadSourceTypes","listSourceTypes","then","data","sourceTypes","filter","name","doLoadApplicationTypes","doLoadAppTypes","applicationTypes","findSource","postGraphQL","query","SuperKeyCredentials","renderForm","getState","values","generateSuperKeyFields","source_type","propTypes","intl","title","formatMessage","id","defaultMessage","nextStep","source","app_creation_workflow","fields","component","PLAIN_TEXT","label","b","RADIO","isRequired","resolveProps","_p","_f","formOptions","options","className","Label","color","description","type","amazon","azure","value","validate","REQUIRED","SUB_FORM","Content","condition","when","is","M","Point","isEnabled","props","StackItem","Flex","FlexItem","spacer","default","fill","Text","SubWatchDescription","applications","includes","application","application_type_id","Stack","HybridCommittedSpendDescription","sources","useMemo","find","product_name","descriptionMapper","hcsEnrolled","labelMapper","compileAllApplicationComboOptions","sort","a","display_name","localeCompare","map","t","undefined","asyncValidator","async","sourceId","response","error","console","handleError","firstValidation","setFirstValidated","bool","asyncValidatorDebounced","asyncFunction","debounceTime","onlyResolvesLast","compileAllSourcesComboOptions","category","replace","appMutatorRedHat","appTypes","option","selectedSourceType","appType","app","supported_source_types","shortIcons","openshift","satellite","google","iconMapper","sourceType","icon_url","src","alt","selectedType","appId","nextStepCloud","schema","authentication","is_superkey","sourceTypeSelect","redhatTypes","disableAppSelection","mutator","isDisabled","isNotEmpty","applicationStep","activeCategory","menuIsPortal","TEXT_FIELD","hideField","typesStep","cloudTypesStep","NameDescription","typeName","TextContent","key","TextVariants","p","nameStep","placeholder","asyncValidatorDebouncedWrapper","validated","SummaryDescription","summaryStep","container","initialWizardState","enableLighthouse","WIZARD","inModal","buttonLabels","submit","back","cancel","next","showTitles","initialState","closeButtonAriaLabel","crossroads","schemaBuilder","authype","additionalIncludesStepKeys"],"sourceRoot":""}