{"version":3,"file":"js/3068.1639989313084.fab2c6621a2f1d5076c9.js","mappings":"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","sources":["webpack:///./src/api/checkSourceStatus.js","webpack:///./src/api/delay.js","webpack:///./src/api/getApplicationStatus.js","webpack:///./src/components/addSourceWizard/schemaBuilder.js","webpack:///./src/components/steps/ErroredStep.js","webpack:///./src/components/steps/LoadingStep.js","webpack:///./src/components/FormComponents/ValuePopover.js","webpack:///./src/components/FormComponents/SourceWizardSummary.js","webpack:///./src/components/FormComponents/Description.js","webpack:///./src/components/FormComponents/CardSelect.js","webpack:///./src/components/FormComponents/AuthSelect.js","webpack:///./src/components/FormComponents/EnhancedRadio.js","webpack:///./src/components/FormComponents/CheckboxWithIcon.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./src/components/FormComponents/SwitchGroup.js","webpack:///./src/components/Authentication.js","webpack:///./src/utilities/isSuperKey.js","webpack:///./src/utilities/resolveProps/validated.js"],"sourcesContent":["import { getSourcesApi } from './entities';\n\nexport const checkSourceStatus = (id) =>\n  getSourcesApi()\n    .checkAvailabilitySource(id)\n    .catch(() => {});\n\nexport default checkSourceStatus;\n","export const delay = (interval, prms) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve.bind(null, prms), interval);\n  });\n};\n","import { getSourcesApi } from './entities';\nimport { delay } from './delay';\n\nexport const checkAppAvailability = (id, timeout = 10000, interval = 1000, entity = 'showApplication', updatedTime) =>\n  new Promise((res, rej) => {\n    const start = Date.now();\n\n    const checkSource = () =>\n      // eslint-disable-next-line prettier/prettier\n      getSourcesApi()[entity](id)\n        .then((data) => {\n          const isTimeOuted = Date.now() - start >= timeout;\n\n          if (isTimeOuted) {\n            if (updatedTime) {\n              return {\n                ...data,\n                availability_status: null,\n                availability_status_error: null,\n              };\n            }\n\n            return data;\n          }\n\n          if (data.availability_status === 'available' || data.availability_status === 'unavailable') {\n            if (updatedTime && new Date(data.last_checked_at || data.updated_at) > updatedTime) {\n              return data;\n            }\n\n            if (!updatedTime) {\n              return data;\n            }\n          }\n\n          return delay(interval).then(() => checkSource());\n        });\n\n    return checkSource()\n      .then((data) => res(data))\n      .catch((error) => rej(error));\n  });\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport hardcodedSchemas from './hardcodedSchemas';\nimport get from 'lodash/get';\nimport emptyAuthType from './emptyAuthType';\n\nexport const shouldAppendEmptyType = (type, appTypes) =>\n  appTypes.some(\n    ({ supported_source_types, supported_authentication_types }) =>\n      supported_source_types.includes(type.name) &&\n      (!supported_authentication_types[type.name] || !supported_authentication_types[type.name].length === 0)\n  );\n\nexport const acronymMapper = (value) =>\n  ({\n    'Amazon Web Services': 'AWS',\n  }[value] || value);\n\nexport const hardcodedSchema = (typeName, authName, appName) =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName], undefined);\n\nexport const getAdditionalSteps = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'additionalSteps'], []);\n\nexport const shouldSkipSelection = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'skipSelection'], false);\n\nexport const shouldSkipEndpoint = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'skipEndpoint'], false);\n\nexport const hasCustomSteps = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'customSteps'], false);\n\nexport const getAdditionalStepKeys = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'includeStepKeyFields'], []);\n\nexport const getOnlyHiddenFields = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'onlyHiddenFields'], false);\n\nexport const getAdditionalStepFields = (fields, stepKey) =>\n  fields.filter((field) => field.stepKey === stepKey).map(({ stepKey: _stepKey, ...field }) => field);\n\nexport const shouldUseAppAuth = (typeName, authName, appName = 'generic') =>\n  get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'useApplicationAuth'], false);\n\nexport const getNoStepsFields = (fields, additionalStepKeys = []) =>\n  fields.filter((field) => !field.stepKey || additionalStepKeys.includes(field.stepKey));\n\nexport const injectAuthFieldsInfo = (fields, type, auth, applicationName) =>\n  fields.map((field) => {\n    const specificFields = get(hardcodedSchemas, [type, 'authentication', auth, applicationName]);\n\n    const hardcodedField = specificFields\n      ? get(specificFields, field.name)\n      : get(hardcodedSchemas, [type, 'authentication', auth, 'generic', field.name]);\n\n    const resultedField = hardcodedField ? { ...field, ...hardcodedField } : field;\n\n    if (resultedField.name === 'authentication.password') {\n      resultedField.component = 'authentication';\n    }\n\n    return resultedField;\n  });\n\nexport const injectEndpointFieldsInfo = (fields, type) =>\n  fields.map((field) => {\n    const hardcodedField = get(hardcodedSchemas, [type, 'endpoint', field.name]);\n\n    return hardcodedField ? { ...field, ...hardcodedField } : field;\n  });\n\nexport const getAdditionalAuthFields = (type, auth, applicationName = 'generic') =>\n  get(hardcodedSchemas, [type, 'authentication', auth, applicationName, 'additionalFields'], []);\n\nexport const getAdditionalEndpointFields = (type) => get(hardcodedSchemas, [type, 'endpoint', 'additionalFields'], []);\n\nexport const createEndpointStep = (endpoint, typeName) => ({\n  ...endpoint,\n  fields: [...getAdditionalEndpointFields(typeName), ...injectEndpointFieldsInfo(endpoint.fields, typeName)],\n  name: `${typeName}-endpoint`,\n  nextStep: 'summary',\n});\n\nexport const createAdditionalSteps = (additionalSteps, name, authName, hasEndpointStep, fields, appName = 'generic') =>\n  additionalSteps.map((step) => {\n    const stepKey = step.name || `${name}-${authName}-${appName}-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(name, authName, appName);\n    const customSteps = hasCustomSteps(name, authName, appName);\n\n    return {\n      name: stepKey,\n      nextStep: hasEndpointStep && !skipEndpoint && !customSteps ? `${name}-endpoint` : 'summary',\n      ...step,\n      fields: [\n        ...injectAuthFieldsInfo(step.fields, name, authName, appName),\n        ...injectAuthFieldsInfo(getAdditionalStepFields(fields, stepKey), name, authName, appName),\n      ],\n    };\n  });\n\nexport const createGenericAuthTypeSelection = (type, endpointFields, disableAuthType) => {\n  const auths = type.schema.authentication;\n  const hasMultipleAuthTypes = auths.length > 1;\n\n  let fields = [...endpointFields];\n  const stepMapper = {};\n\n  if (hasMultipleAuthTypes) {\n    fields = [];\n    auths.forEach((auth) => {\n      const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type);\n\n      const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, 'generic');\n\n      const onlyHiddenFields = getOnlyHiddenFields(type.name, auth.type);\n      const authFields = onlyHiddenFields ? auth.fields.filter(({ hideField }) => hideField) : auth.fields;\n\n      fields.push({\n        component: 'auth-select',\n        name: 'auth_select',\n        label: auth.name,\n        authName: auth.type,\n        validate: [\n          {\n            type: validatorTypes.REQUIRED,\n          },\n        ],\n        disableAuthType,\n      });\n      fields.push({\n        component: componentTypes.SUB_FORM,\n        name: `${auth.type}-subform`,\n        className: 'pf-u-pl-md',\n        fields: [\n          ...(!shouldUseAppAuth(type.name, auth.type) ? endpointFields : []),\n          ...getAdditionalAuthFields(type.name, auth.type),\n          ...injectAuthFieldsInfo(getNoStepsFields(authFields, additionalIncludesStepKeys), type.name, auth.type),\n        ],\n        condition: {\n          when: 'auth_select',\n          is: auth.type,\n        },\n        hideField: onlyHiddenFields,\n      });\n      stepMapper[auth.type] =\n        getAdditionalSteps(type.name, auth.type).length > 0\n          ? `${type.name}-${auth.type}-generic-additional-step`\n          : endpointFields.length === 0 && !skipEndpoint\n          ? `${type.name}-endpoint`\n          : 'summary';\n    });\n\n    return {\n      name: type.name,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields,\n      nextStep: {\n        when: 'auth_select',\n        stepMapper,\n      },\n    };\n  } else {\n    const auth = auths[0];\n    const additionalStepName = `${type.name}-${auth.type}-generic-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, 'generic');\n\n    const nextStep =\n      getAdditionalSteps(type.name, auth.type).length > 0\n        ? additionalStepName\n        : endpointFields.length === 0 && !skipEndpoint\n        ? `${type.name}-endpoint`\n        : 'summary';\n\n    const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type);\n    const hasCustomStep = shouldSkipSelection(type.name, auth.type);\n\n    let stepProps = {};\n\n    if (shouldUseAppAuth(type.name, auth.type)) {\n      fields = [];\n    }\n\n    if (hasCustomStep) {\n      const firstAdditonalStep = getAdditionalSteps(type.name, auth.type).find(({ name }) => !name);\n      const additionalFields = getAdditionalStepFields(auth.fields, additionalStepName);\n\n      stepProps = {\n        ...firstAdditonalStep,\n        fields: [...fields, ...injectAuthFieldsInfo([...firstAdditonalStep.fields, ...additionalFields], type.name, auth.type)],\n      };\n    }\n\n    return {\n      name: type.name,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields: [\n        ...fields,\n        ...getAdditionalAuthFields(type.name, auth.type),\n        ...injectAuthFieldsInfo(getNoStepsFields(auth.fields, additionalIncludesStepKeys), type.name, auth.type),\n      ],\n      nextStep,\n      ...stepProps,\n    };\n  }\n};\n\nexport const createSpecificAuthTypeSelection = (type, appType, endpointFields, disableAuthType) => {\n  const auths = type.schema.authentication;\n  const supportedAuthTypes = appType.supported_authentication_types[type.name] || [emptyAuthType.type];\n\n  const hasMultipleAuthTypes = supportedAuthTypes.length > 1;\n\n  let fields = [...endpointFields];\n  const stepMapper = {};\n\n  if (hasMultipleAuthTypes) {\n    fields = [];\n    auths\n      .filter(({ type: authType }) => supportedAuthTypes.includes(authType))\n      .forEach((auth) => {\n        const appName = hardcodedSchema(type.name, auth.type, appType.name) ? appType.name : 'generic';\n\n        const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, appName);\n        const customSteps = hasCustomSteps(type.name, auth.type, appName);\n\n        let nextStep;\n\n        if (getAdditionalSteps(type.name, auth.type, appType.name).length > 0) {\n          nextStep = `${type.name}-${auth.type}-${appType.name}-additional-step`;\n        } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n          nextStep = `${type.name}-endpoint`;\n        } else {\n          nextStep = 'summary';\n        }\n\n        const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type, appName);\n\n        const onlyHiddenFields = getOnlyHiddenFields(type.name, auth.type, appName);\n        const authFields = onlyHiddenFields ? auth.fields.filter(({ hideField }) => hideField) : auth.fields;\n\n        fields.push({\n          component: 'auth-select',\n          name: 'auth_select',\n          label: auth.name,\n          authName: auth.type,\n          validate: [\n            {\n              type: validatorTypes.REQUIRED,\n            },\n          ],\n          supportedAuthTypes: appType.supported_authentication_types[type.name],\n          disableAuthType,\n        });\n        fields.push({\n          component: componentTypes.SUB_FORM,\n          name: `${auth.type}-subform`,\n          className: 'pf-u-pl-md',\n          fields: [\n            ...(!shouldUseAppAuth(type.name, auth.type, appName) ? endpointFields : []),\n            ...getAdditionalAuthFields(type.name, auth.type, appName),\n            ...injectAuthFieldsInfo(getNoStepsFields(authFields, additionalIncludesStepKeys), type.name, auth.type, appName),\n          ],\n          condition: {\n            when: 'auth_select',\n            is: auth.type,\n          },\n          hideField: onlyHiddenFields,\n        });\n        stepMapper[auth.type] = nextStep;\n      });\n\n    return {\n      name: `${type.name}-${appType.id}`,\n      title: <FormattedMessage id=\"wizard.chooseAuthType\" defaultMessage=\"Choose authentication type\" />,\n      fields,\n      nextStep: {\n        when: 'auth_select',\n        stepMapper,\n      },\n    };\n  } else {\n    const auth = [emptyAuthType, ...auths].find(({ type: authType }) => supportedAuthTypes.includes(authType));\n    const appName = hardcodedSchema(type.name, auth.type, appType.name) ? appType.name : 'generic';\n\n    const additionalStepName = `${type.name}-${auth.type}-${appType.name}-additional-step`;\n\n    const skipEndpoint = shouldSkipEndpoint(type.name, auth.type, appName);\n    const customSteps = hasCustomSteps(type.name, auth.type, appName);\n\n    if (shouldUseAppAuth(type.name, auth.type, appName)) {\n      fields = [];\n    }\n\n    let nextStep;\n\n    if (getAdditionalSteps(type.name, auth.type, appName).length > 0) {\n      nextStep = additionalStepName;\n    } else if (endpointFields.length === 0 && !skipEndpoint) {\n      nextStep = `${type.name}-endpoint`;\n    } else {\n      nextStep = 'summary';\n    }\n\n    const additionalIncludesStepKeys = getAdditionalStepKeys(type.name, auth.type, appName);\n    const hasCustomStep = shouldSkipSelection(type.name, auth.type, appName);\n\n    let stepProps = {};\n\n    if (hasCustomStep) {\n      const firstAdditonalStep = getAdditionalSteps(type.name, auth.type, appName).find(({ name }) => !name);\n      const additionalFields = getAdditionalStepFields(auth.fields, additionalStepName);\n\n      if (firstAdditonalStep.nextStep) {\n        nextStep = firstAdditonalStep.nextStep;\n      } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n        nextStep = `${type.name}-endpoint`;\n      } else {\n        nextStep = 'summary';\n      }\n\n      stepProps = {\n        ...firstAdditonalStep,\n        fields: [\n          ...fields,\n          ...injectAuthFieldsInfo([...firstAdditonalStep.fields, ...additionalFields], type.name, auth.type, appName),\n        ],\n      };\n    }\n\n    return {\n      name: `${type.name}-${appType.id}`,\n      title: <FormattedMessage id=\"wizard.credentials\" defaultMessage=\"Credentials\" />,\n      fields: [\n        ...fields,\n        ...getAdditionalAuthFields(type.name, auth.type, appName),\n        ...injectAuthFieldsInfo(getNoStepsFields(auth.fields, additionalIncludesStepKeys), type.name, auth.type, appName),\n      ],\n      nextStep,\n      ...stepProps,\n    };\n  }\n};\n\nexport const schemaBuilder = (sourceTypes, appTypes, disableAuthType) => {\n  const schema = [];\n\n  sourceTypes.forEach((type) => {\n    const appendEndpoint = type.schema.endpoint.hidden ? type.schema.endpoint.fields : [];\n    const hasEndpointStep = appendEndpoint.length === 0;\n\n    schema.push(createGenericAuthTypeSelection(type, appendEndpoint, disableAuthType));\n\n    appTypes.forEach((appType) => {\n      if (appType.supported_source_types.includes(type.name)) {\n        schema.push(createSpecificAuthTypeSelection(type, appType, appendEndpoint, disableAuthType));\n      }\n    });\n\n    const auhtentications = type.schema.authentication;\n\n    if (shouldAppendEmptyType(type, appTypes)) {\n      auhtentications.push(emptyAuthType);\n    }\n\n    auhtentications.forEach((auth) => {\n      const additionalSteps = getAdditionalSteps(type.name, auth.type);\n\n      if (additionalSteps.length > 0) {\n        schema.push(...createAdditionalSteps(additionalSteps, type.name, auth.type, hasEndpointStep, auth.fields));\n      }\n\n      appTypes.forEach((appType) => {\n        const appAdditionalSteps = getAdditionalSteps(type.name, auth.type, appType.name);\n\n        if (appAdditionalSteps.length > 0) {\n          schema.push(\n            ...createAdditionalSteps(appAdditionalSteps, type.name, auth.type, hasEndpointStep, auth.fields, appType.name)\n          );\n        }\n      });\n    });\n\n    if (hasEndpointStep) {\n      schema.push(createEndpointStep(type.schema.endpoint, type.name));\n    }\n  });\n\n  return schema;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Bullseye,\n  Title,\n} from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\n\nconst ErroredStep = ({ onClose, returnButtonTitle, message, title, customText, primaryAction, secondaryActions, Component }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={ExclamationCircleIcon} color=\"var(--pf-global--danger-color--100)\" className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {title}\n      </Title>\n      <EmptyStateBody className=\"src-c-wizard--step-text\">{message || customText}</EmptyStateBody>\n      <Component variant=\"primary\" onClick={primaryAction || onClose}>\n        {returnButtonTitle}\n      </Component>\n      {secondaryActions && <EmptyStateSecondaryActions className=\"pf-u-mt-sm\">{secondaryActions}</EmptyStateSecondaryActions>}\n    </EmptyState>\n  </Bullseye>\n);\n\nErroredStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  returnButtonTitle: PropTypes.node,\n  message: PropTypes.node,\n  title: PropTypes.node,\n  customText: PropTypes.node,\n  primaryAction: PropTypes.func,\n  secondaryActions: PropTypes.node,\n  Component: PropTypes.elementType,\n};\n\nErroredStep.defaultProps = {\n  title: <FormattedMessage id=\"wizard.unsuccConfiguration\" defaultMessage=\"Something went wrong\" />,\n  // eslint-disable-next-line max-len\n  customText: (\n    <FormattedMessage\n      id=\"wizard.errorText\"\n      defaultMessage=\"There was a problem while trying to add your source. Please try again. If the error persists, open a support case.\"\n    />\n  ),\n  Component: Button,\n};\n\nexport default ErroredStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Bullseye,\n  Title,\n  Spinner,\n} from '@patternfly/react-core';\n\nconst LoadingStep = ({ onClose, customText, cancelTitle, description }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={Spinner} className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {customText}\n      </Title>\n      {description && <EmptyStateBody className=\"src-c-wizard--step-text\">{description}</EmptyStateBody>}\n      {onClose && (\n        <EmptyStateSecondaryActions className=\"pf-u-mt-xl\">\n          <Button variant=\"link\" onClick={onClose}>\n            {cancelTitle}\n          </Button>\n        </EmptyStateSecondaryActions>\n      )}\n    </EmptyState>\n  </Bullseye>\n);\n\nLoadingStep.propTypes = {\n  onClose: PropTypes.func,\n  customText: PropTypes.node,\n  cancelTitle: PropTypes.node,\n  description: PropTypes.node,\n};\n\nLoadingStep.defaultProps = {\n  customText: <FormattedMessage id=\"wizard.loadingText\" defaultMessage=\"Loading, please wait.\" />,\n  cancelTitle: <FormattedMessage id=\"wizard.cancelText\" defaultMessage=\"Cancel\" />,\n};\n\nexport default LoadingStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Button, Popover } from '@patternfly/react-core';\n\nconst ValuePopover = ({ label, value }) => {\n  const intl = useIntl();\n\n  return (\n    <Popover headerContent={label} bodyContent={value} position=\"top\" maxWidth=\"80%\">\n      <Button variant=\"link\" isInline className=\"src-c-wizard__summary-buttons\">\n        {intl.formatMessage({\n          id: 'wizard.showMore',\n          defaultMessage: 'Show more',\n        })}\n      </Button>\n    </Popover>\n  );\n};\n\nValuePopover.propTypes = {\n  label: PropTypes.node,\n  value: PropTypes.node,\n};\n\nexport default ValuePopover;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport {\n  Label,\n  Alert,\n  DescriptionList,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  DescriptionListTerm,\n} from '@patternfly/react-core';\n\nimport get from 'lodash/get';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport ValuePopover from './ValuePopover';\nimport hardcodedSchemas from '../../components/addSourceWizard/hardcodedSchemas';\nimport { COST_MANAGEMENT_APP_NAME, CLOUD_METER_APP_NAME } from '../../utilities/constants';\nimport { NO_APPLICATION_VALUE } from '../../components/addSourceWizard/stringConstants';\nimport {\n  getAdditionalSteps,\n  injectAuthFieldsInfo,\n  injectEndpointFieldsInfo,\n  shouldSkipEndpoint,\n} from '../../components/addSourceWizard/schemaBuilder';\n\nconst alertMapper = (appName, sourceType, intl) => {\n  if (appName === COST_MANAGEMENT_APP_NAME && sourceType !== 'google') {\n    return (\n      <Alert\n        variant=\"info\"\n        isInline\n        title={intl.formatMessage({ id: 'cost.rbacWarningTitle', defaultMessage: 'Manage permissions in User Access' })}\n      >\n        {intl.formatMessage({\n          id: 'cost.rbacWarningDescription',\n          defaultMessage:\n            'Make sure to manage permissions for this source in custom roles that contain permissions for Cost Management.',\n        })}\n      </Alert>\n    );\n  }\n\n  if (appName === CLOUD_METER_APP_NAME && sourceType === 'azure') {\n    return (\n      <Alert\n        variant=\"info\"\n        isInline\n        title={intl.formatMessage({\n          id: 'azure.rhelWarningTitle',\n          defaultMessage: 'This source will not be monitored in Sources',\n        })}\n      >\n        {intl.formatMessage({\n          id: 'azure.rhelWarningDescription',\n          defaultMessage: 'This source will be represented in the Sources list, but will not reflect true status or resources.',\n        })}\n      </Alert>\n    );\n  }\n\n  return null;\n};\n\nexport const createItem = (formField, values, stepKeys) => {\n  let value = get(values, formField.name);\n\n  if (formField.stepKey && !stepKeys.includes(formField.stepKey)) {\n    return undefined;\n  }\n\n  if (formField.condition && get(values, formField.condition.when) !== formField.condition.is) {\n    return undefined;\n  }\n\n  // do not show hidden fields\n  if (formField.hideField) {\n    return undefined;\n  }\n\n  // Hide password\n  if (value && formField.type === 'password') {\n    value = '●●●●●●●●●●●●';\n  }\n\n  // Boolean value convert to Yes / No\n  if (typeof value === 'boolean') {\n    value = value ? (\n      <Label color=\"green\">\n        <FormattedMessage id=\"wizard.enabled\" defaultMessage=\"Enabled\" />\n      </Label>\n    ) : (\n      <Label color=\"gray\">\n        <FormattedMessage id=\"wizard.disabled\" defaultMessage=\"Disabled\" />\n      </Label>\n    );\n  }\n\n  if (!value && formField.name === 'authentication.password' && get(values, 'authentication.id')) {\n    value = '●●●●●●●●●●●●';\n  }\n\n  return { label: formField['aria-label'] || formField.label, value: value || '-' };\n};\n\nexport const getAllFieldsValues = (fields, values, stepKeys) =>\n  fields.map((field) => createItem(field, values, stepKeys)).filter(Boolean);\n\nexport const getStepKeys = (typeName, authName, appName = 'generic', appId) =>\n  [\n    ...get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'includeStepKeyFields'], []),\n    ...get(hardcodedSchemas, [typeName, 'authentication', authName, appName, 'additionalSteps'], []).map(({ name }) => name),\n    `${typeName}-${authName}-${appName}-additional-step`,\n    `${typeName}-${authName}-additional-step`,\n    appId ? `${typeName}-${appId}` : undefined,\n  ].filter(Boolean);\n\nconst DesctiptionListItem = ({ term, description, ...props }) => (\n  <DescriptionListGroup {...props}>\n    <DescriptionListTerm>{term}</DescriptionListTerm>\n    <DescriptionListDescription>{description}</DescriptionListDescription>\n  </DescriptionListGroup>\n);\n\nDesctiptionListItem.propTypes = {\n  term: PropTypes.node,\n  description: PropTypes.node,\n};\n\nconst SourceWizardSummary = ({ sourceTypes, applicationTypes, showApp, showAuthType }) => {\n  const formOptions = useFormApi();\n  const intl = useIntl();\n\n  const values = formOptions.getState().values;\n  const type = sourceTypes.find((type) => type.name === values.source_type || type.id === values.source.source_type_id);\n\n  const hasAuthentication =\n    values.authentication && values.authentication.authtype ? values.authentication.authtype : values.auth_select;\n\n  let authType;\n  let authTypeFields = [];\n\n  if (hasAuthentication) {\n    authType = type.schema.authentication.find(({ type }) => type === hasAuthentication);\n    authTypeFields = authType && authType.fields ? authType.fields : [];\n  }\n\n  let applicatioNames;\n\n  if (values.source.app_creation_workflow === 'account_authorization') {\n    applicatioNames = values.applications.map((app) => applicationTypes.find((type) => type.id === app)?.display_name);\n  }\n\n  const application = values.application\n    ? applicationTypes.find((type) => type.id === values.application.application_type_id)\n    : undefined;\n\n  const {\n    display_name = intl.formatMessage({ id: 'wizard.notSelected', defaultMessage: 'Not selected' }),\n    name,\n    id,\n  } = application ? application : {};\n\n  const skipEndpoint = shouldSkipEndpoint(type.name, hasAuthentication, name);\n\n  let endpointFields = type.schema.endpoint.fields;\n\n  if (skipEndpoint) {\n    endpointFields = [];\n    authTypeFields = authTypeFields.filter(({ name }) => !name.includes('authentication.'));\n  }\n\n  const availableStepKeys = getStepKeys(type.name, hasAuthentication, name, id);\n\n  const authSteps = getAdditionalSteps(type.name, hasAuthentication, name);\n  const hasCustomSteps = get(hardcodedSchemas, [type.name, 'authentication', hasAuthentication, name, 'customSteps'], false);\n\n  if (authSteps.length > 0) {\n    authTypeFields = authSteps\n      .map((step) => [...step.fields, ...authTypeFields.filter(({ stepKey }) => stepKey && step.name === stepKey)])\n      .flatMap((x) => x)\n      .filter(\n        ({ name }) =>\n          name.startsWith('application.extra') ||\n          authTypeFields.find((field) => field.name === name) ||\n          (hasCustomSteps && endpointFields.find((field) => field.name === name))\n      );\n  }\n\n  if (hasCustomSteps) {\n    endpointFields = [];\n  }\n\n  authTypeFields = injectAuthFieldsInfo(authTypeFields, type.name, hasAuthentication, name || 'generic');\n  endpointFields = injectEndpointFieldsInfo(endpointFields, type.name);\n\n  const fields = [...authTypeFields, ...endpointFields];\n\n  const valuesInfo = getAllFieldsValues(fields, values, availableStepKeys);\n\n  const valuesList = valuesInfo.map(({ label, value }) => (\n    <DesctiptionListItem\n      key={`${label}--${value}`}\n      term={label}\n      description={value.toString().length > 150 ? <ValuePopover label={label} value={value} /> : value}\n    />\n  ));\n\n  return (\n    <React.Fragment>\n      <DescriptionList isHorizontal className=\"src-c-wizard__summary-description-list\">\n        <DesctiptionListItem\n          term={intl.formatMessage({\n            id: 'wizard.name',\n            defaultMessage: 'Name',\n          })}\n          description={values.source.name}\n        />\n        <DesctiptionListItem\n          term={intl.formatMessage({\n            id: 'wizard.sourceType',\n            defaultMessage: 'Source type',\n          })}\n          description={type.product_name}\n        />\n        {showApp && values.source.app_creation_workflow && (\n          <DesctiptionListItem\n            term={intl.formatMessage({\n              id: 'wizard.configurationMode',\n              defaultMessage: 'Configuration mode',\n            })}\n            description={\n              values.source.app_creation_workflow === 'account_authorization'\n                ? intl.formatMessage({\n                    id: 'wizard.accountAuth',\n                    defaultMessage: 'Account authorization',\n                  })\n                : intl.formatMessage({\n                    id: 'wizard.manualConfig',\n                    defaultMessage: 'Manual configuration',\n                  })\n            }\n          />\n        )}\n        {showApp && values.source.app_creation_workflow === 'account_authorization' && (\n          <DesctiptionListItem\n            term={intl.formatMessage({\n              id: 'wizard.applications',\n              defaultMessage: 'Applications',\n            })}\n            description={\n              applicatioNames.length\n                ? applicatioNames.map((app) => <div key={app}>{app}</div>)\n                : intl.formatMessage({ id: 'none', defaultMessage: 'None' })\n            }\n          />\n        )}\n        {showApp && values.source.app_creation_workflow !== 'account_authorization' && (\n          <DesctiptionListItem\n            term={intl.formatMessage({\n              id: 'wizard.application',\n              defaultMessage: 'Application',\n            })}\n            description={display_name}\n          />\n        )}\n        {!skipEndpoint &&\n          authType &&\n          showAuthType &&\n          values.source.app_creation_workflow !== 'account_authorization' &&\n          (!values.application?.application_type_id || values.application?.application_type_id === NO_APPLICATION_VALUE) && (\n            <DesctiptionListItem\n              term={intl.formatMessage({\n                id: 'wizard.authenticationType',\n                defaultMessage: 'Authentication type',\n              })}\n              description={authType.name}\n            />\n          )}\n        {valuesList}\n      </DescriptionList>\n      {alertMapper(name, type.name, intl)}\n    </React.Fragment>\n  );\n};\n\nSourceWizardSummary.propTypes = {\n  sourceTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      product_name: PropTypes.string.isRequired,\n      schema: PropTypes.shape({\n        authentication: PropTypes.array,\n        endpoint: PropTypes.object,\n      }),\n    })\n  ).isRequired,\n  applicationTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      display_name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  showApp: PropTypes.bool,\n  showAuthType: PropTypes.bool,\n};\n\nSourceWizardSummary.defaultProps = {\n  showApp: true,\n  showAuthType: true,\n};\n\nexport default SourceWizardSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Description = ({ Content, ...rest }) => <Content {...rest} />;\n\nDescription.propTypes = {\n  Content: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\n};\n\nexport default Description;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormGroup, GridItem, Tile, Grid } from '@patternfly/react-core';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst handleKeyPress = (event, value, onClick) => {\n  const spaceBar = 32;\n  if (event.charCode === spaceBar) {\n    event.preventDefault();\n    onClick(value);\n  }\n};\n\nconst CardSelect = (originalProps) => {\n  const { isRequired, label, helperText, hideLabel, meta, input, options, mutator, DefaultIcon, iconMapper, ...props } =\n    useFieldApi(originalProps);\n  const formOptions = useFormApi();\n  const [icons] = useState(() => {\n    const components = {};\n\n    options.forEach(({ value }) => (components[value] = iconMapper(value, DefaultIcon)));\n\n    return components;\n  });\n\n  const isMulti = props.isMulti || props.multi;\n  const isDisabled = props.isDisabled || props.isReadOnly;\n  const inputValue = input.value || [];\n\n  const handleMulti = (value) =>\n    input.onChange(\n      inputValue.includes(value) ? inputValue.filter((valueSelect) => valueSelect !== value) : [...inputValue, value]\n    );\n\n  const handleSingle = (value) => input.onChange(inputValue === value ? undefined : value);\n\n  const handleClick = (value) => (isMulti ? handleMulti(value) : handleSingle(value));\n\n  const onClick = (value) => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    handleClick(value);\n    input.onBlur();\n  };\n\n  const prepareCards = () =>\n    options\n      .map((option) => mutator(option, formOptions))\n      .map(({ value, label, isDisabled: itemIsDisabled }) => {\n        const disabled = itemIsDisabled || isDisabled;\n\n        if (!value) {\n          return undefined;\n        }\n\n        const Component = icons[value];\n\n        return (\n          <GridItem sm={6} md={4} key={value}>\n            <Tile\n              className={`src-c-wizard__tile${disabled ? ' disabled' : ''}`}\n              onClick={() => onClick(value)}\n              tabIndex={disabled ? -1 : 0}\n              onKeyPress={(e) => handleKeyPress(e, value, onClick)}\n              isDisabled={disabled}\n              title={label}\n              isStacked\n              isSelected={inputValue.includes(value)}\n              {...(Component && { icon: <Component /> })}\n            />\n          </GridItem>\n        );\n      });\n\n  const { error, touched } = meta;\n  const showError = touched && error;\n\n  return (\n    <FormGroup\n      isRequired={isRequired}\n      label={!hideLabel && label}\n      fieldId={input.name}\n      helperText={helperText}\n      helperTextInvalid={error}\n      validated={showError ? 'error' : 'default'}\n    >\n      <Grid hasGutter className=\"pf-u-mb-md\">\n        {prepareCards()}\n      </Grid>\n    </FormGroup>\n  );\n};\n\nCardSelect.propTypes = {\n  multi: PropTypes.bool,\n  isMulti: PropTypes.bool,\n  label: PropTypes.node,\n  isRequired: PropTypes.bool,\n  helperText: PropTypes.node,\n  description: PropTypes.node,\n  hideLabel: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  mutator: PropTypes.func,\n  options: PropTypes.array,\n  DefaultIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func, PropTypes.element]),\n  iconMapper: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n};\n\nCardSelect.defaultProps = {\n  options: [],\n  iconMapper: (_value, DefaultIcon) => DefaultIcon,\n  mutator: (x) => x,\n};\n\nexport default CardSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Radio } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nconst AuthRadio = (props) => {\n  const { label, input, authName, supportedAuthTypes, disableAuthType } = useFieldApi(props);\n\n  const isSelected = input.value === authName;\n\n  if (input.value && supportedAuthTypes && !supportedAuthTypes.includes(input.value)) {\n    input.onChange(undefined);\n  }\n\n  return (\n    <Radio\n      value={authName}\n      isChecked={isSelected}\n      name={input.name}\n      onChange={() => input.onChange(authName)}\n      label={label}\n      id={`${input.name}-${authName}`}\n      isDisabled={disableAuthType}\n    />\n  );\n};\n\nAuthRadio.propTypes = {\n  label: PropTypes.string,\n  authName: PropTypes.string.isRequired,\n  disableAuthType: PropTypes.bool,\n  supportedAuthTypes: PropTypes.arrayOf(PropTypes.string),\n};\n\nAuthRadio.defaultProps = {\n  disableAuthType: false,\n};\n\nexport default AuthRadio;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport Radio from '@data-driven-forms/pf4-component-mapper/radio';\nimport { NO_APPLICATION_VALUE } from '../../components/addSourceWizard/stringConstants';\n\nconst EnhancedRadio = ({ options, mutator, ...props }) => {\n  const formOptions = useFormApi();\n\n  const values = formOptions.getState().values;\n\n  const selectedType = values.source_type;\n  const selectedApp = get(values, props.name);\n\n  const newOptions = options.map((option) => mutator(option, formOptions)).filter(Boolean);\n\n  useEffect(() => {\n    if (\n      selectedType &&\n      (!selectedApp || !newOptions.map(({ value }) => value).includes(selectedApp)) &&\n      newOptions.filter((option) => option.value && option.value !== NO_APPLICATION_VALUE).length === 1\n    ) {\n      formOptions.change(props.name, newOptions[0].value);\n    } else if (!newOptions.map(({ value }) => value).includes(selectedApp)) {\n      formOptions.change(props.name, NO_APPLICATION_VALUE);\n    }\n  }, [selectedType]);\n\n  return <Radio {...props} options={newOptions} FormGroupProps={{ className: 'src-c-wizard__radio' }} />;\n};\n\nEnhancedRadio.propTypes = {\n  mutator: PropTypes.func.isRequired,\n  options: PropTypes.array,\n  name: PropTypes.string,\n};\n\nexport default EnhancedRadio;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from '@data-driven-forms/pf4-component-mapper/checkbox';\n\nconst CheckboxWithIcon = ({ Icon, ...props }) => {\n  const ref = useRef();\n\n  return (\n    <div className=\"src-c-checkbox-with-icon\">\n      <Checkbox {...props} type=\"checkbox\" />\n      <span ref={ref}>\n        <Icon appendTo={ref.current} />\n      </span>\n    </div>\n  );\n};\n\nCheckboxWithIcon.propTypes = {\n  Icon: PropTypes.elementType.isRequired,\n};\n\nexport default CheckboxWithIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport pf4ComponentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\n\nimport Authentication from '../components/Authentication';\n\nimport SourceWizardSummary from '../components/FormComponents/SourceWizardSummary';\nimport Description from '../components/FormComponents/Description';\nimport CardSelect from '../components/FormComponents/CardSelect';\nimport AuthSelect from '../components/FormComponents/AuthSelect';\nimport EnhancedRadio from '../components/FormComponents/EnhancedRadio';\nimport SwitchGroup from '../components/FormComponents/SwitchGroup';\nimport CheckboxWithIcon from '../components/FormComponents/CheckboxWithIcon';\n\nexport const mapperExtension = {\n  'auth-select': AuthSelect,\n  description: Description,\n  'card-select': CardSelect,\n  summary: SourceWizardSummary,\n  'enhanced-radio': EnhancedRadio,\n  'switch-group': SwitchGroup,\n  authentication: Authentication,\n  'checkbox-with-icon': CheckboxWithIcon,\n};\n\nconst SourcesFormRenderer = ({ componentMapper, ...props }) => (\n  <FormRenderer\n    FormTemplate={FormTemplate}\n    componentMapper={{\n      ...pf4ComponentMapper,\n      ...mapperExtension,\n      ...componentMapper,\n    }}\n    {...props}\n  />\n);\n\nSourcesFormRenderer.propTypes = {\n  componentMapper: PropTypes.object,\n};\n\nexport default SourcesFormRenderer;\n","import React, { useEffect } from 'react';\n\nimport { Switch, FormGroup, Stack, StackItem } from '@patternfly/react-core';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst SwitchGroup = (props) => {\n  const { label, input, options, applicationTypes } = useFieldApi(props);\n  const { getState } = useFormApi();\n\n  const selectedType = getState().values.source_type;\n  const supportedApps = applicationTypes\n    .filter(({ supported_source_types }) => supported_source_types.includes(selectedType))\n    .map(({ id }) => id);\n  const filteredOptions = options.filter(({ value }) => supportedApps.includes(value));\n\n  const handleChange = (checked, value) =>\n    checked ? input.onChange([...input.value, value]) : input.onChange(input.value.filter((x) => x !== value));\n\n  useEffect(() => {\n    if (!input.value) {\n      input.onChange(filteredOptions.map(({ value }) => value).filter(Boolean));\n    }\n  }, []);\n\n  return (\n    <FormGroup label={label} fieldId={input.name}>\n      <Stack hasGutter>\n        {filteredOptions.map((option) => (\n          <StackItem key={option.value}>\n            <Switch\n              label={option.label}\n              onChange={(checked) => handleChange(checked, option.value)}\n              isChecked={input.value.includes(option.value)}\n              id={option.value}\n            />\n            {option.description && (\n              <div className=\"pf-c-switch pf-u-mt-sm\">\n                <span className=\"pf-c-switch__toggle src-m-wizard-hide-me\" />\n                <div className=\"pf-c-switch__label src-c-wizard--switch-description\">{option.description}</div>\n              </div>\n            )}\n          </StackItem>\n        ))}\n      </Stack>\n    </FormGroup>\n  );\n};\n\nexport default SwitchGroup;\n","import React, { useState, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\n\nimport { FormGroup, TextInput } from '@patternfly/react-core';\n\nimport TextField from '@data-driven-forms/pf4-component-mapper/text-field';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport validated from '../utilities/resolveProps/validated';\n\nconst Authentication = (rest) => {\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  const [authenticationId] = rest?.name?.match(/\\d+/) || [];\n  const isEditing = authenticationId || values.authentication?.id;\n\n  // If there is any value, the field is modified (password is always empty on start)\n  let isModified = get(values, rest.name);\n\n  const [edited, setEdited] = useState(!isEditing || isModified);\n  const firstClick = useRef(true);\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      // reset on restart\n      if (!firstClick.current && formOptions.getState().pristine) {\n        setEdited(false);\n        firstClick.current = true;\n      }\n\n      if (edited) {\n        firstClick.current = false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(isEditing\n      ? {\n          validate: doNotRequirePassword,\n          resolveProps: validated,\n        }\n      : {}),\n  };\n\n  if (rest.isDisabled) {\n    return (\n      <FormGroup helperText={componentProps.helperText} label={componentProps.label} isRequired>\n        <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" isDisabled />\n      </FormGroup>\n    );\n  }\n\n  if (!edited && isEditing) {\n    return (\n      <FormGroup helperText={componentProps.helperText} label={componentProps.label} onFocus={() => setEdited(true)} isRequired>\n        <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" />\n      </FormGroup>\n    );\n  }\n\n  return <TextField {...componentProps} autoFocus={true} />;\n};\n\nexport default Authentication;\n","const isSuperKey = (source) => source?.app_creation_workflow === 'account_authorization';\n\nexport default isSuperKey;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Spinner, FormHelperText } from '@patternfly/react-core';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\n\nexport const ValidatingSpinner = ({ validating }) => {\n  const intl = useIntl();\n\n  return (\n    <FormHelperText isHidden={!validating}>\n      <Spinner size=\"md\" className=\"pf-u-mr-md\" />\n      {intl.formatMessage({ id: 'wizard.validating', defaultMessage: 'Validating' })}\n    </FormHelperText>\n  );\n};\n\nValidatingSpinner.propTypes = {\n  validating: PropTypes.bool.isRequired,\n};\n\nconst validated = (_, { meta }) => {\n  if (meta.validating) {\n    return {\n      // FormSpy is a fallback solution\n      // FF sometimes does not set validating to 'false' on the field\n      // So we need to also check the FormSpy.validating\n      helperText: <FormSpy>{({ validating }) => <ValidatingSpinner validating={validating} />}</FormSpy>,\n    };\n  }\n\n  if (meta.valid) {\n    return {\n      validated: 'success',\n      FormGroupProps: {\n        validated: 'success',\n      },\n    };\n  }\n\n  return {};\n};\n\nexport default validated;\n"],"names":["checkSourceStatus","id","getSourcesApi","checkAvailabilitySource","delay","interval","prms","Promise","resolve","setTimeout","bind","checkAppAvailability","timeout","entity","updatedTime","res","rej","start","Date","now","checkSource","then","data","availability_status","availability_status_error","last_checked_at","updated_at","error","hardcodedSchema","typeName","authName","appName","get","hardcodedSchemas","undefined","getAdditionalSteps","shouldSkipSelection","shouldSkipEndpoint","hasCustomSteps","getAdditionalStepKeys","getOnlyHiddenFields","getAdditionalStepFields","fields","stepKey","filter","field","map","shouldUseAppAuth","getNoStepsFields","additionalStepKeys","includes","injectAuthFieldsInfo","type","auth","applicationName","specificFields","hardcodedField","name","resultedField","component","injectEndpointFieldsInfo","getAdditionalAuthFields","createEndpointStep","endpoint","nextStep","createAdditionalSteps","additionalSteps","hasEndpointStep","step","skipEndpoint","customSteps","schemaBuilder","sourceTypes","appTypes","disableAuthType","schema","forEach","appendEndpoint","hidden","length","push","endpointFields","auths","authentication","hasMultipleAuthTypes","stepMapper","additionalIncludesStepKeys","onlyHiddenFields","authFields","hideField","label","validate","validatorTypes","componentTypes","className","condition","when","is","title","defaultMessage","additionalStepName","hasCustomStep","stepProps","firstAdditonalStep","find","additionalFields","createGenericAuthTypeSelection","appType","supported_source_types","supportedAuthTypes","supported_authentication_types","emptyAuthType","authType","createSpecificAuthTypeSelection","auhtentications","some","shouldAppendEmptyType","appAdditionalSteps","ErroredStep","onClose","returnButtonTitle","message","customText","primaryAction","secondaryActions","Component","Bullseye","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","ExclamationCircleIcon","color","Title","headingLevel","size","EmptyStateBody","onClick","EmptyStateSecondaryActions","propTypes","PropTypes","defaultProps","Button","LoadingStep","cancelTitle","description","Spinner","ValuePopover","value","intl","useIntl","Popover","headerContent","bodyContent","position","maxWidth","isInline","formatMessage","DesctiptionListItem","term","props","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","SourceWizardSummary","applicatioNames","applicationTypes","showApp","showAuthType","formOptions","useFormApi","values","getState","source_type","source","source_type_id","hasAuthentication","authtype","auth_select","authTypeFields","app_creation_workflow","applications","app","display_name","application","application_type_id","availableStepKeys","appId","Boolean","getStepKeys","authSteps","flatMap","x","startsWith","valuesList","stepKeys","formField","Label","createItem","getAllFieldsValues","key","toString","DescriptionList","isHorizontal","product_name","NO_APPLICATION_VALUE","sourceType","COST_MANAGEMENT_APP_NAME","Alert","CLOUD_METER_APP_NAME","alertMapper","isRequired","Description","Content","rest","CardSelect","originalProps","useFieldApi","helperText","hideLabel","meta","input","options","mutator","DefaultIcon","iconMapper","useState","components","icons","isMulti","multi","isDisabled","isReadOnly","inputValue","onChange","valueSelect","handleMulti","handleSingle","handleClick","onBlur","showError","touched","FormGroup","fieldId","helperTextInvalid","validated","Grid","hasGutter","option","disabled","GridItem","sm","md","Tile","tabIndex","onKeyPress","e","event","charCode","preventDefault","handleKeyPress","isStacked","isSelected","_value","AuthRadio","Radio","isChecked","EnhancedRadio","selectedType","selectedApp","newOptions","useEffect","change","FormGroupProps","CheckboxWithIcon","Icon","ref","useRef","appendTo","current","mapperExtension","AuthSelect","summary","supportedApps","filteredOptions","Stack","StackItem","Switch","checked","handleChange","match","isEditing","isModified","edited","setEdited","firstClick","mounted","pristine","doNotRequirePassword","componentProps","resolveProps","TextInput","onFocus","autoFocus","SourcesFormRenderer","componentMapper","FormTemplate","pf4ComponentMapper","ValidatingSpinner","validating","FormHelperText","isHidden","_","valid"],"sourceRoot":""}