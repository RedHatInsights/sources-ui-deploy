{"version":3,"file":"js/369.231ff6b2db46789866e5.js","mappings":"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","sources":["webpack:///./src/components/ErrorBoundary.js","webpack:///./src/components/PermissionsChecker.js","webpack:///./src/redux/user/actions.js","webpack:///./src/components/DataLoader.js","webpack:///./src/App.js","webpack:///./src/components/RedirectNoWriteAccess/RedirectNoWriteAccess.js","webpack:///./src/components/RedirectNoPaused/RedirectNoPaused.js","webpack:///./src/components/ElementWrapper/ElementWrapper.js","webpack:///./src/Routing.js","webpack:///./src/frontend-components-copies/interceptors.js","webpack:///./src/api/constants.js","webpack:///./src/api/entities.js","webpack:///./src/api/handleError.js","webpack:///./src/components/AppLink/index.js","webpack:///./src/components/AppNavigate/index.js","webpack:///./src/components/CloudTiles/CloudCards.js","webpack:///./src/components/RedirectNoId/RedirectNoId.js","webpack:///./src/components/SourcesTable/loaders.js","webpack:///./src/components/constants.js","webpack:///./src/hooks/useHasWritePermissions.js","webpack:///./src/hooks/useIsLoaded.js","webpack:///./src/hooks/useSource.js","webpack:///./src/redux/sources/actionTypes.js","webpack:///./src/api/checkAccountHCS.js","webpack:///./src/redux/sources/actions.js","webpack:///./src/api/source_types.js","webpack:///./src/redux/user/actionTypes.js","webpack:///./src/utilities/constants.js","webpack:///./src/utilities/disabledTooltipProps.js","webpack:///./src/utilities/intlShared.js","webpack:///./src/redux/sources/reducer.js","webpack:///./src/redux/user/reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/utilities/tryAgainMessage.js","webpack:///./src/utilities/urlQuery.js","webpack:///./src/utilities/utils.js","webpack:///./src/views/formatters.js","webpack:///./src/views/sourcesViewDefinition.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport { addMessage } from '../redux/sources/actions';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error, errorInfo) {\n    return { error, errorInfo };\n  }\n\n  componentDidCatch(error) {\n    const sentryId = Sentry.captureException(error);\n    this.props.dispatch(\n      addMessage({\n        title: `${error.toString()} (Sentry ID: ${sentryId})`,\n        variant: 'danger',\n        description: error.stack,\n      })\n    );\n  }\n\n  render() {\n    const { error } = this.state;\n    const { children } = this.props;\n\n    if (error) {\n      return <Fragment>Error occurred</Fragment>;\n    }\n\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nErrorBoundary.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default connect()(ErrorBoundary);\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { loadOrgAdmin, loadWritePermissions } from '../redux/user/actions';\n\nconst PermissionsChecker = ({ children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    Promise.all([dispatch(loadWritePermissions()), dispatch(loadOrgAdmin())]);\n  }, []);\n\n  return children;\n};\n\nexport default PermissionsChecker;\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const loadWritePermissions = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING });\n\n  return insights.chrome\n    .getUserPermissions('sources', true) // bypassCache = true\n    .then((permissions) => {\n      const allPermission = permissions.reduce((acc, curr) => [...acc, curr?.permission], []);\n      const writePermissions = allPermission.includes('sources:*:*') || allPermission.includes('sources:*:write');\n\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED,\n        payload: writePermissions,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      })\n    );\n};\n\nexport const loadOrgAdmin = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_ORG_ADMIN_PENDING });\n\n  return insights.chrome.auth\n    .getUser()\n    .then(\n      ({\n        identity: {\n          user: { is_org_admin },\n        },\n      }) => {\n        dispatch({\n          type: ACTION_TYPES.SET_ORG_ADMIN_FULFILLED,\n          payload: is_org_admin,\n        });\n      }\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_ORG_ADMIN_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      })\n    );\n};\n","import { useEffect, useRef } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { loadAppTypes, loadEntities, loadHcsEnrollment, loadSourceTypes } from '../redux/sources/actions';\nimport { loadEnhancedAttributes, parseQuery, updateQuery } from '../utilities/urlQuery';\n\nconst DataLoader = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n  const previousPathname = useRef(pathname);\n\n  useEffect(() => {\n    const { applications, types } = loadEnhancedAttributes();\n\n    if (applications || types) {\n      Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadHcsEnrollment())]).then(() =>\n        dispatch(loadEntities(parseQuery))\n      );\n    } else {\n      Promise.all([\n        dispatch(loadSourceTypes()),\n        dispatch(loadAppTypes()),\n        dispatch(loadEntities(parseQuery)),\n        dispatch(loadHcsEnrollment()),\n      ]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (previousPathname.current !== pathname) {\n      updateQuery(sources);\n      previousPathname.current = pathname;\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default DataLoader;\n","import React, { useEffect } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { IntlProvider } from 'react-intl';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport Routing from './Routing';\n\nimport './App.scss';\nimport './styles/authSelect.scss';\nimport './styles/cardSelect.scss';\nimport './styles/costManagement.scss';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PermissionsChecker from './components/PermissionsChecker';\nimport DataLoader from './components/DataLoader';\nimport { CLOUD_CARDS_KEY } from './components/CloudTiles/CloudCards';\n\nconst App = () => {\n  const chrome = useChrome();\n\n  chrome?.updateDocumentTitle?.('Sources');\n\n  useEffect(() => {\n    return () => {\n      sessionStorage.removeItem(CLOUD_CARDS_KEY);\n    };\n  }, []);\n\n  return (\n    <IntlProvider locale=\"en\">\n      <React.Fragment>\n        <NotificationsPortal />\n        <ErrorBoundary>\n          <PermissionsChecker>\n            <section className=\"pf-u-p-0\">\n              <DataLoader />\n              <Routing />\n            </section>\n          </PermissionsChecker>\n        </ErrorBoundary>\n      </React.Fragment>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { routes } from '../../Routing';\nimport { disabledMessage } from '../../utilities/disabledTooltipProps';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoWriteAccess = () => {\n  const intl = useIntl();\n\n  const writePermissions = useHasWritePermissions();\n  const isOrgAdmin = useSelector(({ user }) => user.isOrgAdmin);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (writePermissions === false) {\n      const title = intl.formatMessage({\n        id: 'sources.insufficietnPerms',\n        defaultMessage: 'Insufficient permissions',\n      });\n      const description = disabledMessage(intl, isOrgAdmin);\n\n      dispatch(addMessage({ title, variant: 'danger', description }));\n    }\n  }, [writePermissions]);\n\n  if (writePermissions === false) {\n    return <AppNavigate to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoWriteAccess;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { replaceRouteId, routes } from '../../Routing';\nimport { useSource } from '../../hooks/useSource';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoPaused = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (source.paused_at) {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({\n            id: 'sources.sourcePausedRedirect',\n            defaultMessage: 'Source is paused',\n          }),\n          variant: 'danger',\n          description: intl.formatMessage({\n            id: 'sources.sourcePausedRedirectDescription',\n            defaultMessage: 'You cannot perform this action on a paused source.',\n          }),\n        })\n      );\n    }\n  }, [source.paused_at]);\n\n  if (source.paused_at) {\n    return <AppNavigate to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoPaused;\n","import React, { cloneElement } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { useSource } from '../../hooks/useSource';\nimport RedirectNoWriteAccess from '../RedirectNoWriteAccess/RedirectNoWriteAccess';\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\nimport RedirectNoPaused from '../RedirectNoPaused/RedirectNoPaused';\n\nconst ElementWrapperInternal = ({ route, children }) => {\n  const source = route.redirectNoId && useSource();\n\n  if (!source && route.redirectNoId) {\n    return <RedirectNoId />;\n  }\n\n  return (\n    <React.Fragment>\n      {route.noPaused && <RedirectNoPaused />}\n      {route.writeAccess && <RedirectNoWriteAccess />}\n      {children}\n    </React.Fragment>\n  );\n};\n\nElementWrapperInternal.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n    noPaused: PropTypes.bool,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst ElementWrapper = ({ route, children }) => {\n  const componentProps = useOutletContext();\n  return <ElementWrapperInternal route={route}>{cloneElement(children, componentProps)}</ElementWrapperInternal>;\n};\n\nElementWrapper.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n    noPaused: PropTypes.bool,\n  }).isRequired,\n  componentProps: PropTypes.any,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ElementWrapper;\n","import React, { Suspense, lazy, useMemo } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { AppPlaceholder } from './components/SourcesTable/loaders';\nimport ElementWrapper from './components/ElementWrapper/ElementWrapper';\n\nconst SourcesPage = lazy(() => import(/* webpackChunkName: \"sourcesPage\" */ './pages/Sources'));\nconst SourceDetail = lazy(() => import(/* webpackChunkName: \"sourceDetail\" */ './pages/Detail'));\nconst AddSourceWizard = lazy(() => import(/* webpackChunkName: \"addSourceWizard\" */ './components/addSourceWizard'));\nconst SourceRemoveModal = lazy(() =>\n  import(/* webpackChunkName: \"removeSource\" */ './components/SourceRemoveModal/SourceRemoveModal')\n);\n\nconst AddApplication = lazy(() => import(/* webpackChunkName \"addApp\" */ './components/AddApplication/AddApplication'));\nconst RemoveAppModal = lazy(() => import(/* webpackChunkName \"removeApp\" */ './components/AddApplication/RemoveAppModal'));\nconst SourceRenameModal = lazy(() => import(/* webpackChunkName \"renameSource\" */ './components/SourceDetail/SourceRenameModal'));\nconst CredentialsForm = lazy(() =>\n  import(/* webpackChunkName \"credentialsForm\" */ './components/CredentialsForm/CredentialsForm')\n);\n\nexport const routes = {\n  sources: {\n    path: '/',\n  },\n  sourcesNew: {\n    path: 'new',\n    writeAccess: true,\n  },\n  sourcesRemove: {\n    path: 'remove/:id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetail: {\n    path: 'detail/:id',\n    redirectNoId: true,\n  },\n  sourcesDetailRename: {\n    path: 'detail/:id/rename',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemove: {\n    path: 'detail/:id/remove',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailAddApp: {\n    path: 'detail/:id/add_app/:app_type_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemoveApp: {\n    path: 'detail/:id/remove_app/:app_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailEditCredentials: {\n    path: 'detail/:id/edit_credentials',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n};\n\nexport const replaceRouteId = (path, id) => path.replace(':id', id);\n\nconst routeMap = [\n  {\n    route: {\n      path: '/',\n    },\n    element: SourcesPage,\n    childRoutes: [\n      {\n        route: routes.sourcesRemove,\n        element: SourceRemoveModal,\n        elementProps: {\n          backPath: routes.sources.path,\n        },\n      },\n      {\n        route: routes.sourcesNew,\n        element: AddSourceWizard,\n      },\n    ],\n  },\n  {\n    route: routes.sourcesDetail,\n    element: SourceDetail,\n    childRoutes: [\n      {\n        route: routes.sourcesDetail,\n        path: 'remove',\n        element: SourceRemoveModal,\n      },\n      {\n        route: routes.sourcesDetailAddApp,\n        path: 'add_app/:app_type_id',\n        element: AddApplication,\n      },\n      {\n        route: routes.sourcesDetailRemoveApp,\n        path: 'remove_app/:app_id',\n        element: RemoveAppModal,\n      },\n      {\n        route: routes.sourcesDetail,\n        path: 'rename',\n        element: SourceRenameModal,\n      },\n      {\n        route: routes.sourcesDetail,\n        path: 'edit_credentials',\n        element: CredentialsForm,\n      },\n    ],\n  },\n];\n\nconst renderRoutes = (routes = []) =>\n  routes.map(({ route, path, element: Element, childRoutes, elementProps }) => (\n    <Route\n      key={path || route.path}\n      path={path || route.path}\n      element={\n        <ElementWrapper route={route}>\n          <Element {...elementProps} />\n        </ElementWrapper>\n      }\n    >\n      {renderRoutes(childRoutes)}\n    </Route>\n  ));\n\nconst Routing = () => {\n  const routes = useMemo(() => renderRoutes(routeMap), [routeMap]);\n  return (\n    <Suspense fallback={<AppPlaceholder />}>\n      <Routes>{routes}</Routes>\n    </Suspense>\n  );\n};\n\nexport default Routing;\n","import axios from 'axios';\nimport { captureException, configureScope } from '@sentry/minimal';\n\nexport async function authInterceptor(config) {\n  await window.insights.chrome.auth.getUser();\n  return config;\n}\n\nexport function responseDataInterceptor(response) {\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}\n\nexport function interceptor401(error) {\n  if (error.response && error.response.status === 401) {\n    window.insights.chrome.auth.logout();\n    return false;\n  }\n\n  throw error;\n}\n\nexport function interceptor500(error) {\n  if (error.response && error.response.status >= 500 && error.response.status < 600) {\n    configureScope((scope) => {\n      scope.setTag('request_id', error.response.req_id);\n    });\n  }\n\n  throw error;\n}\n\nexport function errorInterceptor(err) {\n  if (!axios.isCancel(err)) {\n    try {\n      const errObject = { ...err };\n      if (errObject.response && errObject.response.data) {\n        throw errObject.response.data;\n      }\n\n      throw err;\n    } catch (customError) {\n      const sentryId = captureException(customError);\n      customError.sentryId = sentryId;\n      throw customError;\n    }\n  }\n}\n","export const SOURCES_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/sources/v3.1`;\nexport const COST_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/cost-management/v1`;\n","import axios from 'axios';\n\nimport * as interceptors from '../frontend-components-copies/interceptors';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\nimport { AVAILABLE, PARTIALLY_UNAVAILABLE, UNAVAILABLE } from '../views/formatters';\n\nimport { COST_API_BASE_V3, SOURCES_API_BASE_V3 } from './constants';\n\nexport const graphQlErrorInterceptor = (response) => {\n  if (response.errors && response.errors.length > 0) {\n    return Promise.reject({ detail: response.errors[0].message });\n  }\n\n  return response;\n};\n\nexport const interceptor403 = (error) => {\n  if (error.errors && error.errors[0].status === 403) {\n    return Promise.reject({\n      detail: error.errors[0].detail,\n      title: 'Forbidden access',\n    });\n  }\n\n  throw error;\n};\n\nconst axiosInstanceInsights = axios.create();\naxiosInstanceInsights.interceptors.request.use(interceptors.authInterceptor);\naxiosInstanceInsights.interceptors.response.use(interceptors.responseDataInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor401);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor500);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.errorInterceptor);\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptor403);\n\nexport { axiosInstanceInsights as axiosInstance };\n\nexport const getSourcesApi = () => ({\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  updateSource: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/sources/${id}`, data),\n  updateEndpoint: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/endpoints/${id}`, data),\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  updateAuthentication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/authentications/${id}`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  showSource: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  listSourceEndpoints: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/endpoints`),\n  listSourceApplications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/applications`),\n  listEndpointAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}/authentications`),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  doLoadAppTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  deleteApplication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  deleteAuthentication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  showAuthentication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  updateApplication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/applications/${id}`, data),\n  showApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  listSourceAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/authentications`),\n  createSource: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources`, data),\n  getEndpoint: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}`),\n  getGoogleAccount: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account`),\n  bulkCreate: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/bulk_create`, data),\n  pauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/pause`),\n  unpauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/unpause`),\n  pauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/pause`),\n  unpauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/unpause`),\n  getLighthouseLink: () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=azure_lighthouse_template`),\n  getProvAppType: () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types?filter[name]=/insights/platform/provisioning`),\n  getProvMetadata: (provAppTypeId) =>\n    axiosInstanceInsights.get(\n      `${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=aws_wizard_account_number&application_type_id=${provAppTypeId}`\n    ),\n});\n\nexport const getCostApi = () => ({\n  listAwsRegions: () => axiosInstanceInsights.get(`${COST_API_BASE_V3}/sources/aws-s3-regions/`),\n});\n\nexport const doLoadAppTypes = () => getSourcesApi().doLoadAppTypes();\n\nexport const doRemoveSource = (sourceId) =>\n  getSourcesApi()\n    .deleteSource(sourceId)\n    .catch((error) => {\n      throw { error: { detail: error.errors[0].detail } };\n    });\n\nexport const pagination = (pageSize, pageNumber) => `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) => {\n  if (!sortBy) {\n    return '';\n  }\n\n  if (sortBy === 'source_type_id') {\n    return `sort_by: { name: \"source_type.product_name\", direction: ${sortDirection} }`;\n  }\n\n  if (sortBy === 'applications') {\n    return `sort_by: { name: \"applications\", direction: ${sortDirection} }`;\n  }\n\n  return `sort_by: { name: \"${sortBy}\", direction: ${sortDirection} }`;\n};\n\nexport const filtering = (filterValue = {}, category) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`{ name: \"name\", operation: \"contains_i\", value: \"${filterValue.name}\" }`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterQueries.push(\n      `{ name: \"source_type_id\", operation: \"eq\", value: [${filterValue.source_type_id.map((x) => `\"${x}\"`).join(', ')}] }`\n    );\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterQueries.push(\n      `{ name: \"applications.application_type_id\", operation: \"eq\", value: [${filterValue.applications\n        .map((x) => `\"${x}\"`)\n        .join(', ')}] }`\n    );\n  }\n\n  if (category === CLOUD_VENDOR) {\n    filterQueries.push(`{ name: \"source_type.category\", operation: \"eq\", value: \"Cloud\" }`);\n  }\n\n  if (category === REDHAT_VENDOR) {\n    filterQueries.push(`{ name: \"source_type.category\", operation: \"eq\", value: \"Red Hat\" }`);\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`{ name: \"availability_status\", operation: \"eq\", value: \"${AVAILABLE}\" }`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(\n        `{ name: \"availability_status\", operation: \"eq\", value: [\"${PARTIALLY_UNAVAILABLE}\", \"${UNAVAILABLE}\"] }`\n      );\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return `filter: [ ${filterQueries.join(', ')} ]`;\n  }\n\n  return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    imported,\n    availability_status,\n    source_ref,\n    last_checked_at,\n    updated_at,\n    last_available_at,\n    app_creation_workflow,\n    paused_at,\n    authentications { authtype, username, availability_status_error, availability_status }\n    applications { application_type_id, id, availability_status_error, availability_status, paused_at, authentications { id, resource_type } },\n    endpoints { id, scheme, host, port, path, receptor_node, role, certificate_authority, verify_ssl, availability_status_error, availability_status, authentications { authtype, availability_status, availability_status_error } }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory }) => {\n  const filter = filtering(filterValue, activeCategory);\n\n  const filterSection = [pagination(pageSize, pageNumber), sorting(sortBy, sortDirection), filter].join(',');\n\n  return getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(${filterSection})\n      { ${graphQlAttributes} },\n     meta{count}\n    }`,\n    })\n    .then(({ data }) => data);\n};\n\nexport const doCreateApplication = (data) => getSourcesApi().createApplication(data);\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n  getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => {\n      throw { error: { title: errorMessage, detail } };\n    });\n\nexport const restFilterGenerator = (filterValue = {}, category) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterValue.applications.map((id) => filterQueries.push(`filter[applications][application_type_id][eq][]=${id}`));\n  }\n\n  if (category === CLOUD_VENDOR) {\n    filterQueries.push(`filter[source_type][category]=Cloud`);\n  }\n\n  if (category === REDHAT_VENDOR) {\n    filterQueries.push('filter[source_type][category]=Red Hat');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`filter[availability_status]=${AVAILABLE}`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`filter[availability_status][]=${PARTIALLY_UNAVAILABLE}`);\n      filterQueries.push(`filter[availability_status][]=${UNAVAILABLE}`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return filterQueries.join('&');\n  }\n\n  return '';\n};\n\nexport const doLoadSource = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { name: \"id\", operation: \"eq\", value: \"${id}\" })\n            { ${graphQlAttributes} }\n        }`,\n    })\n    .then(({ data }) => data);\n\nexport const doLoadApplicationsForEdit = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { name: \"id\", operation: \"eq\", value: \"${id}\" })\n          { applications {\n              application_type_id,\n              id,\n              availability_status_error,\n              availability_status,\n              paused_at,\n              extra,\n              authentications {\n                  id\n              }\n          } }\n      }`,\n    })\n    .then(({ data }) => data);\n\nexport const doDeleteAuthentication = (id) => getSourcesApi().deleteAuthentication(id);\n","import { getSourcesApi } from './entities';\nimport get from 'lodash/get';\n\nexport const handleError = (error, sourceId = undefined) => {\n  let errorMessage;\n\n  if (!error) {\n    errorMessage = 'Undefined error';\n  }\n\n  if (!errorMessage && typeof error === 'string') {\n    errorMessage = error;\n  }\n\n  if (!errorMessage) {\n    errorMessage = get(error, 'errors[0].detail', JSON.stringify(error, null, 2));\n  }\n\n  if (!sourceId) {\n    return errorMessage;\n  }\n\n  return getSourcesApi()\n    .deleteSource(sourceId)\n    .then(() => errorMessage)\n    .catch((errorDelete) => {\n      const errorDeleteDetail = get(errorDelete, 'errors[0].detail', JSON.stringify(errorDelete, null, 2));\n\n      return `${errorMessage}. The source was not removed, try remove it later: ${errorDeleteDetail}`;\n    });\n};\n\nexport default handleError;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../../utilities/utils';\nimport PropTypes from 'prop-types';\n\nconst AppLink = React.forwardRef((props, ref) => <Link {...props} ref={ref} to={mergeToBasename(props.to, linkBasename)} />);\nAppLink.displayName = 'AppLink';\n\nAppLink.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AppLink;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../../utilities/utils';\nimport PropTypes from 'prop-types';\n\nconst AppNavigate = (props) => <Navigate {...props} to={mergeToBasename(props.to, linkBasename)} />;\nAppNavigate.displayName = 'AppNavigate';\n\nAppNavigate.propTypes = {\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AppNavigate;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport {\n  Card,\n  CardBody,\n  CardExpandableContent,\n  CardHeader,\n  CardTitle,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport BuilderImageIcon from '@patternfly/react-icons/dist/esm/icons/builder-image-icon';\nimport TrendUpIcon from '@patternfly/react-icons/dist/esm/icons/trend-up-icon';\nimport ListIcon from '@patternfly/react-icons/dist/esm/icons/list-icon';\n\nconst PREFIX = insights.chrome.isBeta() ? 'preview/' : '';\n\nconst GOLD_IMAGES_AWS =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-aws_cloud-access';\nconst GOLD_IMAGES_AZURE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-azure_cloud-access';\nconst GOLD_IMAGES_MORE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access';\nconst INSIGHTS_REF = 'https://www.redhat.com/en/technologies/management/insights';\nconst INSIGHTS_SERVICES = `/${PREFIX}settings/connector`;\nconst SUBWATCH_HREF = `/${PREFIX}insights/subscriptions/rhel`;\nconst SUBWATCH_MORE_HREF = 'https://access.redhat.com/products/subscription-central';\n\nexport const CLOUD_CARDS_KEY = 'ins-c-sources__cloud_cards_expanded';\n\nconst CloudCards = () => {\n  const [isExpanded, setExpanded] = useState(() => {\n    const session = sessionStorage.getItem(CLOUD_CARDS_KEY);\n\n    return session ? session === 'true' : true;\n  });\n  const intl = useIntl();\n\n  useEffect(() => {\n    sessionStorage.setItem(CLOUD_CARDS_KEY, isExpanded);\n  }, [isExpanded]);\n\n  return (\n    <Card isExpanded={isExpanded} className=\"pf-u-mb-lg pf-u-mt-md pf-u-mt-0-on-md src-c-card-info\">\n      <CardHeader onExpand={() => setExpanded(!isExpanded)}>\n        <CardTitle>{intl.formatMessage({ id: 'cloud.nowWhat', defaultMessage: 'I connected to cloud. Now what?' })}</CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        <CardBody>\n          <TextContent>\n            <Grid hasGutter>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <BuilderImageIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"Builder image icon\" />\n                      {intl.formatMessage({ id: 'cloud.goldImages', defaultMessage: 'Use gold images' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.description',\n                        defaultMessage:\n                          'Connecting to Amazon Web Services or Microsoft Azure unlocks automatic access to Red Hat gold images. View gold images in your provider console.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AWS} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.awsLink',\n                        defaultMessage: 'Use Red Hat gold images on AWS',\n                      })}\n                    </Text>\n                    <br />\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AZURE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.azureLink',\n                        defaultMessage: 'Use Red Hat gold images on Microsoft Azure',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_MORE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.moreLink',\n                        defaultMessage: 'Learn more about Red Hat gold images',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <TrendUpIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"Trend up icon\" />\n                      {intl.formatMessage({ id: 'cloud.insights', defaultMessage: 'Explore Red Hat Insights' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.description',\n                        defaultMessage:\n                          'Use RHEL instances in the cloud and gain other value-add services, such as predictive analytics.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_REF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.insightsLinkt',\n                        defaultMessage: 'Learn more about Red Hat Insights',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_SERVICES} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.moreLink',\n                        defaultMessage: 'Enable additional Insights services',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <ListIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"List icon\" />\n                      {intl.formatMessage({ id: 'cloud.subwatch', defaultMessage: 'Track usage with Subscriptions' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.description',\n                        defaultMessage:\n                          'Use the Subscriptions service to monitor account-level summaries of your Red Hat subscription profile.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_MORE_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.learnMore',\n                        defaultMessage: 'Learn more about Subscriptions',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.goTo',\n                        defaultMessage: 'Go to Subscriptions',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </CardBody>\n      </CardExpandableContent>\n    </Card>\n  );\n};\n\nexport default React.memo(CloudCards);\n","import React, { useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addHiddenSource, addMessage } from '../../redux/sources/actions';\nimport { doLoadSource } from '../../api/entities';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { routes } from '../../Routing';\nimport { useSource } from '../../hooks/useSource';\nimport AppNavigate from '../AppNavigate';\n\nconst RedirectNoId = () => {\n  const { id } = useParams();\n  const intl = useIntl();\n  const source = useSource();\n\n  const loaded = useIsLoaded();\n\n  const { appTypesLoaded, sourceTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n  const dispatch = useDispatch();\n\n  const [applicationIsLoaded, setIsApplicationLoaded] = useState(false);\n\n  useEffect(() => {\n    if (loaded && appTypesLoaded && sourceTypesLoaded) {\n      doLoadSource(id)\n        .then(({ sources: [source] }) => {\n          dispatch(addHiddenSource(source));\n          return source;\n        })\n        .then((source) => {\n          if (!source) {\n            dispatch(\n              addMessage({\n                title: intl.formatMessage({\n                  id: 'sources.sourceNotFoundTitle',\n                  defaultMessage: 'Requested source was not found',\n                }),\n                variant: 'danger',\n                description: intl.formatMessage(\n                  {\n                    id: 'sources.sourceNotFoundTitleDescription',\n                    defaultMessage: 'Source with { id } was not found. Try it again later.',\n                  },\n                  { id }\n                ),\n              })\n            );\n          }\n\n          setIsApplicationLoaded(true);\n        });\n    }\n  }, [loaded, appTypesLoaded, sourceTypesLoaded]);\n\n  if (applicationIsLoaded && !source) {\n    return <AppNavigate to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoId;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\nimport { Bullseye, Card, CardBody, Grid, GridItem, Spinner } from '@patternfly/react-core';\n\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nimport './loaders.scss';\nimport { useIntl } from 'react-intl';\n\nexport const Loader = ({ width = '100%', height = '100%', className = '' }) => (\n  <span className={`src-c-loader ${className}`} style={{ width, height }} role=\"progressbar\" />\n);\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport const AppPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        <div className=\"src-c-fake_content pf-u-p-lg\">\n          <Loader />\n        </div>\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport const PaginationLoader = () => <Loader className=\"top-pagination\" height={30} width={200} />;\n\nexport const PlaceHolderTable = () => (\n  <Bullseye className=\"src-c-bullseye__placeholder-loader\" data-testid=\"placeholder-table\">\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) =>\n  isDeleting ? (\n    <tr>\n      <td colSpan={COLUMN_COUNT} className=\"pf-u-p-md\" data-testid=\"removing-row\">\n        <Loader height={100} />\n      </td>\n    </tr>\n  ) : (\n    <RowWrapper {...initialProps} row={row} className=\"src-c-row-vertical-centered\" data-testid=\"row\" />\n  );\n\nRowWrapperLoader.propTypes = {\n  row: PropTypes.object.isRequired,\n};\n\nexport const CardLoader = (props) => (\n  <Card className=\"pf-u-m-md\">\n    <CardBody>\n      <Loader {...props} />\n    </CardBody>\n  </Card>\n);\n\nexport const DetailLoader = () => (\n  <div className=\"src-c-detail-page\">\n    <PageHeader>\n      <Loader height={96} />\n    </PageHeader>\n    <Grid>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"12\">\n        <CardLoader height={324} />\n      </GridItem>\n    </Grid>\n  </div>\n);\n","// app_creation_workflow constants\nexport const MANUAL_CONFIGURATION = 'manual_configuration';\nexport const ACCOUNT_AUTHORIZATION = 'account_authorization';\n","import { useSelector } from 'react-redux';\n\nexport const useHasWritePermissions = () => {\n  const writePermissions = useSelector(({ user }) => user?.writePermissions);\n\n  if (typeof writePermissions !== 'boolean') {\n    return undefined;\n  }\n\n  return !!writePermissions;\n};\n","import { useSelector } from 'react-redux';\n\nexport const useIsLoaded = () => {\n  const isLoaded = useSelector(({ sources }) => sources.loaded);\n\n  return isLoaded <= 0;\n};\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nexport const useSource = () => {\n  const { id } = useParams();\n  const source = useSelector(({ sources }) => sources.entities.find((source) => source.id === id));\n\n  return source;\n};\n","export const ACTION_TYPES = [\n  'LOAD_ENTITIES',\n  'CREATE_SOURCE',\n  'REMOVE_SOURCE',\n  'LOAD_HCS_ENROLLMENT',\n  'LOAD_SOURCE_TYPES',\n  'LOAD_APP_TYPES',\n  'REMOVE_APPLICATION',\n  'RENAME_SOURCE',\n].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n\nexport const SORT_ENTITIES = 'SORT_ENTITIES';\nexport const PAGE_AND_SIZE = 'PAGE_AND_SIZE';\nexport const FILTER_SOURCES = 'FILTER_SOURCES';\nexport const ADD_APP_TO_SOURCE = 'ADD_APP_TO_SOURCE';\nexport const SET_COUNT = 'SET_COUNT';\nexport const ADD_HIDDEN_SOURCE = 'ADD_HIDDEN_SOURCE';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const SET_CATEGORY = 'SET_CATEGORY';\nexport const STATUS_CHECK_PENDING = 'STATUS_CHECK_PENDING';\n","export const checkAccountHCS = async () => {\n  const jwtToken = await insights.chrome.auth.getToken();\n  return fetch(`https://billing.${insights.chrome.isProd() ? '' : 'stage.'}api.redhat.com/v1/authorization/hcsEnrollment`, {\n    headers: { Authorization: `Bearer ${jwtToken}` },\n  }).then((response) => {\n    if (response.status !== 200) {\n      return { hcsDeal: false };\n    }\n\n    return response.json();\n  });\n};\n","import React from 'react';\n\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\nimport PlayIcon from '@patternfly/react-icons/dist/esm/icons/play-icon';\n\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport {\n  ACTION_TYPES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  FILTER_SOURCES,\n  PAGE_AND_SIZE,\n  SET_CATEGORY,\n  SORT_ENTITIES,\n  STATUS_CHECK_PENDING,\n} from './actionTypes';\nimport { doDeleteApplication, doLoadAppTypes, doLoadEntities, doRemoveSource, getSourcesApi } from '../../api/entities';\nimport { doLoadSourceTypes } from '../../api/source_types';\nimport { bold } from '../../utilities/intlShared';\nimport handleError from '../../api/handleError';\nimport tryAgainMessage from '../../utilities/tryAgainMessage';\nimport { checkAccountHCS } from '../../api/checkAccountHCS';\n\nexport const loadEntities = (options) => (dispatch, getState) => {\n  dispatch({\n    type: ACTION_TYPES.LOAD_ENTITIES_PENDING,\n    options: typeof options === 'function' ? options(getState) : options,\n  });\n\n  const { pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory } = getState().sources;\n\n  return doLoadEntities({\n    pageSize,\n    pageNumber,\n    sortBy,\n    sortDirection,\n    filterValue,\n    activeCategory,\n  })\n    .then(({ sources, meta }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_FULFILLED,\n        payload: { sources, meta },\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_REJECTED,\n        meta: { noError: true },\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: error.title || 'Fetching data failed, try refresh page',\n          },\n        },\n      })\n    );\n};\n\nexport const loadSourceTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING });\n\n  return doLoadSourceTypes()\n    .then((sourceTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED,\n        payload: sourceTypes,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const loadHcsEnrollment = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_PENDING });\n\n  return checkAccountHCS()\n    .then(({ hcsDeal }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_FULFILLED,\n        payload: hcsDeal,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const loadAppTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_APP_TYPES_PENDING });\n\n  return doLoadAppTypes()\n    .then((appTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_FULFILLED,\n        payload: appTypes.data,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const sortEntities = (column, direction) => (dispatch) => {\n  dispatch({\n    type: SORT_ENTITIES,\n    payload: { column, direction },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pageAndSize = (page, size) => (dispatch) => {\n  dispatch({\n    type: PAGE_AND_SIZE,\n    payload: { page, size },\n  });\n\n  return dispatch(loadEntities({ paginationClicked: true }));\n};\n\nexport const filterSources = (value) => (dispatch) => {\n  dispatch({\n    type: FILTER_SOURCES,\n    payload: { value },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const addMessage = (props) => (dispatch) =>\n  dispatch({\n    type: ADD_NOTIFICATION,\n    payload: {\n      dismissable: true,\n      ...props,\n    },\n  });\n\nexport const removeSource = (sourceId, title) => (dispatch) => {\n  dispatch({\n    type: ACTION_TYPES.REMOVE_SOURCE_PENDING,\n    meta: {\n      sourceId,\n    },\n  });\n\n  return doRemoveSource(sourceId)\n    .then(() => dispatch(loadEntities({ loaded: 0 })))\n    .then(() => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_FULFILLED,\n        meta: {\n          sourceId,\n        },\n      });\n      dispatch(addMessage({ title, variant: 'success' }));\n    })\n    .catch(() =>\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_REJECTED,\n        meta: {\n          sourceId,\n        },\n      })\n    );\n};\n\nexport const removeMessage = (id) => ({\n  type: REMOVE_NOTIFICATION,\n  payload: id,\n});\n\nexport const removeApplication = (appId, sourceId, successTitle, errorTitle) => ({\n  type: ACTION_TYPES.REMOVE_APPLICATION,\n  payload: () => doDeleteApplication(appId, errorTitle),\n  meta: {\n    appId,\n    sourceId,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: successTitle,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const addAppToSource = (sourceId, app) => ({\n  type: ADD_APP_TO_SOURCE,\n  payload: {\n    sourceId,\n    app,\n  },\n});\n\nexport const addHiddenSource = (source) => ({\n  type: ADD_HIDDEN_SOURCE,\n  payload: {\n    source,\n  },\n});\n\nexport const setCheckPenging = (sourceId) => ({\n  type: STATUS_CHECK_PENDING,\n  payload: {\n    sourceId,\n  },\n});\n\nexport const clearFilters = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_FILTERS,\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const renameSource = (id, name, errorTitle) => (dispatch, getState) => {\n  const oldName = getState().sources.entities.find((source) => source.id === id)?.name;\n\n  dispatch({ type: ACTION_TYPES.RENAME_SOURCE_PENDING, payload: { id, name } });\n\n  return getSourcesApi()\n    .updateSource(id, { name })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.RENAME_SOURCE_REJECTED,\n        payload: { error: { detail: error.errors?.[0]?.detail || error, title: errorTitle }, id, name: oldName },\n      })\n    );\n};\n\nexport const setActiveCategory = (category) => (dispatch) => {\n  dispatch({\n    type: SET_CATEGORY,\n    payload: { category },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pauseSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .pauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.title', defaultMessage: 'Source paused' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.paused.alert.description',\n              defaultMessage:\n                'Source <b>{ sourceName }</b> is now paused. Data collection for all connected applications will be disabled until the source is resumed.',\n            },\n            { sourceName, b: bold }\n          ),\n          variant: 'default',\n          customIcon: <PauseIcon />,\n        })\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.error', defaultMessage: 'Source pause failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        })\n      );\n    });\n};\n\nexport const resumeSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .unpauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resumed.alert.title', defaultMessage: 'Source resumed' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.resumed.alert.description',\n              defaultMessage: 'Source <b>{ sourceName }</b> will recontinue data collection for connected applications.',\n            },\n            { sourceName, b: bold }\n          ),\n          variant: 'default',\n          customIcon: <PlayIcon />,\n        })\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resume.alert.error', defaultMessage: 'Source resume failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        })\n      );\n    });\n};\n","import { getSourcesApi } from './entities.js';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => data.data);\n","export const ACTION_TYPES = ['SET_WRITE_PERMISSIONS', 'SET_ORG_ADMIN'].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n","export const HCS_NAME = 'hcs';\nexport const SATELLITE_NAME = 'satellite';\nexport const ANSIBLE_TOWER_NAME = 'ansible-tower';\nexport const AZURE_NAME = 'azure';\nexport const GOOGLE_NAME = 'google';\nexport const REDHAT_VENDOR = 'Red Hat';\nexport const CLOUD_VENDOR = 'Cloud';\nexport const TOPOLOGY_INV_NAME = '/insights/platform/topological-inventory';\nexport const COST_MANAGEMENT_APP_NAME = '/insights/platform/cost-management';\nexport const CLOUD_METER_APP_NAME = '/insights/platform/cloud-meter';\nexport const PROVISIONING_APP_NAME = '/insights/platform/provisioning';\nexport const CATALOG_APP = '/insights/platform/catalog';\nexport const OPENSHIFT_NAME = 'openshift';\n\nexport const HCS_APP_NAME = 'Hybrid Committed Spend';\nexport const COST_MANAGEMENT_APP_ID = '2'; // use only for Cost overwrite to HCS!\n\nexport const getActiveCategory = () => new URLSearchParams(window.location.search).get('activeCategory');\n\nexport const timeoutedApps = (appTypes) => [\n  appTypes.find(({ name }) => name === CLOUD_METER_APP_NAME)?.id,\n  appTypes.find(({ name }) => name === COST_MANAGEMENT_APP_NAME)?.id,\n];\n","export const disabledMessage = (intl, isOrgAdmin) =>\n  isOrgAdmin\n    ? intl.formatMessage({\n        id: 'sources.notAdminButton',\n        defaultMessage: 'To perform this action, you must add Sources Administrator permissions to your user.',\n      })\n    : intl.formatMessage({\n        id: 'sources.notWritePermissionButton',\n        defaultMessage:\n          'To perform this action, your Organization Administrator must grant you Sources Administrator permissions.',\n      });\n\nconst disabledTooltipProps = (intl, isOrgAdmin) => ({\n  tooltip: disabledMessage(intl, isOrgAdmin),\n  isDisabled: true,\n  className: 'src-m-dropdown-item-disabled',\n});\n\nexport default disabledTooltipProps;\n","import React from 'react';\n\nlet boldId = 0;\n\nexport const bold = (chunks) => <b key={`b-${chunks.length}-${boldId++}}`}>{chunks}</b>;\n","import {\n  ACTION_TYPES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  FILTER_SOURCES,\n  PAGE_AND_SIZE,\n  SET_CATEGORY,\n  SET_COUNT,\n  SORT_ENTITIES,\n  STATUS_CHECK_PENDING,\n} from './actionTypes';\nimport { CLOUD_VENDOR } from '../../utilities/constants';\n\nexport const defaultSourcesState = {\n  loaded: 0,\n  pageSize: 50,\n  pageNumber: 1,\n  entities: [],\n  numberOfEntities: 0,\n  appTypesLoaded: false,\n  sourceTypesLoaded: false,\n  filterValue: {},\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n  removingSources: [],\n  activeCategory: CLOUD_VENDOR,\n  appTypes: [],\n  sourceTypes: [],\n  hcsEnrolled: false,\n  hcsEnrolledLoaded: false,\n};\n\nexport const entitiesPending = (state, { options }) => ({\n  ...state,\n  loaded: state.loaded + 1,\n  paginationClicked: false,\n  ...options,\n});\n\nexport const entitiesLoaded = (state, { payload: { sources, meta }, options }) => ({\n  ...state,\n  loaded: Math.max(state.loaded - 1, 0),\n  entities: sources,\n  numberOfEntities: meta?.count,\n  ...options,\n});\n\nexport const entitiesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesPending = (state) => ({\n  ...state,\n  sourceTypes: [],\n  sourceTypesLoaded: false,\n});\n\nexport const sourceTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesLoaded = (state, { payload: sourceTypes }) => ({\n  ...state,\n  sourceTypes,\n  sourceTypesLoaded: true,\n});\n\nexport const hcsEnrolledPending = (state) => ({\n  ...state,\n  hcsEnrolled: false,\n  hcsEnrolledLoaded: false,\n});\n\nexport const hcsEnrolledRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const hcsEnrolledLoaded = (state, { payload: hcsDeal }) => ({\n  ...state,\n  hcsEnrolled: hcsDeal,\n  hcsEnrolledLoaded: true,\n});\n\nexport const appTypesPending = (state) => ({\n  ...state,\n  appTypes: [],\n  appTypesLoaded: false,\n});\n\nexport const appTypesLoaded = (state, { payload: appTypes }) => ({\n  ...state,\n  appTypes,\n  appTypesLoaded: true,\n});\n\nexport const appTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sortEntities = (state, { payload: { column, direction } }) => ({\n  ...state,\n  sortBy: column,\n  sortDirection: direction,\n});\n\nexport const setPageAndSize = (state, { payload: { page, size } }) => ({\n  ...state,\n  pageSize: size,\n  pageNumber: page,\n});\n\nexport const filterSources = (state, { payload: { value } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    ...value,\n  },\n  pageNumber: 1,\n});\n\nexport const sourceEditRemovePending = (state, { meta }) => ({\n  ...state,\n  removingSources: [...state.removingSources, meta.sourceId],\n});\n\nexport const sourceEditRemoveFulfilled = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n  entities: state.entities.filter((entity) => entity.id !== meta.sourceId),\n});\n\nexport const sourceEditRemoveRejected = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n});\n\nexport const appRemovingPending = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: true,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingFulfilled = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.filter((app) => app.id !== meta.appId),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingRejected = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: undefined,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const addAppToSource = (state, { payload: { sourceId, app } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          applications: [...entity.applications, app],\n        }\n      : entity\n  ),\n});\n\nexport const setCount = (state, { payload: { count } }) => ({\n  ...state,\n  numberOfEntities: count,\n});\n\nexport const addHiddenSource = (state, { payload: { source } }) => ({\n  ...state,\n  entities: [...state.entities, { ...source, hidden: true }],\n});\n\nexport const clearFilters = (state) => ({\n  ...state,\n  filterValue: {},\n  pageNumber: 1,\n});\n\nexport const sourceRenamePending = (state, { payload: { id, name } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === id\n      ? {\n          ...entity,\n          name,\n        }\n      : entity\n  ),\n});\n\nexport const sourceStatusCheckPending = (state, { payload: { sourceId } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          isCheckPending: true,\n        }\n      : entity\n  ),\n});\n\nconst setCategory = (state, { payload: { category } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    source_type_id: [],\n    applications: [],\n  },\n  activeCategory: category,\n});\n\nexport default {\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n  [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n  [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: entitiesRejected,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING]: sourceTypesPending,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED]: sourceTypesLoaded,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED]: sourceTypesRejected,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_PENDING]: hcsEnrolledPending,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_FULFILLED]: hcsEnrolledLoaded,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_REJECTED]: hcsEnrolledRejected,\n  [ACTION_TYPES.LOAD_APP_TYPES_PENDING]: appTypesPending,\n  [ACTION_TYPES.LOAD_APP_TYPES_FULFILLED]: appTypesLoaded,\n  [ACTION_TYPES.LOAD_APP_TYPES_REJECTED]: appTypesRejected,\n  [ACTION_TYPES.REMOVE_SOURCE_PENDING]: sourceEditRemovePending,\n  [ACTION_TYPES.REMOVE_SOURCE_FULFILLED]: sourceEditRemoveFulfilled,\n  [ACTION_TYPES.REMOVE_SOURCE_REJECTED]: sourceEditRemoveRejected,\n  [ACTION_TYPES.REMOVE_APPLICATION_PENDING]: appRemovingPending,\n  [ACTION_TYPES.REMOVE_APPLICATION_FULFILLED]: appRemovingFulfilled,\n  [ACTION_TYPES.REMOVE_APPLICATION_REJECTED]: appRemovingRejected,\n  [ACTION_TYPES.RENAME_SOURCE_PENDING]: sourceRenamePending,\n  [ACTION_TYPES.RENAME_SOURCE_REJECTED]: sourceRenamePending,\n\n  [SORT_ENTITIES]: sortEntities,\n  [PAGE_AND_SIZE]: setPageAndSize,\n  [FILTER_SOURCES]: filterSources,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [SET_COUNT]: setCount,\n  [ADD_HIDDEN_SOURCE]: addHiddenSource,\n  [STATUS_CHECK_PENDING]: sourceStatusCheckPending,\n  [CLEAR_FILTERS]: clearFilters,\n  [SET_CATEGORY]: setCategory,\n};\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const defaultUserState = {\n  writePermissions: undefined,\n  isOrgAdmin: undefined,\n};\n\nexport const writePermissionsPending = (state) => ({\n  ...state,\n  writePermissions: undefined,\n});\n\nexport const writePermissionsLoaded = (state, { payload: writePermissions }) => ({\n  ...state,\n  writePermissions,\n});\n\nexport const isOrgAdminPending = (state) => ({\n  ...state,\n  isOrgAdmin: undefined,\n});\n\nexport const isOrgAdminLoaded = (state, { payload: isOrgAdmin }) => ({\n  ...state,\n  isOrgAdmin,\n});\n\nexport default {\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING]: writePermissionsPending,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED]: writePermissionsLoaded,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED]: writePermissionsPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_PENDING]: isOrgAdminPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_FULFILLED]: isOrgAdminLoaded,\n  [ACTION_TYPES.SET_ORG_ADMIN_REJECTED]: isOrgAdminPending,\n};\n","import ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport SourcesReducer, { defaultSourcesState } from '../redux/sources/reducer';\nimport UserReducer, { defaultUserState } from '../redux/user/reducer';\nimport { updateQuery } from './urlQuery';\nimport { ACTION_TYPES } from '../redux/sources/actionTypes';\n\nexport const urlQueryMiddleware = (store) => (next) => (action) => {\n  if (action.type === ACTION_TYPES.LOAD_ENTITIES_PENDING) {\n    const sources = store.getState().sources;\n    updateQuery({ ...sources, ...action.options });\n  }\n\n  next(action);\n};\n\nexport const getStore = (addMiddlewares = [], initialState = {}) => {\n  const middlewares = [\n    thunk,\n    notificationsMiddleware({\n      errorTitleKey: 'error.title',\n      errorDescriptionKey: 'error.detail',\n    }),\n    promise,\n    urlQueryMiddleware,\n    ...addMiddlewares,\n  ];\n\n  const registry = new ReducerRegistry({}, middlewares);\n\n  registry.register({\n    sources: applyReducerHash(SourcesReducer, { ...defaultSourcesState, ...initialState.sources }),\n  });\n  registry.register({ user: applyReducerHash(UserReducer, { ...defaultUserState, ...initialState.user }) });\n  registry.register({ notifications: notificationsReducer });\n\n  return registry.getStore();\n};\n\nexport const getProdStore = () => getStore();\n","const tryAgainMessage = (intl, error) =>\n  intl.formatMessage(\n    {\n      id: 'tryAgain.text',\n      defaultMessage: '{ error }. Please try again.',\n    },\n    { error }\n  );\n\nexport default tryAgainMessage;\n","import { restFilterGenerator } from '../api/entities';\nimport { AVAILABLE, UNAVAILABLE } from '../views/formatters';\nimport { sourcesColumns } from '../views/sourcesViewDefinition';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from './constants';\n\nexport const updateQuery = ({ sortBy, sortDirection, pageNumber, pageSize, filterValue, activeCategory }) => {\n  const sortQuery = `sort_by[]=${sortBy}:${sortDirection}`;\n\n  const paginationQuery = `limit=${pageSize}&offset=${(pageNumber - 1) * pageSize}&category=${activeCategory || CLOUD_VENDOR}`;\n\n  const filterQuery = restFilterGenerator(filterValue);\n\n  const query = `?${sortQuery}&${paginationQuery}${filterQuery ? `&${filterQuery}` : ''}`;\n\n  const fullHref = decodeURIComponent(`${window.location.pathname}${query}`);\n\n  if (location.href !== fullHref) {\n    return history.replaceState('', '', fullHref);\n  }\n\n  return null;\n};\n\nexport const loadEnhancedAttributes = (params) => {\n  const urlParams = params || new URLSearchParams(window.location.search);\n\n  const applications = urlParams.getAll('application');\n  const types = urlParams.getAll('type');\n\n  return {\n    applications: applications.length && applications,\n    types: types.length && types,\n  };\n};\n\nexport const parseQuery = (getState) => {\n  let fetchOptions = {};\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const sortByRaw = urlParams.get('sort_by[]');\n\n  let sortBy;\n  let sortDirection;\n\n  if (sortByRaw) {\n    sortBy = sortByRaw.split(':')[0];\n    sortDirection = sortByRaw.split(':')[1];\n\n    sortBy = sourcesColumns({ formatMessage: () => '' })\n      .filter(({ sortable }) => sortable)\n      .map(({ value }) => value)\n      .includes(sortBy)\n      ? sortBy\n      : 'created_at';\n    sortDirection = ['desc', 'asc'].includes(sortDirection) ? sortDirection : 'desc';\n  }\n\n  if (sortBy && sortDirection) {\n    fetchOptions = {\n      sortBy,\n      sortDirection,\n    };\n  }\n\n  const pageSize = urlParams.get('limit');\n  const offset = urlParams.get('offset');\n\n  let pageNumber;\n\n  if (offset && pageSize) {\n    pageNumber = offset / pageSize + 1;\n    if (isNaN(pageNumber)) {\n      pageNumber = undefined;\n    }\n  }\n\n  if (pageSize && pageNumber) {\n    fetchOptions = {\n      ...fetchOptions,\n      pageNumber: parseInt(pageNumber, 10),\n      pageSize: Math.min(parseInt(pageSize, 10), 100),\n    };\n  }\n\n  let filterValue = {};\n\n  const name = urlParams.get('filter[name][contains_i]');\n\n  if (name) {\n    filterValue = { name };\n  }\n\n  const sourceTypes = urlParams.getAll('filter[source_type_id][]');\n\n  if (sourceTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      source_type_id: sourceTypes,\n    };\n  }\n\n  const applicationTypes = urlParams.getAll('filter[applications][application_type_id][eq][]');\n\n  if (applicationTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      applications: applicationTypes,\n    };\n  }\n\n  if (urlParams.get('filter[availability_status]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [AVAILABLE],\n    };\n  } else if (urlParams.get('filter[availability_status][]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [UNAVAILABLE],\n    };\n  }\n\n  const { applications, types } = loadEnhancedAttributes(urlParams);\n\n  if (applications || types) {\n    const { appTypes, sourceTypes } = getState().sources;\n\n    const applicationIds = applications.map?.((app) => appTypes.find(({ name }) => name.includes(app))?.id).filter(Boolean);\n    const typeIds = types.map?.((type) => sourceTypes.find(({ name }) => name === type)?.id).filter(Boolean);\n\n    filterValue = {\n      ...filterValue,\n      ...(applicationIds?.length && { applications: applicationIds }),\n      ...(typeIds?.length && { source_type_id: typeIds }),\n    };\n  }\n\n  const hasSomeFilterValue =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value)\n      .filter(Boolean).length > 0;\n\n  if (hasSomeFilterValue) {\n    fetchOptions = {\n      ...fetchOptions,\n      filterValue,\n    };\n  }\n\n  const activeCategory = urlParams.get('category') || urlParams.get('activeVendor');\n\n  if (activeCategory === CLOUD_VENDOR || activeCategory === REDHAT_VENDOR) {\n    fetchOptions = {\n      ...fetchOptions,\n      activeCategory,\n    };\n  }\n\n  return fetchOptions;\n};\n","export const linkBasename = '/settings/sources';\nexport const mergeToBasename = (to, basename) => {\n  if (typeof to === 'string') {\n    // replace possible \"//\" after basename\n    return `${basename}/${to}`.replaceAll('//', '/');\n  }\n\n  return {\n    ...to,\n    pathname: `${basename}/${to.pathname}`.replaceAll('//', '/'),\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Badge, Button, Label, LabelGroup, Popover, Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\n\nimport { ACCOUNT_AUTHORIZATION } from '../components/constants';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { replaceRouteId, routes } from '../Routing';\nimport AppLink from '../components/AppLink';\n\nexport const defaultPort = (scheme) =>\n  ({\n    http: '80',\n    https: '443',\n  }[scheme]);\n\nexport const importsTexts = (value) =>\n  ({\n    cfme: (\n      <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n      />\n    ),\n  }[value.toLowerCase()]);\n\nexport const schemaToPort = (schema, port) => (port && String(port) !== defaultPort(schema) ? `:${port}` : '');\n\nexport const endpointToUrl = (endpoint) => {\n  const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n  const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n  const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n  if (url === '://') {\n    return;\n  }\n\n  return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n  return type && type.name === 'openshift';\n};\n\nexport const formatURL = (source) => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n  const type = sourceTypes.find((type) => type.id === sourceType);\n  return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = (str) => (\n  <span className=\"src-c-help-cursor\">\n    <DateFormat type=\"relative\" date={str} />\n  </span>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n  <TextContent>\n    <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>{name}</Link>\n    <br key={`${source.id}-br`} />\n    <Text key={source.id} component={TextVariants.small}>\n      {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n    </Text>\n  </TextContent>\n);\n\nexport const importedFormatter = (value) => {\n  if (!value) {\n    return null;\n  }\n\n  const text = importsTexts(value);\n\n  if (text) {\n    return (\n      <Tooltip content={text}>\n        <Badge isRead className=\"src-m-help-cursor\">\n          <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n        </Badge>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Badge isRead>\n      <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n    </Badge>\n  );\n};\n\nexport const AVAILABLE = 'available';\nexport const UNAVAILABLE = 'unavailable';\nexport const UNKNOWN = 'unknown';\nexport const PARTIALLY_UNAVAILABLE = 'partially_available';\nexport const IN_PROGRESS = 'in_progress';\nexport const PAUSED = 'paused_at';\n\nexport const getStatusColor = (status) =>\n  ({\n    [UNAVAILABLE]: 'red',\n    [AVAILABLE]: 'green',\n    [PARTIALLY_UNAVAILABLE]: 'orange',\n    [PAUSED]: 'cyan',\n  }[status] || 'grey');\n\nexport const getStatusText = (status) =>\n  ({\n    [UNAVAILABLE]: <FormattedMessage id=\"sources.unavailable\" defaultMessage=\"Unavailable\" />,\n    [AVAILABLE]: <FormattedMessage id=\"sources.available\" defaultMessage=\"Available\" />,\n    [PARTIALLY_UNAVAILABLE]: <FormattedMessage id=\"sources.partiallyAvailable\" defaultMessage=\"Partially available\" />,\n    [IN_PROGRESS]: <FormattedMessage id=\"sources.inProgress\" defaultMessage=\"In progress\" />,\n    [PAUSED]: <FormattedMessage id=\"sources.paused\" defaultMessage=\"Paused\" />,\n  }[status] || <FormattedMessage id=\"sources.unknown\" defaultMessage=\"Unknown\" />);\n\nexport const UnknownError = () => <FormattedMessage id=\"sources.unknownError\" defaultMessage=\"unavailable\" />;\n\nexport const formatAvailibilityErrors = (appTypes, errors) => (\n  <React.Fragment>\n    {errors.source && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.sourceError\"\n          defaultMessage=\"Source's status: { error }\"\n          values={{ error: errors.source }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.endpoint && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.endpointError\"\n          defaultMessage=\"Endpoint error: { error }\"\n          values={{ error: errors.endpoint }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.authentications && (\n      <FormattedMessage\n        id=\"sources.authErrors\"\n        defaultMessage=\"Authentication {count, plural, one {status} other {statuses}} : { errors }\"\n        values={{\n          count: errors.authentications.length,\n          errors: errors.authentications.map(({ error, type }) => (\n            <React.Fragment key={type}>\n              <FormattedMessage id=\"sources.errorAuthTemplate\" defaultMessage=\"{ type }: { error }\" values={{ error, type }} />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n    {errors.applications && (\n      <FormattedMessage\n        id=\"sources.appErrors\"\n        defaultMessage=\"Application {count, plural, one {status} other {statutes}}: { errors }\"\n        values={{\n          count: errors.applications.length,\n          errors: errors.applications.map(({ error, id }) => (\n            <React.Fragment key={id}>\n              <FormattedMessage\n                id=\"sources.errorAppTemplate\"\n                defaultMessage=\"{ app }: { error }\"\n                values={{\n                  error,\n                  app: appTypes.find((app) => app.id === id)?.display_name || id,\n                }}\n              />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport const getStatusTooltipText = (status, appTypes, errors = {}) =>\n  ({\n    [UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [AVAILABLE]: <FormattedMessage id=\"sources.appStatusOK\" defaultMessage=\"Everything works fine.\" />,\n    [PARTIALLY_UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n    [PAUSED]: (\n      <FormattedMessage\n        id=\"sources.pausedStatus\"\n        defaultMessage=\"Data collection is temporarily disabled. Resume source to reestablish connection.\"\n      />\n    ),\n  }[status] || <FormattedMessage id=\"sources.appStatusUnknown\" defaultMessage=\"Status has not been verified.\" />);\n\nexport const getAllErrors = ({\n  availability_status,\n  availability_status_error,\n  applications = [],\n  endpoints: [endpoint] = [],\n}) => {\n  if (availability_status === IN_PROGRESS) {\n    return { errors: {}, status: IN_PROGRESS };\n  }\n\n  let errors = {};\n  let statusesCount = 0;\n  let errorsCount = 0;\n\n  if (availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      source: availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  applications.map((app) => {\n    if (app.availability_status === UNAVAILABLE) {\n      errors = {\n        ...errors,\n        applications: [\n          ...(errors.applications ? errors.applications : []),\n          {\n            id: app.application_type_id,\n            error: app.availability_status_error || <UnknownError />,\n          },\n        ],\n      };\n      statusesCount++;\n      errorsCount++;\n    } else if (app.availability_status === AVAILABLE) {\n      statusesCount++;\n    }\n  });\n\n  if (endpoint?.availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      endpoint: endpoint.availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (endpoint?.availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  if (endpoint?.authentications) {\n    endpoint.authentications.map((auth) => {\n      if (auth.availability_status === UNAVAILABLE) {\n        errors = {\n          ...errors,\n          authentications: [\n            ...(errors.authentications ? errors.authentications : []),\n            {\n              type: auth.authtype,\n              error: auth.availability_status_error || <UnknownError />,\n            },\n          ],\n        };\n        statusesCount++;\n        errorsCount++;\n      } else if (auth.availability_status === AVAILABLE) {\n        statusesCount++;\n      }\n    });\n  }\n\n  return {\n    errors,\n    status:\n      errorsCount === 0\n        ? statusesCount === 0\n          ? UNKNOWN\n          : AVAILABLE\n        : errorsCount === statusesCount\n        ? UNAVAILABLE\n        : PARTIALLY_UNAVAILABLE,\n  };\n};\n\nexport const availabilityFormatter = (_status, source, { appTypes }) => {\n  const meta = getAllErrors(source);\n  const status = source.paused_at ? PAUSED : meta.status;\n\n  return (\n    <span>\n      <Popover\n        showClose={false}\n        aria-label={`${status} popover`}\n        bodyContent={getStatusTooltipText(status, appTypes, meta.errors)}\n      >\n        <Label\n          className=\"src-m-clickable\"\n          color={getStatusColor(status)}\n          {...(source.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n          {...(source.paused_at && { icon: <PauseIcon /> })}\n        >\n          {getStatusText(status)}\n        </Label>\n      </Popover>\n    </span>\n  );\n};\n\nexport const getStatusTooltipTextApp = (status, error, intl) =>\n  ({\n    [AVAILABLE]: intl.formatMessage({\n      id: 'sources.appStatusOK',\n      defaultMessage: 'Everything works fine.',\n    }),\n    [UNAVAILABLE]: error || intl.formatMessage({ id: 'sources.unknownError', defaultMessage: 'Unknown error' }),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n  }[status] ||\n  intl.formatMessage({\n    id: 'sources.appStatusUnknown',\n    defaultMessage: 'Status has not been verified.',\n  }));\n\nexport const ApplicationLabel = ({ app, showStatusText, ...props }) => {\n  const intl = useIntl();\n\n  const statusText = getStatusTooltipTextApp(app.availability_status, app.availability_status_error, intl);\n\n  return (\n    <Popover\n      showClose={false}\n      key={app.display_name}\n      aria-label={`${app.display_name} popover`}\n      bodyContent={\n        app.paused_at\n          ? `${statusText} ${intl.formatMessage({\n              id: 'appplication.paused.additionalText',\n              defaultMessage: 'Resume this application to continue data collection.',\n            })}`\n          : statusText\n      }\n      {...(app.paused_at && {\n        headerContent: intl.formatMessage({\n          id: 'application.paused.header',\n          defaultMessage: 'Application paused',\n        }),\n      })}\n    >\n      <Label\n        className=\"src-m-clickable\"\n        color={getStatusColor(app.availability_status)}\n        {...(app.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n        {...(app.paused_at && { icon: <PauseIcon /> })}\n        {...props}\n      >\n        {showStatusText ? getStatusText(app.availability_status) : app.display_name}\n      </Label>\n    </Popover>\n  );\n};\n\nApplicationLabel.propTypes = {\n  app: PropTypes.shape({\n    display_name: PropTypes.string,\n    availability_status: PropTypes.string,\n    availability_status_error: PropTypes.string,\n    paused_at: PropTypes.string,\n  }),\n  showStatusText: PropTypes.bool,\n};\n\nconst EnhancedLabelGroup = ({ applications, ...props }) => {\n  const intl = useIntl();\n\n  return (\n    <LabelGroup\n      {...props}\n      numLabels={2}\n      collapsedText={intl.formatMessage(\n        { id: 'applications.showMore', defaultMessage: '{remaining} more' },\n        { remaining: '${remaining}' }\n      )}\n    >\n      {applications.map((app, index) => (\n        <ApplicationLabel app={app} key={app.id || index} />\n      ))}\n    </LabelGroup>\n  );\n};\n\nEnhancedLabelGroup.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      display_name: PropTypes.string,\n      availability_status: PropTypes.string,\n      availability_status_error: PropTypes.string,\n      paused_at: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport const getAppStatus = (app, source, appTypes) => {\n  const application = appTypes.find((type) => type.id === app.application_type_id);\n\n  if (application) {\n    let availability_status = app.availability_status;\n    let availability_status_error = app.availability_status_error;\n\n    if (app.authentications?.[0]?.resource_type === 'Endpoint') {\n      availability_status = source.endpoints?.[0]?.availability_status;\n      availability_status_error = source.endpoints?.[0]?.availability_status_error;\n    }\n\n    return {\n      display_name: application.display_name,\n      paused_at: app.paused_at,\n      availability_status,\n      availability_status_error,\n    };\n  }\n};\n\nexport const applicationFormatter = (apps, item, { appTypes }) => {\n  const applications = apps\n    .map((app) => getAppStatus(app, item, appTypes))\n    .filter(Boolean)\n    .sort((a, b) => a.display_name.localeCompare(b.display_name));\n\n  if (applications.length === 0) {\n    return '--';\n  }\n\n  return <EnhancedLabelGroup numLabels={2} collapsedText applications={applications} />;\n};\n\nexport const configurationModeFormatter = (mode, item, { intl, sourceType }) => {\n  if (mode === ACCOUNT_AUTHORIZATION) {\n    const superKeyType = sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n    const superKeyAuth = item?.authentications?.find(({ authtype }) => authtype && authtype === superKeyType?.type);\n\n    return (\n      <React.Fragment>\n        {intl.formatMessage({\n          id: 'configurationMode.trust',\n          defaultMessage: 'Account authorization',\n        })}\n        {superKeyAuth?.availability_status === UNAVAILABLE && (\n          <Tooltip\n            position=\"top\"\n            content={\n              superKeyAuth.availability_status_error ||\n              intl.formatMessage({\n                id: 'configurationMode.trustmode.defaultError',\n                defaultMessage: 'Edit credentials required.',\n              })\n            }\n          >\n            <span className=\"pf-u-ml-sm\">\n              <ExclamationCircleIcon fill=\"#C9190B\" />\n            </span>\n          </Tooltip>\n        )}\n        <div className=\"pf-u-mt-sm\">\n          <AppLink to={replaceRouteId(routes.sourcesDetailEditCredentials.path, item.id)}>\n            <Button variant=\"link\" id=\"edit-super-credentials\" isInline>\n              {item.paused_at\n                ? intl.formatMessage({\n                    id: 'sources.viewCredentials',\n                    defaultMessage: 'View credentials',\n                  })\n                : intl.formatMessage({\n                    id: 'sources.editCredentials',\n                    defaultMessage: 'Edit credentials',\n                  })}\n            </Button>\n          </AppLink>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return intl.formatMessage({\n    id: 'configurationMode.manual',\n    defaultMessage: 'Manual configuration',\n  });\n};\n","import {\n  applicationFormatter,\n  availabilityFormatter,\n  dateFormatter,\n  importedFormatter,\n  nameFormatter,\n  sourceTypeFormatter,\n} from './formatters';\n\nexport const sourcesColumns = (intl, notSortable = false) => [\n  {\n    title: intl.formatMessage({\n      id: 'sources.name',\n      defaultMessage: 'Name',\n    }),\n    value: 'name',\n    formatter: nameFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.type',\n      defaultMessage: 'Type',\n    }),\n    value: 'source_type_id',\n    formatter: sourceTypeFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.connectedApplications',\n      defaultMessage: 'Connected applications',\n    }),\n    value: 'applications',\n    formatter: applicationFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.addedDate',\n      defaultMessage: 'Date added',\n    }),\n    value: 'created_at',\n    formatter: dateFormatter,\n    sortable: !notSortable,\n  },\n  {\n    hidden: true,\n    value: 'imported',\n    formatter: importedFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.status',\n      defaultMessage: 'Status',\n    }),\n    value: 'availability_status',\n    formatter: availabilityFormatter,\n  },\n];\n\nconst KEBAB_COLUMN = 1;\nconst COUNT_OF_COLUMNS = sourcesColumns({ formatMessage: () => '' }).length;\n\nexport const COLUMN_COUNT = COUNT_OF_COLUMNS + KEBAB_COLUMN;\n"],"names":["ErrorBoundary","error","sentryId","Sentry","this","props","dispatch","addMessage","title","toString","variant","description","stack","state","children","Fragment","errorInfo","Component","propTypes","PropTypes","connect","useDispatch","useEffect","Promise","all","type","ACTION_TYPES","insights","chrome","getUserPermissions","then","permissions","allPermission","reduce","acc","curr","permission","writePermissions","includes","payload","detail","data","auth","getUser","is_org_admin","identity","user","pathname","useLocation","sources","useSelector","shallowEqual","previousPathname","useRef","loadEnhancedAttributes","applications","types","loadSourceTypes","loadAppTypes","loadHcsEnrollment","loadEntities","parseQuery","current","updateQuery","useChrome","updateDocumentTitle","sessionStorage","removeItem","CLOUD_CARDS_KEY","locale","className","Routing","intl","useIntl","useHasWritePermissions","isOrgAdmin","formatMessage","id","defaultMessage","disabledMessage","AppNavigate","to","routes","path","source","useSource","paused_at","replaceRouteId","sourcesDetail","ElementWrapperInternal","route","redirectNoId","noPaused","writeAccess","RedirectNoId","isRequired","ElementWrapper","componentProps","useOutletContext","cloneElement","SourcesPage","lazy","SourceDetail","AddSourceWizard","SourceRemoveModal","AddApplication","RemoveAppModal","SourceRenameModal","CredentialsForm","sourcesNew","sourcesRemove","sourcesDetailRename","sourcesDetailRemove","sourcesDetailAddApp","sourcesDetailRemoveApp","sourcesDetailEditCredentials","replace","routeMap","element","childRoutes","elementProps","backPath","renderRoutes","map","Element","Route","key","useMemo","Suspense","fallback","Routes","config","window","SOURCES_API_BASE_V3","process","env","BASE_PATH","COST_API_BASE_V3","axiosInstanceInsights","axios","interceptors","request","use","response","status","logout","configureScope","scope","setTag","req_id","err","errObject","customError","captureException","errors","length","reject","message","getSourcesApi","checkAvailabilitySource","post","updateSource","patch","updateEndpoint","createEndpoint","updateAuthentication","createAuthentication","showSource","get","listSourceEndpoints","listSourceApplications","listEndpointAuthentications","deleteSource","createApplication","postGraphQL","listSourceTypes","doLoadAppTypes","deleteApplication","createAuthApp","deleteAuthentication","showAuthentication","updateApplication","showApplication","listSourceAuthentications","createSource","getEndpoint","getGoogleAccount","bulkCreate","pauseApplication","unpauseApplication","pauseSource","unpauseSource","getLighthouseLink","getProvAppType","getProvMetadata","provAppTypeId","getCostApi","listAwsRegions","doRemoveSource","sourceId","pagination","pageSize","pageNumber","sorting","sortBy","sortDirection","graphQlAttributes","doLoadEntities","filter","filterValue","category","filterQueries","name","push","source_type_id","x","join","CLOUD_VENDOR","REDHAT_VENDOR","availability_status","AVAILABLE","UNAVAILABLE","PARTIALLY_UNAVAILABLE","filtering","activeCategory","filterSection","query","doCreateApplication","doDeleteApplication","appId","errorMessage","restFilterGenerator","doLoadSource","doLoadApplicationsForEdit","handleError","undefined","JSON","stringify","errorDelete","errorDeleteDetail","AppLink","React","ref","Link","mergeToBasename","linkBasename","displayName","Navigate","PREFIX","isBeta","INSIGHTS_SERVICES","SUBWATCH_HREF","CloudCards","useState","session","getItem","isExpanded","setExpanded","setItem","Card","CardHeader","onExpand","CardTitle","CardExpandableContent","CardBody","TextContent","Grid","hasGutter","GridItem","md","Stack","StackItem","Text","color","isFilled","component","href","target","rel","useParams","loaded","useIsLoaded","appTypesLoaded","sourceTypesLoaded","applicationIsLoaded","setIsApplicationLoaded","addHiddenSource","Loader","width","height","style","role","AppPlaceholder","PaginationLoader","PlaceHolderTable","Bullseye","Spinner","size","RowWrapperLoader","row","isDeleting","initialProps","colSpan","COLUMN_COUNT","RowWrapper","CardLoader","DetailLoader","MANUAL_CONFIGURATION","ACCOUNT_AUTHORIZATION","entities","find","SORT_ENTITIES","PAGE_AND_SIZE","FILTER_SOURCES","ADD_APP_TO_SOURCE","SET_COUNT","ADD_HIDDEN_SOURCE","CLEAR_FILTERS","SET_CATEGORY","STATUS_CHECK_PENDING","checkAccountHCS","getToken","jwtToken","fetch","isProd","headers","Authorization","hcsDeal","json","options","getState","meta","noError","sourceTypes","appTypes","sortEntities","column","direction","pageAndSize","page","paginationClicked","filterSources","value","ADD_NOTIFICATION","dismissable","removeSource","removeMessage","REMOVE_NOTIFICATION","removeApplication","successTitle","errorTitle","notifications","fulfilled","setCheckPenging","clearFilters","renameSource","oldName","setActiveCategory","sourceName","b","bold","customIcon","tryAgainMessage","resumeSource","HCS_NAME","SATELLITE_NAME","ANSIBLE_TOWER_NAME","TOPOLOGY_INV_NAME","COST_MANAGEMENT_APP_NAME","CLOUD_METER_APP_NAME","PROVISIONING_APP_NAME","CATALOG_APP","HCS_APP_NAME","COST_MANAGEMENT_APP_ID","timeoutedApps","tooltip","isDisabled","boldId","chunks","defaultSourcesState","numberOfEntities","removingSources","hcsEnrolled","hcsEnrolledLoaded","addAppToSource","app","entity","sourceRenamePending","Math","max","count","fetchingError","hidden","isCheckPending","defaultUserState","writePermissionsPending","isOrgAdminPending","urlQueryMiddleware","store","next","action","getProdStore","addMiddlewares","initialState","middlewares","thunk","notificationsMiddleware","errorTitleKey","errorDescriptionKey","promise","registry","ReducerRegistry","register","applyReducerHash","SourcesReducer","UserReducer","notificationsReducer","getStore","sortQuery","paginationQuery","filterQuery","fullHref","decodeURIComponent","location","history","replaceState","params","urlParams","URLSearchParams","search","getAll","fetchOptions","sortByRaw","split","sourcesColumns","sortable","offset","isNaN","parseInt","min","applicationTypes","applicationIds","Boolean","typeIds","Object","entries","basename","replaceAll","defaultPort","scheme","http","https","endpointToUrl","endpoint","onlyTrueEndpointValues","keys","host","port","url","schema","String","schemaToPort","sourceTypeFormatter","sourceType","_item","product_name","dateFormatter","str","date","nameFormatter","TextVariants","sourceIsOpenShift","endpoints","formatURL","importedFormatter","text","cfme","toLowerCase","importsTexts","Tooltip","content","Badge","isRead","IN_PROGRESS","PAUSED","getStatusColor","getStatusText","UnknownError","formatAvailibilityErrors","values","authentications","display_name","getStatusTooltipText","availabilityFormatter","_status","availability_status_error","statusesCount","errorsCount","application_type_id","authtype","getAllErrors","Popover","showClose","bodyContent","Label","icon","ApplicationLabel","showStatusText","statusText","getStatusTooltipTextApp","headerContent","EnhancedLabelGroup","LabelGroup","numLabels","collapsedText","remaining","index","applicationFormatter","apps","item","application","resource_type","getAppStatus","sort","a","localeCompare","configurationModeFormatter","mode","superKeyType","authentication","is_superkey","superKeyAuth","position","fill","Button","isInline","notSortable","formatter"],"sourceRoot":""}