{"version":3,"file":"js/3761.xxxxxxxxxxxxxxxxxxxx.js","mappings":"0LAOA,MAAMA,EAAkB,OACxB,MAAMC,UAAiB,YACnB,WAAAC,CAAYC,GACRC,MAAMD,GACNE,KAAKC,aAAgBC,IACjBF,KAAKF,MAAMK,SAASD,EAAOA,EAAME,cAAcC,QAAQ,EAE3DL,KAAKM,MAAQ,CACTC,aAAa,IAAAC,kBAAiBZ,EAASa,aAE/C,CACA,MAAAC,GACI,MAAMC,EAAKX,KAAKF,OAAS,aAAcc,EAAS,UAAEC,EAAS,eAAEC,EAAc,SAAEX,EAAQ,eAAEY,EAAc,oBAAEC,EAAmB,QAAEC,EAAO,WAAEC,EAAU,WAAEC,EAAU,UAAEC,EAAS,MAAEC,EAAK,QAAEhB,EAAO,eAAEiB,EAAc,YAAEC,EAAW,KAAEC,EAAI,OAAEC,EAAM,SAAEC,EAAQ,UAAEC,GAAchB,EAAIb,GAAQ,IAAA8B,QAAOjB,EAAI,CAAC,aAAc,YAAa,iBAAkB,WAAY,iBAAkB,sBAAuB,UAAW,aAAc,aAAc,YAAa,QAAS,UAAW,iBAAkB,cAAe,OAAQ,SAAU,WAAY,cACvfb,EAAM+B,IAEPC,QAAQC,MAAM,YAAa,2CAE/B,MAAMC,EAAe,CAAC,GAClB,EAAC,GAAM,GAAOC,SAAS5B,KAA0B,IAAde,KACnCY,EAAa3B,QAAUA,GAAWe,GAElCjB,IAAaR,IACbqC,EAAa3B,QAAUe,GAEvB,EAAC,GAAO,GAAMa,SAASX,KACvBU,EAAaV,eAAiBA,GAElC,MAAMY,EAAiB,gBAAoB,QAASC,OAAOC,OAAO,CAAC,EAAGtC,EAAO,CAAEe,WAAW,OAAI,IAAOwB,WAAYvB,GAAiBwB,KAAM,WAAYnC,SAAUH,KAAKC,aAAc,gBAAiBgB,EAAS,aAAcL,EAAW2B,SAAUrB,EAAYsB,SAAUrB,EAAYsB,IAAMC,GAASA,IAASA,EAAKC,cAA8B,OAAdvB,IAAuBY,GAAc,IAAAY,cAAahD,EAASa,iBAAwBoC,IAAXpB,EAAuBA,EAASzB,KAAKM,MAAMC,YAAamB,KACvboB,EAAiB/B,IAAmBY,GAA4B,UAAdA,EAClDoB,EAAQD,EAAgB,OAAS,QACjCE,EAAgB3B,EAAS,gBAAoB0B,EAAO,CAAElC,WAAW,OAAI,IAAOoC,WAAY/B,GAAc,IAAOgC,UAAUX,UAAWY,QAAUL,OAA2BD,EAAX/C,EAAM+B,IACpKR,EACAF,GAAe,gBAAoB,OAAQ,CAAEN,WAAW,OAAI,IAAOuC,oBAAqB,cAAe,QAAU,MAAe,KAC9HC,EAAY1B,QAA6CA,EAAamB,EAAgB,QAAU,MAEtG,OADAd,EAAa3B,QAAmC,OAAzB2B,EAAa3B,SAA2B2B,EAAa3B,QACpE,gBAAoBgD,EAAW,CAAExC,WAAW,OAAI,IAAOyC,OAAQjC,GAAS,IAAO6B,UAAUK,WAAY1C,GAAYsC,QAASL,EAAgBhD,EAAM+B,QAAKgB,GACzJ7B,EAAuB,gBAAoB,WAAgB,KACvDgC,EACAd,GAAmB,gBAAoB,WAAgB,KACvDA,EACAc,GACJzB,GAAe,gBAAoB,OAAQ,CAAEV,WAAW,OAAI,IAAO2C,mBAAqBjC,GACxFC,GAAQ,gBAAoB,OAAQ,CAAEX,WAAW,OAAI,IAAO4C,YAAcjC,GAClF,EAEJ5B,EAASa,YAAc,WACvBb,EAAS8D,aAAe,CACpB7C,UAAW,GACXE,gBAAgB,EAChBE,SAAS,EACTC,YAAY,EACZC,YAAY,EACZC,WAAW,EACXjB,SAAUR,EACV+B,UAAU,E,oGC7DP,MAAMiC,EAAW,G","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Checkbox/Checkbox.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/htmlConstants.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Check/check.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { getDefaultOUIAId, getOUIAProps } from '../../helpers';\nimport { ASTERISK } from '../../helpers/htmlConstants';\n// tslint:disable-next-line:no-empty\nconst defaultOnChange = () => { };\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event, event.currentTarget.checked);\n        };\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(Checkbox.displayName)\n        };\n    }\n    render() {\n        const _a = this.props, { 'aria-label': ariaLabel, className, inputClassName, onChange, isLabelWrapped, isLabelBeforeButton, isValid, isDisabled, isRequired, isChecked, label, checked, defaultChecked, description, body, ouiaId, ouiaSafe, component } = _a, props = __rest(_a, ['aria-label', \"className\", \"inputClassName\", \"onChange\", \"isLabelWrapped\", \"isLabelBeforeButton\", \"isValid\", \"isDisabled\", \"isRequired\", \"isChecked\", \"label\", \"checked\", \"defaultChecked\", \"description\", \"body\", \"ouiaId\", \"ouiaSafe\", \"component\"]);\n        if (!props.id) {\n            // eslint-disable-next-line no-console\n            console.error('Checkbox:', 'id is required to make input accessible');\n        }\n        const checkedProps = {};\n        if ([true, false].includes(checked) || isChecked === true) {\n            checkedProps.checked = checked || isChecked;\n        }\n        if (onChange !== defaultOnChange) {\n            checkedProps.checked = isChecked;\n        }\n        if ([false, true].includes(defaultChecked)) {\n            checkedProps.defaultChecked = defaultChecked;\n        }\n        const inputRendered = (React.createElement(\"input\", Object.assign({}, props, { className: css(styles.checkInput, inputClassName), type: \"checkbox\", onChange: this.handleChange, \"aria-invalid\": !isValid, \"aria-label\": ariaLabel, disabled: isDisabled, required: isRequired, ref: (elem) => elem && (elem.indeterminate = isChecked === null) }, checkedProps, getOUIAProps(Checkbox.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe))));\n        const wrapWithLabel = (isLabelWrapped && !component) || component === 'label';\n        const Label = wrapWithLabel ? 'span' : 'label';\n        const labelRendered = label ? (React.createElement(Label, { className: css(styles.checkLabel, isDisabled && styles.modifiers.disabled), htmlFor: !wrapWithLabel ? props.id : undefined },\n            label,\n            isRequired && (React.createElement(\"span\", { className: css(styles.checkLabelRequired), \"aria-hidden\": \"true\" }, ASTERISK)))) : null;\n        const Component = component !== null && component !== void 0 ? component : (wrapWithLabel ? 'label' : 'div');\n        checkedProps.checked = checkedProps.checked === null ? false : checkedProps.checked;\n        return (React.createElement(Component, { className: css(styles.check, !label && styles.modifiers.standalone, className), htmlFor: wrapWithLabel ? props.id : undefined },\n            isLabelBeforeButton ? (React.createElement(React.Fragment, null,\n                labelRendered,\n                inputRendered)) : (React.createElement(React.Fragment, null,\n                inputRendered,\n                labelRendered)),\n            description && React.createElement(\"span\", { className: css(styles.checkDescription) }, description),\n            body && React.createElement(\"span\", { className: css(styles.checkBody) }, body)));\n    }\n}\nCheckbox.displayName = 'Checkbox';\nCheckbox.defaultProps = {\n    className: '',\n    isLabelWrapped: false,\n    isValid: true,\n    isDisabled: false,\n    isRequired: false,\n    isChecked: false,\n    onChange: defaultOnChange,\n    ouiaSafe: true\n};\nexport { Checkbox };\n//# sourceMappingURL=Checkbox.js.map","export const ASTERISK = '*';\n//# sourceMappingURL=htmlConstants.js.map"],"names":["defaultOnChange","Checkbox","constructor","props","super","this","handleChange","event","onChange","currentTarget","checked","state","ouiaStateId","getDefaultOUIAId","displayName","render","_a","ariaLabel","className","inputClassName","isLabelWrapped","isLabelBeforeButton","isValid","isDisabled","isRequired","isChecked","label","defaultChecked","description","body","ouiaId","ouiaSafe","component","__rest","id","console","error","checkedProps","includes","inputRendered","Object","assign","checkInput","type","disabled","required","ref","elem","indeterminate","getOUIAProps","undefined","wrapWithLabel","Label","labelRendered","checkLabel","modifiers","htmlFor","checkLabelRequired","Component","check","standalone","checkDescription","checkBody","defaultProps","ASTERISK"],"sourceRoot":""}