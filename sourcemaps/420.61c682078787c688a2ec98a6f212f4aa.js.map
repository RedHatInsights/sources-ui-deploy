{"version":3,"file":"js/420.1647955583134.9e9c00c2591692585009.js","mappings":"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","sources":["webpack:///./node_modules/@formatjs/fast-memoize/lib/index.js","webpack:///./node_modules/@formatjs/intl/lib/src/utils.js","webpack:///./src/Routes.js","webpack:///./src/frontend-components-copies/interceptors.js","webpack:///./src/api/constants.js","webpack:///./src/api/entities.js","webpack:///./src/components/SourcesTable/loaders.js","webpack:///./src/components/TilesShared/ImageWithPlaceholder.js","webpack:///./src/marketplace/MarketplaceCard.js","webpack:///./src/marketplace/constants.js","webpack:///./src/marketplace/api.js","webpack:///./src/marketplace/SkeletonMarketplaceCard.js","webpack:///./src/marketplace/MarketplaceModal.js","webpack:///./src/marketplace/SeeMoreCard.js","webpack:///./src/marketplace/RecommendedServices.js","webpack:///./src/utilities/constants.js","webpack:///./src/views/formatters.js","webpack:///./src/utilities/isSourceAzureRHEL.js","webpack:///./src/views/sourcesViewDefinition.js","webpack:///./node_modules/react-intl/lib/src/components/injectIntl.js","webpack:///./node_modules/react-intl/lib/src/utils.js"],"sourcesContent":["//\n// Main\n//\nexport default function memoize(fn, options) {\n    var cache = options && options.cache ? options.cache : cacheDefault;\n    var serializer = options && options.serializer ? options.serializer : serializerDefault;\n    var strategy = options && options.strategy ? options.strategy : strategyDefault;\n    return strategy(fn, {\n        cache: cache,\n        serializer: serializer,\n    });\n}\n//\n// Strategy\n//\nfunction isPrimitive(value) {\n    return (value == null || typeof value === 'number' || typeof value === 'boolean'); // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\nfunction monadic(fn, cache, serializer, arg) {\n    var cacheKey = isPrimitive(arg) ? arg : serializer(arg);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.call(this, arg);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction variadic(fn, cache, serializer) {\n    var args = Array.prototype.slice.call(arguments, 3);\n    var cacheKey = serializer(args);\n    var computedValue = cache.get(cacheKey);\n    if (typeof computedValue === 'undefined') {\n        computedValue = fn.apply(this, args);\n        cache.set(cacheKey, computedValue);\n    }\n    return computedValue;\n}\nfunction assemble(fn, context, strategy, cache, serialize) {\n    return strategy.bind(context, fn, cache, serialize);\n}\nfunction strategyDefault(fn, options) {\n    var strategy = fn.length === 1 ? monadic : variadic;\n    return assemble(fn, this, strategy, options.cache.create(), options.serializer);\n}\nfunction strategyVariadic(fn, options) {\n    return assemble(fn, this, variadic, options.cache.create(), options.serializer);\n}\nfunction strategyMonadic(fn, options) {\n    return assemble(fn, this, monadic, options.cache.create(), options.serializer);\n}\n//\n// Serializer\n//\nvar serializerDefault = function () {\n    return JSON.stringify(arguments);\n};\n//\n// Cache\n//\nfunction ObjectWithoutPrototypeCache() {\n    this.cache = Object.create(null);\n}\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n    return this.cache[key];\n};\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n    this.cache[key] = value;\n};\nvar cacheDefault = {\n    create: function create() {\n        // @ts-ignore\n        return new ObjectWithoutPrototypeCache();\n    },\n};\nexport var strategies = {\n    variadic: strategyVariadic,\n    monadic: strategyMonadic,\n};\n","import { __assign, __spreadArray } from \"tslib\";\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport memoize, { strategies } from '@formatjs/fast-memoize';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, allowlist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return allowlist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nvar defaultErrorHandler = function (error) {\n    // @ts-ignore just so we don't need to declare dep on @types/node\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    fallbackOnEmptyString: true,\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: strategies.variadic,\n    });\n    var getNumberFormat = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: strategies.variadic,\n    });\n    var getPluralRules = memoize(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArray([void 0], args, false)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoize(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: strategies.variadic,\n        }),\n        getDisplayNames: memoize(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArray([void 0], args, false)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \".concat(type, \" format named: \").concat(name)));\n}\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AppPlaceholder } from './components/SourcesTable/loaders';\n\nconst SourcesPage = lazy(() => import(/* webpackChunkName: \"sourcesPage\" */ './pages/Sources'));\nconst SourceDetail = lazy(() => import(/* webpackChunkName: \"sourceDetail\" */ './pages/Detail'));\n\nexport const routes = {\n  sources: {\n    path: '/sources',\n  },\n  sourcesNew: {\n    path: '/sources/new',\n    writeAccess: true,\n  },\n  sourcesRemove: {\n    path: '/sources/remove/:id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetail: {\n    path: '/sources/detail/:id',\n    redirectNoId: true,\n  },\n  sourcesDetailRename: {\n    path: '/sources/detail/:id/rename',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemove: {\n    path: '/sources/detail/:id/remove',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailAddApp: {\n    path: '/sources/detail/:id/add_app/:app_type_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemoveApp: {\n    path: '/sources/detail/:id/remove_app/:app_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailEditCredentials: {\n    path: '/sources/detail/:id/edit_credentials',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n};\n\nexport const replaceRouteId = (path, id) => path.replace(':id', id);\n\nconst Routes = () => (\n  <Suspense fallback={<AppPlaceholder />}>\n    <Switch>\n      <Route path={routes.sourcesDetail.path} component={SourceDetail} />\n      <Route component={SourcesPage} />\n    </Switch>\n  </Suspense>\n);\n\nexport default Routes;\n","import axios from 'axios';\nimport { configureScope, captureException } from '@sentry/minimal';\n\nexport async function authInterceptor(config) {\n  await window.insights.chrome.auth.getUser();\n  return config;\n}\n\nexport function responseDataInterceptor(response) {\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}\n\nexport function interceptor401(error) {\n  if (error.response && error.response.status === 401) {\n    window.insights.chrome.auth.logout();\n    return false;\n  }\n\n  throw error;\n}\n\nexport function interceptor500(error) {\n  if (error.response && error.response.status >= 500 && error.response.status < 600) {\n    configureScope((scope) => {\n      scope.setTag('request_id', error.response.req_id);\n    });\n  }\n\n  throw error;\n}\n\nexport function errorInterceptor(err) {\n  if (!axios.isCancel(err)) {\n    try {\n      const errObject = { ...err };\n      if (errObject.response && errObject.response.data) {\n        throw errObject.response.data;\n      }\n\n      throw err;\n    } catch (customError) {\n      const sentryId = captureException(customError);\n      customError.sentryId = sentryId;\n      throw customError;\n    }\n  }\n}\n","export const SOURCES_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/sources/v3.1`;\n","import axios from 'axios';\n\nimport * as interceptors from '../frontend-components-copies/interceptors';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\nimport { AVAILABLE, PARTIALLY_UNAVAILABLE, UNAVAILABLE } from '../views/formatters';\n\nimport { SOURCES_API_BASE_V3 } from './constants';\n\nexport const graphQlErrorInterceptor = (response) => {\n  if (response.errors && response.errors.length > 0) {\n    return Promise.reject({ detail: response.errors[0].message });\n  }\n\n  return response;\n};\n\nexport const interceptor403 = (error) => {\n  if (error.errors && error.errors[0].status === 403) {\n    return Promise.reject({\n      detail: error.errors[0].detail,\n      title: 'Forbidden access',\n    });\n  }\n\n  throw error;\n};\n\nconst axiosInstanceInsights = axios.create();\naxiosInstanceInsights.interceptors.request.use(interceptors.authInterceptor);\naxiosInstanceInsights.interceptors.response.use(interceptors.responseDataInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor401);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor500);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.errorInterceptor);\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptor403);\n\nexport { axiosInstanceInsights as axiosInstance };\n\nexport const getSourcesApi = () => ({\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  updateSource: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/sources/${id}`, data),\n  updateEndpoint: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/endpoints/${id}`, data),\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  updateAuthentication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/authentications/${id}`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  showSource: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  listSourceEndpoints: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/endpoints`),\n  listSourceApplications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/applications`),\n  listEndpointAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}/authentications`),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  doLoadAppTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  deleteApplication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  deleteAuthentication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  showAuthentication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  updateApplication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/applications/${id}`, data),\n  showApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  listSourceAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/authentications`),\n  createSource: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources`, data),\n  getEndpoint: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}`),\n  getGoogleAccount: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account`),\n  bulkCreate: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/bulk_create`, data),\n  pauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/pause`),\n  unpauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/unpause`),\n  pauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/pause`),\n  unpauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/unpause`),\n});\n\nexport const doLoadAppTypes = () => getSourcesApi().doLoadAppTypes();\n\nexport const doRemoveSource = (sourceId) =>\n  getSourcesApi()\n    .deleteSource(sourceId)\n    .catch((error) => {\n      throw { error: { detail: error.errors[0].detail } };\n    });\n\nexport const pagination = (pageSize, pageNumber) => `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) => {\n  if (!sortBy) {\n    return '';\n  }\n\n  if (sortBy === 'source_type_id') {\n    return `sort_by:{source_type:{product_name:\"${sortDirection}\"}}`;\n  }\n\n  if (sortBy === 'applications') {\n    return `sort_by:{applications:{__count:\"${sortDirection}\"}}`;\n  }\n\n  return `sort_by:{${sortBy}:\"${sortDirection}\"}`;\n};\n\nexport const filtering = (filterValue = {}, activeVendor) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`name: { contains_i: \"${filterValue.name}\" }`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterQueries.push(`source_type_id: { eq: [${filterValue.source_type_id.map((x) => `\"${x}\"`).join(', ')}] }`);\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterQueries.push(\n      `applications: { application_type_id: { eq: [${filterValue.applications.map((x) => `\"${x}\"`).join(', ')}] }}`\n    );\n  }\n\n  if (activeVendor === CLOUD_VENDOR) {\n    filterQueries.push(`source_type: { vendor: { not_eq: \"Red Hat\"} }`);\n  }\n\n  if (activeVendor === REDHAT_VENDOR) {\n    filterQueries.push('source_type: { vendor: \"Red Hat\" }');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`availability_status: { eq: \"${AVAILABLE}\" }`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`availability_status: { eq: [\"${PARTIALLY_UNAVAILABLE}\", \"${UNAVAILABLE}\"] }`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return `filter: { ${filterQueries.join(', ')} }`;\n  }\n\n  return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    imported,\n    availability_status,\n    source_ref,\n    last_checked_at,\n    updated_at,\n    last_available_at,\n    app_creation_workflow,\n    paused_at,\n    authentications { authtype, username, availability_status_error, availability_status }\n    applications { application_type_id, id, availability_status_error, availability_status, paused_at, authentications { id, resource_type } },\n    endpoints { id, scheme, host, port, path, receptor_node, role, certificate_authority, verify_ssl, availability_status_error, availability_status, authentications { authtype, availability_status, availability_status_error } }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue, activeVendor }) => {\n  const filter = filtering(filterValue, activeVendor);\n\n  const filterSection = [pagination(pageSize, pageNumber), sorting(sortBy, sortDirection), filter].join(',');\n\n  return getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(${filterSection})\n      { ${graphQlAttributes} },\n     sources_aggregate(${filter}){aggregate{total_count}}\n    }`,\n    })\n    .then(({ data }) => data);\n};\n\nexport const doCreateApplication = (data) => getSourcesApi().createApplication(data);\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n  getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => {\n      throw { error: { title: errorMessage, detail } };\n    });\n\nexport const restFilterGenerator = (filterValue = {}, activeVendor) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterValue.applications.map((id) => filterQueries.push(`filter[applications][application_type_id][eq][]=${id}`));\n  }\n\n  if (activeVendor === CLOUD_VENDOR) {\n    filterQueries.push(`filter[source_type][vendor][not_eq]=Red Hat`);\n  }\n\n  if (activeVendor === REDHAT_VENDOR) {\n    filterQueries.push('filter[source_type][vendor]=Red Hat');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`filter[availability_status]=${AVAILABLE}`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`filter[availability_status][]=${PARTIALLY_UNAVAILABLE}`);\n      filterQueries.push(`filter[availability_status][]=${UNAVAILABLE}`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return filterQueries.join('&');\n  }\n\n  return '';\n};\n\nexport const doLoadSource = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { id: { eq: ${id}}})\n            { ${graphQlAttributes} }\n        }`,\n    })\n    .then(({ data }) => data);\n\nexport const doLoadApplicationsForEdit = async (id) => {\n  let graphql = await getSourcesApi().postGraphQL({\n    query: `{ sources(filter: { id: { eq: ${id}}})\n          { applications {\n              application_type_id,\n              id,\n              availability_status_error,\n              availability_status,\n              paused_at,\n              authentications {\n                  id\n              }\n          } }\n      }`,\n  });\n\n  const promises = [];\n  graphql.data.sources?.[0]?.applications?.forEach((app) => {\n    promises.push(getSourcesApi().showApplication(app.id));\n  });\n\n  const results = await Promise.all(promises);\n\n  results.forEach(({ extra }, index) => {\n    graphql.data.sources[0].applications[index] = {\n      ...graphql.data.sources[0].applications[index],\n      extra,\n    };\n  });\n\n  return graphql.data;\n};\n\nexport const doDeleteAuthentication = (id) => getSourcesApi().deleteAuthentication(id);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\nimport { Spinner, Bullseye, Grid, GridItem, Card, CardBody } from '@patternfly/react-core';\n\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nimport './loaders.scss';\nimport { useIntl } from 'react-intl';\n\nexport const Loader = ({ width = '100%', height = '100%', className = '' }) => (\n  <span className={`src-c-loader ${className}`} style={{ width, height }} role=\"progressbar\" />\n);\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport const AppPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        <div className=\"src-c-fake_content pf-u-p-lg\">\n          <Loader />\n        </div>\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport const PaginationLoader = () => <Loader className=\"top-pagination\" height={30} width={200} />;\n\nexport const PlaceHolderTable = () => (\n  <Bullseye className=\"src-c-bullseye__placeholder-loader\" data-testid=\"placeholder-table\">\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) =>\n  isDeleting ? (\n    <tr>\n      <td colSpan={COLUMN_COUNT} className=\"pf-u-p-md\" data-testid=\"removing-row\">\n        <Loader height={100} />\n      </td>\n    </tr>\n  ) : (\n    <RowWrapper {...initialProps} row={row} className=\"src-c-row-vertical-centered\" data-testid=\"row\" />\n  );\n\nRowWrapperLoader.propTypes = {\n  row: PropTypes.object.isRequired,\n};\n\nexport const CardLoader = (props) => (\n  <Card className=\"pf-u-m-md\">\n    <CardBody>\n      <Loader {...props} />\n    </CardBody>\n  </Card>\n);\n\nexport const DetailLoader = () => (\n  <div className=\"src-c-detail-page\">\n    <PageHeader>\n      <Loader height={96} />\n    </PageHeader>\n    <Grid>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"12\">\n        <CardLoader height={324} />\n      </GridItem>\n    </Grid>\n  </div>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loader } from '../SourcesTable/loaders';\n\nconst ImageWithPlaceholder = ({ src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <React.Fragment>\n      {!loaded && <Loader height=\"40px\" width=\"110px\" {...rest} />}\n      <img src={src} onLoad={() => setLoaded(true)} style={{ display: loaded ? 'initial' : 'none' }} {...rest} />\n    </React.Fragment>\n  );\n};\n\nImageWithPlaceholder.propTypes = {\n  src: PropTypes.string.isRequired,\n};\n\nexport default ImageWithPlaceholder;\n","import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter, Label, Button } from '@patternfly/react-core';\nimport { DatabaseIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport ImageWithPlaceholder from '../components/TilesShared/ImageWithPlaceholder';\n\nconst MarketplaceCard = (product) => (\n  <Card isFlat className=\"marketplace-card\">\n    <CardTitle className=\"pf-u-pl-md pf-u-pr-md\">\n      <ImageWithPlaceholder src={product.logo_url} className=\"marketplace-card-icon\" />\n      <br />\n      {product.title}\n      <br />\n      <Label className=\"pf-u-mt-sm marketplace-label\" icon={<DatabaseIcon />}>\n        {product.primary_category.display_name}\n      </Label>\n    </CardTitle>\n    <CardBody className=\"marketplace-card-body pf-u-mb-md pf-u-pl-md pf-u-pr-md\" isFilled>\n      {product.description_short}\n    </CardBody>\n    <CardFooter className=\"pf-u-pl-md pf-u-pr-md pf-u-pb-md\">\n      <Button\n        variant=\"link\"\n        isInline\n        icon={<ExternalLinkAltIcon />}\n        iconPosition=\"right\"\n        component=\"a\"\n        href={product.product_page_url}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        Add{' '}\n      </Button>\n    </CardFooter>\n  </Card>\n);\n\nexport default MarketplaceCard;\n","export const MARKETPLACE_URL = 'https://sandbox.marketplace.redhat.com';\nexport const MARKETPLACE_API_BASE = '/api/marketplace-gateway/v1';\n","import { axiosInstance } from '../api/entities';\nimport { MARKETPLACE_API_BASE } from './constants';\n\nexport const getProducts = async () => axiosInstance.get(`${MARKETPLACE_API_BASE}/unstable`);\nexport const getCategories = async () => axiosInstance.get(`${MARKETPLACE_API_BASE}/categories`);\n","import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter, Skeleton } from '@patternfly/react-core';\n\nconst SkeletonMarketplaceCard = () => (\n  <Card isFlat className=\"marketplace-card\">\n    <CardTitle>\n      <Skeleton role=\"progressbar\" />\n    </CardTitle>\n    <CardBody>\n      <Skeleton role=\"progressbar\" />\n    </CardBody>\n    <CardFooter>\n      <Skeleton role=\"progressbar\" />\n    </CardFooter>\n  </Card>\n);\n\nexport default SkeletonMarketplaceCard;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar/PrimaryToolbar';\n\nimport MarketplaceCard from './MarketplaceCard';\nimport { MARKETPLACE_URL } from './constants';\nimport { getCategories } from './api';\nimport SkeletonMarketplaceCard from './SkeletonMarketplaceCard';\n\nconst init = (data) => ({\n  page: 1,\n  perPage: 10,\n  itemCount: data?.length || 0,\n  filters: {\n    type: ['database'],\n  },\n  categories: null,\n  isLoading: true,\n});\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'SET_PAGE':\n      return { ...state, page: payload };\n    case 'SET_PER_PAGE':\n      return { ...state, page: 1, perPage: payload };\n    case 'LOAD_CATEGORIES':\n      return { ...state, categories: payload, isLoading: false };\n  }\n};\n\nconst valuesMapper = (value) =>\n  ({\n    database: 'Database',\n  }[value] || value);\n\nexport const chipFormatters = (key, filter) =>\n  ({\n    type: {\n      category: 'Type',\n      chips: filter.map((value) => ({ name: valuesMapper(value) })),\n    },\n  }[key] || { category: key, chips: filter.map((value) => ({ name: value })) });\n\nconst generateChips = (filters) =>\n  Object.keys(filters)\n    .map((key) => (!filters[key] || filters[key]?.length === 0 ? null : chipFormatters(key, filters[key])))\n    .filter(Boolean);\n\nconst MarketplaceModal = ({ data, isOpen, onClose }) => {\n  const [config, dispatch] = useReducer(reducer, data, init);\n\n  useEffect(() => {\n    isOpen && getCategories().then(({ data }) => dispatch({ type: 'LOAD_CATEGORIES', payload: data }));\n  }, [isOpen]);\n\n  return (\n    <Modal\n      className=\"sources\"\n      onClose={onClose}\n      isOpen={isOpen}\n      title=\"Browse catalog\"\n      description={\n        <span>\n          A curated selection of offerings available for purchase from{' '}\n          <a href={MARKETPLACE_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n            Red Hat Marketplace <ExternalLinkAltIcon />\n          </a>\n        </span>\n      }\n      variant=\"large\"\n    >\n      {config.isLoading && (\n        <div className=\"pf-u-mb-md marketplace-flex\">\n          <SkeletonMarketplaceCard />\n          <SkeletonMarketplaceCard />\n        </div>\n      )}\n      {!config.isLoading && (\n        <React.Fragment>\n          <PrimaryToolbar\n            useMobileLayout\n            className=\"marketplace-modal-toolbar\"\n            pagination={{\n              itemCount: config.itemCount,\n              page: config.page,\n              perPage: config.perPage,\n              onSetPage: (_e, page) => dispatch({ type: 'SET_PAGE', payload: page }),\n              onPerPageSelect: (_e, perPage) => dispatch({ type: 'SET_PER_PAGE', payload: perPage }),\n              'data-testid': 'pagination',\n            }}\n            filterConfig={{\n              items: [\n                {\n                  label: 'Type',\n                  placeholder: 'Filter by product type',\n                  type: 'checkbox',\n                  filterValues: {\n                    //onChange: (_event, value) => console.log(value),\n                    value: ['database'],\n                    items: config.categories.map((category) => ({\n                      label: category.display_name,\n                      value: category.page_name,\n                      isDisabled: true,\n                    })),\n                  },\n                },\n              ],\n            }}\n            activeFiltersConfig={{\n              showDeleteButton: false,\n              filters: generateChips(config.filters),\n              // onDelete: (_event, chips, deleteAll) => console.log(chips, deleteAll),\n            }}\n          />\n          <div className=\"pf-u-mb-md marketplace-flex\">\n            {data.map((product) => (\n              <MarketplaceCard key={product.id} {...product} />\n            ))}\n          </div>\n        </React.Fragment>\n      )}\n    </Modal>\n  );\n};\n\nMarketplaceModal.propTypes = {\n  data: PropTypes.array,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default MarketplaceModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter, Button } from '@patternfly/react-core';\n\nimport MarketplaceModal from './MarketplaceModal';\n\nconst SeeMoreCard = ({ data }) => {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <MarketplaceModal onClose={() => setOpen(false)} data={data} isOpen={isOpen} />\n      <Card isFlat className=\"marketplace-card marketplace-seemore-card\">\n        <CardBody isFilled className=\"pf-u-pl-md pf-u-pr-md card-text\">\n          Not what you’re looking for? Browse the catalog to see more offerings from Red Hat Marketplace.\n        </CardBody>\n        <CardFooter className=\"pf-u-pl-md pf-u-pr-md pf-u-pb-md\">\n          <Button variant=\"primary\" onClick={() => setOpen(true)}>\n            See more databases\n          </Button>\n        </CardFooter>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nSeeMoreCard.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default SeeMoreCard;\n","import React, { useEffect, useState } from 'react';\nimport { Title } from '@patternfly/react-core';\n\nimport './marketplace.scss';\n\nimport MarketplaceCard from './MarketplaceCard';\nimport { getProducts } from './api';\nimport SeeMoreCard from './SeeMoreCard';\nimport SkeletonMarketplaceCard from './SkeletonMarketplaceCard';\n\nconst RecommendedServices = () => {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    getProducts().then(({ data }) => setData(data));\n  }, []);\n\n  if (data) {\n    return (\n      <div className=\"sources\">\n        <Title headingLevel=\"h4\" size=\"xl\" className=\"pf-u-mb-md\">\n          Recommended services\n        </Title>\n        <div className=\"pf-u-mb-md marketplace-flex\">\n          <MarketplaceCard\n            {...(data.find((product) => product?.product_page_name === 'mongodb-enterprise-advanced') || data[0])}\n          />\n          <SeeMoreCard data={data} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pf-u-mb-md marketplace-flex\">\n      <SkeletonMarketplaceCard />\n      <SkeletonMarketplaceCard />\n    </div>\n  );\n};\n\nexport default RecommendedServices;\n","export const SATELLITE_NAME = 'satellite';\nexport const ANSIBLE_TOWER_NAME = 'ansible-tower';\nexport const AZURE_NAME = 'azure';\nexport const GOOGLE_NAME = 'google';\nexport const REDHAT_VENDOR = 'Red Hat';\nexport const CLOUD_VENDOR = 'Cloud';\nexport const TOPOLOGY_INV_NAME = '/insights/platform/topological-inventory';\nexport const COST_MANAGEMENT_APP_NAME = '/insights/platform/cost-management';\nexport const CLOUD_METER_APP_NAME = '/insights/platform/cloud-meter';\nexport const CATALOG_APP = '/insights/platform/catalog';\nexport const OPENSHIFT_NAME = 'openshift';\n\nexport const getActiveVendor = () => new URLSearchParams(window.location.search).get('activeVendor');\n\nexport const timeoutedApps = (appTypes) => [\n  appTypes.find(({ name }) => name === CLOUD_METER_APP_NAME)?.id,\n  appTypes.find(({ name }) => name === COST_MANAGEMENT_APP_NAME)?.id,\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Text, TextVariants, TextContent, Badge, Popover, Tooltip, Label, LabelGroup, Button } from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { replaceRouteId, routes } from '../Routes';\nimport isSourceAzureRHEL from '../utilities/isSourceAzureRHEL';\n\nexport const defaultPort = (scheme) =>\n  ({\n    http: '80',\n    https: '443',\n  }[scheme]);\n\nexport const importsTexts = (value) =>\n  ({\n    cfme: (\n      <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n      />\n    ),\n  }[value.toLowerCase()]);\n\nexport const schemaToPort = (schema, port) => (port && String(port) !== defaultPort(schema) ? `:${port}` : '');\n\nexport const endpointToUrl = (endpoint) => {\n  const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n  const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n  const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n  if (url === '://') {\n    return;\n  }\n\n  return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n  return type && type.name === 'openshift';\n};\n\nexport const formatURL = (source) => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n  const type = sourceTypes.find((type) => type.id === sourceType);\n  return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = (str) => (\n  <span className=\"src-c-help-cursor\">\n    <DateFormat type=\"relative\" date={str} />\n  </span>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n  <TextContent>\n    <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>{name}</Link>\n    <br key={`${source.id}-br`} />\n    <Text key={source.id} component={TextVariants.small}>\n      {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n    </Text>\n  </TextContent>\n);\n\nexport const importedFormatter = (value) => {\n  if (!value) {\n    return null;\n  }\n\n  const text = importsTexts(value);\n\n  if (text) {\n    return (\n      <Tooltip content={text}>\n        <Badge isRead className=\"src-m-help-cursor\">\n          <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n        </Badge>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Badge isRead>\n      <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n    </Badge>\n  );\n};\n\nexport const AVAILABLE = 'available';\nexport const UNAVAILABLE = 'unavailable';\nexport const UNKNOWN = 'unknown';\nexport const PARTIALLY_UNAVAILABLE = 'partially_available';\nexport const IN_PROGRESS = 'in_progress';\nexport const PAUSED = 'paused_at';\nexport const RHELAZURE = 'rhel_azure';\n\nexport const getStatusColor = (status) =>\n  ({\n    [UNAVAILABLE]: 'red',\n    [AVAILABLE]: 'green',\n    [PARTIALLY_UNAVAILABLE]: 'orange',\n    [PAUSED]: 'cyan',\n  }[status] || 'grey');\n\nexport const getStatusText = (status) =>\n  ({\n    [UNAVAILABLE]: <FormattedMessage id=\"sources.unavailable\" defaultMessage=\"Unavailable\" />,\n    [AVAILABLE]: <FormattedMessage id=\"sources.available\" defaultMessage=\"Available\" />,\n    [PARTIALLY_UNAVAILABLE]: <FormattedMessage id=\"sources.partiallyAvailable\" defaultMessage=\"Partially available\" />,\n    [IN_PROGRESS]: <FormattedMessage id=\"sources.inProgress\" defaultMessage=\"In progress\" />,\n    [PAUSED]: <FormattedMessage id=\"sources.paused\" defaultMessage=\"Paused\" />,\n  }[status] || <FormattedMessage id=\"sources.unknown\" defaultMessage=\"Unknown\" />);\n\nexport const UnknownError = () => <FormattedMessage id=\"sources.unknownError\" defaultMessage=\"unavailable\" />;\n\nexport const formatAvailibilityErrors = (appTypes, errors) => (\n  <React.Fragment>\n    {errors.source && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.sourceError\"\n          defaultMessage=\"Source's status: { error }\"\n          values={{ error: errors.source }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.endpoint && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.endpointError\"\n          defaultMessage=\"Endpoint error: { error }\"\n          values={{ error: errors.endpoint }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.authentications && (\n      <FormattedMessage\n        id=\"sources.authErrors\"\n        defaultMessage=\"Authentication {count, plural, one {status} other {statuses}} : { errors }\"\n        values={{\n          count: errors.authentications.length,\n          errors: errors.authentications.map(({ error, type }) => (\n            <React.Fragment key={type}>\n              <FormattedMessage id=\"sources.errorAuthTemplate\" defaultMessage=\"{ type }: { error }\" values={{ error, type }} />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n    {errors.applications && (\n      <FormattedMessage\n        id=\"sources.appErrors\"\n        defaultMessage=\"Application {count, plural, one {status} other {statutes}}: { errors }\"\n        values={{\n          count: errors.applications.length,\n          errors: errors.applications.map(({ error, id }) => (\n            <React.Fragment key={id}>\n              <FormattedMessage\n                id=\"sources.errorAppTemplate\"\n                defaultMessage=\"{ app }: { error }\"\n                values={{\n                  error,\n                  app: appTypes.find((app) => app.id === id)?.display_name || id,\n                }}\n              />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport const getStatusTooltipText = (status, appTypes, errors = {}) =>\n  ({\n    [UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [AVAILABLE]: <FormattedMessage id=\"sources.appStatusOK\" defaultMessage=\"Everything works fine.\" />,\n    [PARTIALLY_UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n    [PAUSED]: (\n      <FormattedMessage\n        id=\"sources.pausedStatus\"\n        defaultMessage=\"Data collection is temporarily disabled. Resume source to reestablish connection.\"\n      />\n    ),\n    [RHELAZURE]: (\n      <FormattedMessage\n        id=\"sources.rhelAzureStatus\"\n        defaultMessage=\"This source cannot currently be monitored in Sources, and does not reflect true status or resources.\"\n      />\n    ),\n  }[status] || <FormattedMessage id=\"sources.appStatusUnknown\" defaultMessage=\"Status has not been verified.\" />);\n\nexport const getAllErrors = ({\n  availability_status,\n  availability_status_error,\n  applications = [],\n  endpoints: [endpoint] = [],\n}) => {\n  if (availability_status === IN_PROGRESS) {\n    return { errors: {}, status: IN_PROGRESS };\n  }\n\n  let errors = {};\n  let statusesCount = 0;\n  let errorsCount = 0;\n\n  if (availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      source: availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  applications.map((app) => {\n    if (app.availability_status === UNAVAILABLE) {\n      errors = {\n        ...errors,\n        applications: [\n          ...(errors.applications ? errors.applications : []),\n          {\n            id: app.application_type_id,\n            error: app.availability_status_error || <UnknownError />,\n          },\n        ],\n      };\n      statusesCount++;\n      errorsCount++;\n    } else if (app.availability_status === AVAILABLE) {\n      statusesCount++;\n    }\n  });\n\n  if (endpoint?.availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      endpoint: endpoint.availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (endpoint?.availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  if (endpoint?.authentications) {\n    endpoint.authentications.map((auth) => {\n      if (auth.availability_status === UNAVAILABLE) {\n        errors = {\n          ...errors,\n          authentications: [\n            ...(errors.authentications ? errors.authentications : []),\n            {\n              type: auth.authtype,\n              error: auth.availability_status_error || <UnknownError />,\n            },\n          ],\n        };\n        statusesCount++;\n        errorsCount++;\n      } else if (auth.availability_status === AVAILABLE) {\n        statusesCount++;\n      }\n    });\n  }\n\n  return {\n    errors,\n    status:\n      errorsCount === 0\n        ? statusesCount === 0\n          ? UNKNOWN\n          : AVAILABLE\n        : errorsCount === statusesCount\n        ? UNAVAILABLE\n        : PARTIALLY_UNAVAILABLE,\n  };\n};\n\nexport const availabilityFormatter = (_status, source, { appTypes, sourceTypes }) => {\n  const meta = getAllErrors(source);\n  const status = source.paused_at ? PAUSED : isSourceAzureRHEL({ source, sourceTypes, appTypes }) ? RHELAZURE : meta.status;\n\n  return (\n    <span>\n      <Popover\n        showClose={false}\n        aria-label={`${status} popover`}\n        bodyContent={getStatusTooltipText(status, appTypes, meta.errors)}\n      >\n        <Label\n          className=\"src-m-clickable\"\n          color={getStatusColor(status)}\n          {...(source.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n          {...(source.paused_at && { icon: <PauseIcon /> })}\n        >\n          {getStatusText(status)}\n        </Label>\n      </Popover>\n    </span>\n  );\n};\n\nexport const getStatusTooltipTextApp = (status, error, intl) =>\n  ({\n    [AVAILABLE]: intl.formatMessage({\n      id: 'sources.appStatusOK',\n      defaultMessage: 'Everything works fine.',\n    }),\n    [UNAVAILABLE]: error || intl.formatMessage({ id: 'sources.unknownError', defaultMessage: 'Unknown error' }),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n  }[status] ||\n  intl.formatMessage({\n    id: 'sources.appStatusUnknown',\n    defaultMessage: 'Status has not been verified.',\n  }));\n\nexport const ApplicationLabel = ({ app, showStatusText, ...props }) => {\n  const intl = useIntl();\n\n  const statusText = getStatusTooltipTextApp(app.availability_status, app.availability_status_error, intl);\n\n  return (\n    <Popover\n      showClose={false}\n      key={app.display_name}\n      aria-label={`${app.display_name} popover`}\n      bodyContent={\n        app.paused_at\n          ? `${statusText} ${intl.formatMessage({\n              id: 'appplication.paused.additionalText',\n              defaultMessage: 'Resume this application to continue data collection.',\n            })}`\n          : statusText\n      }\n      {...(app.paused_at && {\n        headerContent: intl.formatMessage({\n          id: 'application.paused.header',\n          defaultMessage: 'Application paused',\n        }),\n      })}\n    >\n      <Label\n        className=\"src-m-clickable\"\n        color={getStatusColor(app.availability_status)}\n        {...(app.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n        {...(app.paused_at && { icon: <PauseIcon /> })}\n        {...props}\n      >\n        {showStatusText ? getStatusText(app.availability_status) : app.display_name}\n      </Label>\n    </Popover>\n  );\n};\n\nApplicationLabel.propTypes = {\n  app: PropTypes.shape({\n    display_name: PropTypes.string,\n    availability_status: PropTypes.string,\n    availability_status_error: PropTypes.string,\n    paused_at: PropTypes.string,\n  }),\n  showStatusText: PropTypes.bool,\n};\n\nconst EnhancedLabelGroup = ({ applications, ...props }) => {\n  const intl = useIntl();\n\n  return (\n    <LabelGroup\n      {...props}\n      numLabels={2}\n      collapsedText={intl.formatMessage(\n        { id: 'applications.showMore', defaultMessage: '{remaining} more' },\n        { remaining: '${remaining}' }\n      )}\n    >\n      {applications.map((app, index) => (\n        <ApplicationLabel app={app} key={app.id || index} />\n      ))}\n    </LabelGroup>\n  );\n};\n\nEnhancedLabelGroup.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      display_name: PropTypes.string,\n      availability_status: PropTypes.string,\n      availability_status_error: PropTypes.string,\n      paused_at: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport const getAppStatus = (app, source, appTypes) => {\n  const application = appTypes.find((type) => type.id === app.application_type_id);\n\n  if (application) {\n    let availability_status = app.availability_status;\n    let availability_status_error = app.availability_status_error;\n\n    if (app.authentications?.[0]?.resource_type === 'Endpoint') {\n      availability_status = source.endpoints?.[0]?.availability_status;\n      availability_status_error = source.endpoints?.[0]?.availability_status_error;\n    }\n\n    return {\n      display_name: application.display_name,\n      paused_at: app.paused_at,\n      availability_status,\n      availability_status_error,\n    };\n  }\n};\n\nexport const applicationFormatter = (apps, item, { appTypes }) => {\n  const applications = apps\n    .map((app) => getAppStatus(app, item, appTypes))\n    .filter(Boolean)\n    .sort((a, b) => a.display_name.localeCompare(b.display_name));\n\n  if (applications.length === 0) {\n    return '--';\n  }\n\n  return <EnhancedLabelGroup numLabels={2} collapsedText applications={applications} />;\n};\n\nexport const configurationModeFormatter = (mode, item, { intl, sourceType }) => {\n  if (mode === 'account_authorization') {\n    const superKeyType = sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n    const superKeyAuth = item?.authentications?.find(({ authtype }) => authtype && authtype === superKeyType.type);\n\n    return (\n      <React.Fragment>\n        {intl.formatMessage({\n          id: 'configurationMode.trust',\n          defaultMessage: 'Account authorization',\n        })}\n        {superKeyAuth?.availability_status === UNAVAILABLE && (\n          <Tooltip\n            position=\"top\"\n            content={\n              superKeyAuth.availability_status_error ||\n              intl.formatMessage({\n                id: 'configurationMode.trustmode.defaultError',\n                defaultMessage: 'Edit credentials required.',\n              })\n            }\n          >\n            <span className=\"pf-u-ml-sm\">\n              <ExclamationCircleIcon fill=\"#C9190B\" />\n            </span>\n          </Tooltip>\n        )}\n        <div className=\"pf-u-mt-sm\">\n          <Link to={replaceRouteId(routes.sourcesDetailEditCredentials.path, item.id)}>\n            <Button variant=\"link\" id=\"edit-super-credentials\" isInline>\n              {item.paused_at\n                ? intl.formatMessage({\n                    id: 'sources.viewCredentials',\n                    defaultMessage: 'View credentials',\n                  })\n                : intl.formatMessage({\n                    id: 'sources.editCredentials',\n                    defaultMessage: 'Edit credentials',\n                  })}\n            </Button>\n          </Link>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return intl.formatMessage({\n    id: 'configurationMode.manual',\n    defaultMessage: 'Manual configuration',\n  });\n};\n","import { AZURE_NAME, CLOUD_METER_APP_NAME, GOOGLE_NAME } from './constants';\n\nconst isSourceAzureRHEL = ({ source, sourceTypes, appTypes }) => {\n  const azureType = sourceTypes?.find(({ name }) => name === AZURE_NAME);\n  const googleType = sourceTypes?.find(({ name }) => name === GOOGLE_NAME);\n  const rhelApp = appTypes?.find(({ name }) => name === CLOUD_METER_APP_NAME);\n\n  return (\n    azureType &&\n    rhelApp &&\n    (source.source_type_id === azureType?.id || source.source_type_id === googleType?.id) &&\n    source.applications?.length === 1 &&\n    source.applications[0].application_type_id === rhelApp?.id\n  );\n};\n\nexport default isSourceAzureRHEL;\n","import {\n  applicationFormatter,\n  availabilityFormatter,\n  dateFormatter,\n  importedFormatter,\n  nameFormatter,\n  sourceTypeFormatter,\n} from './formatters';\n\nexport const sourcesColumns = (intl, notSortable = false) => [\n  {\n    title: intl.formatMessage({\n      id: 'sources.name',\n      defaultMessage: 'Name',\n    }),\n    value: 'name',\n    formatter: nameFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.type',\n      defaultMessage: 'Type',\n    }),\n    value: 'source_type_id',\n    formatter: sourceTypeFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.connectedApplications',\n      defaultMessage: 'Connected applications',\n    }),\n    value: 'applications',\n    formatter: applicationFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.addedDate',\n      defaultMessage: 'Date added',\n    }),\n    value: 'created_at',\n    formatter: dateFormatter,\n    sortable: !notSortable,\n  },\n  {\n    hidden: true,\n    value: 'imported',\n    formatter: importedFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.status',\n      defaultMessage: 'Status',\n    }),\n    value: 'availability_status',\n    formatter: availabilityFormatter,\n  },\n];\n\nconst KEBAB_COLUMN = 1;\nconst COUNT_OF_COLUMNS = sourcesColumns({ formatMessage: () => '' }).length;\n\nexport const COLUMN_COUNT = COUNT_OF_COLUMNS + KEBAB_COLUMN;\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\".concat(getDisplayName(WrappedComponent), \")\");\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { invariant } from '@formatjs/ecma402-abstract';\nimport { DEFAULT_INTL_CONFIG as CORE_DEFAULT_INTL_CONFIG } from '@formatjs/intl';\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var DEFAULT_INTL_CONFIG = __assign(__assign({}, CORE_DEFAULT_INTL_CONFIG), { textComponent: React.Fragment });\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\nexport function shallowEqual(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n    if (!objA || !objB) {\n        return false;\n    }\n    var aKeys = Object.keys(objA);\n    var bKeys = Object.keys(objB);\n    var len = aKeys.length;\n    if (bKeys.length !== len) {\n        return false;\n    }\n    for (var i = 0; i < len; i++) {\n        var key = aKeys[i];\n        if (objA[key] !== objB[key] ||\n            !Object.prototype.hasOwnProperty.call(objB, key)) {\n            return false;\n        }\n    }\n    return true;\n}\n"],"names":["ObjectWithoutPrototypeCache","this","cache","Object","create","prototype","get","key","set","value","DEFAULT_INTL_CONFIG","formats","messages","timeZone","undefined","defaultLocale","defaultFormats","fallbackOnEmptyString","onError","error","routes","sources","path","sourcesNew","writeAccess","sourcesRemove","redirectNoId","sourcesDetail","sourcesDetailRename","noPaused","sourcesDetailRemove","sourcesDetailAddApp","sourcesDetailRemoveApp","sourcesDetailEditCredentials","replaceRouteId","id","replace","config","window","insights","chrome","auth","getUser","SOURCES_API_BASE_V3","process","env","BASE_PATH","axiosInstanceInsights","axios","interceptors","request","use","response","data","status","logout","configureScope","scope","setTag","req_id","err","errObject","customError","sentryId","captureException","errors","length","Promise","reject","detail","message","title","getSourcesApi","checkAvailabilitySource","post","updateSource","patch","updateEndpoint","createEndpoint","updateAuthentication","createAuthentication","showSource","listSourceEndpoints","listSourceApplications","listEndpointAuthentications","deleteSource","createApplication","postGraphQL","listSourceTypes","doLoadAppTypes","deleteApplication","createAuthApp","deleteAuthentication","showAuthentication","updateApplication","showApplication","listSourceAuthentications","createSource","getEndpoint","getGoogleAccount","bulkCreate","pauseApplication","unpauseApplication","pauseSource","unpauseSource","doRemoveSource","sourceId","pagination","pageSize","pageNumber","sorting","sortBy","sortDirection","graphQlAttributes","doLoadEntities","filter","filterValue","activeVendor","filterQueries","name","push","source_type_id","map","x","join","applications","CLOUD_VENDOR","REDHAT_VENDOR","availability_status","AVAILABLE","UNAVAILABLE","PARTIALLY_UNAVAILABLE","filtering","filterSection","query","then","doCreateApplication","doDeleteApplication","appId","errorMessage","doLoadSource","doLoadApplicationsForEdit","graphql","promises","forEach","app","all","index","extra","Loader","width","height","className","style","role","propTypes","PropTypes","PaginationLoader","PlaceHolderTable","Bullseye","Spinner","size","RowWrapperLoader","row","isDeleting","initialProps","colSpan","COLUMN_COUNT","RowWrapper","CardLoader","props","Card","CardBody","DetailLoader","Grid","GridItem","md","ImageWithPlaceholder","src","rest","useState","loaded","setLoaded","onLoad","display","product","isFlat","CardTitle","logo_url","Label","icon","DatabaseIcon","primary_category","display_name","isFilled","description_short","CardFooter","Button","variant","isInline","ExternalLinkAltIcon","iconPosition","component","href","product_page_url","rel","target","MARKETPLACE_API_BASE","getProducts","axiosInstance","getCategories","Skeleton","init","page","perPage","itemCount","filters","type","categories","isLoading","reducer","state","payload","valuesMapper","database","MarketplaceModal","isOpen","onClose","useReducer","dispatch","useEffect","Modal","description","useMobileLayout","onSetPage","_e","onPerPageSelect","filterConfig","items","label","placeholder","filterValues","category","page_name","isDisabled","activeFiltersConfig","showDeleteButton","keys","chips","chipFormatters","Boolean","SeeMoreCard","setOpen","onClick","setData","Title","headingLevel","find","product_page_name","SATELLITE_NAME","ANSIBLE_TOWER_NAME","AZURE_NAME","GOOGLE_NAME","TOPOLOGY_INV_NAME","COST_MANAGEMENT_APP_NAME","CLOUD_METER_APP_NAME","CATALOG_APP","timeoutedApps","appTypes","defaultPort","scheme","http","https","endpointToUrl","endpoint","onlyTrueEndpointValues","reduce","acc","curr","host","port","url","schema","String","schemaToPort","sourceTypeFormatter","sourceType","_item","sourceTypes","product_name","dateFormatter","str","DateFormat","date","nameFormatter","source","TextContent","Link","to","Text","TextVariants","sourceIsOpenShift","endpoints","formatURL","importedFormatter","text","cfme","defaultMessage","toLowerCase","importsTexts","Tooltip","content","Badge","isRead","IN_PROGRESS","PAUSED","RHELAZURE","getStatusColor","getStatusText","UnknownError","formatAvailibilityErrors","values","authentications","count","getStatusTooltipText","availabilityFormatter","_status","meta","availability_status_error","statusesCount","errorsCount","application_type_id","authtype","getAllErrors","paused_at","azureType","googleType","rhelApp","isSourceAzureRHEL","Popover","showClose","bodyContent","color","ApplicationLabel","showStatusText","intl","useIntl","statusText","formatMessage","getStatusTooltipTextApp","headerContent","EnhancedLabelGroup","LabelGroup","numLabels","collapsedText","remaining","isRequired","applicationFormatter","apps","item","application","resource_type","getAppStatus","sort","a","b","localeCompare","configurationModeFormatter","mode","superKeyType","authentication","is_superkey","superKeyAuth","position","fill","sourcesColumns","notSortable","formatter","sortable","hidden","IntlContext","Context","Consumer","Provider","invariantIntlContext","shallowEqual","objA","objB","aKeys","bKeys","len","i","hasOwnProperty","call","textComponent"],"sourceRoot":""}