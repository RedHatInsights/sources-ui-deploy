{"version":3,"file":"js/485.1647420827466.4c387bb41960b1c2b427.js","mappings":"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","sources":["webpack:///./src/components/TilesShared/ImageWithPlaceholder.js","webpack:///./src/marketplace/MarketplaceCard.js","webpack:///./src/marketplace/constants.js","webpack:///./src/marketplace/api.js","webpack:///./src/marketplace/SkeletonMarketplaceCard.js","webpack:///./src/marketplace/MarketplaceModal.js","webpack:///./src/marketplace/SeeMoreCard.js","webpack:///./src/marketplace/RecommendedServices.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loader } from '../SourcesTable/loaders';\n\nconst ImageWithPlaceholder = ({ src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <React.Fragment>\n      {!loaded && <Loader height=\"40px\" width=\"110px\" {...rest} />}\n      <img src={src} onLoad={() => setLoaded(true)} style={{ display: loaded ? 'initial' : 'none' }} {...rest} />\n    </React.Fragment>\n  );\n};\n\nImageWithPlaceholder.propTypes = {\n  src: PropTypes.string.isRequired,\n};\n\nexport default ImageWithPlaceholder;\n","import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter, Label, Button } from '@patternfly/react-core';\nimport { DatabaseIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport ImageWithPlaceholder from '../components/TilesShared/ImageWithPlaceholder';\n\nconst MarketplaceCard = (product) => (\n  <Card isFlat className=\"marketplace-card\">\n    <CardTitle className=\"pf-u-pl-md pf-u-pr-md\">\n      <ImageWithPlaceholder src={product.logo_url} className=\"marketplace-card-icon\" />\n      <br />\n      {product.title}\n      <br />\n      <Label className=\"pf-u-mt-sm marketplace-label\" icon={<DatabaseIcon />}>\n        {product.primary_category.display_name}\n      </Label>\n    </CardTitle>\n    <CardBody className=\"marketplace-card-body pf-u-mb-md pf-u-pl-md pf-u-pr-md\" isFilled>\n      {product.description_short}\n    </CardBody>\n    <CardFooter className=\"pf-u-pl-md pf-u-pr-md pf-u-pb-md\">\n      <Button\n        variant=\"link\"\n        isInline\n        icon={<ExternalLinkAltIcon />}\n        iconPosition=\"right\"\n        component=\"a\"\n        href={product.product_page_url}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        Add{' '}\n      </Button>\n    </CardFooter>\n  </Card>\n);\n\nexport default MarketplaceCard;\n","export const MARKETPLACE_URL = 'https://sandbox.marketplace.redhat.com';\nexport const MARKETPLACE_API_BASE = '/api/marketplace-gateway/v1';\n","import { axiosInstance } from '../api/entities';\nimport { MARKETPLACE_API_BASE } from './constants';\n\nexport const getProducts = async () => axiosInstance.get(`${MARKETPLACE_API_BASE}/unstable`);\nexport const getCategories = async () => axiosInstance.get(`${MARKETPLACE_API_BASE}/categories`);\n","import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter, Skeleton } from '@patternfly/react-core';\n\nconst SkeletonMarketplaceCard = () => (\n  <Card isFlat className=\"marketplace-card\">\n    <CardTitle>\n      <Skeleton role=\"progressbar\" />\n    </CardTitle>\n    <CardBody>\n      <Skeleton role=\"progressbar\" />\n    </CardBody>\n    <CardFooter>\n      <Skeleton role=\"progressbar\" />\n    </CardFooter>\n  </Card>\n);\n\nexport default SkeletonMarketplaceCard;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar/PrimaryToolbar';\n\nimport MarketplaceCard from './MarketplaceCard';\nimport { MARKETPLACE_URL } from './constants';\nimport { getCategories } from './api';\nimport SkeletonMarketplaceCard from './SkeletonMarketplaceCard';\n\nconst init = (data) => ({\n  page: 1,\n  perPage: 10,\n  itemCount: data?.length || 0,\n  filters: {\n    type: ['database'],\n  },\n  categories: null,\n  isLoading: true,\n});\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'SET_PAGE':\n      return { ...state, page: payload };\n    case 'SET_PER_PAGE':\n      return { ...state, page: 1, perPage: payload };\n    case 'LOAD_CATEGORIES':\n      return { ...state, categories: payload, isLoading: false };\n  }\n};\n\nconst valuesMapper = (value) =>\n  ({\n    database: 'Database',\n  }[value] || value);\n\nexport const chipFormatters = (key, filter) =>\n  ({\n    type: {\n      category: 'Type',\n      chips: filter.map((value) => ({ name: valuesMapper(value) })),\n    },\n  }[key] || { category: key, chips: filter.map((value) => ({ name: value })) });\n\nconst generateChips = (filters) =>\n  Object.keys(filters)\n    .map((key) => (!filters[key] || filters[key]?.length === 0 ? null : chipFormatters(key, filters[key])))\n    .filter(Boolean);\n\nconst MarketplaceModal = ({ data, isOpen, onClose }) => {\n  const [config, dispatch] = useReducer(reducer, data, init);\n\n  useEffect(() => {\n    isOpen && getCategories().then(({ data }) => dispatch({ type: 'LOAD_CATEGORIES', payload: data }));\n  }, [isOpen]);\n\n  return (\n    <Modal\n      className=\"sources\"\n      onClose={onClose}\n      isOpen={isOpen}\n      title=\"Browse catalog\"\n      description={\n        <span>\n          A curated selection of offerings available for purchase from{' '}\n          <a href={MARKETPLACE_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n            Red Hat Marketplace <ExternalLinkAltIcon />\n          </a>\n        </span>\n      }\n      variant=\"large\"\n    >\n      {config.isLoading && (\n        <div className=\"pf-u-mb-md marketplace-flex\">\n          <SkeletonMarketplaceCard />\n          <SkeletonMarketplaceCard />\n        </div>\n      )}\n      {!config.isLoading && (\n        <React.Fragment>\n          <PrimaryToolbar\n            useMobileLayout\n            className=\"marketplace-modal-toolbar\"\n            pagination={{\n              itemCount: config.itemCount,\n              page: config.page,\n              perPage: config.perPage,\n              onSetPage: (_e, page) => dispatch({ type: 'SET_PAGE', payload: page }),\n              onPerPageSelect: (_e, perPage) => dispatch({ type: 'SET_PER_PAGE', payload: perPage }),\n              'data-testid': 'pagination',\n            }}\n            filterConfig={{\n              items: [\n                {\n                  label: 'Type',\n                  placeholder: 'Filter by product type',\n                  type: 'checkbox',\n                  filterValues: {\n                    //onChange: (_event, value) => console.log(value),\n                    value: ['database'],\n                    items: config.categories.map((category) => ({\n                      label: category.display_name,\n                      value: category.page_name,\n                      isDisabled: true,\n                    })),\n                  },\n                },\n              ],\n            }}\n            activeFiltersConfig={{\n              showDeleteButton: false,\n              filters: generateChips(config.filters),\n              // onDelete: (_event, chips, deleteAll) => console.log(chips, deleteAll),\n            }}\n          />\n          <div className=\"pf-u-mb-md marketplace-flex\">\n            {data.map((product) => (\n              <MarketplaceCard key={product.id} {...product} />\n            ))}\n          </div>\n        </React.Fragment>\n      )}\n    </Modal>\n  );\n};\n\nMarketplaceModal.propTypes = {\n  data: PropTypes.array,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default MarketplaceModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter, Button } from '@patternfly/react-core';\n\nimport MarketplaceModal from './MarketplaceModal';\n\nconst SeeMoreCard = ({ data }) => {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <MarketplaceModal onClose={() => setOpen(false)} data={data} isOpen={isOpen} />\n      <Card isFlat className=\"marketplace-card marketplace-seemore-card\">\n        <CardBody isFilled className=\"pf-u-pl-md pf-u-pr-md card-text\">\n          Not what you’re looking for? Browse the catalog to see more offerings from Red Hat Marketplace.\n        </CardBody>\n        <CardFooter className=\"pf-u-pl-md pf-u-pr-md pf-u-pb-md\">\n          <Button variant=\"primary\" onClick={() => setOpen(true)}>\n            See more databases\n          </Button>\n        </CardFooter>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nSeeMoreCard.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default SeeMoreCard;\n","import React, { useEffect, useState } from 'react';\nimport { Title } from '@patternfly/react-core';\n\nimport './marketplace.scss';\n\nimport MarketplaceCard from './MarketplaceCard';\nimport { getProducts } from './api';\nimport SeeMoreCard from './SeeMoreCard';\nimport SkeletonMarketplaceCard from './SkeletonMarketplaceCard';\n\nconst RecommendedServices = () => {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    getProducts().then(({ data }) => setData(data));\n  }, []);\n\n  if (data) {\n    return (\n      <div className=\"sources\">\n        <Title headingLevel=\"h4\" size=\"xl\" className=\"pf-u-mb-md\">\n          Recommended services\n        </Title>\n        <div className=\"pf-u-mb-md marketplace-flex\">\n          <MarketplaceCard\n            {...(data.find((product) => product?.product_page_name === 'mongodb-enterprise-advanced') || data[0])}\n          />\n          <SeeMoreCard data={data} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pf-u-mb-md marketplace-flex\">\n      <SkeletonMarketplaceCard />\n      <SkeletonMarketplaceCard />\n    </div>\n  );\n};\n\nexport default RecommendedServices;\n"],"names":["ImageWithPlaceholder","src","rest","useState","loaded","setLoaded","height","width","onLoad","style","display","propTypes","PropTypes","product","Card","isFlat","className","CardTitle","logo_url","title","Label","icon","DatabaseIcon","primary_category","display_name","CardBody","isFilled","description_short","CardFooter","Button","variant","isInline","ExternalLinkAltIcon","iconPosition","component","href","product_page_url","rel","target","MARKETPLACE_API_BASE","getProducts","axiosInstance","getCategories","Skeleton","role","init","data","page","perPage","itemCount","length","filters","type","categories","isLoading","reducer","state","payload","valuesMapper","value","database","MarketplaceModal","isOpen","onClose","useReducer","config","dispatch","useEffect","then","Modal","description","useMobileLayout","pagination","onSetPage","_e","onPerPageSelect","filterConfig","items","label","placeholder","filterValues","map","category","page_name","isDisabled","activeFiltersConfig","showDeleteButton","Object","keys","key","filter","chips","name","chipFormatters","Boolean","id","SeeMoreCard","setOpen","onClick","setData","Title","headingLevel","size","find","product_page_name"],"sourceRoot":""}