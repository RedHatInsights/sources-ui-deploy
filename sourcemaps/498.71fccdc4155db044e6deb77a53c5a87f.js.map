{"version":3,"file":"js/498.1649948187803.f2df6aad253ec3e49fc7.js","mappings":"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","sources":["webpack:///./src/components/ErrorBoundary.js","webpack:///./src/components/PermissionsChecker.js","webpack:///./src/redux/user/actions.js","webpack:///./src/components/DataLoader.js","webpack:///./src/components/NavigationListener.js","webpack:///./src/frontend-components-copies/getBaseName.js","webpack:///./src/App.js","webpack:///./src/api/source_types.js","webpack:///./src/redux/user/actionTypes.js","webpack:///./src/redux/sources/reducer.js","webpack:///./src/redux/user/reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/utilities/urlQuery.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport { addMessage } from '../redux/sources/actions';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error, errorInfo) {\n    return { error, errorInfo };\n  }\n\n  componentDidCatch(error) {\n    const sentryId = Sentry.captureException(error);\n    this.props.dispatch(\n      addMessage({\n        title: `${error.toString()} (Sentry ID: ${sentryId})`,\n        variant: 'danger',\n        description: error.stack,\n      })\n    );\n  }\n\n  render() {\n    const { error } = this.state;\n    const { children } = this.props;\n\n    if (error) {\n      return <Fragment>Error occurred</Fragment>;\n    }\n\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nErrorBoundary.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default connect()(ErrorBoundary);\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { loadWritePermissions } from '../redux/user/actions';\n\nconst PermissionsChecker = ({ children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadWritePermissions());\n  }, []);\n\n  return children;\n};\n\nexport default PermissionsChecker;\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const loadWritePermissions = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING });\n\n  return insights.chrome\n    .getUserPermissions('sources', true) // bypassCache = true\n    .then((permissions) => {\n      const allPermission = permissions.reduce((acc, curr) => [...acc, curr?.permission], []);\n      const writePermissions = allPermission.includes('sources:*:*') || allPermission.includes('sources:*:write');\n\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED,\n        payload: writePermissions,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      })\n    );\n};\n","import { useEffect, useRef } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { loadAppTypes, loadEntities, loadSourceTypes } from '../redux/sources/actions';\nimport { loadEnhancedAttributes, parseQuery, updateQuery } from '../utilities/urlQuery';\n\nconst DataLoader = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n  const previousPathname = useRef(pathname);\n\n  useEffect(() => {\n    const { applications, types } = loadEnhancedAttributes();\n\n    if (applications || types) {\n      Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes())]).then(() => dispatch(loadEntities(parseQuery)));\n    } else {\n      Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadEntities(parseQuery))]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (previousPathname.current !== pathname) {\n      updateQuery(sources);\n      previousPathname.current = pathname;\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default DataLoader;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { routes } from '../Routes';\n\nconst NavigationListener = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    try {\n      insights.chrome.init();\n      insights.chrome.identifyApp('sources');\n      const unregister = insights.chrome.on(\n        'APP_NAVIGATION',\n        (event) =>\n          (event.navId.split('/').pop() || event.domEvent?.href.split('/').pop()) === 'sources' &&\n          history.push(routes.sources.path)\n      );\n\n      return () => unregister?.();\n    } catch (_exception) {\n      // eslint-disable-next-line no-console\n      console.warn('Failed to initialize chrome navigation.');\n    }\n  }, []);\n\n  return null;\n};\n\nexport default NavigationListener;\n","export const getBaseName = (pathname, level = 2) => {\n  let release = '/';\n  const pathName = pathname.replace(/(#|\\?).*/, '').split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return [...new Array(level)].reduce((acc, _curr, key) => {\n    return `${acc}${pathName[key] || ''}${key < level - 1 ? '/' : ''}`;\n  }, release);\n};\n","import React, { useEffect } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './Routes';\n\nimport './App.scss';\nimport './styles/authSelect.scss';\nimport './styles/cardSelect.scss';\nimport './styles/costManagement.scss';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PermissionsChecker from './components/PermissionsChecker';\nimport DataLoader from './components/DataLoader';\nimport { CLOUD_CARDS_KEY } from './components/CloudTiles/CloudCards';\nimport NavigationListener from './components/NavigationListener';\n\nimport { getBaseName } from './frontend-components-copies/getBaseName';\n\nconst App = () => {\n  useEffect(() => {\n    return () => {\n      sessionStorage.removeItem(CLOUD_CARDS_KEY);\n    };\n  }, []);\n\n  return (\n    <Router basename={getBaseName(location.pathname, 1)}>\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <ErrorBoundary>\n            <PermissionsChecker>\n              <Main style={{ padding: 0 }}>\n                <DataLoader />\n                <NavigationListener />\n                <Routes />\n              </Main>\n            </PermissionsChecker>\n          </ErrorBoundary>\n        </React.Fragment>\n      </IntlProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import { getSourcesApi } from './entities.js';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => data.data);\n","export const ACTION_TYPES = ['SET_WRITE_PERMISSIONS'].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n","import {\n  ACTION_TYPES,\n  SORT_ENTITIES,\n  PAGE_AND_SIZE,\n  FILTER_SOURCES,\n  ADD_APP_TO_SOURCE,\n  SET_COUNT,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  SET_VENDOR,\n} from './actionTypes';\nimport { CLOUD_VENDOR } from '../../utilities/constants';\n\nexport const defaultSourcesState = {\n  loaded: 0,\n  pageSize: 50,\n  pageNumber: 1,\n  entities: [],\n  numberOfEntities: 0,\n  appTypesLoaded: false,\n  sourceTypesLoaded: false,\n  filterValue: {},\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n  removingSources: [],\n  activeVendor: CLOUD_VENDOR,\n  appTypes: [],\n  sourceTypes: [],\n};\n\nexport const entitiesPending = (state, { options }) => ({\n  ...state,\n  loaded: state.loaded + 1,\n  paginationClicked: false,\n  ...options,\n});\n\nexport const entitiesLoaded = (state, { payload: { sources, sources_aggregate }, options }) => ({\n  ...state,\n  loaded: Math.max(state.loaded - 1, 0),\n  entities: sources,\n  numberOfEntities: sources_aggregate?.aggregate?.total_count,\n  ...options,\n});\n\nexport const entitiesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesPending = (state) => ({\n  ...state,\n  sourceTypes: [],\n  sourceTypesLoaded: false,\n});\n\nexport const sourceTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesLoaded = (state, { payload: sourceTypes }) => ({\n  ...state,\n  sourceTypes,\n  sourceTypesLoaded: true,\n});\n\nexport const appTypesPending = (state) => ({\n  ...state,\n  appTypes: [],\n  appTypesLoaded: false,\n});\n\nexport const appTypesLoaded = (state, { payload: appTypes }) => ({\n  ...state,\n  appTypes,\n  appTypesLoaded: true,\n});\n\nexport const appTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sortEntities = (state, { payload: { column, direction } }) => ({\n  ...state,\n  sortBy: column,\n  sortDirection: direction,\n});\n\nexport const setPageAndSize = (state, { payload: { page, size } }) => ({\n  ...state,\n  pageSize: size,\n  pageNumber: page,\n});\n\nexport const filterSources = (state, { payload: { value } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    ...value,\n  },\n  pageNumber: 1,\n});\n\nexport const sourceEditRemovePending = (state, { meta }) => ({\n  ...state,\n  removingSources: [...state.removingSources, meta.sourceId],\n});\n\nexport const sourceEditRemoveFulfilled = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n  entities: state.entities.filter((entity) => entity.id !== meta.sourceId),\n});\n\nexport const sourceEditRemoveRejected = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n});\n\nexport const appRemovingPending = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: true,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingFulfilled = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.filter((app) => app.id !== meta.appId),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingRejected = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: undefined,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const addAppToSource = (state, { payload: { sourceId, app } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          applications: [...entity.applications, app],\n        }\n      : entity\n  ),\n});\n\nexport const setCount = (state, { payload: { count } }) => ({\n  ...state,\n  numberOfEntities: count,\n});\n\nexport const addHiddenSource = (state, { payload: { source } }) => ({\n  ...state,\n  entities: [...state.entities, { ...source, hidden: true }],\n});\n\nexport const clearFilters = (state) => ({\n  ...state,\n  filterValue: {},\n  pageNumber: 1,\n});\n\nexport const sourceRenamePending = (state, { payload: { id, name } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === id\n      ? {\n          ...entity,\n          name,\n        }\n      : entity\n  ),\n});\n\nconst setVendor = (state, { payload: { vendor } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    source_type_id: [],\n    applications: [],\n  },\n  activeVendor: vendor,\n});\n\nexport default {\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n  [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n  [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: entitiesRejected,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING]: sourceTypesPending,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED]: sourceTypesLoaded,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED]: sourceTypesRejected,\n  [ACTION_TYPES.LOAD_APP_TYPES_PENDING]: appTypesPending,\n  [ACTION_TYPES.LOAD_APP_TYPES_FULFILLED]: appTypesLoaded,\n  [ACTION_TYPES.LOAD_APP_TYPES_REJECTED]: appTypesRejected,\n  [ACTION_TYPES.REMOVE_SOURCE_PENDING]: sourceEditRemovePending,\n  [ACTION_TYPES.REMOVE_SOURCE_FULFILLED]: sourceEditRemoveFulfilled,\n  [ACTION_TYPES.REMOVE_SOURCE_REJECTED]: sourceEditRemoveRejected,\n  [ACTION_TYPES.REMOVE_APPLICATION_PENDING]: appRemovingPending,\n  [ACTION_TYPES.REMOVE_APPLICATION_FULFILLED]: appRemovingFulfilled,\n  [ACTION_TYPES.REMOVE_APPLICATION_REJECTED]: appRemovingRejected,\n  [ACTION_TYPES.RENAME_SOURCE_PENDING]: sourceRenamePending,\n  [ACTION_TYPES.RENAME_SOURCE_REJECTED]: sourceRenamePending,\n\n  [SORT_ENTITIES]: sortEntities,\n  [PAGE_AND_SIZE]: setPageAndSize,\n  [FILTER_SOURCES]: filterSources,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [SET_COUNT]: setCount,\n  [ADD_HIDDEN_SOURCE]: addHiddenSource,\n  [CLEAR_FILTERS]: clearFilters,\n  [SET_VENDOR]: setVendor,\n};\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const defaultUserState = {\n  writePermissions: undefined,\n};\n\nexport const writePermissionsPending = (state) => ({\n  ...state,\n  writePermissions: undefined,\n});\n\nexport const writePermissionsLoaded = (state, { payload: writePermissions }) => ({\n  ...state,\n  writePermissions,\n});\n\nexport default {\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING]: writePermissionsPending,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED]: writePermissionsLoaded,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED]: writePermissionsPending,\n};\n","import ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport SourcesReducer, { defaultSourcesState } from '../redux/sources/reducer';\nimport UserReducer, { defaultUserState } from '../redux/user/reducer';\nimport { updateQuery } from './urlQuery';\nimport { ACTION_TYPES } from '../redux/sources/actionTypes';\n\nexport const urlQueryMiddleware = (store) => (next) => (action) => {\n  if (action.type === ACTION_TYPES.LOAD_ENTITIES_PENDING) {\n    const sources = store.getState().sources;\n    updateQuery({ ...sources, ...action.options });\n  }\n\n  next(action);\n};\n\nexport const getStore = (addMiddlewares = [], initialState = {}) => {\n  const middlewares = [\n    thunk,\n    notificationsMiddleware({\n      errorTitleKey: 'error.title',\n      errorDescriptionKey: 'error.detail',\n    }),\n    promise,\n    urlQueryMiddleware,\n    ...addMiddlewares,\n  ];\n\n  const registry = new ReducerRegistry({}, middlewares);\n\n  registry.register({\n    sources: applyReducerHash(SourcesReducer, { ...defaultSourcesState, ...initialState.sources }),\n  });\n  registry.register({ user: applyReducerHash(UserReducer, { ...defaultUserState, ...initialState.user }) });\n  registry.register({ notifications: notificationsReducer });\n\n  return registry.getStore();\n};\n\nexport const getProdStore = () => getStore();\n","import { restFilterGenerator } from '../api/entities';\nimport { AVAILABLE, UNAVAILABLE } from '../views/formatters';\nimport { sourcesColumns } from '../views/sourcesViewDefinition';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from './constants';\n\nexport const updateQuery = ({ sortBy, sortDirection, pageNumber, pageSize, filterValue, activeVendor }) => {\n  const sortQuery = `sort_by[]=${sortBy}:${sortDirection}`;\n\n  const paginationQuery = `limit=${pageSize}&offset=${(pageNumber - 1) * pageSize}&activeVendor=${activeVendor || CLOUD_VENDOR}`;\n\n  const filterQuery = restFilterGenerator(filterValue);\n\n  const query = `?${sortQuery}&${paginationQuery}${filterQuery ? `&${filterQuery}` : ''}`;\n\n  const fullHref = decodeURIComponent(`${window.location.pathname}${query}`);\n\n  if (location.href !== fullHref) {\n    return history.replaceState('', '', fullHref);\n  }\n\n  return null;\n};\n\nexport const loadEnhancedAttributes = (params) => {\n  const urlParams = params || new URLSearchParams(window.location.search);\n\n  const applications = urlParams.getAll('application');\n  const types = urlParams.getAll('type');\n\n  return {\n    applications: applications.length && applications,\n    types: types.length && types,\n  };\n};\n\nexport const parseQuery = (getState) => {\n  let fetchOptions = {};\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const sortByRaw = urlParams.get('sort_by[]');\n\n  let sortBy;\n  let sortDirection;\n\n  if (sortByRaw) {\n    sortBy = sortByRaw.split(':')[0];\n    sortDirection = sortByRaw.split(':')[1];\n\n    sortBy = sourcesColumns({ formatMessage: () => '' })\n      .filter(({ sortable }) => sortable)\n      .map(({ value }) => value)\n      .includes(sortBy)\n      ? sortBy\n      : 'created_at';\n    sortDirection = ['desc', 'asc'].includes(sortDirection) ? sortDirection : 'desc';\n  }\n\n  if (sortBy && sortDirection) {\n    fetchOptions = {\n      sortBy,\n      sortDirection,\n    };\n  }\n\n  const pageSize = urlParams.get('limit');\n  const offset = urlParams.get('offset');\n\n  let pageNumber;\n\n  if (offset && pageSize) {\n    pageNumber = offset / pageSize + 1;\n    if (isNaN(pageNumber)) {\n      pageNumber = undefined;\n    }\n  }\n\n  if (pageSize && pageNumber) {\n    fetchOptions = {\n      ...fetchOptions,\n      pageNumber: parseInt(pageNumber, 10),\n      pageSize: Math.min(parseInt(pageSize, 10), 100),\n    };\n  }\n\n  let filterValue = {};\n\n  const name = urlParams.get('filter[name][contains_i]');\n\n  if (name) {\n    filterValue = { name };\n  }\n\n  const sourceTypes = urlParams.getAll('filter[source_type_id][]');\n\n  if (sourceTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      source_type_id: sourceTypes,\n    };\n  }\n\n  const applicationTypes = urlParams.getAll('filter[applications][application_type_id][eq][]');\n\n  if (applicationTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      applications: applicationTypes,\n    };\n  }\n\n  if (urlParams.get('filter[availability_status]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [AVAILABLE],\n    };\n  } else if (urlParams.get('filter[availability_status][]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [UNAVAILABLE],\n    };\n  }\n\n  const { applications, types } = loadEnhancedAttributes(urlParams);\n\n  if (applications || types) {\n    const { appTypes, sourceTypes } = getState().sources;\n\n    const applicationIds = applications.map?.((app) => appTypes.find(({ name }) => name.includes(app))?.id).filter(Boolean);\n    const typeIds = types.map?.((type) => sourceTypes.find(({ name }) => name === type)?.id).filter(Boolean);\n\n    filterValue = {\n      ...filterValue,\n      ...(applicationIds?.length && { applications: applicationIds }),\n      ...(typeIds?.length && { source_type_id: typeIds }),\n    };\n  }\n\n  const hasSomeFilterValue =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value)\n      .filter(Boolean).length > 0;\n\n  if (hasSomeFilterValue) {\n    fetchOptions = {\n      ...fetchOptions,\n      filterValue,\n    };\n  }\n\n  const activeVendor = urlParams.get('activeVendor');\n\n  if (activeVendor === CLOUD_VENDOR || activeVendor === REDHAT_VENDOR) {\n    fetchOptions = {\n      ...fetchOptions,\n      activeVendor,\n    };\n  }\n\n  return fetchOptions;\n};\n"],"names":["ErrorBoundary","error","sentryId","Sentry","this","props","dispatch","addMessage","title","toString","variant","description","stack","state","children","Fragment","errorInfo","Component","propTypes","PropTypes","connect","useDispatch","useEffect","type","ACTION_TYPES","insights","chrome","getUserPermissions","then","permissions","allPermission","reduce","acc","curr","permission","writePermissions","includes","payload","detail","data","pathname","useLocation","sources","useSelector","shallowEqual","previousPathname","useRef","loadEnhancedAttributes","applications","types","Promise","all","loadSourceTypes","loadAppTypes","loadEntities","parseQuery","current","updateQuery","history","useHistory","init","identifyApp","unregister","on","event","navId","split","pop","domEvent","href","push","routes","_exception","console","warn","getBaseName","level","release","pathName","replace","shift","Array","_curr","key","sessionStorage","removeItem","CLOUD_CARDS_KEY","basename","location","locale","Main","style","padding","Routes","doLoadSourceTypes","getSourcesApi","listSourceTypes","defaultSourcesState","loaded","pageSize","pageNumber","entities","numberOfEntities","appTypesLoaded","sourceTypesLoaded","filterValue","sortBy","sortDirection","removingSources","activeVendor","CLOUD_VENDOR","appTypes","sourceTypes","addAppToSource","sourceId","app","map","entity","id","sourceRenamePending","name","options","paginationClicked","sources_aggregate","Math","max","aggregate","total_count","fetchingError","meta","filter","appId","isDeleting","undefined","SORT_ENTITIES","column","direction","PAGE_AND_SIZE","page","size","FILTER_SOURCES","value","ADD_APP_TO_SOURCE","SET_COUNT","count","ADD_HIDDEN_SOURCE","source","hidden","CLEAR_FILTERS","SET_VENDOR","vendor","source_type_id","defaultUserState","writePermissionsPending","urlQueryMiddleware","store","next","action","getState","getProdStore","addMiddlewares","initialState","middlewares","thunk","notificationsMiddleware","errorTitleKey","errorDescriptionKey","promise","registry","ReducerRegistry","register","applyReducerHash","SourcesReducer","user","UserReducer","notifications","notificationsReducer","getStore","sortQuery","paginationQuery","filterQuery","restFilterGenerator","query","fullHref","decodeURIComponent","window","replaceState","params","urlParams","URLSearchParams","search","getAll","length","fetchOptions","sortByRaw","get","sourcesColumns","formatMessage","sortable","offset","isNaN","parseInt","min","applicationTypes","availability_status","AVAILABLE","UNAVAILABLE","applicationIds","find","Boolean","typeIds","Object","entries","REDHAT_VENDOR"],"sourceRoot":""}