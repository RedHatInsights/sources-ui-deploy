{"version":3,"file":"js/5617.1645101967948.644f545e34141383b08b.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/api/entities.js","webpack:///./src/components/SourcesTable/loaders.js","webpack:///./src/components/TilesShared/ImageWithPlaceholder.js","webpack:///./src/marketplace/MarketplaceCard.js","webpack:///./src/marketplace/constants.js","webpack:///./src/marketplace/api.js","webpack:///./src/marketplace/SkeletonMarketplaceCard.js","webpack:///./src/marketplace/MarketplaceModal.js","webpack:///./src/marketplace/SeeMoreCard.js","webpack:///./src/marketplace/RecommendedServices.js","webpack:///./src/views/formatters.js"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AppPlaceholder } from './components/SourcesTable/loaders';\n\nconst SourcesPage = lazy(() => import(/* webpackChunkName: \"sourcesPage\" */ './pages/Sources'));\nconst SourceDetail = lazy(() => import(/* webpackChunkName: \"sourceDetail\" */ './pages/Detail'));\n\nexport const routes = {\n  sources: {\n    path: '/sources',\n  },\n  sourcesNew: {\n    path: '/sources/new',\n    writeAccess: true,\n  },\n  sourcesRemove: {\n    path: '/sources/remove/:id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetail: {\n    path: '/sources/detail/:id',\n    redirectNoId: true,\n  },\n  sourcesDetailRename: {\n    path: '/sources/detail/:id/rename',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemove: {\n    path: '/sources/detail/:id/remove',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailAddApp: {\n    path: '/sources/detail/:id/add_app/:app_type_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemoveApp: {\n    path: '/sources/detail/:id/remove_app/:app_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailEditCredentials: {\n    path: '/sources/detail/:id/edit_credentials',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n};\n\nexport const replaceRouteId = (path, id) => path.replace(':id', id);\n\nconst Routes = () => (\n  <Suspense fallback={<AppPlaceholder />}>\n    <Switch>\n      <Route path={routes.sourcesDetail.path} component={SourceDetail} />\n      <Route component={SourcesPage} />\n    </Switch>\n  </Suspense>\n);\n\nexport default Routes;\n","import axios from 'axios';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { APP_NAMES } from '../components/SourceEditForm/parser/application';\nimport * as interceptors from '../frontend-components-copies/interceptors';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\nimport { AVAILABLE, PARTIALLY_UNAVAILABLE, UNAVAILABLE } from '../views/formatters';\n\nimport { SOURCES_API_BASE_V3 } from './constants';\nimport { cmConvertTypes, cmValuesMapper, getCmValues } from './getCmValues';\n\nexport const graphQlErrorInterceptor = (response) => {\n  if (response.errors && response.errors.length > 0) {\n    return Promise.reject({ detail: response.errors[0].message });\n  }\n\n  return response;\n};\n\nexport const interceptor403 = (error) => {\n  if (error.errors && error.errors[0].status === 403) {\n    return Promise.reject({\n      detail: error.errors[0].detail,\n      title: 'Forbidden access',\n    });\n  }\n\n  throw error;\n};\n\nconst axiosInstanceInsights = axios.create();\naxiosInstanceInsights.interceptors.request.use(interceptors.authInterceptor);\naxiosInstanceInsights.interceptors.response.use(interceptors.responseDataInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor401);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor500);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.errorInterceptor);\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptor403);\n\nexport { axiosInstanceInsights as axiosInstance };\n\nexport const getSourcesApi = () => ({\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  updateSource: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/sources/${id}`, data),\n  updateEndpoint: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/endpoints/${id}`, data),\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  updateAuthentication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/authentications/${id}`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  showSource: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  listSourceEndpoints: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/endpoints`),\n  listSourceApplications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/applications`),\n  listEndpointAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}/authentications`),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  doLoadAppTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  deleteApplication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  deleteAuthentication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  showAuthentication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  updateApplication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/applications/${id}`, data),\n  showApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  listSourceAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/authentications`),\n  createSource: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources`, data),\n  getEndpoint: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}`),\n  getGoogleAccount: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account`),\n  bulkCreate: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/bulk_create`, data),\n  pauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/pause`),\n  unpauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/unpause`),\n  pauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/pause`),\n  unpauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/unpause`),\n});\n\nexport const doLoadAppTypes = () => getSourcesApi().doLoadAppTypes();\n\nexport const doRemoveSource = (sourceId) =>\n  getSourcesApi()\n    .deleteSource(sourceId)\n    .catch((error) => {\n      throw { error: { detail: error.errors[0].detail } };\n    });\n\nexport const pagination = (pageSize, pageNumber) => `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) => {\n  if (!sortBy) {\n    return '';\n  }\n\n  if (sortBy === 'source_type_id') {\n    return `sort_by:{source_type:{product_name:\"${sortDirection}\"}}`;\n  }\n\n  if (sortBy === 'applications') {\n    return `sort_by:{applications:{__count:\"${sortDirection}\"}}`;\n  }\n\n  return `sort_by:{${sortBy}:\"${sortDirection}\"}`;\n};\n\nexport const filtering = (filterValue = {}, activeVendor) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`name: { contains_i: \"${filterValue.name}\" }`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterQueries.push(`source_type_id: { eq: [${filterValue.source_type_id.map((x) => `\"${x}\"`).join(', ')}] }`);\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterQueries.push(\n      `applications: { application_type_id: { eq: [${filterValue.applications.map((x) => `\"${x}\"`).join(', ')}] }}`\n    );\n  }\n\n  if (activeVendor === CLOUD_VENDOR) {\n    filterQueries.push(`source_type: { vendor: { not_eq: \"Red Hat\"} }`);\n  }\n\n  if (activeVendor === REDHAT_VENDOR) {\n    filterQueries.push('source_type: { vendor: \"Red Hat\" }');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`availability_status: { eq: \"${AVAILABLE}\" }`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`availability_status: { eq: [\"${PARTIALLY_UNAVAILABLE}\", \"${UNAVAILABLE}\"] }`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return `filter: { ${filterQueries.join(', ')} }`;\n  }\n\n  return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    imported,\n    availability_status,\n    source_ref,\n    last_checked_at,\n    updated_at,\n    last_available_at,\n    app_creation_workflow,\n    paused_at,\n    authentications { authtype, username, availability_status_error, availability_status }\n    applications { application_type_id, id, availability_status_error, availability_status, paused_at, authentications { id, resource_type } },\n    endpoints { id, scheme, host, port, path, receptor_node, role, certificate_authority, verify_ssl, availability_status_error, availability_status, authentications { authtype, availability_status, availability_status_error } }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue, activeVendor }) => {\n  const filter = filtering(filterValue, activeVendor);\n\n  const filterSection = [pagination(pageSize, pageNumber), sorting(sortBy, sortDirection), filter].join(',');\n\n  return getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(${filterSection})\n      { ${graphQlAttributes} },\n     sources_aggregate(${filter}){aggregate{total_count}}\n    }`,\n    })\n    .then(({ data }) => data);\n};\n\nexport const doCreateApplication = (data) => getSourcesApi().createApplication(data);\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n  getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => {\n      throw { error: { title: errorMessage, detail } };\n    });\n\nexport const restFilterGenerator = (filterValue = {}, activeVendor) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterValue.applications.map((id) => filterQueries.push(`filter[applications][application_type_id][eq][]=${id}`));\n  }\n\n  if (activeVendor === CLOUD_VENDOR) {\n    filterQueries.push(`filter[source_type][vendor][not_eq]=Red Hat`);\n  }\n\n  if (activeVendor === REDHAT_VENDOR) {\n    filterQueries.push('filter[source_type][vendor]=Red Hat');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`filter[availability_status]=${AVAILABLE}`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`filter[availability_status][]=${PARTIALLY_UNAVAILABLE}`);\n      filterQueries.push(`filter[availability_status][]=${UNAVAILABLE}`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return filterQueries.join('&');\n  }\n\n  return '';\n};\n\nexport const doLoadSource = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { id: { eq: ${id}}})\n            { ${graphQlAttributes} }\n        }`,\n    })\n    .then(({ data }) => data);\n\nexport const doLoadApplicationsForEdit = async (id, appTypes, sourceTypes) => {\n  let graphql = await getSourcesApi().postGraphQL({\n    query: `{ sources(filter: { id: { eq: ${id}}})\n          { source_type_id, applications {\n              application_type_id,\n              id,\n              availability_status_error,\n              availability_status,\n              paused_at,\n              authentications {\n                  id\n              }\n          } }\n      }`,\n  });\n\n  const promises = [];\n  graphql.data.sources?.[0]?.applications?.forEach((app) => {\n    promises.push(getSourcesApi().showApplication(app.id));\n  });\n\n  const results = await Promise.all(promises);\n\n  const sourceType = sourceTypes.find(({ id }) => id === graphql.data.sources?.[0]?.source_type_id);\n  const costManagementApp = appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT);\n\n  if (results.length) {\n    // Doing for as forEach has some issues in jest with nested async functions\n    for (let index = 0; index < results.length; index++) {\n      const { extra, application_type_id } = results[index];\n      const newExtra = { ...extra };\n\n      if (\n        application_type_id === costManagementApp.id &&\n        cmConvertTypes.includes(sourceType.name) &&\n        !Object.keys(extra).length\n      ) {\n        const cmValues = await getCmValues(id);\n        Object.keys(cmValuesMapper).forEach((key) => {\n          const value = get(cmValues, key);\n\n          value && set(newExtra, cmValuesMapper[key], value);\n        });\n      }\n\n      graphql.data.sources[0].applications[index] = {\n        ...graphql.data.sources[0].applications[index],\n        extra: newExtra,\n      };\n    }\n  }\n\n  return graphql.data;\n};\n\nexport const doDeleteAuthentication = (id) => getSourcesApi().deleteAuthentication(id);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\nimport { Spinner, Bullseye, Grid, GridItem, Card, CardBody } from '@patternfly/react-core';\n\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nimport './loaders.scss';\nimport { useIntl } from 'react-intl';\n\nexport const Loader = ({ width = '100%', height = '100%', className = '' }) => (\n  <span className={`src-c-loader ${className}`} style={{ width, height }} role=\"progressbar\" />\n);\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport const AppPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        <div className=\"src-c-fake_content pf-u-p-lg\">\n          <Loader />\n        </div>\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport const PaginationLoader = () => <Loader className=\"top-pagination\" height={30} width={200} />;\n\nexport const PlaceHolderTable = () => (\n  <Bullseye className=\"src-c-bullseye__placeholder-loader\">\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) =>\n  isDeleting ? (\n    <tr>\n      <td colSpan={COLUMN_COUNT} className=\"pf-u-p-md\">\n        <Loader height={100} />\n      </td>\n    </tr>\n  ) : (\n    <RowWrapper {...initialProps} row={row} className=\"src-c-row-vertical-centered\" />\n  );\n\nRowWrapperLoader.propTypes = {\n  row: PropTypes.object.isRequired,\n};\n\nexport const CardLoader = (props) => (\n  <Card className=\"pf-u-m-md\">\n    <CardBody>\n      <Loader {...props} />\n    </CardBody>\n  </Card>\n);\n\nexport const DetailLoader = () => (\n  <div className=\"src-c-detail-page\">\n    <PageHeader>\n      <Loader height={96} />\n    </PageHeader>\n    <Grid>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"12\">\n        <CardLoader height={324} />\n      </GridItem>\n    </Grid>\n  </div>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loader } from '../SourcesTable/loaders';\n\nconst ImageWithPlaceholder = ({ src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  return (\n    <React.Fragment>\n      {!loaded && <Loader height=\"40px\" width=\"110px\" {...rest} />}\n      <img src={src} onLoad={() => setLoaded(true)} style={{ display: loaded ? 'initial' : 'none' }} {...rest} />\n    </React.Fragment>\n  );\n};\n\nImageWithPlaceholder.propTypes = {\n  src: PropTypes.string.isRequired,\n};\n\nexport default ImageWithPlaceholder;\n","import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter, Label, Button } from '@patternfly/react-core';\nimport { DatabaseIcon, ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport ImageWithPlaceholder from '../components/TilesShared/ImageWithPlaceholder';\n\nconst MarketplaceCard = (product) => (\n  <Card isFlat className=\"marketplace-card\">\n    <CardTitle className=\"pf-u-pl-md pf-u-pr-md\">\n      <ImageWithPlaceholder src={product.logo_url} className=\"marketplace-card-icon\" />\n      <br />\n      {product.title}\n      <br />\n      <Label className=\"pf-u-mt-sm marketplace-label\" icon={<DatabaseIcon />}>\n        {product.primary_category.display_name}\n      </Label>\n    </CardTitle>\n    <CardBody className=\"marketplace-card-body pf-u-mb-md pf-u-pl-md pf-u-pr-md\" isFilled>\n      {product.description_short}\n    </CardBody>\n    <CardFooter className=\"pf-u-pl-md pf-u-pr-md pf-u-pb-md\">\n      <Button\n        variant=\"link\"\n        isInline\n        icon={<ExternalLinkAltIcon />}\n        iconPosition=\"right\"\n        component=\"a\"\n        href={product.product_page_url}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        Add{' '}\n      </Button>\n    </CardFooter>\n  </Card>\n);\n\nexport default MarketplaceCard;\n","export const MARKETPLACE_URL = 'https://sandbox.marketplace.redhat.com';\nexport const MARKETPLACE_API_BASE = '/api/marketplace-gateway/v1';\n","import { axiosInstance } from '../api/entities';\nimport { MARKETPLACE_API_BASE } from './constants';\n\nexport const getProducts = async () => axiosInstance.get(`${MARKETPLACE_API_BASE}/unstable`);\nexport const getCategories = async () => axiosInstance.get(`${MARKETPLACE_API_BASE}/categories`);\n","import React from 'react';\nimport { Card, CardTitle, CardBody, CardFooter, Skeleton } from '@patternfly/react-core';\n\nconst SkeletonMarketplaceCard = () => (\n  <Card isFlat className=\"marketplace-card\">\n    <CardTitle>\n      <Skeleton role=\"progressbar\" />\n    </CardTitle>\n    <CardBody>\n      <Skeleton role=\"progressbar\" />\n    </CardBody>\n    <CardFooter>\n      <Skeleton role=\"progressbar\" />\n    </CardFooter>\n  </Card>\n);\n\nexport default SkeletonMarketplaceCard;\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar/PrimaryToolbar';\n\nimport MarketplaceCard from './MarketplaceCard';\nimport { MARKETPLACE_URL } from './constants';\nimport { getCategories } from './api';\nimport SkeletonMarketplaceCard from './SkeletonMarketplaceCard';\n\nconst init = (data) => ({\n  page: 1,\n  perPage: 10,\n  itemCount: data?.length || 0,\n  filters: {\n    type: ['database'],\n  },\n  categories: null,\n  isLoading: true,\n});\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'SET_PAGE':\n      return { ...state, page: payload };\n    case 'SET_PER_PAGE':\n      return { ...state, page: 1, perPage: payload };\n    case 'LOAD_CATEGORIES':\n      return { ...state, categories: payload, isLoading: false };\n  }\n};\n\nconst valuesMapper = (value) =>\n  ({\n    database: 'Database',\n  }[value] || value);\n\nexport const chipFormatters = (key, filter) =>\n  ({\n    type: {\n      category: 'Type',\n      chips: filter.map((value) => ({ name: valuesMapper(value) })),\n    },\n  }[key] || { category: key, chips: filter.map((value) => ({ name: value })) });\n\nconst generateChips = (filters) =>\n  Object.keys(filters)\n    .map((key) => (!filters[key] || filters[key]?.length === 0 ? null : chipFormatters(key, filters[key])))\n    .filter(Boolean);\n\nconst MarketplaceModal = ({ data, isOpen, onClose }) => {\n  const [config, dispatch] = useReducer(reducer, data, init);\n\n  useEffect(() => {\n    isOpen && getCategories().then(({ data }) => dispatch({ type: 'LOAD_CATEGORIES', payload: data }));\n  }, [isOpen]);\n\n  return (\n    <Modal\n      className=\"sources\"\n      onClose={onClose}\n      isOpen={isOpen}\n      title=\"Browse catalog\"\n      description={\n        <span>\n          A curated selection of offerings available for purchase from{' '}\n          <a href={MARKETPLACE_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n            Red Hat Marketplace <ExternalLinkAltIcon />\n          </a>\n        </span>\n      }\n      variant=\"large\"\n    >\n      {config.isLoading && (\n        <div className=\"pf-u-mb-md marketplace-flex\">\n          <SkeletonMarketplaceCard />\n          <SkeletonMarketplaceCard />\n        </div>\n      )}\n      {!config.isLoading && (\n        <React.Fragment>\n          <PrimaryToolbar\n            useMobileLayout\n            className=\"marketplace-modal-toolbar\"\n            pagination={{\n              itemCount: config.itemCount,\n              page: config.page,\n              perPage: config.perPage,\n              onSetPage: (_e, page) => dispatch({ type: 'SET_PAGE', payload: page }),\n              onPerPageSelect: (_e, perPage) => dispatch({ type: 'SET_PER_PAGE', payload: perPage }),\n              'data-testid': 'pagination',\n            }}\n            filterConfig={{\n              items: [\n                {\n                  label: 'Type',\n                  placeholder: 'Filter by product type',\n                  type: 'checkbox',\n                  filterValues: {\n                    //onChange: (_event, value) => console.log(value),\n                    value: ['database'],\n                    items: config.categories.map((category) => ({\n                      label: category.display_name,\n                      value: category.page_name,\n                      isDisabled: true,\n                    })),\n                  },\n                },\n              ],\n            }}\n            activeFiltersConfig={{\n              showDeleteButton: false,\n              filters: generateChips(config.filters),\n              // onDelete: (_event, chips, deleteAll) => console.log(chips, deleteAll),\n            }}\n          />\n          <div className=\"pf-u-mb-md marketplace-flex\">\n            {data.map((product) => (\n              <MarketplaceCard key={product.id} {...product} />\n            ))}\n          </div>\n        </React.Fragment>\n      )}\n    </Modal>\n  );\n};\n\nMarketplaceModal.propTypes = {\n  data: PropTypes.array,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nexport default MarketplaceModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter, Button } from '@patternfly/react-core';\n\nimport MarketplaceModal from './MarketplaceModal';\n\nconst SeeMoreCard = ({ data }) => {\n  const [isOpen, setOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <MarketplaceModal onClose={() => setOpen(false)} data={data} isOpen={isOpen} />\n      <Card isFlat className=\"marketplace-card marketplace-seemore-card\">\n        <CardBody isFilled className=\"pf-u-pl-md pf-u-pr-md card-text\">\n          Not what you’re looking for? Browse the catalog to see more offerings from Red Hat Marketplace.\n        </CardBody>\n        <CardFooter className=\"pf-u-pl-md pf-u-pr-md pf-u-pb-md\">\n          <Button variant=\"primary\" onClick={() => setOpen(true)}>\n            See more databases\n          </Button>\n        </CardFooter>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nSeeMoreCard.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default SeeMoreCard;\n","import React, { useEffect, useState } from 'react';\nimport { Title } from '@patternfly/react-core';\n\nimport './marketplace.scss';\n\nimport MarketplaceCard from './MarketplaceCard';\nimport { getProducts } from './api';\nimport SeeMoreCard from './SeeMoreCard';\nimport SkeletonMarketplaceCard from './SkeletonMarketplaceCard';\n\nconst RecommendedServices = () => {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    getProducts().then(({ data }) => setData(data));\n  }, []);\n\n  if (data) {\n    return (\n      <div className=\"sources\">\n        <Title headingLevel=\"h4\" size=\"xl\" className=\"pf-u-mb-md\">\n          Recommended services\n        </Title>\n        <div className=\"pf-u-mb-md marketplace-flex\">\n          <MarketplaceCard\n            {...(data.find((product) => product?.product_page_name === 'mongodb-enterprise-advanced') || data[0])}\n          />\n          <SeeMoreCard data={data} />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"pf-u-mb-md marketplace-flex\">\n      <SkeletonMarketplaceCard />\n      <SkeletonMarketplaceCard />\n    </div>\n  );\n};\n\nexport default RecommendedServices;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Text, TextVariants, TextContent, Badge, Popover, Tooltip, Label, LabelGroup, Button } from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { replaceRouteId, routes } from '../Routes';\nimport isSourceAzureRHEL from '../utilities/isSourceAzureRHEL';\n\nexport const defaultPort = (scheme) =>\n  ({\n    http: '80',\n    https: '443',\n  }[scheme]);\n\nexport const importsTexts = (value) =>\n  ({\n    cfme: (\n      <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n      />\n    ),\n  }[value.toLowerCase()]);\n\nexport const schemaToPort = (schema, port) => (port && String(port) !== defaultPort(schema) ? `:${port}` : '');\n\nexport const endpointToUrl = (endpoint) => {\n  const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n  const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n  const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n  if (url === '://') {\n    return;\n  }\n\n  return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n  return type && type.name === 'openshift';\n};\n\nexport const formatURL = (source) => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n  const type = sourceTypes.find((type) => type.id === sourceType);\n  return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = (str) => (\n  <span className=\"src-c-help-cursor\">\n    <DateFormat type=\"relative\" date={str} />\n  </span>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n  <TextContent>\n    <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>{name}</Link>\n    <br key={`${source.id}-br`} />\n    <Text key={source.id} component={TextVariants.small}>\n      {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n    </Text>\n  </TextContent>\n);\n\nexport const importedFormatter = (value) => {\n  if (!value) {\n    return null;\n  }\n\n  const text = importsTexts(value);\n\n  if (text) {\n    return (\n      <Tooltip content={text}>\n        <Badge isRead className=\"src-m-help-cursor\">\n          <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n        </Badge>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Badge isRead>\n      <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n    </Badge>\n  );\n};\n\nexport const AVAILABLE = 'available';\nexport const UNAVAILABLE = 'unavailable';\nexport const UNKNOWN = 'unknown';\nexport const PARTIALLY_UNAVAILABLE = 'partially_available';\nexport const IN_PROGRESS = 'in_progress';\nexport const PAUSED = 'paused_at';\nexport const RHELAZURE = 'rhel_azure';\n\nexport const getStatusColor = (status) =>\n  ({\n    [UNAVAILABLE]: 'red',\n    [AVAILABLE]: 'green',\n    [PARTIALLY_UNAVAILABLE]: 'orange',\n    [PAUSED]: 'cyan',\n  }[status] || 'grey');\n\nexport const getStatusText = (status) =>\n  ({\n    [UNAVAILABLE]: <FormattedMessage id=\"sources.unavailable\" defaultMessage=\"Unavailable\" />,\n    [AVAILABLE]: <FormattedMessage id=\"sources.available\" defaultMessage=\"Available\" />,\n    [PARTIALLY_UNAVAILABLE]: <FormattedMessage id=\"sources.partiallyAvailable\" defaultMessage=\"Partially available\" />,\n    [IN_PROGRESS]: <FormattedMessage id=\"sources.inProgress\" defaultMessage=\"In progress\" />,\n    [PAUSED]: <FormattedMessage id=\"sources.paused\" defaultMessage=\"Paused\" />,\n  }[status] || <FormattedMessage id=\"sources.unknown\" defaultMessage=\"Unknown\" />);\n\nexport const UnknownError = () => <FormattedMessage id=\"sources.unknownError\" defaultMessage=\"unavailable\" />;\n\nexport const formatAvailibilityErrors = (appTypes, errors) => (\n  <React.Fragment>\n    {errors.source && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.sourceError\"\n          defaultMessage=\"Source's status: { error }\"\n          values={{ error: errors.source }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.endpoint && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.endpointError\"\n          defaultMessage=\"Endpoint error: { error }\"\n          values={{ error: errors.endpoint }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.authentications && (\n      <FormattedMessage\n        id=\"sources.authErrors\"\n        defaultMessage=\"Authentication {count, plural, one {status} other {statuses}} : { errors }\"\n        values={{\n          count: errors.authentications.length,\n          errors: errors.authentications.map(({ error, type }) => (\n            <React.Fragment key={type}>\n              <FormattedMessage id=\"sources.errorAuthTemplate\" defaultMessage=\"{ type }: { error }\" values={{ error, type }} />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n    {errors.applications && (\n      <FormattedMessage\n        id=\"sources.appErrors\"\n        defaultMessage=\"Application {count, plural, one {status} other {statutes}}: { errors }\"\n        values={{\n          count: errors.applications.length,\n          errors: errors.applications.map(({ error, id }) => (\n            <React.Fragment key={id}>\n              <FormattedMessage\n                id=\"sources.errorAppTemplate\"\n                defaultMessage=\"{ app }: { error }\"\n                values={{\n                  error,\n                  app: appTypes.find((app) => app.id === id)?.display_name || id,\n                }}\n              />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport const getStatusTooltipText = (status, appTypes, errors = {}) =>\n  ({\n    [UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [AVAILABLE]: <FormattedMessage id=\"sources.appStatusOK\" defaultMessage=\"Everything works fine.\" />,\n    [PARTIALLY_UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n    [PAUSED]: (\n      <FormattedMessage\n        id=\"sources.pausedStatus\"\n        defaultMessage=\"Data collection is temporarily disabled. Resume source to reestablish connection.\"\n      />\n    ),\n    [RHELAZURE]: (\n      <FormattedMessage\n        id=\"sources.rhelAzureStatus\"\n        defaultMessage=\"This source cannot currently be monitored in Sources, and does not reflect true status or resources.\"\n      />\n    ),\n  }[status] || <FormattedMessage id=\"sources.appStatusUnknown\" defaultMessage=\"Status has not been verified.\" />);\n\nexport const getAllErrors = ({\n  availability_status,\n  availability_status_error,\n  applications = [],\n  endpoints: [endpoint] = [],\n}) => {\n  if (availability_status === IN_PROGRESS) {\n    return { errors: {}, status: IN_PROGRESS };\n  }\n\n  let errors = {};\n  let statusesCount = 0;\n  let errorsCount = 0;\n\n  if (availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      source: availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  applications.map((app) => {\n    if (app.availability_status === UNAVAILABLE) {\n      errors = {\n        ...errors,\n        applications: [\n          ...(errors.applications ? errors.applications : []),\n          {\n            id: app.application_type_id,\n            error: app.availability_status_error || <UnknownError />,\n          },\n        ],\n      };\n      statusesCount++;\n      errorsCount++;\n    } else if (app.availability_status === AVAILABLE) {\n      statusesCount++;\n    }\n  });\n\n  if (endpoint?.availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      endpoint: endpoint.availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (endpoint?.availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  if (endpoint?.authentications) {\n    endpoint.authentications.map((auth) => {\n      if (auth.availability_status === UNAVAILABLE) {\n        errors = {\n          ...errors,\n          authentications: [\n            ...(errors.authentications ? errors.authentications : []),\n            {\n              type: auth.authtype,\n              error: auth.availability_status_error || <UnknownError />,\n            },\n          ],\n        };\n        statusesCount++;\n        errorsCount++;\n      } else if (auth.availability_status === AVAILABLE) {\n        statusesCount++;\n      }\n    });\n  }\n\n  return {\n    errors,\n    status:\n      errorsCount === 0\n        ? statusesCount === 0\n          ? UNKNOWN\n          : AVAILABLE\n        : errorsCount === statusesCount\n        ? UNAVAILABLE\n        : PARTIALLY_UNAVAILABLE,\n  };\n};\n\nexport const availabilityFormatter = (_status, source, { appTypes, sourceTypes }) => {\n  const meta = getAllErrors(source);\n  const status = source.paused_at ? PAUSED : isSourceAzureRHEL({ source, sourceTypes, appTypes }) ? RHELAZURE : meta.status;\n\n  return (\n    <span>\n      <Popover\n        showClose={false}\n        aria-label={`${status} popover`}\n        bodyContent={getStatusTooltipText(status, appTypes, meta.errors)}\n      >\n        <Label\n          className=\"src-m-clickable\"\n          color={getStatusColor(status)}\n          {...(source.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n          {...(source.paused_at && { icon: <PauseIcon /> })}\n        >\n          {getStatusText(status)}\n        </Label>\n      </Popover>\n    </span>\n  );\n};\n\nexport const getStatusTooltipTextApp = (status, error, intl) =>\n  ({\n    [AVAILABLE]: intl.formatMessage({\n      id: 'sources.appStatusOK',\n      defaultMessage: 'Everything works fine.',\n    }),\n    [UNAVAILABLE]: error || intl.formatMessage({ id: 'sources.unknownError', defaultMessage: 'Unknown error' }),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n  }[status] ||\n  intl.formatMessage({\n    id: 'sources.appStatusUnknown',\n    defaultMessage: 'Status has not been verified.',\n  }));\n\nexport const ApplicationLabel = ({ app, showStatusText, ...props }) => {\n  const intl = useIntl();\n\n  const statusText = getStatusTooltipTextApp(app.availability_status, app.availability_status_error, intl);\n\n  return (\n    <Popover\n      showClose={false}\n      key={app.display_name}\n      aria-label={`${app.display_name} popover`}\n      bodyContent={\n        app.paused_at\n          ? `${statusText} ${intl.formatMessage({\n              id: 'appplication.paused.additionalText',\n              defaultMessage: 'Resume this application to continue data collection.',\n            })}`\n          : statusText\n      }\n      {...(app.paused_at && {\n        headerContent: intl.formatMessage({\n          id: 'application.paused.header',\n          defaultMessage: 'Application paused',\n        }),\n      })}\n    >\n      <Label\n        className=\"src-m-clickable\"\n        color={getStatusColor(app.availability_status)}\n        {...(app.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n        {...(app.paused_at && { icon: <PauseIcon /> })}\n        {...props}\n      >\n        {showStatusText ? getStatusText(app.availability_status) : app.display_name}\n      </Label>\n    </Popover>\n  );\n};\n\nApplicationLabel.propTypes = {\n  app: PropTypes.shape({\n    display_name: PropTypes.string,\n    availability_status: PropTypes.string,\n    availability_status_error: PropTypes.string,\n    paused_at: PropTypes.string,\n  }),\n  showStatusText: PropTypes.bool,\n};\n\nconst EnhancedLabelGroup = ({ applications, ...props }) => {\n  const intl = useIntl();\n\n  return (\n    <LabelGroup\n      {...props}\n      numLabels={2}\n      collapsedText={intl.formatMessage(\n        { id: 'applications.showMore', defaultMessage: '{remaining} more' },\n        { remaining: '${remaining}' }\n      )}\n    >\n      {applications.map((app, index) => (\n        <ApplicationLabel app={app} key={app.id || index} />\n      ))}\n    </LabelGroup>\n  );\n};\n\nEnhancedLabelGroup.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      display_name: PropTypes.string,\n      availability_status: PropTypes.string,\n      availability_status_error: PropTypes.string,\n      paused_at: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport const getAppStatus = (app, source, appTypes) => {\n  const application = appTypes.find((type) => type.id === app.application_type_id);\n\n  if (application) {\n    let availability_status = app.availability_status;\n    let availability_status_error = app.availability_status_error;\n\n    if (app.authentications?.[0]?.resource_type === 'Endpoint') {\n      availability_status = source.endpoints?.[0]?.availability_status;\n      availability_status_error = source.endpoints?.[0]?.availability_status_error;\n    }\n\n    return {\n      display_name: application.display_name,\n      paused_at: app.paused_at,\n      availability_status,\n      availability_status_error,\n    };\n  }\n};\n\nexport const applicationFormatter = (apps, item, { appTypes }) => {\n  const applications = apps\n    .map((app) => getAppStatus(app, item, appTypes))\n    .filter(Boolean)\n    .sort((a, b) => a.display_name.localeCompare(b.display_name));\n\n  if (applications.length === 0) {\n    return '--';\n  }\n\n  return <EnhancedLabelGroup numLabels={2} collapsedText applications={applications} />;\n};\n\nexport const configurationModeFormatter = (mode, item, { intl, sourceType }) => {\n  if (mode === 'account_authorization') {\n    const superKeyType = sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n    const superKeyAuth = item?.authentications?.find(({ authtype }) => authtype && authtype === superKeyType.type);\n\n    return (\n      <React.Fragment>\n        {intl.formatMessage({\n          id: 'configurationMode.trust',\n          defaultMessage: 'Account authorization',\n        })}\n        {superKeyAuth?.availability_status === UNAVAILABLE && (\n          <Tooltip\n            position=\"top\"\n            content={\n              superKeyAuth.availability_status_error ||\n              intl.formatMessage({\n                id: 'configurationMode.trustmode.defaultError',\n                defaultMessage: 'Edit credentials required.',\n              })\n            }\n          >\n            <span className=\"pf-u-ml-sm\">\n              <ExclamationCircleIcon fill=\"#C9190B\" />\n            </span>\n          </Tooltip>\n        )}\n        <div className=\"pf-u-mt-sm\">\n          <Link to={replaceRouteId(routes.sourcesDetailEditCredentials.path, item.id)}>\n            <Button variant=\"link\" id=\"edit-super-credentials\" isInline>\n              {item.paused_at\n                ? intl.formatMessage({\n                    id: 'sources.viewCredentials',\n                    defaultMessage: 'View credentials',\n                  })\n                : intl.formatMessage({\n                    id: 'sources.editCredentials',\n                    defaultMessage: 'Edit credentials',\n                  })}\n            </Button>\n          </Link>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return intl.formatMessage({\n    id: 'configurationMode.manual',\n    defaultMessage: 'Manual configuration',\n  });\n};\n"],"names":["routes","sources","path","sourcesNew","writeAccess","sourcesRemove","redirectNoId","sourcesDetail","sourcesDetailRename","noPaused","sourcesDetailRemove","sourcesDetailAddApp","sourcesDetailRemoveApp","sourcesDetailEditCredentials","replaceRouteId","id","replace","axiosInstanceInsights","axios","interceptors","request","use","response","errors","length","Promise","reject","detail","message","error","status","title","getSourcesApi","checkAvailabilitySource","post","SOURCES_API_BASE_V3","updateSource","data","patch","updateEndpoint","createEndpoint","updateAuthentication","createAuthentication","showSource","get","listSourceEndpoints","listSourceApplications","listEndpointAuthentications","deleteSource","createApplication","postGraphQL","listSourceTypes","doLoadAppTypes","deleteApplication","createAuthApp","deleteAuthentication","showAuthentication","updateApplication","showApplication","listSourceAuthentications","createSource","getEndpoint","getGoogleAccount","bulkCreate","pauseApplication","unpauseApplication","pauseSource","unpauseSource","doRemoveSource","sourceId","pagination","pageSize","pageNumber","sorting","sortBy","sortDirection","graphQlAttributes","doLoadEntities","filter","filterValue","activeVendor","filterQueries","name","push","source_type_id","map","x","join","applications","CLOUD_VENDOR","REDHAT_VENDOR","availability_status","AVAILABLE","UNAVAILABLE","PARTIALLY_UNAVAILABLE","filtering","filterSection","query","then","doCreateApplication","doDeleteApplication","appId","errorMessage","doLoadSource","doLoadApplicationsForEdit","appTypes","sourceTypes","graphql","promises","forEach","app","all","results","sourceType","find","costManagementApp","APP_NAMES","index","extra","application_type_id","newExtra","cmConvertTypes","Object","keys","getCmValues","cmValues","cmValuesMapper","key","value","set","Loader","width","height","className","style","role","propTypes","PropTypes","PaginationLoader","PlaceHolderTable","Bullseye","Spinner","size","RowWrapperLoader","row","isDeleting","initialProps","colSpan","COLUMN_COUNT","RowWrapper","CardLoader","props","Card","CardBody","DetailLoader","Grid","GridItem","md","ImageWithPlaceholder","src","rest","useState","loaded","setLoaded","onLoad","display","product","isFlat","CardTitle","logo_url","Label","icon","DatabaseIcon","primary_category","display_name","isFilled","description_short","CardFooter","Button","variant","isInline","ExternalLinkAltIcon","iconPosition","component","href","product_page_url","rel","target","MARKETPLACE_API_BASE","getProducts","axiosInstance","getCategories","Skeleton","init","page","perPage","itemCount","filters","type","categories","isLoading","reducer","state","payload","valuesMapper","database","MarketplaceModal","isOpen","onClose","useReducer","config","dispatch","useEffect","Modal","description","PrimaryToolbar","useMobileLayout","onSetPage","_e","onPerPageSelect","filterConfig","items","label","placeholder","filterValues","category","page_name","isDisabled","activeFiltersConfig","showDeleteButton","chips","chipFormatters","Boolean","SeeMoreCard","setOpen","onClick","setData","Title","headingLevel","product_page_name","defaultPort","scheme","http","https","endpointToUrl","endpoint","onlyTrueEndpointValues","reduce","acc","curr","host","port","url","schema","String","schemaToPort","sourceTypeFormatter","_item","product_name","dateFormatter","str","date","nameFormatter","source","TextContent","Link","to","Text","TextVariants","sourceIsOpenShift","endpoints","formatURL","importedFormatter","text","cfme","defaultMessage","toLowerCase","importsTexts","Tooltip","content","Badge","isRead","IN_PROGRESS","PAUSED","RHELAZURE","getStatusColor","getStatusText","UnknownError","formatAvailibilityErrors","values","authentications","count","getStatusTooltipText","availabilityFormatter","_status","meta","availability_status_error","statusesCount","errorsCount","auth","authtype","getAllErrors","paused_at","isSourceAzureRHEL","Popover","showClose","bodyContent","color","ApplicationLabel","showStatusText","intl","useIntl","statusText","formatMessage","getStatusTooltipTextApp","headerContent","EnhancedLabelGroup","LabelGroup","numLabels","collapsedText","remaining","isRequired","applicationFormatter","apps","item","application","resource_type","getAppStatus","sort","a","b","localeCompare","configurationModeFormatter","mode","superKeyType","authentication","is_superkey","superKeyAuth","position","fill"],"sourceRoot":""}