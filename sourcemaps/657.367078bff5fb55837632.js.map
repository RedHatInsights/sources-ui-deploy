{"version":3,"sources":["webpack:///./src/components/addSourceWizard/superKey/generateSuperKeyFields.js"],"names":["sourceTypes","source_type","authype","find","name","schema","authentication","is_superkey","type","additionalIncludesStepKeys","getAdditionalStepKeys","getAdditionalAuthFields","injectAuthFieldsInfo","getNoStepsFields","fields"],"mappings":"mJAiBA,QAf+B,SAACA,EAAaC,GAAgB,MACrDC,EAAO,UAAGF,EACbG,MAAK,qBAAGC,OAAoBH,YADlB,aAAG,EAEZI,OAAOC,eAAeH,MAAK,gBAAGI,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,KAAhB,OAA2BD,GAAwB,0BAATC,KAEnEC,GAA6BC,QAAsBT,EAAaC,EAAQM,MAO9E,MALe,GAAH,gBACPG,QAAwBV,EAAaC,EAAQM,QADtC,QAEPI,SAAqBC,QAAiBX,EAAQY,OAAQL,GAA6BR,EAAaC,EAAQM","file":"js/657.48e783da9d93ce77166c.js","sourcesContent":["import { getAdditionalAuthFields, getAdditionalStepKeys, getNoStepsFields, injectAuthFieldsInfo } from '../schemaBuilder';\n\nconst generateSuperKeyFields = (sourceTypes, source_type) => {\n  const authype = sourceTypes\n    .find(({ name }) => name === source_type)\n    ?.schema.authentication.find(({ is_superkey, type }) => is_superkey || type === 'access_key_secret_key');\n\n  const additionalIncludesStepKeys = getAdditionalStepKeys(source_type, authype.type);\n\n  const fields = [\n    ...getAdditionalAuthFields(source_type, authype.type),\n    ...injectAuthFieldsInfo(getNoStepsFields(authype.fields, additionalIncludesStepKeys), source_type, authype.type),\n  ];\n\n  return fields;\n};\n\nexport default generateSuperKeyFields;\n"],"sourceRoot":""}