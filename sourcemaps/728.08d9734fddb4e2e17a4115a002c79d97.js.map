{"version":3,"file":"js/728.b03c44169b129d77246e.js","mappings":"mMAEaA,EAAoB,kBAC/BC,EAAAA,EAAAA,MACGC,kBACAC,MAAK,SAACC,GAAD,MAAW,CAAEC,YAAaD,EAAKA,KAA/B,GAHuB,EAKpBE,EAAyB,kBACpCL,EAAAA,EAAAA,MACGM,iBACAJ,MAAK,SAACC,GAAD,MAAW,CAAEI,iBAAkBJ,EAAKA,KAApC,GAH4B,EAKzBK,EAAe,mCAAG,oGACNC,SAASC,OAAOC,KAAKC,WADf,cACvBC,EADuB,yBAEtBC,MAAM,mBAAD,OAAoBL,SAASC,OAAOK,SAAW,GAAK,SAApD,iDAA6G,CACvHC,QAAS,CAAEC,cAAe,UAAF,OAAYJ,MACnCX,MAAK,SAACgB,GACP,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAJ,2CAA8CF,EAASG,aAG/D,OAAOH,EAASI,MACjB,KAV4B,2CAAH,qDAafC,EAAa,SAACC,GAAD,OACxBxB,EAAAA,EAAAA,MAAgByB,YAAY,CAC1BC,MAAO,4CAAF,OAA8CF,EAA9C,qCAFiB,C,2QCpBpBG,EAAsB,SAAC,GAAoB,IAAlBvB,EAAkB,EAAlBA,YAC7B,GAAiCwB,EAAAA,EAAAA,WAAzBC,EAAR,EAAQA,WAEFC,GAASC,EAFf,EAAoBA,YAEMD,OAE1B,OAAOD,GAAWG,EAAAA,EAAAA,GAAuB5B,EAAa0B,EAAOG,aAC9D,EAEDN,EAAoBO,UAAY,CAC9B9B,YAAa+B,IAAAA,OAGf,U,eC+FA,QAvG0B,SAACC,EAAMhC,GAAP,MAAwB,CAChDoB,KAAM,qBACNa,MAAOD,EAAKE,cAAc,CACxBC,GAAI,2BACJC,eAAgB,yBAElBC,SAAU,YAAgB,QAAbX,EAAa,EAAbA,OACX,GAAI,UAACA,EAAOY,cAAR,OAAC,EAAeC,sBAIpB,OAAO,UAAAb,EAAOY,cAAP,eAAeC,yBAA0BC,EAAAA,EAAwB,sBAAwB,kBACjG,EACDC,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAAA,WACXvB,KAAM,YACNwB,MAAOZ,EAAKE,cACV,CACEC,GAAI,gCACJC,eACE,sIAEJ,CACES,EAAGC,EAAAA,KAIT,CACEJ,UAAWC,EAAAA,EAAAA,MACXvB,KAAM,+BACNwB,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,2BACJC,eAAgB,gCAElBW,YAAY,EACZC,aAAc,SAACC,EAAIC,EAAIC,GAAT,MAA0B,CACtCC,QAAS,CACP,CACER,MACE,0BAAMS,UAAU,gCACbrB,EAAKE,cAAc,CAClBC,GAAI,qBACJC,eAAgB,0BAElB,kBAAC,EAAAkB,MAAD,CAAOD,UAAU,aAAaE,MAAM,UACjCvB,EAAKE,cAAc,CAAEC,GAAI,8BAA+BC,eAAgB,kBAI/EoB,YAAaxB,EAAKE,cAChB,CACEC,GAAI,0BACJC,eACE,kJAEJ,CACEqB,KACE,CAAEC,OAAQ,MAAOC,MAAO,SAAUR,EAAYxB,WAAWD,OAAOG,cAChEsB,EAAYxB,WAAWD,OAAOG,cAGpC+B,MAAOpB,EAAAA,IA1BC,EA8BdqB,SAAU,CAAC,CAAEJ,KAAMK,EAAAA,EAAAA,YAErB,CACEpB,UAAWC,EAAAA,EAAAA,SACXvB,KAAM,WACNqB,OAAQ,CACN,CACEC,UAAW,cACXtB,KAAM,wBACN2C,QAASxC,EACTvB,YAAAA,IAGJgE,UAAW,CAAEC,KAAM,+BAAgCC,GAAI1B,EAAAA,GACvDa,UAAW,cAEb,CACEX,UAAWC,EAAAA,EAAAA,MACXvB,KAAM,+BACNgC,QAAS,CACP,CACER,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,oBACJC,eAAgB,yBAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,yBACJC,eACE,kKAEJwB,MAAOO,EAAAA,MAhGS,E,gECJpBC,EAAQ,SAAC,GAAD,IAAGnC,EAAH,EAAGA,MAAOuB,EAAV,EAAUA,YAAaa,EAAvB,EAAuBA,UAAcC,GAArC,mBACZ,kBAAC,EAAAC,UAAcD,EACb,kBAAC,EAAAE,KAAD,KACE,kBAAC,EAAAC,SAAD,CAAUC,OAAQ,CAAEC,QAAS,aAC3B,kBAAC,KAAD,CAAiBC,KAAMP,EAAY,UAAY,aAEjD,kBAAC,EAAAI,SAAD,KACE,kBAAC,EAAAI,KAAD,CAAMxB,UAAU,4CAA4CpB,GAC5D,kBAAC,EAAA4C,KAAD,KAAOrB,KARD,EAcdY,EAAMtC,UAAY,CAChBG,MAAOF,IAAAA,OAAAA,WACPyB,YAAazB,IAAAA,OAAAA,WACbsC,UAAWtC,IAAAA,MAGb,UChBA,IAAM+C,EAAsB,SAAC,GAAW,QAAT3C,EAAS,EAATA,GACvBH,GAAO+C,EAAAA,EAAAA,KAGPrD,GAASC,GAFMH,EAAAA,EAAAA,WAAbG,YAEkBD,OAEpB2C,EACH3C,EAAOY,OAAOC,wBAA0BC,EAAAA,IAAxC,UAAiEd,EAAOsD,oBAAxE,aAAiE,EAAqBC,SAAS9C,KAC/FT,EAAOY,OAAOC,wBAA0BC,EAAAA,IAAyB,UAAAd,EAAOwD,mBAAP,eAAoBC,uBAAwBhD,EAEhH,MAA2B,UAAvBT,EAAOG,YAEP,kBAAC,EAAAuD,MAAD,KACE,kBAAC,EAAD,CACEnD,MAAOD,EAAKE,cAAc,CACxBC,GAAI,8BACJC,eAAgB,wBAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,0CACJC,eAAgB,qGAElBiB,UAAU,aACVgB,UAAWA,IAEb,kBAAC,EAAD,CACEpC,MAAOD,EAAKE,cAAc,CACxBC,GAAI,oCACJC,eAAgB,qBAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,oCACJC,eAAgB,kFAElBiC,UAAWA,KAMQ,WAAvB3C,EAAOG,YAEP,kBAAC,EAAAuD,MAAD,KACE,kBAAC,EAAD,CACEnD,MAAOD,EAAKE,cAAc,CACxBC,GAAI,8BACJC,eAAgB,wBAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,2CACJC,eAAgB,kGAElBiB,UAAU,aACVgB,UAAWA,IAEb,kBAAC,EAAD,CACEpC,MAAOD,EAAKE,cAAc,CACxBC,GAAI,oCACJC,eAAgB,qBAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,oCACJC,eAAgB,kFAElBiC,UAAWA,KAOjB,kBAAC,EAAAe,MAAD,KACE,kBAAC,EAAD,CACEnD,MAAOD,EAAKE,cAAc,CACxBC,GAAI,8BACJC,eAAgB,wBAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,oCACJC,eAAgB,yFAElBiB,UAAU,aACVgB,UAAWA,IAEb,kBAAC,EAAD,CACEpC,MAAOD,EAAKE,cAAc,CACxBC,GAAI,4BACJC,eAAgB,2CAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,kCACJC,eAAgB,gEAElBiB,UAAU,aACVgB,UAAWA,IAEb,kBAAC,EAAD,CACEpC,MAAOD,EAAKE,cAAc,CACxBC,GAAI,oCACJC,eAAgB,qBAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,oCACJC,eAAgB,kFAElBiC,UAAWA,IAIlB,EAEDS,EAAoBhD,UAAY,CAC9BK,GAAIJ,IAAAA,OAAAA,YAGN,U,eClHMsD,EAAkC,SAAC,GAAW,MAATlD,EAAS,EAATA,GACnCH,GAAO+C,EAAAA,EAAAA,KACLpD,GAAaH,EAAAA,EAAAA,WAAbG,SAEF3B,GAAcsF,EAAAA,EAAAA,KAAY,qBAAGC,QAAsBvF,WAAzB,GAAsCwF,EAAAA,IAChE9D,EAASC,IAAWD,OAEpB2C,GAAYoB,EAAAA,EAAAA,UAChB,0BACG/D,EAAOY,OAAOC,wBAA0BC,EAAAA,IAAxC,UAAiEd,EAAOsD,oBAAxE,aAAiE,EAAqBC,SAAS9C,KAC/FT,EAAOY,OAAOC,wBAA0BC,EAAAA,IAAyB,UAAAd,EAAOwD,mBAAP,eAAoBC,uBAAwBhD,CAFhH,GAGA,IAGF,OACE,kBAAC,EAAAiD,MAAD,KACE,kBAAC,EAAD,CACEnD,MAAOD,EAAKE,cAAc,CACxBC,GAAI,wBACJC,eAAgB,kCAElBoB,YAAaxB,EAAKE,cAChB,CACEC,GAAI,8BACJC,eAAgB,qFAElB,CACE8C,YAAW,UAAElF,EAAY0F,MAAK,SAACjC,GAAD,OAAUA,EAAKrC,OAASM,EAAOG,WAA/B,WAAnB,aAAE,EAA8D8D,eAG/EtC,UAAU,aACVgB,UAAWA,IAEb,kBAAC,EAAD,CACEpC,MAAOD,EAAKE,cAAc,CACxBC,GAAI,iBACJC,eAAgB,oBAElBoB,YAAaxB,EAAKE,cAAc,CAC9BC,GAAI,uBACJC,eAAgB,uGAElBiC,UAAWA,IAIlB,EAEDgB,EAAgCvD,UAAY,CAC1CK,GAAIJ,IAAAA,OAAAA,YAGN,U,eCjDa6D,EAAoB,SAACnC,EAAMzB,EAAM6D,GAAb,aAC9B,eACEC,EAAAA,GAA2BD,EAC1B,kBAAC,EAAD,CAAiC1D,GAAIsB,EAAKtB,KAE1CH,EAAKE,cAAc,CACjBC,GAAI,uBACJC,eAAgB,yGANrB,SASE2D,EAAAA,GAAuB,kBAAC,EAAD,CAAqB5D,GAAIsB,EAAKtB,OATvD,SAUE6D,EAAAA,GAAwBhE,EAAKE,cAAc,CAC1CC,GAAI,mCACJC,eAAgB,mGAZnB,GAcCqB,EAAKrC,KAfwB,EAiBpB6E,EAAc,SAACxC,EAAMzB,EAAM6D,GAAb,aACxB,eACEE,EAAAA,GACC,0BAAM1C,UAAU,gCAAhB,kBACkB,IAChB,kBAAC,EAAAC,MAAD,CAAOD,UAAU,aAAaE,MAAM,UACjCvB,EAAKE,cAAc,CAAEC,GAAI,aAAcC,eAAgB,eAL/D,SASE4D,EAAAA,GAAwBhE,EAAKE,cAAc,CAC1CC,GAAI,6BACJC,eAAgB,oBAXnB,SAaE0D,EAAAA,GAA2BD,EAC1B,0BAAMxC,UAAU,gCAAhB,UACM6C,EAAAA,GADN,KAEE,kBAAC,EAAA5C,MAAD,CAAOD,UAAU,aAAaE,MAAM,UACjCvB,EAAKE,cAAc,CAAEC,GAAI,aAAcC,eAAgB,aAI5DqB,EAAK0C,cArBR,GAuBC1C,EAAKrC,KAxBkB,EA0BdgF,EAAoC,SAACjG,EAAkB6B,EAAMqE,EAAgBR,GAAzC,wBAC5C1F,EACAmG,MAAK,SAACC,EAAG1D,GAAJ,OAAU0D,EAAEJ,aAAaK,cAAc3D,EAAEsD,aAAzC,IACLM,KAAI,SAACC,GAAD,MAAQ,CACX9C,MAAO8C,EAAEvE,GACTS,MAAOqD,EAAYS,EAAG1E,EAAM6D,IAAgBa,EAAEP,aAC9C3C,YAAaoC,EAAkBc,EAAG1E,EAAM6D,GAHrC,MAHwC,OAQ3CQ,IAAmBM,EAAAA,GACnB,CACE,CACE/D,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,uBACJC,eAAgB,mBAElBwB,MAAOgD,EAAAA,KAGX,IAlB2C,ECtBjD,QA/ByB,SAACzG,EAAkB6B,EAAM6D,GAAzB,MAA0C,CACjEzE,KAAM,sBACNa,MAAOD,EAAKE,cAAc,CACxBC,GAAI,sBACJC,eAAgB,wBAElBC,SAAU,UACVI,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAAA,WACXvB,KAAM,YACNwB,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,2BACJC,eAEE,+KAGN,CACEM,UAAW,eACXtB,KAAM,eACNwB,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,qCACJC,eAAgB,2BAElBgB,QAASgD,EAAkCjG,EAAkB6B,OAAM6E,EAAWhB,GAC9E1F,iBAAAA,IA1BmB,E,+lBCkBlB,IAAM2G,EAAc,mCAAG,WAAOlD,GAAP,0FAAcmD,EAAd,oCAAyBF,EAAW7E,EAApC,uBACvB4B,EADuB,8CAEnBiD,GAFmB,iCAOT1F,EAAAA,EAAAA,IAAWyC,GAPF,OAO1B9C,EAP0B,gEAU1BkG,QAAQC,OAAMC,EAAAA,EAAAA,GAAY,EAAD,KAVC,uBAWnBL,GAXmB,YAcxB/F,EAASf,KAAKwF,QAAQG,MAAK,qBAAGvD,KAAgB4E,CAAnB,IAdH,uBAepB/E,EAAKE,cAAc,CAAEE,eAAgB,mCAAoCD,GAAI,qBAfzD,sCAkBrB0E,GAlBqB,0DAAH,sDAqBvBM,GAAkB,EACTC,EAAoB,SAACC,GAAD,OAAWF,EAAkBE,CAA7B,EAGpBC,EC5CW,SAACC,GAAD,IAAgBC,EAAhB,uDAA+B,IAAKpE,EAApC,uDAA8C,CAAEqE,kBAAkB,GAAlE,OACtBC,EAAAA,EAAAA,GAAuBH,EAAeC,EAAcpE,EAD9B,CD4CeuE,CAAgBb,GAW1Cc,EAAgC,SAAC5H,GAAD,cACxCA,EACAyG,KAAI,SAAChD,GAAD,cACAA,GADA,IAEHkC,aAAgC,YAAlBlC,EAAKoE,SAAyBpE,EAAKkC,aAAamC,QAAQ,WAAY,IAAMrE,EAAKkC,cAF1F,IAIJW,MAAK,SAACC,EAAG1D,GAAJ,OAAU0D,EAAEZ,aAAaa,cAAc3D,EAAE8C,aAAzC,IACLc,KAAI,SAACC,GAAD,MAAQ,CACX9C,MAAO8C,EAAEtF,KACTwB,MAAO8D,EAAEf,aAFN,IAPoC,EAahCoC,EAAmB,SAACC,GAAD,OAAc,SAACC,EAAQ9E,GACrD,IAAM+E,EAAqB/E,EAAYxB,WAAWD,OAAOG,YACnDsG,EAAUH,EAAStC,MAAK,SAAC0C,GAAD,OAASA,EAAIjG,KAAO8F,EAAOrE,KAA3B,IAG9B,IAFkBsE,IAAsBC,GAAUA,EAAQE,uBAAuBpD,SAASiD,GAM1F,OAAOD,CACR,CAV+B,EAY1BK,EAAa,CACjB5E,OAAQ,+CACR,gBAAiB,kDACjBC,MAAO,iEACP4E,UAAW,kDACXC,UAAW,kDACXC,OAAQ,+DAIGC,EAAa,SAAC1I,GAAD,OAAiB,SAACoB,GAC1C,IAAMuH,EAAa3I,EAAY0F,MAAK,SAACjC,GAAD,OAAUA,EAAKrC,OAASA,CAAxB,IAEpC,OAAKuH,IAAgBA,EAAWC,UAAaN,EAAWlH,IAI3C,kBACX,yBACEyH,IAAKP,EAAWlH,IAASuH,EAAWC,SACpCE,IAAKH,EAAWhD,aAChBtC,UAAS,6BAAgD,YAAxBsF,EAAWd,SAAyB,cAAgB,eAJ5E,EAHJ,IAYV,CAhByB,EAkBbxF,GACX,SAAC0G,GAAD,OACA,YAA8C,QAA3CrH,OAAUwD,EAAiC,EAAjCA,YAAarD,EAAoB,EAApBA,YACxB,GAAIkH,EACF,MAAO,mBAGT,IAAMC,EAAQ9D,GAAeA,EAAYC,sBAAwByB,EAAAA,IAAwB1B,EAAYC,oBAGrG,OAFqB6D,EAAQ,GAAH,OAAMnH,EAAN,YAAqBmH,GAArB,UAAkCnH,EAAlC,WAG3B,CAVD,EAcWoH,GACX,SAACjJ,GAAD,OACA,YAAgB,IAJc2I,EAI3BjH,EAAa,EAAbA,OAGD,OAP2CiH,OAAfA,EAKT3I,EAAY0F,MAAK,qBAAGtE,OAAoBM,EAAOG,WAA9B,UALT,EAAgB8G,EAAYO,OAAOC,eAAezD,MAAK,qBAAG0D,WAAH,KAO7C,qBAAuB,kBAC7D,CALD,EAOIC,GAAmB,SAAC,GAAD,IAAGrH,EAAH,EAAGA,KAAMhC,EAAT,EAASA,YAAT,SAAsBG,iBAAwB,CACrEuC,UAAW,cACXtB,KAAM,cACN2B,YAAY,EACZH,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,8BACJC,eAAgB,+BAElBsG,WAAYA,EAAW1I,GACvB6D,SAAU,CACR,CACEJ,KAAMK,EAAAA,EAAAA,WAGVV,QAASwE,EAA8B5H,GAdhB,EAiBnBsJ,GAAc,SAAC,GAAD,IAAGtH,EAAH,EAAGA,KAAMhC,EAAT,EAASA,YAAaG,EAAtB,EAAsBA,iBAAkBoJ,EAAxC,EAAwCA,oBAAxC,MAAkE,CACpFF,GAAiB,CAAErH,KAAAA,EAAMhC,YAAAA,EAAaG,iBAAAA,IACtC,CACEuC,UAAW,iBACXtB,KAAM,kCACNwB,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,2BACJC,eAAgB,mBAElBgB,QAASgD,EAAkCjG,EAAkB6B,EAAM2E,EAAAA,IACnE6C,QAASzB,EAAiB5H,GAC1BsJ,WAAYF,EACZxG,YAAY,EACZc,SAAU,CAAC,CAAEJ,KAAMK,EAAAA,EAAAA,WACnBE,UAAW,CAAEC,KAAM,cAAeyF,YAAY,IAd9B,EAkBPC,GAAkB,SAACxJ,EAAkB6B,EAAMqE,EAAgBR,GAAzC,MAA0D,CACvFzE,KAAM,mBACNa,MAAOD,EAAKE,cAAc,CACxBC,GAAI,2BACJC,eAAgB,uBAElBC,SAAUA,KACVI,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAAA,WACXvB,KAAM,kBACNwB,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,gCACJC,eACE,qHAGN,CACEM,UAAW,iBACXtB,KAAM,kCACNgC,QAASgD,EAAkCjG,EAAkB6B,EAAMqE,EAAgBR,GACnF2D,QAASzB,EAAiB5H,GAC1ByJ,cAAc,GAEhB,CACElH,UAAWC,EAAAA,EAAAA,WACXvB,KAAM,cACNyI,WAAW,IA3Bc,EAgClBC,GAAY,SAAC9J,EAAaG,EAAkBoJ,EAAqBvH,GAArD,MAA+D,CACtFC,MAAOD,EAAKE,cAAc,CACxBC,GAAI,0BACJC,eAAgB,gCAElBhB,KAAM,aACNiB,SAAU,YACVI,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAAA,WACXvB,KAAM,aACNwB,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,0BACJC,eACE,oIAPF,eAUDkH,GAAY,CAAEtH,KAAAA,EAAMhC,YAAAA,EAAaG,iBAAAA,EAAkBoJ,oBAAAA,MAjBjC,EAqBZQ,GAAiB,SAAC/J,EAAaG,EAAkB6B,GAAhC,MAA0C,CACtEC,MAAOD,EAAKE,cAAc,CACxBC,GAAI,0BACJC,eAAgB,uBAElBhB,KAAM,aACNiB,SAAU,YACVI,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAAA,WACXvB,KAAM,aACNwB,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,yBACJC,eACE,mHAPA,OAWDiH,GAAiB,CAAErH,KAAAA,EAAMhC,YAAAA,EAAaG,iBAAAA,KAXrC,IAYJyC,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,6BACJC,eAAgB,+BArBM,EA2BjB4H,GAAkB,SAAC,GAAoB,MAAlBhK,EAAkB,EAAlBA,YAC1BgC,GAAO+C,EAAAA,EAAAA,KACLpD,GAAaH,EAAAA,EAAAA,WAAbG,SAEFsI,EAAQ,UAAGjK,EAAY0F,MAAK,qBAAGtE,OAAoBO,IAAWD,OAAOG,WAAzC,WAApB,aAAG,EAAwE8D,aAEzF,OACE,kBAAC,EAAAuE,YAAD,CAAaC,IAAI,SACf,kBAAC,EAAAtF,KAAD,CAAMnC,UAAW0H,EAAAA,aAAAA,GACdpI,EAAKE,cACJ,CACEC,GAAI,yBACJC,eAAgB,4CAElB,CAAE6H,SAAAA,KAKX,EAEDD,GAAgBlI,UAAY,CAC1B9B,YAAa+B,IAAAA,OAGf,IAAMsI,GAAW,SAACrI,EAAM+G,EAAc/I,EAAaqG,GAAlC,MAAsD,CACrEpE,MAAOD,EAAKE,cAAc,CACxBC,GAAI,oBACJC,eAAgB,gBAElBhB,KAAM,YACNiB,SAAUgE,IAAmBM,EAAAA,GAAgBtE,GAAS0G,GAAgBE,GAAcjJ,GACpFyC,OAAQ,CACN,CACEC,UAAW,cACXtB,KAAM,sBACN2C,QAASiG,GACThK,YAAAA,GAEF,CACE0C,UAAWC,EAAAA,EAAAA,WACXvB,KAAM,cACNqC,KAAM,OACNb,MAAOZ,EAAKE,cAAc,CACxBC,GAAI,cACJC,eAAgB,gBAElBkI,YAAa,cACbvH,YAAY,EACZc,SAAU,CAAC,SAACD,GAAD,OAzP6B,SAAC5B,GAC7C,OALqCmF,GAMnCC,GAAkB,GACX,SAACxD,EAAOzB,GAAR,OAAgByB,EAAQkD,EAAelD,EAAOzB,EAAIH,QAAQ6E,CAA1D,GAGFS,CACR,CAkP2BiD,CAA+BvI,EAA/BuI,CAAqC3G,OAAOiD,EAAW7E,EAAlE,EAAyE,CAAEyB,KAAMK,EAAAA,EAAAA,WAC5Fd,aAAcwH,EAAAA,IAzBH,EA8BJC,GAAqB,WAChC,IAAMzI,GAAO+C,EAAAA,EAAAA,KAEb,OACE,kBAAC,EAAAmF,YAAD,KACE,kBAAC,EAAArF,KAAD,CAAMnC,UAAW0H,EAAAA,aAAAA,GACdpI,EAAKE,cACJ,CACEC,GAAI,4BACJC,eACE,+HAEJ,CACES,EAAGC,EAAAA,KAMd,EAEK4H,GAAc,SAAC1K,EAAaG,EAAkB6B,EAAM6D,GAAtC,MAAuD,CACzEpD,OAAQ,CACN,CACEC,UAAW,cACXtB,KAAM,sBACN2C,QAAS0G,IAEX,CACErJ,KAAM,UACNsB,UAAW,UACX1C,YAAAA,EACAG,iBAAAA,EACA0F,YAAAA,GAEF,CACEzE,KAAM,cACNsB,UAAWC,EAAAA,EAAAA,WACXkH,WAAW,IAGfzI,KAAM,UACNa,MAAOD,EAAKE,cAAc,CACxBC,GAAI,uBACJC,eAAgB,mBAvBA,EA2BpB,kBACEpC,EACAG,EACAoJ,EACAoB,EACA3I,EACA+G,EACA6B,EACAvE,EACAwE,EACAhF,GAGA,OADAuB,GAAkB,GACX,CACL3E,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAAA,OACXvB,KAAM,SACNiC,UAAW,UACXpB,OAAO6I,EAAAA,EAAAA,IAAYzE,GACnB0E,SAAS,EACTvH,aAAawH,EAAAA,EAAAA,IAAkB3E,GAC/B4E,aAAc,CACZC,OAAQlJ,EAAKE,cAAc,CACzBC,GAAI,cACJC,eAAgB,QAElB+I,KAAMnJ,EAAKE,cAAc,CACvBC,GAAI,cACJC,eAAgB,SAElBgJ,OAAQpJ,EAAKE,cAAc,CACzBC,GAAI,gBACJC,eAAgB,WAElBiJ,KAAMrJ,EAAKE,cAAc,CACvBC,GAAI,cACJC,eAAgB,UAGpBuI,UAAAA,EACAW,YAAY,EACZC,aAAcX,EACdY,qBAAsBxJ,EAAKE,cAAc,CACvCC,GAAI,eACJC,eAAgB,iBAElBqJ,WAAY,CAAC,kCAAmC,cAAe,cAAe,gCAC9EhJ,OAAQ,GAAF,eACCsG,EAID,GAHA1C,IAAmBM,EAAAA,GACjB,CAACmD,GAAU9J,EAAaG,EAAkBoJ,EAAqBvH,IAC/D,CAAC+H,GAAe/J,EAAaG,EAAkB6B,KAJjD,CAMJqI,GAASrI,EAAM+G,EAAc/I,EAAaqG,GAC1CqF,EAAkB1J,EAAMhC,GACxB2L,EAAiBxL,EAAkB6B,EAAM6D,GACzC8D,GAAgBxJ,EAAkB6B,EAAMqE,EAAgBR,KATpD,QAUD+F,EAAAA,EAAAA,IAAc5L,EAAaG,OAAkB0G,EAAWgE,EAAkBhF,IAVzE,CAWJ6E,GAAY1K,EAAaG,EAAkB6B,EAAM6D,OA3D3D,C,6DE9UA,QAf+B,SAAC7F,EAAa6B,GAAgB,MACrDgK,EAAO,UAAG7L,EACb0F,MAAK,qBAAGtE,OAAoBS,CAAvB,WADK,aAAG,EAEZqH,OAAOC,eAAezD,MAAK,gBAAG0D,EAAH,EAAGA,YAAa3F,EAAhB,EAAgBA,KAAhB,OAA2B2F,GAAwB,0BAAT3F,CAA1C,IAEzBqI,GAA6BC,EAAAA,EAAAA,IAAsBlK,EAAagK,EAAQpI,MAO9E,MALe,GAAH,gBACPuI,EAAAA,EAAAA,IAAwBnK,EAAagK,EAAQpI,QADtC,QAEPwI,EAAAA,EAAAA,KAAqBC,EAAAA,EAAAA,IAAiBL,EAAQpJ,OAAQqJ,GAA6BjK,EAAagK,EAAQpI,OAI9G,C","sources":["webpack:///./src/api/wizardHelpers.js","webpack:///./src/components/addSourceWizard/superKey/SuperKeyCredentials.js","webpack:///./src/components/addSourceWizard/superKey/configurationStep.js","webpack:///./src/components/addSourceWizard/descriptions/Point.js","webpack:///./src/components/addSourceWizard/descriptions/SubWatchDescription.js","webpack:///./src/components/addSourceWizard/descriptions/HybridCommittedSpendDescription.js","webpack:///./src/components/addSourceWizard/compileAllApplicationComboOptions.js","webpack:///./src/components/addSourceWizard/superKey/applicationsStep.js","webpack:///./src/components/addSourceWizard/SourceAddSchema.js","webpack:///./src/utilities/debouncePromise.js","webpack:///./src/components/addSourceWizard/superKey/generateSuperKeyFields.js"],"sourcesContent":["import { getSourcesApi } from './entities';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => ({ sourceTypes: data.data }));\n\nexport const doLoadApplicationTypes = () =>\n  getSourcesApi()\n    .doLoadAppTypes()\n    .then((data) => ({ applicationTypes: data.data }));\n\nexport const checkAccountHCS = async () => {\n  const jwtToken = await insights.chrome.auth.getToken();\n  return fetch(`https://billing.${insights.chrome.isProd() ? '' : 'stage.'}api.redhat.com/v1/authorization/hcsEnrollment`, {\n    headers: { Authorization: `Bearer ${jwtToken}` },\n  }).then((response) => {\n    if (response.status !== 200) {\n      throw new Error(`Failed to verify HCS enrollment: ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n};\n\nexport const findSource = (name) =>\n  getSourcesApi().postGraphQL({\n    query: `{ sources(filter: {name: \"name\", value: \"${name}\"})\n        { id, name }\n    }`,\n  });\n","import PropTypes from 'prop-types';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport generateSuperKeyFields from './generateSuperKeyFields';\n\nconst SuperKeyCredentials = ({ sourceTypes }) => {\n  const { renderForm, getState } = useFormApi();\n\n  const values = getState().values;\n\n  return renderForm(generateSuperKeyFields(sourceTypes, values.source_type));\n};\n\nSuperKeyCredentials.propTypes = {\n  sourceTypes: PropTypes.array,\n};\n\nexport default SuperKeyCredentials;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { Label } from '@patternfly/react-core';\n\nimport { ACCOUNT_AUTHORIZATION, MANUAL_CONFIGURATION } from '../../constants';\nimport SuperKeyCredentials from './SuperKeyCredentials';\nimport { bold } from '../../../utilities/intlShared';\n\nconst configurationStep = (intl, sourceTypes) => ({\n  name: 'configuration_step',\n  title: intl.formatMessage({\n    id: 'wizard.configurationStep',\n    defaultMessage: 'Select configuration',\n  }),\n  nextStep: ({ values }) => {\n    if (!values.source?.app_creation_workflow) {\n      return;\n    }\n\n    return values.source?.app_creation_workflow === ACCOUNT_AUTHORIZATION ? 'select_applications' : 'application_step';\n  },\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'conf-desc',\n      label: intl.formatMessage(\n        {\n          id: 'wizard.accountAuthDescription',\n          defaultMessage:\n            'Configure your source manually or let us manage all necessary credentials by selecting <b>account authorization</b> configuration.',\n        },\n        {\n          b: bold,\n        }\n      ),\n    },\n    {\n      component: componentTypes.RADIO,\n      name: 'source.app_creation_workflow',\n      label: intl.formatMessage({\n        id: 'wizard.configurationMode',\n        defaultMessage: 'Select a configuration mode',\n      }),\n      isRequired: true,\n      resolveProps: (_p, _f, formOptions) => ({\n        options: [\n          {\n            label: (\n              <span className=\"src-c-wizard__rhel-mag-label\">\n                {intl.formatMessage({\n                  id: 'wizard.accountAuth',\n                  defaultMessage: 'Account authorization',\n                })}\n                <Label className=\"pf-u-ml-sm\" color=\"purple\">\n                  {intl.formatMessage({ id: 'wizard.confMode.reccomended', defaultMessage: 'Recommended' })}\n                </Label>\n              </span>\n            ),\n            description: intl.formatMessage(\n              {\n                id: 'wizard.accountAuth.desc',\n                defaultMessage:\n                  'A new automated source configuration method. Provide your {type} account credentials and let Red Hat configure and manage your source for you.',\n              },\n              {\n                type:\n                  { amazon: 'AWS', azure: 'Azure' }[formOptions.getState().values.source_type] ||\n                  formOptions.getState().values.source_type,\n              }\n            ),\n            value: ACCOUNT_AUTHORIZATION,\n          },\n        ],\n      }),\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n    {\n      component: componentTypes.SUB_FORM,\n      name: 'sub-form',\n      fields: [\n        {\n          component: 'description',\n          name: 'super-key-credentials',\n          Content: SuperKeyCredentials,\n          sourceTypes,\n        },\n      ],\n      condition: { when: 'source.app_creation_workflow', is: ACCOUNT_AUTHORIZATION },\n      className: 'pf-u-ml-md',\n    },\n    {\n      component: componentTypes.RADIO,\n      name: 'source.app_creation_workflow',\n      options: [\n        {\n          label: intl.formatMessage({\n            id: 'wizard.manualAuth',\n            defaultMessage: 'Manual configuration',\n          }),\n          description: intl.formatMessage({\n            id: 'wizard.manualAuth.desc',\n            defaultMessage:\n              'Configure and manage your source manually if you do not wish to provide account authorization credentials. You will set up sources the same way you do today.',\n          }),\n          value: MANUAL_CONFIGURATION,\n        },\n      ],\n    },\n  ],\n});\n\nexport default configurationStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem, StackItem, Text } from '@patternfly/react-core';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\n\nconst Point = ({ title, description, isEnabled, ...props }) => (\n  <StackItem {...props}>\n    <Flex>\n      <FlexItem spacer={{ default: 'spacerSm' }}>\n        <CheckCircleIcon fill={isEnabled ? '#3E8635' : '#6A6E73'} />\n      </FlexItem>\n      <FlexItem>\n        <Text className=\"pf-u-mb-xs src-c-wizard__rhel-desc-title\">{title}</Text>\n        <Text>{description}</Text>\n      </FlexItem>\n    </Flex>\n  </StackItem>\n);\n\nPoint.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  isEnabled: PropTypes.bool,\n};\n\nexport default Point;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { ACCOUNT_AUTHORIZATION } from '../../constants';\nimport { Stack } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport Point from './Point';\n\nconst SubWatchDescription = ({ id }) => {\n  const intl = useIntl();\n  const { getState } = useFormApi();\n\n  const values = getState().values;\n\n  const isEnabled =\n    (values.source.app_creation_workflow === ACCOUNT_AUTHORIZATION && values.applications?.includes(id)) ||\n    (values.source.app_creation_workflow !== ACCOUNT_AUTHORIZATION && values.application?.application_type_id === id);\n\n  if (values.source_type === 'azure') {\n    return (\n      <Stack>\n        <Point\n          title={intl.formatMessage({\n            id: 'rhelbundle.goldImages.title',\n            defaultMessage: 'Red Hat gold images',\n          })}\n          description={intl.formatMessage({\n            id: 'rhelbundle.goldImages.azure.description',\n            defaultMessage: 'Unlock cloud images in Microsoft Azure and bring your own subscription instead of paying hourly.',\n          })}\n          className=\"pf-u-mb-sm\"\n          isEnabled={isEnabled}\n        />\n        <Point\n          title={intl.formatMessage({\n            id: 'rhelbundle.autoregistration.title',\n            defaultMessage: 'Autoregistration',\n          })}\n          description={intl.formatMessage({\n            id: 'rhelbundle.goldImages.description',\n            defaultMessage: 'Cloud instances automatically connect to console.redhat.com when provisioned.',\n          })}\n          isEnabled={isEnabled}\n        />\n      </Stack>\n    );\n  }\n\n  if (values.source_type === 'google') {\n    return (\n      <Stack>\n        <Point\n          title={intl.formatMessage({\n            id: 'rhelbundle.goldImages.title',\n            defaultMessage: 'Red Hat gold images',\n          })}\n          description={intl.formatMessage({\n            id: 'rhelbundle.goldImages.google.description',\n            defaultMessage: 'Unlock cloud images in Google Cloud and bring your own subscription instead of paying hourly.',\n          })}\n          className=\"pf-u-mb-sm\"\n          isEnabled={isEnabled}\n        />\n        <Point\n          title={intl.formatMessage({\n            id: 'rhelbundle.autoregistration.title',\n            defaultMessage: 'Autoregistration',\n          })}\n          description={intl.formatMessage({\n            id: 'rhelbundle.goldImages.description',\n            defaultMessage: 'Cloud instances automatically connect to console.redhat.com when provisioned.',\n          })}\n          isEnabled={isEnabled}\n        />\n      </Stack>\n    );\n  }\n\n  return (\n    <Stack>\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.goldImages.title',\n          defaultMessage: 'Red Hat gold images',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.goldImages.description',\n          defaultMessage: 'Unlock cloud images in AWS and bring your own subscription instead of paying hourly.',\n        })}\n        className=\"pf-u-mb-sm\"\n        isEnabled={isEnabled}\n      />\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.subwatch.title',\n          defaultMessage: 'High precision subscription watch data',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.subwatch.description',\n          defaultMessage: 'View precise public cloud usage data in subscription watch.',\n        })}\n        className=\"pf-u-mb-sm\"\n        isEnabled={isEnabled}\n      />\n      <Point\n        title={intl.formatMessage({\n          id: 'rhelbundle.autoregistration.title',\n          defaultMessage: 'Autoregistration',\n        })}\n        description={intl.formatMessage({\n          id: 'rhelbundle.goldImages.description',\n          defaultMessage: 'Cloud instances automatically connect to console.redhat.com when provisioned.',\n        })}\n        isEnabled={isEnabled}\n      />\n    </Stack>\n  );\n};\n\nSubWatchDescription.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default SubWatchDescription;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { Stack } from '@patternfly/react-core';\nimport { useIntl } from 'react-intl';\n\nimport Point from './Point';\nimport { ACCOUNT_AUTHORIZATION } from '../../constants';\n\nconst HybridCommittedSpendDescription = ({ id }) => {\n  const intl = useIntl();\n  const { getState } = useFormApi();\n\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes, shallowEqual);\n  const values = getState().values;\n\n  const isEnabled = useMemo(\n    () =>\n      (values.source.app_creation_workflow === ACCOUNT_AUTHORIZATION && values.applications?.includes(id)) ||\n      (values.source.app_creation_workflow !== ACCOUNT_AUTHORIZATION && values.application?.application_type_id === id),\n    []\n  );\n\n  return (\n    <Stack>\n      <Point\n        title={intl.formatMessage({\n          id: 'hcsbundle.track.title',\n          defaultMessage: 'Track Red Hat committed spend',\n        })}\n        description={intl.formatMessage(\n          {\n            id: 'hcsbundle.track.description',\n            defaultMessage: 'Track spend through {application} and apply them to your Red Hat committed spend.',\n          },\n          {\n            application: sourceTypes.find((type) => type.name === values.source_type)?.product_name,\n          }\n        )}\n        className=\"pf-u-mb-sm\"\n        isEnabled={isEnabled}\n      />\n      <Point\n        title={intl.formatMessage({\n          id: 'cost.app.title',\n          defaultMessage: 'Cost management',\n        })}\n        description={intl.formatMessage({\n          id: 'cost.app.description',\n          defaultMessage: 'Analyze, forecast, and optimize your Red Hat OpenShift cluster costs in hybrid cloud environments.',\n        })}\n        isEnabled={isEnabled}\n      />\n    </Stack>\n  );\n};\n\nHybridCommittedSpendDescription.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default HybridCommittedSpendDescription;\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport SubWatchDescription from './descriptions/SubWatchDescription';\nimport HybridCommittedSpendDescription from './descriptions/HybridCommittedSpendDescription';\nimport { NO_APPLICATION_VALUE } from './stringConstants';\nimport {\n  CLOUD_METER_APP_NAME,\n  COST_MANAGEMENT_APP_NAME,\n  HCS_APP_NAME,\n  PROVISIONING_APP_NAME,\n  REDHAT_VENDOR,\n} from '../../utilities/constants';\n\nexport const descriptionMapper = (type, intl, hcsEnrolled) =>\n  ({\n    [COST_MANAGEMENT_APP_NAME]: hcsEnrolled ? (\n      <HybridCommittedSpendDescription id={type.id} />\n    ) : (\n      intl.formatMessage({\n        id: 'cost.app.description',\n        defaultMessage: 'Analyze, forecast, and optimize your Red Hat OpenShift cluster costs in hybrid cloud environments.',\n      })\n    ),\n    [CLOUD_METER_APP_NAME]: <SubWatchDescription id={type.id} />,\n    [PROVISIONING_APP_NAME]: intl.formatMessage({\n      id: 'provisioning.sources.description',\n      defaultMessage: 'Build and launch images with custom content as Virtual Machines in hybrid cloud environments.',\n    }),\n  }[type.name]);\n\nexport const labelMapper = (type, intl, hcsEnrolled) =>\n  ({\n    [CLOUD_METER_APP_NAME]: (\n      <span className=\"src-c-wizard__rhel-mag-label\">\n        RHEL management{' '}\n        <Label className=\"pf-u-ml-sm\" color=\"purple\">\n          {intl.formatMessage({ id: 'sub.bundle', defaultMessage: 'Bundle' })}\n        </Label>\n      </span>\n    ),\n    [PROVISIONING_APP_NAME]: intl.formatMessage({\n      id: 'provisioning.sources.label',\n      defaultMessage: 'Launch images',\n    }),\n    [COST_MANAGEMENT_APP_NAME]: hcsEnrolled ? (\n      <span className=\"src-c-wizard__rhel-mag-label\">\n        {`${HCS_APP_NAME} `}\n        <Label className=\"pf-u-ml-sm\" color=\"purple\">\n          {intl.formatMessage({ id: 'sub.bundle', defaultMessage: 'Bundle' })}\n        </Label>\n      </span>\n    ) : (\n      type.display_name\n    ),\n  }[type.name]);\n\nexport const compileAllApplicationComboOptions = (applicationTypes, intl, activeCategory, hcsEnrolled) => [\n  ...applicationTypes\n    .sort((a, b) => a.display_name.localeCompare(b.display_name))\n    .map((t) => ({\n      value: t.id,\n      label: labelMapper(t, intl, hcsEnrolled) || t.display_name,\n      description: descriptionMapper(t, intl, hcsEnrolled),\n    })),\n  ...(activeCategory !== REDHAT_VENDOR\n    ? [\n        {\n          label: intl.formatMessage({\n            id: 'wizard.noApplication',\n            defaultMessage: 'No application',\n          }),\n          value: NO_APPLICATION_VALUE,\n        },\n      ]\n    : []),\n];\n","import componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { compileAllApplicationComboOptions } from '../compileAllApplicationComboOptions';\n\nconst applicationsStep = (applicationTypes, intl, hcsEnrolled) => ({\n  name: 'select_applications',\n  title: intl.formatMessage({\n    id: 'applications.select',\n    defaultMessage: 'Select applications',\n  }),\n  nextStep: 'summary',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'conf-desc',\n      label: intl.formatMessage({\n        id: 'applications.description',\n        defaultMessage:\n          // eslint-disable-next-line max-len\n          'Configuring your cloud sources provides additional capabilities included with your subscription. You can turn these features on or off at any time after source creation.',\n      }),\n    },\n    {\n      component: 'switch-group',\n      name: 'applications',\n      label: intl.formatMessage({\n        id: 'applications.availableApplications',\n        defaultMessage: 'Available applications',\n      }),\n      options: compileAllApplicationComboOptions(applicationTypes, intl, undefined, hcsEnrolled),\n      applicationTypes,\n    },\n  ],\n});\n\nexport default applicationsStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core';\n\nimport debouncePromise from '../../utilities/debouncePromise';\nimport { findSource } from '../../api/wizardHelpers';\nimport { schemaBuilder } from './schemaBuilder';\nimport { NO_APPLICATION_VALUE, wizardDescription, wizardTitle } from './stringConstants';\nimport configurationStep from './superKey/configurationStep';\nimport { compileAllApplicationComboOptions } from './compileAllApplicationComboOptions';\nimport applicationsStep from './superKey/applicationsStep';\nimport { REDHAT_VENDOR } from '../../utilities/constants';\nimport validated from '../../utilities/resolveProps/validated';\nimport handleError from '../../api/handleError';\nimport { bold } from '../../utilities/intlShared';\n\nexport const asyncValidator = async (value, sourceId = undefined, intl) => {\n  if (!value) {\n    return undefined;\n  }\n\n  let response;\n  try {\n    response = await findSource(value);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(handleError(error));\n    return undefined;\n  }\n\n  if (response.data.sources.find(({ id }) => id !== sourceId)) {\n    throw intl.formatMessage({ defaultMessage: 'That name is taken. Try another.', id: 'wizard.nameTaken' });\n  }\n\n  return undefined;\n};\n\nlet firstValidation = true;\nexport const setFirstValidated = (bool) => (firstValidation = bool);\nexport const getFirstValidated = () => firstValidation;\n\nexport const asyncValidatorDebounced = debouncePromise(asyncValidator);\n\nexport const asyncValidatorDebouncedWrapper = (intl) => {\n  if (getFirstValidated()) {\n    setFirstValidated(false);\n    return (value, id) => (value ? asyncValidator(value, id, intl) : undefined);\n  }\n\n  return asyncValidatorDebounced;\n};\n\nexport const compileAllSourcesComboOptions = (sourceTypes) => [\n  ...sourceTypes\n    .map((type) => ({\n      ...type,\n      product_name: type.category === 'Red Hat' ? type.product_name.replace('Red Hat ', '') : type.product_name,\n    }))\n    .sort((a, b) => a.product_name.localeCompare(b.product_name))\n    .map((t) => ({\n      value: t.name,\n      label: t.product_name,\n    })),\n];\n\nexport const appMutatorRedHat = (appTypes) => (option, formOptions) => {\n  const selectedSourceType = formOptions.getState().values.source_type;\n  const appType = appTypes.find((app) => app.id === option.value);\n  const isEnabled = selectedSourceType && appType ? appType.supported_source_types.includes(selectedSourceType) : true;\n\n  if (!isEnabled) {\n    return;\n  }\n\n  return option;\n};\n\nconst shortIcons = {\n  amazon: '/apps/frontend-assets/partners-icons/aws.svg',\n  'ansible-tower': '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  azure: '/apps/frontend-assets/partners-icons/microsoft-azure-short.svg',\n  openshift: '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  satellite: '/apps/frontend-assets/red-hat-logos/stacked.svg',\n  google: '/apps/frontend-assets/partners-icons/google-cloud-short.svg',\n};\n\n// eslint-disable-next-line react/display-name\nexport const iconMapper = (sourceTypes) => (name) => {\n  const sourceType = sourceTypes.find((type) => type.name === name);\n\n  if (!sourceType || (!sourceType.icon_url && !shortIcons[name])) {\n    return null;\n  }\n\n  const Icon = () => (\n    <img\n      src={shortIcons[name] || sourceType.icon_url}\n      alt={sourceType.product_name}\n      className={`src-c-wizard__icon ${sourceType.category === 'Red Hat' ? 'redhat-icon' : 'pf-u-mb-sm'}`}\n    />\n  );\n\n  return Icon;\n};\n\nexport const nextStep =\n  (selectedType) =>\n  ({ values: { application, source_type } }) => {\n    if (selectedType) {\n      return 'application_step';\n    }\n\n    const appId = application && application.application_type_id !== NO_APPLICATION_VALUE && application.application_type_id;\n    const resultedStep = appId ? `${source_type}-${appId}` : `${source_type}-generic`;\n\n    return resultedStep;\n  };\n\nexport const hasSuperKeyType = (sourceType) => sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n\nexport const nextStepCloud =\n  (sourceTypes) =>\n  ({ values }) => {\n    const sourceType = sourceTypes.find(({ name }) => name === values.source_type);\n\n    return hasSuperKeyType(sourceType) ? 'configuration_step' : 'application_step';\n  };\n\nconst sourceTypeSelect = ({ intl, sourceTypes, applicationTypes }) => ({\n  component: 'card-select',\n  name: 'source_type',\n  isRequired: true,\n  label: intl.formatMessage({\n    id: 'wizard.selectYourSourceType',\n    defaultMessage: 'A. Select your source type',\n  }),\n  iconMapper: iconMapper(sourceTypes),\n  validate: [\n    {\n      type: validatorTypes.REQUIRED,\n    },\n  ],\n  options: compileAllSourcesComboOptions(sourceTypes, applicationTypes),\n});\n\nconst redhatTypes = ({ intl, sourceTypes, applicationTypes, disableAppSelection }) => [\n  sourceTypeSelect({ intl, sourceTypes, applicationTypes }),\n  {\n    component: 'enhanced-radio',\n    name: 'application.application_type_id',\n    label: intl.formatMessage({\n      id: 'wizard.selectApplication',\n      defaultMessage: 'B. Application',\n    }),\n    options: compileAllApplicationComboOptions(applicationTypes, intl, REDHAT_VENDOR),\n    mutator: appMutatorRedHat(applicationTypes),\n    isDisabled: disableAppSelection,\n    isRequired: true,\n    validate: [{ type: validatorTypes.REQUIRED }],\n    condition: { when: 'source_type', isNotEmpty: true },\n  },\n];\n\nexport const applicationStep = (applicationTypes, intl, activeCategory, hcsEnrolled) => ({\n  name: 'application_step',\n  title: intl.formatMessage({\n    id: 'wizard.selectApplication',\n    defaultMessage: 'Select application',\n  }),\n  nextStep: nextStep(),\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'app-description',\n      label: intl.formatMessage({\n        id: 'wizard.applicationDescription',\n        defaultMessage:\n          'Select an application to connect to your source. You can connect additional applications after source creation.',\n      }),\n    },\n    {\n      component: 'enhanced-radio',\n      name: 'application.application_type_id',\n      options: compileAllApplicationComboOptions(applicationTypes, intl, activeCategory, hcsEnrolled),\n      mutator: appMutatorRedHat(applicationTypes),\n      menuIsPortal: true,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'source_type',\n      hideField: true,\n    },\n  ],\n});\n\nexport const typesStep = (sourceTypes, applicationTypes, disableAppSelection, intl) => ({\n  title: intl.formatMessage({\n    id: 'wizard.chooseAppAndType',\n    defaultMessage: 'Source type and application',\n  }),\n  name: 'types_step',\n  nextStep: 'name_step',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text',\n      label: intl.formatMessage({\n        id: 'wizard.selectRedHatType',\n        defaultMessage:\n          'To import data for an application, you need to connect to a data source. Start by selecting your source type and application.',\n      }),\n    },\n    ...redhatTypes({ intl, sourceTypes, applicationTypes, disableAppSelection }),\n  ],\n});\n\nexport const cloudTypesStep = (sourceTypes, applicationTypes, intl) => ({\n  title: intl.formatMessage({\n    id: 'wizard.chooseAppAndType',\n    defaultMessage: 'Select source type',\n  }),\n  name: 'types_step',\n  nextStep: 'name_step',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'plain-text',\n      label: intl.formatMessage({\n        id: 'wizard.selectCloudType',\n        defaultMessage:\n          'To import data for an application, you need to connect to a data source. Start by selecting your source type.',\n      }),\n    },\n    {\n      ...sourceTypeSelect({ intl, sourceTypes, applicationTypes }),\n      label: intl.formatMessage({\n        id: 'wizard.selectCloudProvider',\n        defaultMessage: 'Select a cloud provider',\n      }),\n    },\n  ],\n});\n\nexport const NameDescription = ({ sourceTypes }) => {\n  const intl = useIntl();\n  const { getState } = useFormApi();\n\n  const typeName = sourceTypes.find(({ name }) => name === getState().values.source_type)?.product_name;\n\n  return (\n    <TextContent key=\"step1\">\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'wizard.nameDescription',\n            defaultMessage: 'Enter a name for your {typeName} source.',\n          },\n          { typeName }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nNameDescription.propTypes = {\n  sourceTypes: PropTypes.array,\n};\n\nconst nameStep = (intl, selectedType, sourceTypes, activeCategory) => ({\n  title: intl.formatMessage({\n    id: 'wizard.nameSource',\n    defaultMessage: 'Name source',\n  }),\n  name: 'name_step',\n  nextStep: activeCategory === REDHAT_VENDOR ? nextStep(selectedType) : nextStepCloud(sourceTypes),\n  fields: [\n    {\n      component: 'description',\n      name: 'description-summary',\n      Content: NameDescription,\n      sourceTypes,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'source.name',\n      type: 'text',\n      label: intl.formatMessage({\n        id: 'wizard.name',\n        defaultMessage: 'Source name',\n      }),\n      placeholder: 'source_name',\n      isRequired: true,\n      validate: [(value) => asyncValidatorDebouncedWrapper(intl)(value, undefined, intl), { type: validatorTypes.REQUIRED }],\n      resolveProps: validated,\n    },\n  ],\n});\n\nexport const SummaryDescription = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'wizard.summaryDescription',\n            defaultMessage:\n              'Review the information below and click <b>Add</b> to add your source. To edit details in previous steps, click <b>Back</b>.',\n          },\n          {\n            b: bold,\n          }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nconst summaryStep = (sourceTypes, applicationTypes, intl, hcsEnrolled) => ({\n  fields: [\n    {\n      component: 'description',\n      name: 'description-summary',\n      Content: SummaryDescription,\n    },\n    {\n      name: 'summary',\n      component: 'summary',\n      sourceTypes,\n      applicationTypes,\n      hcsEnrolled,\n    },\n    {\n      name: 'source_type',\n      component: componentTypes.TEXT_FIELD,\n      hideField: true,\n    },\n  ],\n  name: 'summary',\n  title: intl.formatMessage({\n    id: 'wizard.reviewDetails',\n    defaultMessage: 'Review details',\n  }),\n});\n\nexport default (\n  sourceTypes,\n  applicationTypes,\n  disableAppSelection,\n  container,\n  intl,\n  selectedType,\n  initialWizardState,\n  activeCategory,\n  enableLighthouse,\n  hcsEnrolled\n) => {\n  setFirstValidated(true);\n  return {\n    fields: [\n      {\n        component: componentTypes.WIZARD,\n        name: 'wizard',\n        className: 'sources',\n        title: wizardTitle(activeCategory),\n        inModal: true,\n        description: wizardDescription(activeCategory),\n        buttonLabels: {\n          submit: intl.formatMessage({\n            id: 'sources.add',\n            defaultMessage: 'Add',\n          }),\n          back: intl.formatMessage({\n            id: 'wizard.back',\n            defaultMessage: 'Back',\n          }),\n          cancel: intl.formatMessage({\n            id: 'wizard.cancel',\n            defaultMessage: 'Cancel',\n          }),\n          next: intl.formatMessage({\n            id: 'wizard.next',\n            defaultMessage: 'Next',\n          }),\n        },\n        container,\n        showTitles: true,\n        initialState: initialWizardState,\n        closeButtonAriaLabel: intl.formatMessage({\n          id: 'wizard.close',\n          defaultMessage: 'Close wizard',\n        }),\n        crossroads: ['application.application_type_id', 'source_type', 'auth_select', 'source.app_creation_workflow'],\n        fields: [\n          ...(!selectedType\n            ? activeCategory === REDHAT_VENDOR\n              ? [typesStep(sourceTypes, applicationTypes, disableAppSelection, intl)]\n              : [cloudTypesStep(sourceTypes, applicationTypes, intl)]\n            : []),\n          nameStep(intl, selectedType, sourceTypes, activeCategory),\n          configurationStep(intl, sourceTypes),\n          applicationsStep(applicationTypes, intl, hcsEnrolled),\n          applicationStep(applicationTypes, intl, activeCategory, hcsEnrolled),\n          ...schemaBuilder(sourceTypes, applicationTypes, undefined, enableLighthouse, hcsEnrolled),\n          summaryStep(sourceTypes, applicationTypes, intl, hcsEnrolled),\n        ],\n      },\n    ],\n  };\n};\n","import awesomeDebouncePromise from 'awesome-debounce-promise';\n\nconst debouncePromise = (asyncFunction, debounceTime = 250, options = { onlyResolvesLast: false }) =>\n  awesomeDebouncePromise(asyncFunction, debounceTime, options);\n\nexport default debouncePromise;\n","import { getAdditionalAuthFields, getAdditionalStepKeys, getNoStepsFields, injectAuthFieldsInfo } from '../schemaBuilder';\n\nconst generateSuperKeyFields = (sourceTypes, source_type) => {\n  const authype = sourceTypes\n    .find(({ name }) => name === source_type)\n    ?.schema.authentication.find(({ is_superkey, type }) => is_superkey || type === 'access_key_secret_key');\n\n  const additionalIncludesStepKeys = getAdditionalStepKeys(source_type, authype.type);\n\n  const fields = [\n    ...getAdditionalAuthFields(source_type, authype.type),\n    ...injectAuthFieldsInfo(getNoStepsFields(authype.fields, additionalIncludesStepKeys), source_type, authype.type),\n  ];\n\n  return fields;\n};\n\nexport default generateSuperKeyFields;\n"],"names":["doLoadSourceTypes","getSourcesApi","listSourceTypes","then","data","sourceTypes","doLoadApplicationTypes","doLoadAppTypes","applicationTypes","checkAccountHCS","insights","chrome","auth","getToken","jwtToken","fetch","isProd","headers","Authorization","response","status","Error","statusText","json","findSource","name","postGraphQL","query","SuperKeyCredentials","useFormApi","renderForm","values","getState","generateSuperKeyFields","source_type","propTypes","PropTypes","intl","title","formatMessage","id","defaultMessage","nextStep","source","app_creation_workflow","ACCOUNT_AUTHORIZATION","fields","component","componentTypes","label","b","bold","isRequired","resolveProps","_p","_f","formOptions","options","className","Label","color","description","type","amazon","azure","value","validate","validatorTypes","Content","condition","when","is","MANUAL_CONFIGURATION","Point","isEnabled","props","StackItem","Flex","FlexItem","spacer","default","fill","Text","SubWatchDescription","useIntl","applications","includes","application","application_type_id","Stack","HybridCommittedSpendDescription","useSelector","sources","shallowEqual","useMemo","find","product_name","descriptionMapper","hcsEnrolled","COST_MANAGEMENT_APP_NAME","CLOUD_METER_APP_NAME","PROVISIONING_APP_NAME","labelMapper","HCS_APP_NAME","display_name","compileAllApplicationComboOptions","activeCategory","sort","a","localeCompare","map","t","REDHAT_VENDOR","NO_APPLICATION_VALUE","undefined","asyncValidator","sourceId","console","error","handleError","firstValidation","setFirstValidated","bool","asyncValidatorDebounced","asyncFunction","debounceTime","onlyResolvesLast","awesomeDebouncePromise","debouncePromise","compileAllSourcesComboOptions","category","replace","appMutatorRedHat","appTypes","option","selectedSourceType","appType","app","supported_source_types","shortIcons","openshift","satellite","google","iconMapper","sourceType","icon_url","src","alt","selectedType","appId","nextStepCloud","schema","authentication","is_superkey","sourceTypeSelect","redhatTypes","disableAppSelection","mutator","isDisabled","isNotEmpty","applicationStep","menuIsPortal","hideField","typesStep","cloudTypesStep","NameDescription","typeName","TextContent","key","TextVariants","nameStep","placeholder","asyncValidatorDebouncedWrapper","validated","SummaryDescription","summaryStep","container","initialWizardState","enableLighthouse","wizardTitle","inModal","wizardDescription","buttonLabels","submit","back","cancel","next","showTitles","initialState","closeButtonAriaLabel","crossroads","configurationStep","applicationsStep","schemaBuilder","authype","additionalIncludesStepKeys","getAdditionalStepKeys","getAdditionalAuthFields","injectAuthFieldsInfo","getNoStepsFields"],"sourceRoot":""}