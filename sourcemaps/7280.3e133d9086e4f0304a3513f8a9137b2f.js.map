{"version":3,"file":"js/7280.1644827834362.40881d01eca8a27b2868.js","mappings":"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","sources":["webpack:///./src/components/ErrorBoundary.js","webpack:///./src/components/PermissionsChecker.js","webpack:///./src/redux/user/actions.js","webpack:///./src/components/DataLoader.js","webpack:///./src/components/NavigationListener.js","webpack:///./src/frontend-components-copies/getBaseName.js","webpack:///./src/App.js","webpack:///./src/Routes.js","webpack:///./src/api/entities.js","webpack:///./src/api/source_types.js","webpack:///./src/components/SourcesTable/loaders.js","webpack:///./src/redux/user/actionTypes.js","webpack:///./src/redux/sources/reducer.js","webpack:///./src/redux/user/reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/utilities/urlQuery.js","webpack:///./src/views/formatters.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport { addMessage } from '../redux/sources/actions';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error, errorInfo) {\n    return { error, errorInfo };\n  }\n\n  componentDidCatch(error) {\n    const sentryId = Sentry.captureException(error);\n    this.props.dispatch(\n      addMessage({\n        title: `${error.toString()} (Sentry ID: ${sentryId})`,\n        variant: 'danger',\n        description: error.stack,\n      })\n    );\n  }\n\n  render() {\n    const { error } = this.state;\n    const { children } = this.props;\n\n    if (error) {\n      return <Fragment>Error occurred</Fragment>;\n    }\n\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nErrorBoundary.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default connect()(ErrorBoundary);\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { loadWritePermissions } from '../redux/user/actions';\n\nconst PermissionsChecker = ({ children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadWritePermissions());\n  }, []);\n\n  return children;\n};\n\nexport default PermissionsChecker;\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const loadWritePermissions = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING });\n\n  return insights.chrome\n    .getUserPermissions('sources', true) // bypassCache = true\n    .then((permissions) => {\n      const allPermission = permissions.reduce((acc, curr) => [...acc, curr?.permission], []);\n      const writePermissions = allPermission.includes('sources:*:*') || allPermission.includes('sources:*:write');\n\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED,\n        payload: writePermissions,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      })\n    );\n};\n","import { useEffect, useRef } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { loadAppTypes, loadEntities, loadSourceTypes } from '../redux/sources/actions';\nimport { loadEnhancedAttributes, parseQuery, updateQuery } from '../utilities/urlQuery';\n\nconst DataLoader = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n  const previousPathname = useRef(pathname);\n\n  useEffect(() => {\n    const { applications, types } = loadEnhancedAttributes();\n\n    if (applications || types) {\n      Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes())]).then(() => dispatch(loadEntities(parseQuery)));\n    } else {\n      Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadEntities(parseQuery))]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (previousPathname.current !== pathname) {\n      updateQuery(sources);\n      previousPathname.current = pathname;\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default DataLoader;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { routes } from '../Routes';\n\nconst NavigationListener = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    try {\n      insights.chrome.init();\n      insights.chrome.identifyApp('sources');\n      const unregister = insights.chrome.on(\n        'APP_NAVIGATION',\n        (event) =>\n          (event.navId.split('/').pop() || event.domEvent?.href.split('/').pop()) === 'sources' &&\n          history.push(routes.sources.path)\n      );\n\n      return () => unregister?.();\n    } catch (_exception) {\n      // eslint-disable-next-line no-console\n      console.warn('Failed to initialize chrome navigation.');\n    }\n  }, []);\n\n  return null;\n};\n\nexport default NavigationListener;\n","export const getBaseName = (pathname, level = 2) => {\n  let release = '/';\n  const pathName = pathname.replace(/(#|\\?).*/, '').split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return [...new Array(level)].reduce((acc, _curr, key) => {\n    return `${acc}${pathName[key] || ''}${key < level - 1 ? '/' : ''}`;\n  }, release);\n};\n","import React, { useEffect } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './Routes';\n\nimport './App.scss';\nimport './styles/authSelect.scss';\nimport './styles/cardSelect.scss';\nimport './styles/costManagement.scss';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PermissionsChecker from './components/PermissionsChecker';\nimport DataLoader from './components/DataLoader';\nimport { CLOUD_CARDS_KEY } from './components/CloudTiles/CloudCards';\nimport NavigationListener from './components/NavigationListener';\n\nimport { getBaseName } from './frontend-components-copies/getBaseName';\n\nconst App = () => {\n  useEffect(() => {\n    return () => {\n      sessionStorage.removeItem(CLOUD_CARDS_KEY);\n    };\n  }, []);\n\n  return (\n    <Router basename={getBaseName(location.pathname, 1)}>\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <ErrorBoundary>\n            <PermissionsChecker>\n              <Main style={{ padding: 0 }}>\n                <DataLoader />\n                <NavigationListener />\n                <Routes />\n              </Main>\n            </PermissionsChecker>\n          </ErrorBoundary>\n        </React.Fragment>\n      </IntlProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AppPlaceholder } from './components/SourcesTable/loaders';\n\nconst SourcesPage = lazy(() => import(/* webpackChunkName: \"sourcesPage\" */ './pages/Sources'));\nconst SourceDetail = lazy(() => import(/* webpackChunkName: \"sourceDetail\" */ './pages/Detail'));\n\nexport const routes = {\n  sources: {\n    path: '/sources',\n  },\n  sourcesNew: {\n    path: '/sources/new',\n    writeAccess: true,\n  },\n  sourcesRemove: {\n    path: '/sources/remove/:id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetail: {\n    path: '/sources/detail/:id',\n    redirectNoId: true,\n  },\n  sourcesDetailRename: {\n    path: '/sources/detail/:id/rename',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemove: {\n    path: '/sources/detail/:id/remove',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailAddApp: {\n    path: '/sources/detail/:id/add_app/:app_type_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemoveApp: {\n    path: '/sources/detail/:id/remove_app/:app_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailEditCredentials: {\n    path: '/sources/detail/:id/edit_credentials',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n};\n\nexport const replaceRouteId = (path, id) => path.replace(':id', id);\n\nconst Routes = () => (\n  <Suspense fallback={<AppPlaceholder />}>\n    <Switch>\n      <Route path={routes.sourcesDetail.path} component={SourceDetail} />\n      <Route component={SourcesPage} />\n    </Switch>\n  </Suspense>\n);\n\nexport default Routes;\n","import axios from 'axios';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { APP_NAMES } from '../components/SourceEditForm/parser/application';\nimport * as interceptors from '../frontend-components-copies/interceptors';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\nimport { AVAILABLE, PARTIALLY_UNAVAILABLE, UNAVAILABLE } from '../views/formatters';\n\nimport { SOURCES_API_BASE_V3 } from './constants';\nimport { cmConvertTypes, cmValuesMapper, getCmValues } from './getCmValues';\n\nexport const graphQlErrorInterceptor = (response) => {\n  if (response.errors && response.errors.length > 0) {\n    return Promise.reject({ detail: response.errors[0].message });\n  }\n\n  return response;\n};\n\nexport const interceptor403 = (error) => {\n  if (error.errors && error.errors[0].status === 403) {\n    return Promise.reject({\n      detail: error.errors[0].detail,\n      title: 'Forbidden access',\n    });\n  }\n\n  throw error;\n};\n\nconst axiosInstanceInsights = axios.create();\naxiosInstanceInsights.interceptors.request.use(interceptors.authInterceptor);\naxiosInstanceInsights.interceptors.response.use(interceptors.responseDataInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor401);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor500);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.errorInterceptor);\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptor403);\n\nexport { axiosInstanceInsights as axiosInstance };\n\nexport const getSourcesApi = () => ({\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  updateSource: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/sources/${id}`, data),\n  updateEndpoint: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/endpoints/${id}`, data),\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  updateAuthentication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/authentications/${id}`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  showSource: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  listSourceEndpoints: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/endpoints`),\n  listSourceApplications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/applications`),\n  listEndpointAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}/authentications`),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  doLoadAppTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  deleteApplication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  deleteAuthentication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  showAuthentication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  updateApplication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/applications/${id}`, data),\n  showApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  listSourceAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/authentications`),\n  createSource: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources`, data),\n  getEndpoint: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}`),\n  getGoogleAccount: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account`),\n  bulkCreate: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/bulk_create`, data),\n  pauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/pause`),\n  unpauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/unpause`),\n  pauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/pause`),\n  unpauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/unpause`),\n});\n\nexport const doLoadAppTypes = () => getSourcesApi().doLoadAppTypes();\n\nexport const doRemoveSource = (sourceId) =>\n  getSourcesApi()\n    .deleteSource(sourceId)\n    .catch((error) => {\n      throw { error: { detail: error.errors[0].detail } };\n    });\n\nexport const pagination = (pageSize, pageNumber) => `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) => {\n  if (!sortBy) {\n    return '';\n  }\n\n  if (sortBy === 'source_type_id') {\n    return `sort_by:{source_type:{product_name:\"${sortDirection}\"}}`;\n  }\n\n  if (sortBy === 'applications') {\n    return `sort_by:{applications:{__count:\"${sortDirection}\"}}`;\n  }\n\n  return `sort_by:{${sortBy}:\"${sortDirection}\"}`;\n};\n\nexport const filtering = (filterValue = {}, activeVendor) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`name: { contains_i: \"${filterValue.name}\" }`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterQueries.push(`source_type_id: { eq: [${filterValue.source_type_id.map((x) => `\"${x}\"`).join(', ')}] }`);\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterQueries.push(\n      `applications: { application_type_id: { eq: [${filterValue.applications.map((x) => `\"${x}\"`).join(', ')}] }}`\n    );\n  }\n\n  if (activeVendor === CLOUD_VENDOR) {\n    filterQueries.push(`source_type: { vendor: { not_eq: \"Red Hat\"} }`);\n  }\n\n  if (activeVendor === REDHAT_VENDOR) {\n    filterQueries.push('source_type: { vendor: \"Red Hat\" }');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`availability_status: { eq: \"${AVAILABLE}\" }`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`availability_status: { eq: [\"${PARTIALLY_UNAVAILABLE}\", \"${UNAVAILABLE}\"] }`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return `filter: { ${filterQueries.join(', ')} }`;\n  }\n\n  return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    imported,\n    availability_status,\n    source_ref,\n    last_checked_at,\n    updated_at,\n    last_available_at,\n    app_creation_workflow,\n    paused_at,\n    authentications { authtype, username, availability_status_error, availability_status }\n    applications { application_type_id, id, availability_status_error, availability_status, paused_at, authentications { id, resource_type } },\n    endpoints { id, scheme, host, port, path, receptor_node, role, certificate_authority, verify_ssl, availability_status_error, availability_status, authentications { authtype, availability_status, availability_status_error } }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue, activeVendor }) => {\n  const filter = filtering(filterValue, activeVendor);\n\n  const filterSection = [pagination(pageSize, pageNumber), sorting(sortBy, sortDirection), filter].join(',');\n\n  return getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(${filterSection})\n      { ${graphQlAttributes} },\n     sources_aggregate(${filter}){aggregate{total_count}}\n    }`,\n    })\n    .then(({ data }) => data);\n};\n\nexport const doCreateApplication = (data) => getSourcesApi().createApplication(data);\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n  getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => {\n      throw { error: { title: errorMessage, detail } };\n    });\n\nexport const restFilterGenerator = (filterValue = {}, activeVendor) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterValue.applications.map((id) => filterQueries.push(`filter[applications][application_type_id][eq][]=${id}`));\n  }\n\n  if (activeVendor === CLOUD_VENDOR) {\n    filterQueries.push(`filter[source_type][vendor][not_eq]=Red Hat`);\n  }\n\n  if (activeVendor === REDHAT_VENDOR) {\n    filterQueries.push('filter[source_type][vendor]=Red Hat');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`filter[availability_status]=${AVAILABLE}`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`filter[availability_status][]=${PARTIALLY_UNAVAILABLE}`);\n      filterQueries.push(`filter[availability_status][]=${UNAVAILABLE}`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return filterQueries.join('&');\n  }\n\n  return '';\n};\n\nexport const doLoadSource = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { id: { eq: ${id}}})\n            { ${graphQlAttributes} }\n        }`,\n    })\n    .then(({ data }) => data);\n\nexport const doLoadApplicationsForEdit = async (id, appTypes, sourceTypes) => {\n  let graphql = await getSourcesApi().postGraphQL({\n    query: `{ sources(filter: { id: { eq: ${id}}})\n          { source_type_id, applications {\n              application_type_id,\n              id,\n              availability_status_error,\n              availability_status,\n              paused_at,\n              authentications {\n                  id\n              }\n          } }\n      }`,\n  });\n\n  const promises = [];\n  graphql.data.sources?.[0]?.applications?.forEach((app) => {\n    promises.push(getSourcesApi().showApplication(app.id));\n  });\n\n  const results = await Promise.all(promises);\n\n  const sourceType = sourceTypes.find(({ id }) => id === graphql.data.sources?.[0]?.source_type_id);\n  const costManagementApp = appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT);\n\n  if (results.length) {\n    // Doing for as forEach has some issues in jest with nested async functions\n    for (let index = 0; index < results.length; index++) {\n      const { extra, application_type_id } = results[index];\n      const newExtra = { ...extra };\n\n      if (\n        application_type_id === costManagementApp.id &&\n        cmConvertTypes.includes(sourceType.name) &&\n        !Object.keys(extra).length\n      ) {\n        const cmValues = await getCmValues(id);\n        Object.keys(cmValuesMapper).forEach((key) => {\n          const value = get(cmValues, key);\n\n          value && set(newExtra, cmValuesMapper[key], value);\n        });\n      }\n\n      graphql.data.sources[0].applications[index] = {\n        ...graphql.data.sources[0].applications[index],\n        extra: newExtra,\n      };\n    }\n  }\n\n  return graphql.data;\n};\n\nexport const doDeleteAuthentication = (id) => getSourcesApi().deleteAuthentication(id);\n","import { getSourcesApi } from './entities.js';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => data.data);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\nimport { Spinner, Bullseye, Grid, GridItem, Card, CardBody } from '@patternfly/react-core';\n\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nimport './loaders.scss';\nimport { useIntl } from 'react-intl';\n\nexport const Loader = ({ width = '100%', height = '100%', className = '' }) => (\n  <span className={`src-c-loader ${className}`} style={{ width, height }} role=\"progressbar\" />\n);\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport const AppPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        <div className=\"src-c-fake_content pf-u-p-lg\">\n          <Loader />\n        </div>\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport const PaginationLoader = () => <Loader className=\"top-pagination\" height={30} width={200} />;\n\nexport const PlaceHolderTable = () => (\n  <Bullseye className=\"src-c-bullseye__placeholder-loader\">\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) =>\n  isDeleting ? (\n    <tr>\n      <td colSpan={COLUMN_COUNT} className=\"pf-u-p-md\">\n        <Loader height={100} />\n      </td>\n    </tr>\n  ) : (\n    <RowWrapper {...initialProps} row={row} className=\"src-c-row-vertical-centered\" />\n  );\n\nRowWrapperLoader.propTypes = {\n  row: PropTypes.object.isRequired,\n};\n\nexport const CardLoader = (props) => (\n  <Card className=\"pf-u-m-md\">\n    <CardBody>\n      <Loader {...props} />\n    </CardBody>\n  </Card>\n);\n\nexport const DetailLoader = () => (\n  <div className=\"src-c-detail-page\">\n    <PageHeader>\n      <Loader height={96} />\n    </PageHeader>\n    <Grid>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"12\">\n        <CardLoader height={324} />\n      </GridItem>\n    </Grid>\n  </div>\n);\n","export const ACTION_TYPES = ['SET_WRITE_PERMISSIONS'].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n","import {\n  ACTION_TYPES,\n  SORT_ENTITIES,\n  PAGE_AND_SIZE,\n  FILTER_SOURCES,\n  ADD_APP_TO_SOURCE,\n  SET_COUNT,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  SET_VENDOR,\n} from './actionTypes';\nimport { CLOUD_VENDOR } from '../../utilities/constants';\n\nexport const defaultSourcesState = {\n  loaded: 0,\n  pageSize: 50,\n  pageNumber: 1,\n  entities: [],\n  numberOfEntities: 0,\n  appTypesLoaded: false,\n  sourceTypesLoaded: false,\n  filterValue: {},\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n  removingSources: [],\n  activeVendor: CLOUD_VENDOR,\n  appTypes: [],\n  sourceTypes: [],\n};\n\nexport const entitiesPending = (state, { options }) => ({\n  ...state,\n  loaded: state.loaded + 1,\n  paginationClicked: false,\n  ...options,\n});\n\nexport const entitiesLoaded = (state, { payload: { sources, sources_aggregate }, options }) => ({\n  ...state,\n  loaded: Math.max(state.loaded - 1, 0),\n  entities: sources,\n  numberOfEntities: sources_aggregate?.aggregate?.total_count,\n  ...options,\n});\n\nexport const entitiesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesPending = (state) => ({\n  ...state,\n  sourceTypes: [],\n  sourceTypesLoaded: false,\n});\n\nexport const sourceTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesLoaded = (state, { payload: sourceTypes }) => ({\n  ...state,\n  sourceTypes,\n  sourceTypesLoaded: true,\n});\n\nexport const appTypesPending = (state) => ({\n  ...state,\n  appTypes: [],\n  appTypesLoaded: false,\n});\n\nexport const appTypesLoaded = (state, { payload: appTypes }) => ({\n  ...state,\n  appTypes,\n  appTypesLoaded: true,\n});\n\nexport const appTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sortEntities = (state, { payload: { column, direction } }) => ({\n  ...state,\n  sortBy: column,\n  sortDirection: direction,\n});\n\nexport const setPageAndSize = (state, { payload: { page, size } }) => ({\n  ...state,\n  pageSize: size,\n  pageNumber: page,\n});\n\nexport const filterSources = (state, { payload: { value } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    ...value,\n  },\n  pageNumber: 1,\n});\n\nexport const sourceEditRemovePending = (state, { meta }) => ({\n  ...state,\n  removingSources: [...state.removingSources, meta.sourceId],\n});\n\nexport const sourceEditRemoveFulfilled = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n  entities: state.entities.filter((entity) => entity.id !== meta.sourceId),\n});\n\nexport const sourceEditRemoveRejected = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n});\n\nexport const appRemovingPending = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: true,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingFulfilled = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.filter((app) => app.id !== meta.appId),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingRejected = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: undefined,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const addAppToSource = (state, { payload: { sourceId, app } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          applications: [...entity.applications, app],\n        }\n      : entity\n  ),\n});\n\nexport const setCount = (state, { payload: { count } }) => ({\n  ...state,\n  numberOfEntities: count,\n});\n\nexport const addHiddenSource = (state, { payload: { source } }) => ({\n  ...state,\n  entities: [...state.entities, { ...source, hidden: true }],\n});\n\nexport const clearFilters = (state) => ({\n  ...state,\n  filterValue: {},\n  pageNumber: 1,\n});\n\nexport const sourceRenamePending = (state, { payload: { id, name } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === id\n      ? {\n          ...entity,\n          name,\n        }\n      : entity\n  ),\n});\n\nconst setVendor = (state, { payload: { vendor } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    source_type_id: [],\n    applications: [],\n  },\n  activeVendor: vendor,\n});\n\nexport default {\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n  [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n  [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: entitiesRejected,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING]: sourceTypesPending,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED]: sourceTypesLoaded,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED]: sourceTypesRejected,\n  [ACTION_TYPES.LOAD_APP_TYPES_PENDING]: appTypesPending,\n  [ACTION_TYPES.LOAD_APP_TYPES_FULFILLED]: appTypesLoaded,\n  [ACTION_TYPES.LOAD_APP_TYPES_REJECTED]: appTypesRejected,\n  [ACTION_TYPES.REMOVE_SOURCE_PENDING]: sourceEditRemovePending,\n  [ACTION_TYPES.REMOVE_SOURCE_FULFILLED]: sourceEditRemoveFulfilled,\n  [ACTION_TYPES.REMOVE_SOURCE_REJECTED]: sourceEditRemoveRejected,\n  [ACTION_TYPES.REMOVE_APPLICATION_PENDING]: appRemovingPending,\n  [ACTION_TYPES.REMOVE_APPLICATION_FULFILLED]: appRemovingFulfilled,\n  [ACTION_TYPES.REMOVE_APPLICATION_REJECTED]: appRemovingRejected,\n  [ACTION_TYPES.RENAME_SOURCE_PENDING]: sourceRenamePending,\n  [ACTION_TYPES.RENAME_SOURCE_REJECTED]: sourceRenamePending,\n\n  [SORT_ENTITIES]: sortEntities,\n  [PAGE_AND_SIZE]: setPageAndSize,\n  [FILTER_SOURCES]: filterSources,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [SET_COUNT]: setCount,\n  [ADD_HIDDEN_SOURCE]: addHiddenSource,\n  [CLEAR_FILTERS]: clearFilters,\n  [SET_VENDOR]: setVendor,\n};\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const defaultUserState = {\n  writePermissions: undefined,\n};\n\nexport const writePermissionsPending = (state) => ({\n  ...state,\n  writePermissions: undefined,\n});\n\nexport const writePermissionsLoaded = (state, { payload: writePermissions }) => ({\n  ...state,\n  writePermissions,\n});\n\nexport default {\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING]: writePermissionsPending,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED]: writePermissionsLoaded,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED]: writePermissionsPending,\n};\n","import ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport SourcesReducer, { defaultSourcesState } from '../redux/sources/reducer';\nimport UserReducer, { defaultUserState } from '../redux/user/reducer';\nimport { updateQuery } from './urlQuery';\nimport { ACTION_TYPES } from '../redux/sources/actionTypes';\n\nexport const urlQueryMiddleware = (store) => (next) => (action) => {\n  if (action.type === ACTION_TYPES.LOAD_ENTITIES_PENDING) {\n    const sources = store.getState().sources;\n    updateQuery({ ...sources, ...action.options });\n  }\n\n  next(action);\n};\n\nexport const getStore = (addMiddlewares = [], initialState = {}) => {\n  const middlewares = [\n    thunk,\n    notificationsMiddleware({\n      errorTitleKey: 'error.title',\n      errorDescriptionKey: 'error.detail',\n    }),\n    promise,\n    urlQueryMiddleware,\n    ...addMiddlewares,\n  ];\n\n  const registry = new ReducerRegistry({}, middlewares);\n\n  registry.register({\n    sources: applyReducerHash(SourcesReducer, { ...defaultSourcesState, ...initialState.sources }),\n  });\n  registry.register({ user: applyReducerHash(UserReducer, { ...defaultUserState, ...initialState.user }) });\n  registry.register({ notifications: notificationsReducer });\n\n  return registry.getStore();\n};\n\nexport const getProdStore = () => getStore();\n","import { restFilterGenerator } from '../api/entities';\nimport { AVAILABLE, UNAVAILABLE } from '../views/formatters';\nimport { sourcesColumns } from '../views/sourcesViewDefinition';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from './constants';\n\nexport const updateQuery = ({ sortBy, sortDirection, pageNumber, pageSize, filterValue, activeVendor }) => {\n  const sortQuery = `sort_by[]=${sortBy}:${sortDirection}`;\n\n  const paginationQuery = `limit=${pageSize}&offset=${(pageNumber - 1) * pageSize}&activeVendor=${activeVendor || CLOUD_VENDOR}`;\n\n  const filterQuery = restFilterGenerator(filterValue);\n\n  const query = `?${sortQuery}&${paginationQuery}${filterQuery ? `&${filterQuery}` : ''}`;\n\n  const fullHref = decodeURIComponent(`${window.location.pathname}${query}`);\n\n  if (location.href !== fullHref) {\n    return history.replaceState('', '', fullHref);\n  }\n\n  return null;\n};\n\nexport const loadEnhancedAttributes = (params) => {\n  const urlParams = params || new URLSearchParams(window.location.search);\n\n  const applications = urlParams.getAll('application');\n  const types = urlParams.getAll('type');\n\n  return {\n    applications: applications.length && applications,\n    types: types.length && types,\n  };\n};\n\nexport const parseQuery = (getState) => {\n  let fetchOptions = {};\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const sortByRaw = urlParams.get('sort_by[]');\n\n  let sortBy;\n  let sortDirection;\n\n  if (sortByRaw) {\n    sortBy = sortByRaw.split(':')[0];\n    sortDirection = sortByRaw.split(':')[1];\n\n    sortBy = sourcesColumns({ formatMessage: () => '' })\n      .filter(({ sortable }) => sortable)\n      .map(({ value }) => value)\n      .includes(sortBy)\n      ? sortBy\n      : 'created_at';\n    sortDirection = ['desc', 'asc'].includes(sortDirection) ? sortDirection : 'desc';\n  }\n\n  if (sortBy && sortDirection) {\n    fetchOptions = {\n      sortBy,\n      sortDirection,\n    };\n  }\n\n  const pageSize = urlParams.get('limit');\n  const offset = urlParams.get('offset');\n\n  let pageNumber;\n\n  if (offset && pageSize) {\n    pageNumber = offset / pageSize + 1;\n    if (isNaN(pageNumber)) {\n      pageNumber = undefined;\n    }\n  }\n\n  if (pageSize && pageNumber) {\n    fetchOptions = {\n      ...fetchOptions,\n      pageNumber: parseInt(pageNumber, 10),\n      pageSize: Math.min(parseInt(pageSize, 10), 100),\n    };\n  }\n\n  let filterValue = {};\n\n  const name = urlParams.get('filter[name][contains_i]');\n\n  if (name) {\n    filterValue = { name };\n  }\n\n  const sourceTypes = urlParams.getAll('filter[source_type_id][]');\n\n  if (sourceTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      source_type_id: sourceTypes,\n    };\n  }\n\n  const applicationTypes = urlParams.getAll('filter[applications][application_type_id][eq][]');\n\n  if (applicationTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      applications: applicationTypes,\n    };\n  }\n\n  if (urlParams.get('filter[availability_status]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [AVAILABLE],\n    };\n  } else if (urlParams.get('filter[availability_status][]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [UNAVAILABLE],\n    };\n  }\n\n  const { applications, types } = loadEnhancedAttributes(urlParams);\n\n  if (applications || types) {\n    const { appTypes, sourceTypes } = getState().sources;\n\n    const applicationIds = applications.map?.((app) => appTypes.find(({ name }) => name.includes(app))?.id).filter(Boolean);\n    const typeIds = types.map?.((type) => sourceTypes.find(({ name }) => name === type)?.id).filter(Boolean);\n\n    filterValue = {\n      ...filterValue,\n      ...(applicationIds?.length && { applications: applicationIds }),\n      ...(typeIds?.length && { source_type_id: typeIds }),\n    };\n  }\n\n  const hasSomeFilterValue =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value)\n      .filter(Boolean).length > 0;\n\n  if (hasSomeFilterValue) {\n    fetchOptions = {\n      ...fetchOptions,\n      filterValue,\n    };\n  }\n\n  const activeVendor = urlParams.get('activeVendor');\n\n  if (activeVendor === CLOUD_VENDOR || activeVendor === REDHAT_VENDOR) {\n    fetchOptions = {\n      ...fetchOptions,\n      activeVendor,\n    };\n  }\n\n  return fetchOptions;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Text, TextVariants, TextContent, Badge, Popover, Tooltip, Label, LabelGroup, Button } from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { replaceRouteId, routes } from '../Routes';\nimport isSourceAzureRHEL from '../utilities/isSourceAzureRHEL';\n\nexport const defaultPort = (scheme) =>\n  ({\n    http: '80',\n    https: '443',\n  }[scheme]);\n\nexport const importsTexts = (value) =>\n  ({\n    cfme: (\n      <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n      />\n    ),\n  }[value.toLowerCase()]);\n\nexport const schemaToPort = (schema, port) => (port && String(port) !== defaultPort(schema) ? `:${port}` : '');\n\nexport const endpointToUrl = (endpoint) => {\n  const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n  const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n  const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n  if (url === '://') {\n    return;\n  }\n\n  return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n  return type && type.name === 'openshift';\n};\n\nexport const formatURL = (source) => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n  const type = sourceTypes.find((type) => type.id === sourceType);\n  return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = (str) => (\n  <span className=\"src-c-help-cursor\">\n    <DateFormat type=\"relative\" date={str} />\n  </span>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n  <TextContent>\n    <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>{name}</Link>\n    <br key={`${source.id}-br`} />\n    <Text key={source.id} component={TextVariants.small}>\n      {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n    </Text>\n  </TextContent>\n);\n\nexport const importedFormatter = (value) => {\n  if (!value) {\n    return null;\n  }\n\n  const text = importsTexts(value);\n\n  if (text) {\n    return (\n      <Tooltip content={text}>\n        <Badge isRead className=\"src-m-help-cursor\">\n          <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n        </Badge>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Badge isRead>\n      <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n    </Badge>\n  );\n};\n\nexport const AVAILABLE = 'available';\nexport const UNAVAILABLE = 'unavailable';\nexport const UNKNOWN = 'unknown';\nexport const PARTIALLY_UNAVAILABLE = 'partially_available';\nexport const IN_PROGRESS = 'in_progress';\nexport const PAUSED = 'paused_at';\nexport const RHELAZURE = 'rhel_azure';\n\nexport const getStatusColor = (status) =>\n  ({\n    [UNAVAILABLE]: 'red',\n    [AVAILABLE]: 'green',\n    [PARTIALLY_UNAVAILABLE]: 'orange',\n    [PAUSED]: 'cyan',\n  }[status] || 'grey');\n\nexport const getStatusText = (status) =>\n  ({\n    [UNAVAILABLE]: <FormattedMessage id=\"sources.unavailable\" defaultMessage=\"Unavailable\" />,\n    [AVAILABLE]: <FormattedMessage id=\"sources.available\" defaultMessage=\"Available\" />,\n    [PARTIALLY_UNAVAILABLE]: <FormattedMessage id=\"sources.partiallyAvailable\" defaultMessage=\"Partially available\" />,\n    [IN_PROGRESS]: <FormattedMessage id=\"sources.inProgress\" defaultMessage=\"In progress\" />,\n    [PAUSED]: <FormattedMessage id=\"sources.paused\" defaultMessage=\"Paused\" />,\n  }[status] || <FormattedMessage id=\"sources.unknown\" defaultMessage=\"Unknown\" />);\n\nexport const UnknownError = () => <FormattedMessage id=\"sources.unknownError\" defaultMessage=\"unavailable\" />;\n\nexport const formatAvailibilityErrors = (appTypes, errors) => (\n  <React.Fragment>\n    {errors.source && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.sourceError\"\n          defaultMessage=\"Source's status: { error }\"\n          values={{ error: errors.source }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.endpoint && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.endpointError\"\n          defaultMessage=\"Endpoint error: { error }\"\n          values={{ error: errors.endpoint }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.authentications && (\n      <FormattedMessage\n        id=\"sources.authErrors\"\n        defaultMessage=\"Authentication {count, plural, one {status} other {statuses}} : { errors }\"\n        values={{\n          count: errors.authentications.length,\n          errors: errors.authentications.map(({ error, type }) => (\n            <React.Fragment key={type}>\n              <FormattedMessage id=\"sources.errorAuthTemplate\" defaultMessage=\"{ type }: { error }\" values={{ error, type }} />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n    {errors.applications && (\n      <FormattedMessage\n        id=\"sources.appErrors\"\n        defaultMessage=\"Application {count, plural, one {status} other {statutes}}: { errors }\"\n        values={{\n          count: errors.applications.length,\n          errors: errors.applications.map(({ error, id }) => (\n            <React.Fragment key={id}>\n              <FormattedMessage\n                id=\"sources.errorAppTemplate\"\n                defaultMessage=\"{ app }: { error }\"\n                values={{\n                  error,\n                  app: appTypes.find((app) => app.id === id)?.display_name || id,\n                }}\n              />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport const getStatusTooltipText = (status, appTypes, errors = {}) =>\n  ({\n    [UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [AVAILABLE]: <FormattedMessage id=\"sources.appStatusOK\" defaultMessage=\"Everything works fine.\" />,\n    [PARTIALLY_UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n    [PAUSED]: (\n      <FormattedMessage\n        id=\"sources.pausedStatus\"\n        defaultMessage=\"Data collection is temporarily disabled. Resume source to reestablish connection.\"\n      />\n    ),\n    [RHELAZURE]: (\n      <FormattedMessage\n        id=\"sources.rhelAzureStatus\"\n        defaultMessage=\"This source cannot currently be monitored in Sources, and does not reflect true status or resources.\"\n      />\n    ),\n  }[status] || <FormattedMessage id=\"sources.appStatusUnknown\" defaultMessage=\"Status has not been verified.\" />);\n\nexport const getAllErrors = ({\n  availability_status,\n  availability_status_error,\n  applications = [],\n  endpoints: [endpoint] = [],\n}) => {\n  if (availability_status === IN_PROGRESS) {\n    return { errors: {}, status: IN_PROGRESS };\n  }\n\n  let errors = {};\n  let statusesCount = 0;\n  let errorsCount = 0;\n\n  if (availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      source: availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  applications.map((app) => {\n    if (app.availability_status === UNAVAILABLE) {\n      errors = {\n        ...errors,\n        applications: [\n          ...(errors.applications ? errors.applications : []),\n          {\n            id: app.application_type_id,\n            error: app.availability_status_error || <UnknownError />,\n          },\n        ],\n      };\n      statusesCount++;\n      errorsCount++;\n    } else if (app.availability_status === AVAILABLE) {\n      statusesCount++;\n    }\n  });\n\n  if (endpoint?.availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      endpoint: endpoint.availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (endpoint?.availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  if (endpoint?.authentications) {\n    endpoint.authentications.map((auth) => {\n      if (auth.availability_status === UNAVAILABLE) {\n        errors = {\n          ...errors,\n          authentications: [\n            ...(errors.authentications ? errors.authentications : []),\n            {\n              type: auth.authtype,\n              error: auth.availability_status_error || <UnknownError />,\n            },\n          ],\n        };\n        statusesCount++;\n        errorsCount++;\n      } else if (auth.availability_status === AVAILABLE) {\n        statusesCount++;\n      }\n    });\n  }\n\n  return {\n    errors,\n    status:\n      errorsCount === 0\n        ? statusesCount === 0\n          ? UNKNOWN\n          : AVAILABLE\n        : errorsCount === statusesCount\n        ? UNAVAILABLE\n        : PARTIALLY_UNAVAILABLE,\n  };\n};\n\nexport const availabilityFormatter = (_status, source, { appTypes, sourceTypes }) => {\n  const meta = getAllErrors(source);\n  const status = source.paused_at ? PAUSED : isSourceAzureRHEL({ source, sourceTypes, appTypes }) ? RHELAZURE : meta.status;\n\n  return (\n    <span>\n      <Popover\n        showClose={false}\n        aria-label={`${status} popover`}\n        bodyContent={getStatusTooltipText(status, appTypes, meta.errors)}\n      >\n        <Label\n          className=\"src-m-clickable\"\n          color={getStatusColor(status)}\n          {...(source.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n          {...(source.paused_at && { icon: <PauseIcon /> })}\n        >\n          {getStatusText(status)}\n        </Label>\n      </Popover>\n    </span>\n  );\n};\n\nexport const getStatusTooltipTextApp = (status, error, intl) =>\n  ({\n    [AVAILABLE]: intl.formatMessage({\n      id: 'sources.appStatusOK',\n      defaultMessage: 'Everything works fine.',\n    }),\n    [UNAVAILABLE]: error || intl.formatMessage({ id: 'sources.unknownError', defaultMessage: 'Unknown error' }),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n  }[status] ||\n  intl.formatMessage({\n    id: 'sources.appStatusUnknown',\n    defaultMessage: 'Status has not been verified.',\n  }));\n\nexport const ApplicationLabel = ({ app, showStatusText, ...props }) => {\n  const intl = useIntl();\n\n  const statusText = getStatusTooltipTextApp(app.availability_status, app.availability_status_error, intl);\n\n  return (\n    <Popover\n      showClose={false}\n      key={app.display_name}\n      aria-label={`${app.display_name} popover`}\n      bodyContent={\n        app.paused_at\n          ? `${statusText} ${intl.formatMessage({\n              id: 'appplication.paused.additionalText',\n              defaultMessage: 'Resume this application to continue data collection.',\n            })}`\n          : statusText\n      }\n      {...(app.paused_at && {\n        headerContent: intl.formatMessage({\n          id: 'application.paused.header',\n          defaultMessage: 'Application paused',\n        }),\n      })}\n    >\n      <Label\n        className=\"src-m-clickable\"\n        color={getStatusColor(app.availability_status)}\n        {...(app.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n        {...(app.paused_at && { icon: <PauseIcon /> })}\n        {...props}\n      >\n        {showStatusText ? getStatusText(app.availability_status) : app.display_name}\n      </Label>\n    </Popover>\n  );\n};\n\nApplicationLabel.propTypes = {\n  app: PropTypes.shape({\n    display_name: PropTypes.string,\n    availability_status: PropTypes.string,\n    availability_status_error: PropTypes.string,\n    paused_at: PropTypes.string,\n  }),\n  showStatusText: PropTypes.bool,\n};\n\nconst EnhancedLabelGroup = ({ applications, ...props }) => {\n  const intl = useIntl();\n\n  return (\n    <LabelGroup\n      {...props}\n      numLabels={2}\n      collapsedText={intl.formatMessage(\n        { id: 'applications.showMore', defaultMessage: '{remaining} more' },\n        { remaining: '${remaining}' }\n      )}\n    >\n      {applications.map((app, index) => (\n        <ApplicationLabel app={app} key={app.id || index} />\n      ))}\n    </LabelGroup>\n  );\n};\n\nEnhancedLabelGroup.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      display_name: PropTypes.string,\n      availability_status: PropTypes.string,\n      availability_status_error: PropTypes.string,\n      paused_at: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport const getAppStatus = (app, source, appTypes) => {\n  const application = appTypes.find((type) => type.id === app.application_type_id);\n\n  if (application) {\n    let availability_status = app.availability_status;\n    let availability_status_error = app.availability_status_error;\n\n    if (app.authentications?.[0]?.resource_type === 'Endpoint') {\n      availability_status = source.endpoints?.[0]?.availability_status;\n      availability_status_error = source.endpoints?.[0]?.availability_status_error;\n    }\n\n    return {\n      display_name: application.display_name,\n      paused_at: app.paused_at,\n      availability_status,\n      availability_status_error,\n    };\n  }\n};\n\nexport const applicationFormatter = (apps, item, { appTypes }) => {\n  const applications = apps\n    .map((app) => getAppStatus(app, item, appTypes))\n    .filter(Boolean)\n    .sort((a, b) => a.display_name.localeCompare(b.display_name));\n\n  if (applications.length === 0) {\n    return '--';\n  }\n\n  return <EnhancedLabelGroup numLabels={2} collapsedText applications={applications} />;\n};\n\nexport const configurationModeFormatter = (mode, item, { intl, sourceType }) => {\n  if (mode === 'account_authorization') {\n    const superKeyType = sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n    const superKeyAuth = item?.authentications?.find(({ authtype }) => authtype && authtype === superKeyType.type);\n\n    return (\n      <React.Fragment>\n        {intl.formatMessage({\n          id: 'configurationMode.trust',\n          defaultMessage: 'Account authorization',\n        })}\n        {superKeyAuth?.availability_status === UNAVAILABLE && (\n          <Tooltip\n            position=\"top\"\n            content={\n              superKeyAuth.availability_status_error ||\n              intl.formatMessage({\n                id: 'configurationMode.trustmode.defaultError',\n                defaultMessage: 'Edit credentials required.',\n              })\n            }\n          >\n            <span className=\"pf-u-ml-sm\">\n              <ExclamationCircleIcon fill=\"#C9190B\" />\n            </span>\n          </Tooltip>\n        )}\n        <div className=\"pf-u-mt-sm\">\n          <Link to={replaceRouteId(routes.sourcesDetailEditCredentials.path, item.id)}>\n            <Button variant=\"link\" id=\"edit-super-credentials\" isInline>\n              {item.paused_at\n                ? intl.formatMessage({\n                    id: 'sources.viewCredentials',\n                    defaultMessage: 'View credentials',\n                  })\n                : intl.formatMessage({\n                    id: 'sources.editCredentials',\n                    defaultMessage: 'Edit credentials',\n                  })}\n            </Button>\n          </Link>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return intl.formatMessage({\n    id: 'configurationMode.manual',\n    defaultMessage: 'Manual configuration',\n  });\n};\n"],"names":["ErrorBoundary","error","sentryId","Sentry","this","props","dispatch","addMessage","title","toString","variant","description","stack","state","children","Fragment","errorInfo","Component","propTypes","PropTypes","connect","useDispatch","useEffect","type","ACTION_TYPES","insights","chrome","getUserPermissions","then","permissions","allPermission","reduce","acc","curr","permission","writePermissions","includes","payload","detail","data","pathname","useLocation","sources","useSelector","shallowEqual","previousPathname","useRef","loadEnhancedAttributes","applications","types","Promise","all","loadSourceTypes","loadAppTypes","loadEntities","parseQuery","current","updateQuery","history","useHistory","init","identifyApp","unregister","on","event","navId","split","pop","domEvent","href","push","routes","_exception","console","warn","getBaseName","level","release","pathName","replace","shift","Array","_curr","key","sessionStorage","removeItem","CLOUD_CARDS_KEY","basename","location","locale","Main","style","padding","Routes","SourcesPage","lazy","SourceDetail","path","sourcesNew","writeAccess","sourcesRemove","redirectNoId","sourcesDetail","sourcesDetailRename","noPaused","sourcesDetailRemove","sourcesDetailAddApp","sourcesDetailRemoveApp","sourcesDetailEditCredentials","replaceRouteId","id","Suspense","fallback","Switch","Route","component","axiosInstanceInsights","axios","interceptors","request","use","response","errors","length","reject","message","status","getSourcesApi","checkAvailabilitySource","post","SOURCES_API_BASE_V3","updateSource","patch","updateEndpoint","createEndpoint","updateAuthentication","createAuthentication","showSource","get","listSourceEndpoints","listSourceApplications","listEndpointAuthentications","deleteSource","createApplication","postGraphQL","listSourceTypes","doLoadAppTypes","deleteApplication","createAuthApp","deleteAuthentication","showAuthentication","updateApplication","showApplication","listSourceAuthentications","createSource","getEndpoint","getGoogleAccount","bulkCreate","pauseApplication","unpauseApplication","pauseSource","unpauseSource","doRemoveSource","sourceId","pagination","pageSize","pageNumber","sorting","sortBy","sortDirection","graphQlAttributes","doLoadEntities","filter","filterValue","activeVendor","filterQueries","name","source_type_id","map","x","join","CLOUD_VENDOR","REDHAT_VENDOR","availability_status","AVAILABLE","UNAVAILABLE","PARTIALLY_UNAVAILABLE","filtering","filterSection","query","doCreateApplication","doDeleteApplication","appId","errorMessage","restFilterGenerator","doLoadSource","doLoadApplicationsForEdit","appTypes","sourceTypes","graphql","promises","forEach","app","results","sourceType","find","costManagementApp","APP_NAMES","index","extra","application_type_id","newExtra","cmConvertTypes","Object","keys","getCmValues","cmValues","cmValuesMapper","value","set","doLoadSourceTypes","Loader","width","height","className","role","AppPlaceholder","intl","useIntl","formatMessage","defaultMessage","PaginationLoader","PlaceHolderTable","Bullseye","Spinner","size","RowWrapperLoader","row","isDeleting","initialProps","colSpan","COLUMN_COUNT","RowWrapper","CardLoader","Card","CardBody","DetailLoader","Grid","GridItem","md","defaultSourcesState","loaded","entities","numberOfEntities","appTypesLoaded","sourceTypesLoaded","removingSources","addAppToSource","entity","sourceRenamePending","options","paginationClicked","sources_aggregate","Math","max","aggregate","total_count","fetchingError","meta","undefined","SORT_ENTITIES","column","direction","PAGE_AND_SIZE","page","FILTER_SOURCES","ADD_APP_TO_SOURCE","SET_COUNT","count","ADD_HIDDEN_SOURCE","source","hidden","CLEAR_FILTERS","SET_VENDOR","vendor","defaultUserState","writePermissionsPending","urlQueryMiddleware","store","next","action","getState","getProdStore","addMiddlewares","initialState","middlewares","thunk","notificationsMiddleware","errorTitleKey","errorDescriptionKey","promise","registry","ReducerRegistry","register","applyReducerHash","SourcesReducer","user","UserReducer","notifications","notificationsReducer","getStore","sortQuery","paginationQuery","filterQuery","fullHref","decodeURIComponent","window","replaceState","params","urlParams","URLSearchParams","search","getAll","fetchOptions","sortByRaw","sourcesColumns","sortable","offset","isNaN","parseInt","min","applicationTypes","applicationIds","Boolean","typeIds","entries","defaultPort","scheme","http","https","endpointToUrl","endpoint","onlyTrueEndpointValues","host","port","url","schema","String","schemaToPort","sourceTypeFormatter","_item","product_name","dateFormatter","str","date","nameFormatter","TextContent","Link","to","Text","TextVariants","sourceIsOpenShift","endpoints","formatURL","importedFormatter","text","cfme","toLowerCase","importsTexts","Tooltip","content","Badge","isRead","IN_PROGRESS","PAUSED","RHELAZURE","getStatusColor","getStatusText","UnknownError","formatAvailibilityErrors","values","authentications","display_name","getStatusTooltipText","availabilityFormatter","_status","availability_status_error","statusesCount","errorsCount","auth","authtype","getAllErrors","paused_at","isSourceAzureRHEL","Popover","showClose","bodyContent","Label","color","icon","ApplicationLabel","showStatusText","statusText","getStatusTooltipTextApp","headerContent","EnhancedLabelGroup","LabelGroup","numLabels","collapsedText","remaining","isRequired","applicationFormatter","apps","item","application","resource_type","getAppStatus","sort","a","b","localeCompare","configurationModeFormatter","mode","superKeyType","authentication","is_superkey","superKeyAuth","position","fill","Button","isInline"],"sourceRoot":""}