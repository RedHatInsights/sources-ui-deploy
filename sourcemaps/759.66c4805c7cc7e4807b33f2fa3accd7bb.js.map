{"version":3,"file":"js/759.069d7cfa76748b8b5204.js","mappings":"gTAeA,MAiGA,EAjGuB,KACrB,MAAMA,GAAO,UACPC,GAAW,UACX,OAAEC,IAAW,IAAAC,aACbC,GAAS,SAETC,GAAW,SAAY,EAAGC,aAAcA,EAAQD,WAChDE,GAAW,UAEXC,EAAcJ,EAAOK,cAAcC,MAAK,EAAGC,QAASA,IAAOT,IAEjE,IAAKM,EACH,OAAO,kBAAC,IAAW,CAACI,IAAI,QAAe,IAAM,KAAOC,cAAcC,KAAMV,EAAOO,MAGjF,MAAMI,EAAUV,EAASK,MAAK,EAAGC,QAASA,IAAOH,GAAaQ,sBAExDC,EAAM,CACVN,GAAIT,EACJgB,aAAcH,GAASG,aACvBC,uBAAwBJ,GAASI,uBACjCC,gBAAiBhB,EAAOK,aAAaY,KACnC,EAAGL,yBAA0BX,EAASK,MAAK,EAAGC,QAASA,IAAOK,KAAsBE,gBAIlFI,EAAW,IAAMrB,GAAS,QAAe,KAAOY,cAAcC,KAAMV,EAAOO,KAG3EY,EAAgBR,GAASI,uBAC5BE,KAAKG,IACJ,MAAMT,EAAUV,EAASK,MAAK,EAAGe,UAAWA,IAASD,IAErD,OAAOpB,GAAQK,cAAcC,MAAK,EAAGM,yBAA0BA,IAAwBD,EAAQJ,MAAOI,GAASG,YAAY,IAE5HQ,OAAOC,SAEV,OACE,kBAAC,EAAAC,MAAK,CACJC,UAAU,UACVC,QAAQ,EACRC,QAAST,EACTU,QAAQ,QAAO,aACHhC,EAAKiC,cAAc,CAC7BtB,GAAI,yBACJuB,eAAgB,wBAElBC,OACE,kBAAC,EAAAC,MAAK,CAACC,aAAa,KAAKC,KAAK,MAAMT,UAAU,WAC5C,kBAAC,IAAuB,CAACS,KAAK,KAAKT,UAAU,gDAC5C7B,EAAKiC,cAAc,CAClBtB,GAAI,yBACJuB,eAAgB,yBAItBK,QAAS,CACP,kBAAC,EAAAC,OAAM,CAAC7B,GAAG,eAAe8B,IAAI,SAAST,QAAQ,SAASU,KAAK,SAASC,QA9B3D,KAAM,OAAgB1B,EAAKjB,EAAMsB,EAAUf,EAAUH,IA+B7DJ,EAAKiC,cAAc,CAClBtB,GAAI,iBACJuB,eAAgB,YAGpB,kBAAC,EAAAM,OAAM,CAAC7B,GAAG,eAAe8B,IAAI,SAAST,QAAQ,OAAOU,KAAK,SAASC,QAASrB,GAC1EtB,EAAKiC,cAAc,CAClBtB,GAAI,iBACJuB,eAAgB,cAKtB,kBAAC,EAAAU,YAAW,KACV,kBAAC,EAAAC,KAAI,CAACC,UAAW,EAAAC,aAAaC,GAC3BhD,EAAKiC,cACJ,CACEtB,GAAI,2BACJuB,eAAgB,sDAElB,CAAEV,QAAS,uBAAGiB,IAAI,KAAKxB,EAAIC,iBAG9BK,EAAc0B,OAAS,GACtB,kBAAC,EAAAJ,KAAI,CAACC,UAAW,EAAAC,aAAaC,GAC3BhD,EAAKiC,cACJ,CACEtB,GAAI,2BACJuB,eAAgB,yDAElB,CAAEgB,KAAM3B,MAMnB,C,kDC3GH,MAuBA,EAvBwB,CAACN,EAAKjB,EAAMsB,EAAUf,EAAUH,KACtD,MAAM+C,EAAenD,EAAKiC,cACxB,CACEtB,GAAI,2BACJuB,eAAgB,0CAElB,CACET,KAAMR,EAAIC,eAGRkC,EAAapD,EAAKiC,cACtB,CACEtB,GAAI,yBACJuB,eAAgB,uEAElB,CACET,KAAMR,EAAIC,eAId,OADAI,GAAYA,IACLf,GAAS,QAAkBU,EAAIN,GAAIP,EAAOO,GAAIwC,EAAcC,GAAY,C,6DCnB1E,MAAMC,EAAiB,KAC5B,MAAMpD,GAAW,IAAAqD,eAEjB,MAAO,CAAC1C,EAAI2C,IACHtD,GAAS,OAAgBW,EAAI,KAAe2C,EACpD,C","sources":["webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/hooks/useAppNavigate.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\n\nimport { Button, Modal, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { replaceRouteId, routes } from '../../Routing';\nimport { useAppNavigate } from '../../hooks/useAppNavigate';\nimport AppNavigate from '../AppNavigate';\n\nconst RemoveAppModal = () => {\n  const intl = useIntl();\n  const navigate = useAppNavigate();\n  const { app_id } = useParams();\n  const source = useSource();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const dispatch = useDispatch();\n\n  const application = source.applications?.find(({ id }) => id === app_id);\n\n  if (!application) {\n    return <AppNavigate to={replaceRouteId('/' + routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const appType = appTypes.find(({ id }) => id === application?.application_type_id);\n\n  const app = {\n    id: app_id,\n    display_name: appType?.display_name,\n    dependent_applications: appType?.dependent_applications,\n    sourceAppsNames: source.applications.map(\n      ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name,\n    ),\n  };\n\n  const onCancel = () => navigate(replaceRouteId(routes.sourcesDetail.path, source.id));\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  const dependentApps = appType?.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return source?.applications?.find(({ application_type_id }) => application_type_id === appType.id) && appType?.display_name;\n    })\n    .filter(Boolean);\n\n  return (\n    <Modal\n      className=\"sources\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\" className=\"sources\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert src-c-delete-icon pf-v5-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> },\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps },\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nexport default RemoveAppModal;\n","import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    },\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    },\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import { useNavigate } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../utilities/utils';\n\nexport const useAppNavigate = () => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n"],"names":["intl","navigate","app_id","useParams","source","appTypes","sources","dispatch","application","applications","find","id","to","sourcesDetail","path","appType","application_type_id","app","display_name","dependent_applications","sourceAppsNames","map","onCancel","dependentApps","appName","name","filter","Boolean","Modal","className","isOpen","onClose","variant","formatMessage","defaultMessage","header","Title","headingLevel","size","actions","Button","key","type","onClick","TextContent","Text","component","TextVariants","p","length","apps","titleSuccess","titleError","useAppNavigate","useNavigate","options"],"sourceRoot":""}