{"version":3,"file":"js/764.53a749997e23be9bad6e.js","mappings":"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","sources":["webpack:///./src/components/ErrorBoundary.js","webpack:///./src/components/PermissionsChecker.js","webpack:///./src/redux/user/actions.js","webpack:///./src/components/DataLoader.js","webpack:///./src/components/NavigationListener.js","webpack:///./src/frontend-components-copies/getBaseName.js","webpack:///./src/App.js","webpack:///./src/Routes.js","webpack:///./src/frontend-components-copies/interceptors.js","webpack:///./src/api/constants.js","webpack:///./src/api/entities.js","webpack:///./src/api/handleError.js","webpack:///./src/components/CloudTiles/CloudCards.js","webpack:///./src/components/SourcesTable/loaders.js","webpack:///./src/components/constants.js","webpack:///./src/redux/sources/actionTypes.js","webpack:///./src/api/checkAccountHCS.js","webpack:///./src/redux/sources/actions.js","webpack:///./src/api/source_types.js","webpack:///./src/redux/user/actionTypes.js","webpack:///./src/utilities/constants.js","webpack:///./src/utilities/intlShared.js","webpack:///./src/redux/sources/reducer.js","webpack:///./src/redux/user/reducer.js","webpack:///./src/utilities/store.js","webpack:///./src/utilities/tryAgainMessage.js","webpack:///./src/utilities/urlQuery.js","webpack:///./src/views/formatters.js","webpack:///./src/views/sourcesViewDefinition.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport { addMessage } from '../redux/sources/actions';\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error, errorInfo) {\n    return { error, errorInfo };\n  }\n\n  componentDidCatch(error) {\n    const sentryId = Sentry.captureException(error);\n    this.props.dispatch(\n      addMessage({\n        title: `${error.toString()} (Sentry ID: ${sentryId})`,\n        variant: 'danger',\n        description: error.stack,\n      })\n    );\n  }\n\n  render() {\n    const { error } = this.state;\n    const { children } = this.props;\n\n    if (error) {\n      return <Fragment>Error occurred</Fragment>;\n    }\n\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nErrorBoundary.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default connect()(ErrorBoundary);\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { loadOrgAdmin, loadWritePermissions } from '../redux/user/actions';\n\nconst PermissionsChecker = ({ children }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    Promise.all([dispatch(loadWritePermissions()), dispatch(loadOrgAdmin())]);\n  }, []);\n\n  return children;\n};\n\nexport default PermissionsChecker;\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const loadWritePermissions = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING });\n\n  return insights.chrome\n    .getUserPermissions('sources', true) // bypassCache = true\n    .then((permissions) => {\n      const allPermission = permissions.reduce((acc, curr) => [...acc, curr?.permission], []);\n      const writePermissions = allPermission.includes('sources:*:*') || allPermission.includes('sources:*:write');\n\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED,\n        payload: writePermissions,\n      });\n    })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      })\n    );\n};\n\nexport const loadOrgAdmin = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.SET_ORG_ADMIN_PENDING });\n\n  return insights.chrome.auth\n    .getUser()\n    .then(\n      ({\n        identity: {\n          user: { is_org_admin },\n        },\n      }) => {\n        dispatch({\n          type: ACTION_TYPES.SET_ORG_ADMIN_FULFILLED,\n          payload: is_org_admin,\n        });\n      }\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.SET_ORG_ADMIN_REJECTED,\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: \"Cannot get user's credentials\",\n          },\n        },\n      })\n    );\n};\n","import { useEffect, useRef } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\n\nimport { loadAppTypes, loadEntities, loadHcsEnrollment, loadSourceTypes } from '../redux/sources/actions';\nimport { loadEnhancedAttributes, parseQuery, updateQuery } from '../utilities/urlQuery';\n\nconst DataLoader = () => {\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n  const previousPathname = useRef(pathname);\n\n  useEffect(() => {\n    const { applications, types } = loadEnhancedAttributes();\n\n    if (applications || types) {\n      Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadHcsEnrollment())]).then(() =>\n        dispatch(loadEntities(parseQuery))\n      );\n    } else {\n      Promise.all([\n        dispatch(loadSourceTypes()),\n        dispatch(loadAppTypes()),\n        dispatch(loadEntities(parseQuery)),\n        dispatch(loadHcsEnrollment()),\n      ]);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (previousPathname.current !== pathname) {\n      updateQuery(sources);\n      previousPathname.current = pathname;\n    }\n  }, [pathname]);\n\n  return null;\n};\n\nexport default DataLoader;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { routes } from '../Routes';\n\nconst NavigationListener = () => {\n  const history = useHistory();\n\n  useEffect(() => {\n    try {\n      insights.chrome.init();\n      insights.chrome.identifyApp('sources');\n      const unregister = insights.chrome.on(\n        'APP_NAVIGATION',\n        (event) =>\n          (event.navId.split('/').pop() || event.domEvent?.href.split('/').pop()) === 'sources' &&\n          history.push(routes.sources.path)\n      );\n\n      return () => unregister?.();\n    } catch (_exception) {\n      // eslint-disable-next-line no-console\n      console.warn('Failed to initialize chrome navigation.');\n    }\n  }, []);\n\n  return null;\n};\n\nexport default NavigationListener;\n","export const getBaseName = (pathname, level = 2) => {\n  let release = '/';\n  const pathName = pathname.replace(/(#|\\?).*/, '').split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return [...new Array(level)].reduce((acc, _curr, key) => {\n    return `${acc}${pathName[key] || ''}${key < level - 1 ? '/' : ''}`;\n  }, release);\n};\n","import React, { useEffect } from 'react';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './Routes';\n\nimport './App.scss';\nimport './styles/authSelect.scss';\nimport './styles/cardSelect.scss';\nimport './styles/costManagement.scss';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PermissionsChecker from './components/PermissionsChecker';\nimport DataLoader from './components/DataLoader';\nimport { CLOUD_CARDS_KEY } from './components/CloudTiles/CloudCards';\nimport NavigationListener from './components/NavigationListener';\n\nimport { getBaseName } from './frontend-components-copies/getBaseName';\n\nconst App = () => {\n  useEffect(() => {\n    return () => {\n      sessionStorage.removeItem(CLOUD_CARDS_KEY);\n    };\n  }, []);\n\n  return (\n    <Router basename={getBaseName(location.pathname, 1)}>\n      <IntlProvider locale=\"en\">\n        <React.Fragment>\n          <NotificationsPortal />\n          <ErrorBoundary>\n            <PermissionsChecker>\n              <Main style={{ padding: 0 }}>\n                <DataLoader />\n                <NavigationListener />\n                <Routes />\n              </Main>\n            </PermissionsChecker>\n          </ErrorBoundary>\n        </React.Fragment>\n      </IntlProvider>\n    </Router>\n  );\n};\n\nexport default App;\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AppPlaceholder } from './components/SourcesTable/loaders';\n\nconst SourcesPage = lazy(() => import(/* webpackChunkName: \"sourcesPage\" */ './pages/Sources'));\nconst SourceDetail = lazy(() => import(/* webpackChunkName: \"sourceDetail\" */ './pages/Detail'));\n\nexport const routes = {\n  sources: {\n    path: '/sources',\n  },\n  sourcesNew: {\n    path: '/sources/new',\n    writeAccess: true,\n  },\n  sourcesRemove: {\n    path: '/sources/remove/:id',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetail: {\n    path: '/sources/detail/:id',\n    redirectNoId: true,\n  },\n  sourcesDetailRename: {\n    path: '/sources/detail/:id/rename',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemove: {\n    path: '/sources/detail/:id/remove',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n  sourcesDetailAddApp: {\n    path: '/sources/detail/:id/add_app/:app_type_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailRemoveApp: {\n    path: '/sources/detail/:id/remove_app/:app_id',\n    redirectNoId: true,\n    writeAccess: true,\n    noPaused: true,\n  },\n  sourcesDetailEditCredentials: {\n    path: '/sources/detail/:id/edit_credentials',\n    redirectNoId: true,\n    writeAccess: true,\n  },\n};\n\nexport const replaceRouteId = (path, id) => path.replace(':id', id);\n\nconst Routes = () => (\n  <Suspense fallback={<AppPlaceholder />}>\n    <Switch>\n      <Route path={routes.sourcesDetail.path} component={SourceDetail} />\n      <Route component={SourcesPage} />\n    </Switch>\n  </Suspense>\n);\n\nexport default Routes;\n","import axios from 'axios';\nimport { captureException, configureScope } from '@sentry/minimal';\n\nexport async function authInterceptor(config) {\n  await window.insights.chrome.auth.getUser();\n  return config;\n}\n\nexport function responseDataInterceptor(response) {\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}\n\nexport function interceptor401(error) {\n  if (error.response && error.response.status === 401) {\n    window.insights.chrome.auth.logout();\n    return false;\n  }\n\n  throw error;\n}\n\nexport function interceptor500(error) {\n  if (error.response && error.response.status >= 500 && error.response.status < 600) {\n    configureScope((scope) => {\n      scope.setTag('request_id', error.response.req_id);\n    });\n  }\n\n  throw error;\n}\n\nexport function errorInterceptor(err) {\n  if (!axios.isCancel(err)) {\n    try {\n      const errObject = { ...err };\n      if (errObject.response && errObject.response.data) {\n        throw errObject.response.data;\n      }\n\n      throw err;\n    } catch (customError) {\n      const sentryId = captureException(customError);\n      customError.sentryId = sentryId;\n      throw customError;\n    }\n  }\n}\n","export const SOURCES_API_BASE_V3 = `${process.env.BASE_PATH || '/api'}/sources/v3.1`;\n","import axios from 'axios';\n\nimport * as interceptors from '../frontend-components-copies/interceptors';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\nimport { AVAILABLE, PARTIALLY_UNAVAILABLE, UNAVAILABLE } from '../views/formatters';\n\nimport { SOURCES_API_BASE_V3 } from './constants';\n\nexport const graphQlErrorInterceptor = (response) => {\n  if (response.errors && response.errors.length > 0) {\n    return Promise.reject({ detail: response.errors[0].message });\n  }\n\n  return response;\n};\n\nexport const interceptor403 = (error) => {\n  if (error.errors && error.errors[0].status === 403) {\n    return Promise.reject({\n      detail: error.errors[0].detail,\n      title: 'Forbidden access',\n    });\n  }\n\n  throw error;\n};\n\nconst axiosInstanceInsights = axios.create();\naxiosInstanceInsights.interceptors.request.use(interceptors.authInterceptor);\naxiosInstanceInsights.interceptors.response.use(interceptors.responseDataInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor401);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.interceptor500);\naxiosInstanceInsights.interceptors.response.use(null, interceptors.errorInterceptor);\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\naxiosInstanceInsights.interceptors.response.use(null, interceptor403);\n\nexport { axiosInstanceInsights as axiosInstance };\n\nexport const getSourcesApi = () => ({\n  checkAvailabilitySource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/check_availability`),\n  updateSource: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/sources/${id}`, data),\n  updateEndpoint: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/endpoints/${id}`, data),\n  createEndpoint: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/endpoints`, data),\n  updateAuthentication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/authentications/${id}`, data),\n  createAuthentication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/authentications`, data),\n  showSource: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  listSourceEndpoints: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/endpoints`),\n  listSourceApplications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/applications`),\n  listEndpointAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}/authentications`),\n  deleteSource: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/sources/${id}`),\n  createApplication: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications`, data),\n  postGraphQL: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/graphql`, data),\n  listSourceTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/source_types`),\n  doLoadAppTypes: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types`),\n  deleteApplication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  createAuthApp: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/application_authentications`, data),\n  deleteAuthentication: (id) => axiosInstanceInsights.delete(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  showAuthentication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/authentications/${id}`),\n  updateApplication: (id, data) => axiosInstanceInsights.patch(`${SOURCES_API_BASE_V3}/applications/${id}`, data),\n  showApplication: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/applications/${id}`),\n  listSourceAuthentications: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/sources/${id}/authentications`),\n  createSource: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources`, data),\n  getEndpoint: (id) => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/endpoints/${id}`),\n  getGoogleAccount: () => axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=gcp_service_account`),\n  bulkCreate: (data) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/bulk_create`, data),\n  pauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/pause`),\n  unpauseApplication: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/applications/${id}/unpause`),\n  pauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/pause`),\n  unpauseSource: (id) => axiosInstanceInsights.post(`${SOURCES_API_BASE_V3}/sources/${id}/unpause`),\n  getLighthouseLink: () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=azure_lighthouse_template`),\n  getProvAppType: () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE_V3}/application_types?filter[name]=/insights/platform/provisioning`),\n  getProvMetadata: (provAppTypeId) =>\n    axiosInstanceInsights.get(\n      `${SOURCES_API_BASE_V3}/app_meta_data?filter[name]=aws_wizard_account_number&application_type_id=${provAppTypeId}`\n    ),\n});\n\nexport const doLoadAppTypes = () => getSourcesApi().doLoadAppTypes();\n\nexport const doRemoveSource = (sourceId) =>\n  getSourcesApi()\n    .deleteSource(sourceId)\n    .catch((error) => {\n      throw { error: { detail: error.errors[0].detail } };\n    });\n\nexport const pagination = (pageSize, pageNumber) => `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) => {\n  if (!sortBy) {\n    return '';\n  }\n\n  if (sortBy === 'source_type_id') {\n    return `sort_by: { name: \"source_type.product_name\", direction: ${sortDirection} }`;\n  }\n\n  if (sortBy === 'applications') {\n    return `sort_by: { name: \"applications\", direction: ${sortDirection} }`;\n  }\n\n  return `sort_by: { name: \"${sortBy}\", direction: ${sortDirection} }`;\n};\n\nexport const filtering = (filterValue = {}, category) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`{ name: \"name\", operation: \"contains_i\", value: \"${filterValue.name}\" }`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterQueries.push(\n      `{ name: \"source_type_id\", operation: \"eq\", value: [${filterValue.source_type_id.map((x) => `\"${x}\"`).join(', ')}] }`\n    );\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterQueries.push(\n      `{ name: \"applications.application_type_id\", operation: \"eq\", value: [${filterValue.applications\n        .map((x) => `\"${x}\"`)\n        .join(', ')}] }`\n    );\n  }\n\n  if (category === CLOUD_VENDOR) {\n    filterQueries.push(`{ name: \"source_type.category\", operation: \"eq\", value: \"Cloud\" }`);\n  }\n\n  if (category === REDHAT_VENDOR) {\n    filterQueries.push(`{ name: \"source_type.category\", operation: \"eq\", value: \"Red Hat\" }`);\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`{ name: \"availability_status\", operation: \"eq\", value: \"${AVAILABLE}\" }`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(\n        `{ name: \"availability_status\", operation: \"eq\", value: [\"${PARTIALLY_UNAVAILABLE}\", \"${UNAVAILABLE}\"] }`\n      );\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return `filter: [ ${filterQueries.join(', ')} ]`;\n  }\n\n  return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    imported,\n    availability_status,\n    source_ref,\n    last_checked_at,\n    updated_at,\n    last_available_at,\n    app_creation_workflow,\n    paused_at,\n    authentications { authtype, username, availability_status_error, availability_status }\n    applications { application_type_id, id, availability_status_error, availability_status, paused_at, authentications { id, resource_type } },\n    endpoints { id, scheme, host, port, path, receptor_node, role, certificate_authority, verify_ssl, availability_status_error, availability_status, authentications { authtype, availability_status, availability_status_error } }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory }) => {\n  const filter = filtering(filterValue, activeCategory);\n\n  const filterSection = [pagination(pageSize, pageNumber), sorting(sortBy, sortDirection), filter].join(',');\n\n  return getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(${filterSection})\n      { ${graphQlAttributes} },\n     meta{count}\n    }`,\n    })\n    .then(({ data }) => data);\n};\n\nexport const doCreateApplication = (data) => getSourcesApi().createApplication(data);\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n  getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => {\n      throw { error: { title: errorMessage, detail } };\n    });\n\nexport const restFilterGenerator = (filterValue = {}, category) => {\n  let filterQueries = [];\n\n  if (filterValue.name) {\n    filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n  }\n\n  if (filterValue.source_type_id?.length > 0) {\n    filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n  }\n\n  if (filterValue.applications?.length > 0) {\n    filterValue.applications.map((id) => filterQueries.push(`filter[applications][application_type_id][eq][]=${id}`));\n  }\n\n  if (category === CLOUD_VENDOR) {\n    filterQueries.push(`filter[source_type][category]=Cloud`);\n  }\n\n  if (category === REDHAT_VENDOR) {\n    filterQueries.push('filter[source_type][category]=Red Hat');\n  }\n\n  const status = filterValue.availability_status?.[0];\n  if (status) {\n    if (status === AVAILABLE) {\n      filterQueries.push(`filter[availability_status]=${AVAILABLE}`);\n    } else if (status === UNAVAILABLE) {\n      filterQueries.push(`filter[availability_status][]=${PARTIALLY_UNAVAILABLE}`);\n      filterQueries.push(`filter[availability_status][]=${UNAVAILABLE}`);\n    }\n  }\n\n  if (filterQueries.length > 0) {\n    return filterQueries.join('&');\n  }\n\n  return '';\n};\n\nexport const doLoadSource = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { name: \"id\", operation: \"eq\", value: \"${id}\" })\n            { ${graphQlAttributes} }\n        }`,\n    })\n    .then(({ data }) => data);\n\nexport const doLoadApplicationsForEdit = (id) =>\n  getSourcesApi()\n    .postGraphQL({\n      query: `{ sources(filter: { name: \"id\", operation: \"eq\", value: \"${id}\" })\n          { applications {\n              application_type_id,\n              id,\n              availability_status_error,\n              availability_status,\n              paused_at,\n              extra,\n              authentications {\n                  id\n              }\n          } }\n      }`,\n    })\n    .then(({ data }) => data);\n\nexport const doDeleteAuthentication = (id) => getSourcesApi().deleteAuthentication(id);\n","import { getSourcesApi } from './entities';\nimport get from 'lodash/get';\n\nexport const handleError = (error, sourceId = undefined) => {\n  let errorMessage;\n\n  if (!error) {\n    errorMessage = 'Undefined error';\n  }\n\n  if (!errorMessage && typeof error === 'string') {\n    errorMessage = error;\n  }\n\n  if (!errorMessage) {\n    errorMessage = get(error, 'errors[0].detail', JSON.stringify(error, null, 2));\n  }\n\n  if (!sourceId) {\n    return errorMessage;\n  }\n\n  return getSourcesApi()\n    .deleteSource(sourceId)\n    .then(() => errorMessage)\n    .catch((errorDelete) => {\n      const errorDeleteDetail = get(errorDelete, 'errors[0].detail', JSON.stringify(errorDelete, null, 2));\n\n      return `${errorMessage}. The source was not removed, try remove it later: ${errorDeleteDetail}`;\n    });\n};\n\nexport default handleError;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport {\n  Card,\n  CardBody,\n  CardExpandableContent,\n  CardHeader,\n  CardTitle,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\n\nimport ArrowRightIcon from '@patternfly/react-icons/dist/esm/icons/arrow-right-icon';\nimport BuilderImageIcon from '@patternfly/react-icons/dist/esm/icons/builder-image-icon';\nimport TrendUpIcon from '@patternfly/react-icons/dist/esm/icons/trend-up-icon';\nimport ListIcon from '@patternfly/react-icons/dist/esm/icons/list-icon';\n\nconst PREFIX = insights.chrome.isBeta() ? 'beta/' : '';\n\nconst GOLD_IMAGES_AWS =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-aws_cloud-access';\nconst GOLD_IMAGES_AZURE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access#using-gold-images-on-azure_cloud-access';\nconst GOLD_IMAGES_MORE =\n  'https://access.redhat.com/documentation/en-us/red_hat_subscription_management/2023/html/red_hat_cloud_access_reference_guide/understanding-gold-images_cloud-access';\nconst INSIGHTS_REF = 'https://www.redhat.com/en/technologies/management/insights';\nconst INSIGHTS_SERVICES = `/${PREFIX}settings/connector`;\nconst SUBWATCH_HREF = `/${PREFIX}insights/subscriptions/rhel`;\nconst SUBWATCH_MORE_HREF = 'https://access.redhat.com/products/subscription-central';\n\nexport const CLOUD_CARDS_KEY = 'ins-c-sources__cloud_cards_expanded';\n\nconst CloudCards = () => {\n  const [isExpanded, setExpanded] = useState(() => {\n    const session = sessionStorage.getItem(CLOUD_CARDS_KEY);\n\n    return session ? session === 'true' : true;\n  });\n  const intl = useIntl();\n\n  useEffect(() => {\n    sessionStorage.setItem(CLOUD_CARDS_KEY, isExpanded);\n  }, [isExpanded]);\n\n  return (\n    <Card isExpanded={isExpanded} className=\"pf-u-mb-lg pf-u-mt-md pf-u-mt-0-on-md src-c-card-info\">\n      <CardHeader onExpand={() => setExpanded(!isExpanded)}>\n        <CardTitle>{intl.formatMessage({ id: 'cloud.nowWhat', defaultMessage: 'I connected to cloud. Now what?' })}</CardTitle>\n      </CardHeader>\n      <CardExpandableContent>\n        <CardBody>\n          <TextContent>\n            <Grid hasGutter>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <BuilderImageIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"Builder image icon\" />\n                      {intl.formatMessage({ id: 'cloud.goldImages', defaultMessage: 'Use gold images' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.description',\n                        defaultMessage:\n                          'Connecting to Amazon Web Services or Microsoft Azure unlocks automatic access to Red Hat gold images. View gold images in your provider console.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AWS} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.awsLink',\n                        defaultMessage: 'Use Red Hat gold images on AWS',\n                      })}\n                    </Text>\n                    <br />\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_AZURE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.azureLink',\n                        defaultMessage: 'Use Red Hat gold images on Microsoft Azure',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={GOLD_IMAGES_MORE} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.goldImages.moreLink',\n                        defaultMessage: 'Learn more about Red Hat gold images',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <TrendUpIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"Trend up icon\" />\n                      {intl.formatMessage({ id: 'cloud.insights', defaultMessage: 'Explore Red Hat Insights' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.description',\n                        defaultMessage:\n                          'Use RHEL instances in the cloud and gain other value-add services, such as predictive analytics.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_REF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.insightsLinkt',\n                        defaultMessage: 'Learn more about Red Hat Insights',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={INSIGHTS_SERVICES} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.insights.moreLink',\n                        defaultMessage: 'Enable additional Insights services',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n              <GridItem md={4}>\n                <Stack>\n                  <StackItem className=\"pf-u-mb-sm\">\n                    <Text className=\"src-c-card-info__header\">\n                      <ListIcon className=\"pf-u-mr-sm\" color=\"#0066cc\" aria-label=\"List icon\" />\n                      {intl.formatMessage({ id: 'cloud.subwatch', defaultMessage: 'Track usage with Subscriptions' })}\n                    </Text>\n                  </StackItem>\n                  <StackItem isFilled>\n                    <Text className=\"text pf-u-mb-sm\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.description',\n                        defaultMessage:\n                          'Use the Subscriptions service to monitor account-level summaries of your Red Hat subscription profile.',\n                      })}\n                    </Text>\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_MORE_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.learnMore',\n                        defaultMessage: 'Learn more about Subscriptions',\n                      })}\n                    </Text>\n                  </StackItem>\n                  <StackItem className=\"pf-u-mt-lg\">\n                    <Text className=\"text\" component=\"a\" href={SUBWATCH_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {intl.formatMessage({\n                        id: 'cloud.subwatch.goTo',\n                        defaultMessage: 'Go to Subscriptions',\n                      })}\n                      <ArrowRightIcon className=\"pf-u-ml-sm\" />\n                    </Text>\n                  </StackItem>\n                </Stack>\n              </GridItem>\n            </Grid>\n          </TextContent>\n        </CardBody>\n      </CardExpandableContent>\n    </Card>\n  );\n};\n\nexport default React.memo(CloudCards);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\nimport { Bullseye, Card, CardBody, Grid, GridItem, Spinner } from '@patternfly/react-core';\n\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nimport './loaders.scss';\nimport { useIntl } from 'react-intl';\n\nexport const Loader = ({ width = '100%', height = '100%', className = '' }) => (\n  <span className={`src-c-loader ${className}`} style={{ width, height }} role=\"progressbar\" />\n);\n\nLoader.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport const AppPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        <div className=\"src-c-fake_content pf-u-p-lg\">\n          <Loader />\n        </div>\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport const PaginationLoader = () => <Loader className=\"top-pagination\" height={30} width={200} />;\n\nexport const PlaceHolderTable = () => (\n  <Bullseye className=\"src-c-bullseye__placeholder-loader\" data-testid=\"placeholder-table\">\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) =>\n  isDeleting ? (\n    <tr>\n      <td colSpan={COLUMN_COUNT} className=\"pf-u-p-md\" data-testid=\"removing-row\">\n        <Loader height={100} />\n      </td>\n    </tr>\n  ) : (\n    <RowWrapper {...initialProps} row={row} className=\"src-c-row-vertical-centered\" data-testid=\"row\" />\n  );\n\nRowWrapperLoader.propTypes = {\n  row: PropTypes.object.isRequired,\n};\n\nexport const CardLoader = (props) => (\n  <Card className=\"pf-u-m-md\">\n    <CardBody>\n      <Loader {...props} />\n    </CardBody>\n  </Card>\n);\n\nexport const DetailLoader = () => (\n  <div className=\"src-c-detail-page\">\n    <PageHeader>\n      <Loader height={96} />\n    </PageHeader>\n    <Grid>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"6\">\n        <CardLoader height={218} />\n      </GridItem>\n      <GridItem md=\"12\">\n        <CardLoader height={324} />\n      </GridItem>\n    </Grid>\n  </div>\n);\n","// app_creation_workflow constants\nexport const MANUAL_CONFIGURATION = 'manual_configuration';\nexport const ACCOUNT_AUTHORIZATION = 'account_authorization';\n","export const ACTION_TYPES = [\n  'LOAD_ENTITIES',\n  'CREATE_SOURCE',\n  'REMOVE_SOURCE',\n  'LOAD_HCS_ENROLLMENT',\n  'LOAD_SOURCE_TYPES',\n  'LOAD_APP_TYPES',\n  'REMOVE_APPLICATION',\n  'RENAME_SOURCE',\n].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n\nexport const SORT_ENTITIES = 'SORT_ENTITIES';\nexport const PAGE_AND_SIZE = 'PAGE_AND_SIZE';\nexport const FILTER_SOURCES = 'FILTER_SOURCES';\nexport const ADD_APP_TO_SOURCE = 'ADD_APP_TO_SOURCE';\nexport const SET_COUNT = 'SET_COUNT';\nexport const ADD_HIDDEN_SOURCE = 'ADD_HIDDEN_SOURCE';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const SET_CATEGORY = 'SET_CATEGORY';\nexport const STATUS_CHECK_PENDING = 'STATUS_CHECK_PENDING';\n","export const checkAccountHCS = async () => {\n  const jwtToken = await insights.chrome.auth.getToken();\n  return fetch(`https://billing.${insights.chrome.isProd() ? '' : 'stage.'}api.redhat.com/v1/authorization/hcsEnrollment`, {\n    headers: { Authorization: `Bearer ${jwtToken}` },\n  }).then((response) => {\n    if (response.status !== 200) {\n      console.error(`Failed to verify HCS enrollment: ${response.statusText}`);\n      return { hcsDeal: false };\n    }\n\n    return response.json();\n  });\n};\n","import React from 'react';\n\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\nimport PlayIcon from '@patternfly/react-icons/dist/esm/icons/play-icon';\n\nimport { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport {\n  ACTION_TYPES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  FILTER_SOURCES,\n  PAGE_AND_SIZE,\n  SET_CATEGORY,\n  SORT_ENTITIES,\n  STATUS_CHECK_PENDING,\n} from './actionTypes';\nimport { doDeleteApplication, doLoadAppTypes, doLoadEntities, doRemoveSource, getSourcesApi } from '../../api/entities';\nimport { doLoadSourceTypes } from '../../api/source_types';\nimport { bold } from '../../utilities/intlShared';\nimport handleError from '../../api/handleError';\nimport tryAgainMessage from '../../utilities/tryAgainMessage';\nimport { checkAccountHCS } from '../../api/checkAccountHCS';\n\nexport const loadEntities = (options) => (dispatch, getState) => {\n  dispatch({\n    type: ACTION_TYPES.LOAD_ENTITIES_PENDING,\n    options: typeof options === 'function' ? options(getState) : options,\n  });\n\n  const { pageSize, pageNumber, sortBy, sortDirection, filterValue, activeCategory } = getState().sources;\n\n  return doLoadEntities({\n    pageSize,\n    pageNumber,\n    sortBy,\n    sortDirection,\n    filterValue,\n    activeCategory,\n  })\n    .then(({ sources, meta }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_FULFILLED,\n        payload: { sources, meta },\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_REJECTED,\n        meta: { noError: true },\n        payload: {\n          error: {\n            detail: error.detail || error.data,\n            title: error.title || 'Fetching data failed, try refresh page',\n          },\n        },\n      })\n    );\n};\n\nexport const loadSourceTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING });\n\n  return doLoadSourceTypes()\n    .then((sourceTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED,\n        payload: sourceTypes,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const loadHcsEnrollment = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_PENDING });\n\n  return checkAccountHCS()\n    .then(({ hcsDeal }) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_FULFILLED,\n        payload: hcsDeal,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_HCS_ENROLLMENT_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const loadAppTypes = () => (dispatch) => {\n  dispatch({ type: ACTION_TYPES.LOAD_APP_TYPES_PENDING });\n\n  return doLoadAppTypes()\n    .then((appTypes) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_FULFILLED,\n        payload: appTypes.data,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_REJECTED,\n        payload: { error },\n        meta: { noError: true },\n      })\n    );\n};\n\nexport const sortEntities = (column, direction) => (dispatch) => {\n  dispatch({\n    type: SORT_ENTITIES,\n    payload: { column, direction },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pageAndSize = (page, size) => (dispatch) => {\n  dispatch({\n    type: PAGE_AND_SIZE,\n    payload: { page, size },\n  });\n\n  return dispatch(loadEntities({ paginationClicked: true }));\n};\n\nexport const filterSources = (value) => (dispatch) => {\n  dispatch({\n    type: FILTER_SOURCES,\n    payload: { value },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const addMessage = (props) => (dispatch) =>\n  dispatch({\n    type: ADD_NOTIFICATION,\n    payload: {\n      dismissable: true,\n      ...props,\n    },\n  });\n\nexport const removeSource = (sourceId, title) => (dispatch) => {\n  dispatch({\n    type: ACTION_TYPES.REMOVE_SOURCE_PENDING,\n    meta: {\n      sourceId,\n    },\n  });\n\n  return doRemoveSource(sourceId)\n    .then(() => dispatch(loadEntities({ loaded: 0 })))\n    .then(() => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_FULFILLED,\n        meta: {\n          sourceId,\n        },\n      });\n      dispatch(addMessage({ title, variant: 'success' }));\n    })\n    .catch(() =>\n      dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_REJECTED,\n        meta: {\n          sourceId,\n        },\n      })\n    );\n};\n\nexport const removeMessage = (id) => ({\n  type: REMOVE_NOTIFICATION,\n  payload: id,\n});\n\nexport const removeApplication = (appId, sourceId, successTitle, errorTitle) => ({\n  type: ACTION_TYPES.REMOVE_APPLICATION,\n  payload: () => doDeleteApplication(appId, errorTitle),\n  meta: {\n    appId,\n    sourceId,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: successTitle,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const addAppToSource = (sourceId, app) => ({\n  type: ADD_APP_TO_SOURCE,\n  payload: {\n    sourceId,\n    app,\n  },\n});\n\nexport const addHiddenSource = (source) => ({\n  type: ADD_HIDDEN_SOURCE,\n  payload: {\n    source,\n  },\n});\n\nexport const setCheckPenging = (sourceId) => ({\n  type: STATUS_CHECK_PENDING,\n  payload: {\n    sourceId,\n  },\n});\n\nexport const clearFilters = () => (dispatch) => {\n  dispatch({\n    type: CLEAR_FILTERS,\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const renameSource = (id, name, errorTitle) => (dispatch, getState) => {\n  const oldName = getState().sources.entities.find((source) => source.id === id)?.name;\n\n  dispatch({ type: ACTION_TYPES.RENAME_SOURCE_PENDING, payload: { id, name } });\n\n  return getSourcesApi()\n    .updateSource(id, { name })\n    .catch((error) =>\n      dispatch({\n        type: ACTION_TYPES.RENAME_SOURCE_REJECTED,\n        payload: { error: { detail: error.errors?.[0]?.detail || error, title: errorTitle }, id, name: oldName },\n      })\n    );\n};\n\nexport const setActiveCategory = (category) => (dispatch) => {\n  dispatch({\n    type: SET_CATEGORY,\n    payload: { category },\n  });\n\n  return dispatch(loadEntities());\n};\n\nexport const pauseSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .pauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.title', defaultMessage: 'Source paused' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.paused.alert.description',\n              defaultMessage:\n                'Source <b>{ sourceName }</b> is now paused. Data collection for all connected applications will be disabled until the source is resumed.',\n            },\n            { sourceName, b: bold }\n          ),\n          variant: 'default',\n          customIcon: <PauseIcon />,\n        })\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.paused.alert.error', defaultMessage: 'Source pause failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        })\n      );\n    });\n};\n\nexport const resumeSource = (sourceId, sourceName, intl) => (dispatch) => {\n  return getSourcesApi()\n    .unpauseSource(sourceId)\n    .then(() => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resumed.alert.title', defaultMessage: 'Source resumed' }),\n          description: intl.formatMessage(\n            {\n              id: 'source.resumed.alert.description',\n              defaultMessage: 'Source <b>{ sourceName }</b> will recontinue data collection for connected applications.',\n            },\n            { sourceName, b: bold }\n          ),\n          variant: 'default',\n          customIcon: <PlayIcon />,\n        })\n      );\n      dispatch(loadEntities({ loaded: 0 }));\n    })\n    .catch((error) => {\n      dispatch(\n        addMessage({\n          title: intl.formatMessage({ id: 'source.resume.alert.error', defaultMessage: 'Source resume failed' }),\n          description: tryAgainMessage(intl, handleError(error)),\n          variant: 'danger',\n        })\n      );\n    });\n};\n","import { getSourcesApi } from './entities.js';\n\nexport const doLoadSourceTypes = () =>\n  getSourcesApi()\n    .listSourceTypes()\n    .then((data) => data.data);\n","export const ACTION_TYPES = ['SET_WRITE_PERMISSIONS', 'SET_ORG_ADMIN'].reduce(\n  (acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n  }),\n  {}\n);\n","export const HCS_NAME = 'hcs';\nexport const SATELLITE_NAME = 'satellite';\nexport const ANSIBLE_TOWER_NAME = 'ansible-tower';\nexport const AZURE_NAME = 'azure';\nexport const GOOGLE_NAME = 'google';\nexport const REDHAT_VENDOR = 'Red Hat';\nexport const CLOUD_VENDOR = 'Cloud';\nexport const TOPOLOGY_INV_NAME = '/insights/platform/topological-inventory';\nexport const COST_MANAGEMENT_APP_NAME = '/insights/platform/cost-management';\nexport const CLOUD_METER_APP_NAME = '/insights/platform/cloud-meter';\nexport const PROVISIONING_APP_NAME = '/insights/platform/provisioning';\nexport const CATALOG_APP = '/insights/platform/catalog';\nexport const OPENSHIFT_NAME = 'openshift';\n\nexport const HCS_APP_NAME = 'Hybrid Committed Spend';\nexport const COST_MANAGEMENT_APP_ID = '2'; // use only for Cost overwrite to HCS!\n\nexport const getActiveCategory = () => new URLSearchParams(window.location.search).get('activeCategory');\n\nexport const timeoutedApps = (appTypes) => [\n  appTypes.find(({ name }) => name === CLOUD_METER_APP_NAME)?.id,\n  appTypes.find(({ name }) => name === COST_MANAGEMENT_APP_NAME)?.id,\n];\n","import React from 'react';\n\nlet boldId = 0;\n\nexport const bold = (chunks) => <b key={`b-${chunks.length}-${boldId++}}`}>{chunks}</b>;\n","import {\n  ACTION_TYPES,\n  ADD_APP_TO_SOURCE,\n  ADD_HIDDEN_SOURCE,\n  CLEAR_FILTERS,\n  FILTER_SOURCES,\n  PAGE_AND_SIZE,\n  SET_CATEGORY,\n  SET_COUNT,\n  SORT_ENTITIES,\n  STATUS_CHECK_PENDING,\n} from './actionTypes';\nimport { CLOUD_VENDOR } from '../../utilities/constants';\n\nexport const defaultSourcesState = {\n  loaded: 0,\n  pageSize: 50,\n  pageNumber: 1,\n  entities: [],\n  numberOfEntities: 0,\n  appTypesLoaded: false,\n  sourceTypesLoaded: false,\n  filterValue: {},\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n  removingSources: [],\n  activeCategory: CLOUD_VENDOR,\n  appTypes: [],\n  sourceTypes: [],\n  hcsEnrolled: false,\n  hcsEnrolledLoaded: false,\n};\n\nexport const entitiesPending = (state, { options }) => ({\n  ...state,\n  loaded: state.loaded + 1,\n  paginationClicked: false,\n  ...options,\n});\n\nexport const entitiesLoaded = (state, { payload: { sources, meta }, options }) => ({\n  ...state,\n  loaded: Math.max(state.loaded - 1, 0),\n  entities: sources,\n  numberOfEntities: meta?.count,\n  ...options,\n});\n\nexport const entitiesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesPending = (state) => ({\n  ...state,\n  sourceTypes: [],\n  sourceTypesLoaded: false,\n});\n\nexport const sourceTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sourceTypesLoaded = (state, { payload: sourceTypes }) => ({\n  ...state,\n  sourceTypes,\n  sourceTypesLoaded: true,\n});\n\nexport const hcsEnrolledPending = (state) => ({\n  ...state,\n  hcsEnrolled: false,\n  hcsEnrolledLoaded: false,\n});\n\nexport const hcsEnrolledRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const hcsEnrolledLoaded = (state, { payload: hcsDeal }) => ({\n  ...state,\n  hcsEnrolled: hcsDeal,\n  hcsEnrolledLoaded: true,\n});\n\nexport const appTypesPending = (state) => ({\n  ...state,\n  appTypes: [],\n  appTypesLoaded: false,\n});\n\nexport const appTypesLoaded = (state, { payload: appTypes }) => ({\n  ...state,\n  appTypes,\n  appTypesLoaded: true,\n});\n\nexport const appTypesRejected = (state, { payload: { error } }) => ({\n  ...state,\n  fetchingError: error,\n});\n\nexport const sortEntities = (state, { payload: { column, direction } }) => ({\n  ...state,\n  sortBy: column,\n  sortDirection: direction,\n});\n\nexport const setPageAndSize = (state, { payload: { page, size } }) => ({\n  ...state,\n  pageSize: size,\n  pageNumber: page,\n});\n\nexport const filterSources = (state, { payload: { value } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    ...value,\n  },\n  pageNumber: 1,\n});\n\nexport const sourceEditRemovePending = (state, { meta }) => ({\n  ...state,\n  removingSources: [...state.removingSources, meta.sourceId],\n});\n\nexport const sourceEditRemoveFulfilled = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n  entities: state.entities.filter((entity) => entity.id !== meta.sourceId),\n});\n\nexport const sourceEditRemoveRejected = (state, { meta }) => ({\n  ...state,\n  removingSources: state.removingSources.filter((id) => id !== meta.sourceId),\n});\n\nexport const appRemovingPending = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: true,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingFulfilled = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.filter((app) => app.id !== meta.appId),\n        }\n      : entity\n  ),\n});\n\nexport const appRemovingRejected = (state, { meta }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === meta.sourceId\n      ? {\n          ...entity,\n          applications: entity.applications.map((app) =>\n            app.id === meta.appId\n              ? {\n                  ...app,\n                  isDeleting: undefined,\n                }\n              : app\n          ),\n        }\n      : entity\n  ),\n});\n\nexport const addAppToSource = (state, { payload: { sourceId, app } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          applications: [...entity.applications, app],\n        }\n      : entity\n  ),\n});\n\nexport const setCount = (state, { payload: { count } }) => ({\n  ...state,\n  numberOfEntities: count,\n});\n\nexport const addHiddenSource = (state, { payload: { source } }) => ({\n  ...state,\n  entities: [...state.entities, { ...source, hidden: true }],\n});\n\nexport const clearFilters = (state) => ({\n  ...state,\n  filterValue: {},\n  pageNumber: 1,\n});\n\nexport const sourceRenamePending = (state, { payload: { id, name } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === id\n      ? {\n          ...entity,\n          name,\n        }\n      : entity\n  ),\n});\n\nexport const sourceStatusCheckPending = (state, { payload: { sourceId } }) => ({\n  ...state,\n  entities: state.entities.map((entity) =>\n    entity.id === sourceId\n      ? {\n          ...entity,\n          isCheckPending: true,\n        }\n      : entity\n  ),\n});\n\nconst setCategory = (state, { payload: { category } }) => ({\n  ...state,\n  filterValue: {\n    ...state.filterValue,\n    source_type_id: [],\n    applications: [],\n  },\n  activeCategory: category,\n});\n\nexport default {\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n  [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n  [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: entitiesRejected,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING]: sourceTypesPending,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED]: sourceTypesLoaded,\n  [ACTION_TYPES.LOAD_SOURCE_TYPES_REJECTED]: sourceTypesRejected,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_PENDING]: hcsEnrolledPending,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_FULFILLED]: hcsEnrolledLoaded,\n  [ACTION_TYPES.LOAD_HCS_ENROLLMENT_REJECTED]: hcsEnrolledRejected,\n  [ACTION_TYPES.LOAD_APP_TYPES_PENDING]: appTypesPending,\n  [ACTION_TYPES.LOAD_APP_TYPES_FULFILLED]: appTypesLoaded,\n  [ACTION_TYPES.LOAD_APP_TYPES_REJECTED]: appTypesRejected,\n  [ACTION_TYPES.REMOVE_SOURCE_PENDING]: sourceEditRemovePending,\n  [ACTION_TYPES.REMOVE_SOURCE_FULFILLED]: sourceEditRemoveFulfilled,\n  [ACTION_TYPES.REMOVE_SOURCE_REJECTED]: sourceEditRemoveRejected,\n  [ACTION_TYPES.REMOVE_APPLICATION_PENDING]: appRemovingPending,\n  [ACTION_TYPES.REMOVE_APPLICATION_FULFILLED]: appRemovingFulfilled,\n  [ACTION_TYPES.REMOVE_APPLICATION_REJECTED]: appRemovingRejected,\n  [ACTION_TYPES.RENAME_SOURCE_PENDING]: sourceRenamePending,\n  [ACTION_TYPES.RENAME_SOURCE_REJECTED]: sourceRenamePending,\n\n  [SORT_ENTITIES]: sortEntities,\n  [PAGE_AND_SIZE]: setPageAndSize,\n  [FILTER_SOURCES]: filterSources,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [ADD_APP_TO_SOURCE]: addAppToSource,\n  [SET_COUNT]: setCount,\n  [ADD_HIDDEN_SOURCE]: addHiddenSource,\n  [STATUS_CHECK_PENDING]: sourceStatusCheckPending,\n  [CLEAR_FILTERS]: clearFilters,\n  [SET_CATEGORY]: setCategory,\n};\n","import { ACTION_TYPES } from './actionTypes';\n\nexport const defaultUserState = {\n  writePermissions: undefined,\n  isOrgAdmin: undefined,\n};\n\nexport const writePermissionsPending = (state) => ({\n  ...state,\n  writePermissions: undefined,\n});\n\nexport const writePermissionsLoaded = (state, { payload: writePermissions }) => ({\n  ...state,\n  writePermissions,\n});\n\nexport const isOrgAdminPending = (state) => ({\n  ...state,\n  isOrgAdmin: undefined,\n});\n\nexport const isOrgAdminLoaded = (state, { payload: isOrgAdmin }) => ({\n  ...state,\n  isOrgAdmin,\n});\n\nexport default {\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_PENDING]: writePermissionsPending,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_FULFILLED]: writePermissionsLoaded,\n  [ACTION_TYPES.SET_WRITE_PERMISSIONS_REJECTED]: writePermissionsPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_PENDING]: isOrgAdminPending,\n  [ACTION_TYPES.SET_ORG_ADMIN_FULFILLED]: isOrgAdminLoaded,\n  [ACTION_TYPES.SET_ORG_ADMIN_REJECTED]: isOrgAdminPending,\n};\n","import ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport SourcesReducer, { defaultSourcesState } from '../redux/sources/reducer';\nimport UserReducer, { defaultUserState } from '../redux/user/reducer';\nimport { updateQuery } from './urlQuery';\nimport { ACTION_TYPES } from '../redux/sources/actionTypes';\n\nexport const urlQueryMiddleware = (store) => (next) => (action) => {\n  if (action.type === ACTION_TYPES.LOAD_ENTITIES_PENDING) {\n    const sources = store.getState().sources;\n    updateQuery({ ...sources, ...action.options });\n  }\n\n  next(action);\n};\n\nexport const getStore = (addMiddlewares = [], initialState = {}) => {\n  const middlewares = [\n    thunk,\n    notificationsMiddleware({\n      errorTitleKey: 'error.title',\n      errorDescriptionKey: 'error.detail',\n    }),\n    promise,\n    urlQueryMiddleware,\n    ...addMiddlewares,\n  ];\n\n  const registry = new ReducerRegistry({}, middlewares);\n\n  registry.register({\n    sources: applyReducerHash(SourcesReducer, { ...defaultSourcesState, ...initialState.sources }),\n  });\n  registry.register({ user: applyReducerHash(UserReducer, { ...defaultUserState, ...initialState.user }) });\n  registry.register({ notifications: notificationsReducer });\n\n  return registry.getStore();\n};\n\nexport const getProdStore = () => getStore();\n","const tryAgainMessage = (intl, error) =>\n  intl.formatMessage(\n    {\n      id: 'tryAgain.text',\n      defaultMessage: '{ error }. Please try again.',\n    },\n    { error }\n  );\n\nexport default tryAgainMessage;\n","import { restFilterGenerator } from '../api/entities';\nimport { AVAILABLE, UNAVAILABLE } from '../views/formatters';\nimport { sourcesColumns } from '../views/sourcesViewDefinition';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from './constants';\n\nexport const updateQuery = ({ sortBy, sortDirection, pageNumber, pageSize, filterValue, activeCategory }) => {\n  const sortQuery = `sort_by[]=${sortBy}:${sortDirection}`;\n\n  const paginationQuery = `limit=${pageSize}&offset=${(pageNumber - 1) * pageSize}&category=${activeCategory || CLOUD_VENDOR}`;\n\n  const filterQuery = restFilterGenerator(filterValue);\n\n  const query = `?${sortQuery}&${paginationQuery}${filterQuery ? `&${filterQuery}` : ''}`;\n\n  const fullHref = decodeURIComponent(`${window.location.pathname}${query}`);\n\n  if (location.href !== fullHref) {\n    return history.replaceState('', '', fullHref);\n  }\n\n  return null;\n};\n\nexport const loadEnhancedAttributes = (params) => {\n  const urlParams = params || new URLSearchParams(window.location.search);\n\n  const applications = urlParams.getAll('application');\n  const types = urlParams.getAll('type');\n\n  return {\n    applications: applications.length && applications,\n    types: types.length && types,\n  };\n};\n\nexport const parseQuery = (getState) => {\n  let fetchOptions = {};\n\n  const urlParams = new URLSearchParams(window.location.search);\n\n  const sortByRaw = urlParams.get('sort_by[]');\n\n  let sortBy;\n  let sortDirection;\n\n  if (sortByRaw) {\n    sortBy = sortByRaw.split(':')[0];\n    sortDirection = sortByRaw.split(':')[1];\n\n    sortBy = sourcesColumns({ formatMessage: () => '' })\n      .filter(({ sortable }) => sortable)\n      .map(({ value }) => value)\n      .includes(sortBy)\n      ? sortBy\n      : 'created_at';\n    sortDirection = ['desc', 'asc'].includes(sortDirection) ? sortDirection : 'desc';\n  }\n\n  if (sortBy && sortDirection) {\n    fetchOptions = {\n      sortBy,\n      sortDirection,\n    };\n  }\n\n  const pageSize = urlParams.get('limit');\n  const offset = urlParams.get('offset');\n\n  let pageNumber;\n\n  if (offset && pageSize) {\n    pageNumber = offset / pageSize + 1;\n    if (isNaN(pageNumber)) {\n      pageNumber = undefined;\n    }\n  }\n\n  if (pageSize && pageNumber) {\n    fetchOptions = {\n      ...fetchOptions,\n      pageNumber: parseInt(pageNumber, 10),\n      pageSize: Math.min(parseInt(pageSize, 10), 100),\n    };\n  }\n\n  let filterValue = {};\n\n  const name = urlParams.get('filter[name][contains_i]');\n\n  if (name) {\n    filterValue = { name };\n  }\n\n  const sourceTypes = urlParams.getAll('filter[source_type_id][]');\n\n  if (sourceTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      source_type_id: sourceTypes,\n    };\n  }\n\n  const applicationTypes = urlParams.getAll('filter[applications][application_type_id][eq][]');\n\n  if (applicationTypes.length > 0) {\n    filterValue = {\n      ...filterValue,\n      applications: applicationTypes,\n    };\n  }\n\n  if (urlParams.get('filter[availability_status]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [AVAILABLE],\n    };\n  } else if (urlParams.get('filter[availability_status][]')) {\n    filterValue = {\n      ...filterValue,\n      availability_status: [UNAVAILABLE],\n    };\n  }\n\n  const { applications, types } = loadEnhancedAttributes(urlParams);\n\n  if (applications || types) {\n    const { appTypes, sourceTypes } = getState().sources;\n\n    const applicationIds = applications.map?.((app) => appTypes.find(({ name }) => name.includes(app))?.id).filter(Boolean);\n    const typeIds = types.map?.((type) => sourceTypes.find(({ name }) => name === type)?.id).filter(Boolean);\n\n    filterValue = {\n      ...filterValue,\n      ...(applicationIds?.length && { applications: applicationIds }),\n      ...(typeIds?.length && { source_type_id: typeIds }),\n    };\n  }\n\n  const hasSomeFilterValue =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value)\n      .filter(Boolean).length > 0;\n\n  if (hasSomeFilterValue) {\n    fetchOptions = {\n      ...fetchOptions,\n      filterValue,\n    };\n  }\n\n  const activeCategory = urlParams.get('category') || urlParams.get('activeVendor');\n\n  if (activeCategory === CLOUD_VENDOR || activeCategory === REDHAT_VENDOR) {\n    fetchOptions = {\n      ...fetchOptions,\n      activeCategory,\n    };\n  }\n\n  return fetchOptions;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Badge, Button, Label, LabelGroup, Popover, Text, TextContent, TextVariants, Tooltip } from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\n\nimport { ACCOUNT_AUTHORIZATION } from '../components/constants';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Link } from 'react-router-dom';\nimport { replaceRouteId, routes } from '../Routes';\n\nexport const defaultPort = (scheme) =>\n  ({\n    http: '80',\n    https: '443',\n  }[scheme]);\n\nexport const importsTexts = (value) =>\n  ({\n    cfme: (\n      <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n      />\n    ),\n  }[value.toLowerCase()]);\n\nexport const schemaToPort = (schema, port) => (port && String(port) !== defaultPort(schema) ? `:${port}` : '');\n\nexport const endpointToUrl = (endpoint) => {\n  const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n  const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n  const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n  if (url === '://') {\n    return;\n  }\n\n  return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n  return type && type.name === 'openshift';\n};\n\nexport const formatURL = (source) => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n  const type = sourceTypes.find((type) => type.id === sourceType);\n  return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = (str) => (\n  <span className=\"src-c-help-cursor\">\n    <DateFormat type=\"relative\" date={str} />\n  </span>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n  <TextContent>\n    <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>{name}</Link>\n    <br key={`${source.id}-br`} />\n    <Text key={source.id} component={TextVariants.small}>\n      {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n    </Text>\n  </TextContent>\n);\n\nexport const importedFormatter = (value) => {\n  if (!value) {\n    return null;\n  }\n\n  const text = importsTexts(value);\n\n  if (text) {\n    return (\n      <Tooltip content={text}>\n        <Badge isRead className=\"src-m-help-cursor\">\n          <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n        </Badge>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <Badge isRead>\n      <FormattedMessage id=\"sources.imported\" defaultMessage=\"imported\" />\n    </Badge>\n  );\n};\n\nexport const AVAILABLE = 'available';\nexport const UNAVAILABLE = 'unavailable';\nexport const UNKNOWN = 'unknown';\nexport const PARTIALLY_UNAVAILABLE = 'partially_available';\nexport const IN_PROGRESS = 'in_progress';\nexport const PAUSED = 'paused_at';\n\nexport const getStatusColor = (status) =>\n  ({\n    [UNAVAILABLE]: 'red',\n    [AVAILABLE]: 'green',\n    [PARTIALLY_UNAVAILABLE]: 'orange',\n    [PAUSED]: 'cyan',\n  }[status] || 'grey');\n\nexport const getStatusText = (status) =>\n  ({\n    [UNAVAILABLE]: <FormattedMessage id=\"sources.unavailable\" defaultMessage=\"Unavailable\" />,\n    [AVAILABLE]: <FormattedMessage id=\"sources.available\" defaultMessage=\"Available\" />,\n    [PARTIALLY_UNAVAILABLE]: <FormattedMessage id=\"sources.partiallyAvailable\" defaultMessage=\"Partially available\" />,\n    [IN_PROGRESS]: <FormattedMessage id=\"sources.inProgress\" defaultMessage=\"In progress\" />,\n    [PAUSED]: <FormattedMessage id=\"sources.paused\" defaultMessage=\"Paused\" />,\n  }[status] || <FormattedMessage id=\"sources.unknown\" defaultMessage=\"Unknown\" />);\n\nexport const UnknownError = () => <FormattedMessage id=\"sources.unknownError\" defaultMessage=\"unavailable\" />;\n\nexport const formatAvailibilityErrors = (appTypes, errors) => (\n  <React.Fragment>\n    {errors.source && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.sourceError\"\n          defaultMessage=\"Source's status: { error }\"\n          values={{ error: errors.source }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.endpoint && (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.endpointError\"\n          defaultMessage=\"Endpoint error: { error }\"\n          values={{ error: errors.endpoint }}\n        />\n        <br />\n      </React.Fragment>\n    )}\n    {errors.authentications && (\n      <FormattedMessage\n        id=\"sources.authErrors\"\n        defaultMessage=\"Authentication {count, plural, one {status} other {statuses}} : { errors }\"\n        values={{\n          count: errors.authentications.length,\n          errors: errors.authentications.map(({ error, type }) => (\n            <React.Fragment key={type}>\n              <FormattedMessage id=\"sources.errorAuthTemplate\" defaultMessage=\"{ type }: { error }\" values={{ error, type }} />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n    {errors.applications && (\n      <FormattedMessage\n        id=\"sources.appErrors\"\n        defaultMessage=\"Application {count, plural, one {status} other {statutes}}: { errors }\"\n        values={{\n          count: errors.applications.length,\n          errors: errors.applications.map(({ error, id }) => (\n            <React.Fragment key={id}>\n              <FormattedMessage\n                id=\"sources.errorAppTemplate\"\n                defaultMessage=\"{ app }: { error }\"\n                values={{\n                  error,\n                  app: appTypes.find((app) => app.id === id)?.display_name || id,\n                }}\n              />\n              <br />\n            </React.Fragment>\n          )),\n        }}\n      />\n    )}\n  </React.Fragment>\n);\n\nexport const getStatusTooltipText = (status, appTypes, errors = {}) =>\n  ({\n    [UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [AVAILABLE]: <FormattedMessage id=\"sources.appStatusOK\" defaultMessage=\"Everything works fine.\" />,\n    [PARTIALLY_UNAVAILABLE]: (\n      <React.Fragment>\n        <FormattedMessage\n          id=\"sources.appStatusPartiallyOK\"\n          defaultMessage=\"We found {count, plural, one {this error} other {these errors}}.\"\n          values={{ count: Object.keys(errors).length }}\n        />\n        <hr />\n        {formatAvailibilityErrors(appTypes, errors)}\n      </React.Fragment>\n    ),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n    [PAUSED]: (\n      <FormattedMessage\n        id=\"sources.pausedStatus\"\n        defaultMessage=\"Data collection is temporarily disabled. Resume source to reestablish connection.\"\n      />\n    ),\n  }[status] || <FormattedMessage id=\"sources.appStatusUnknown\" defaultMessage=\"Status has not been verified.\" />);\n\nexport const getAllErrors = ({\n  availability_status,\n  availability_status_error,\n  applications = [],\n  endpoints: [endpoint] = [],\n}) => {\n  if (availability_status === IN_PROGRESS) {\n    return { errors: {}, status: IN_PROGRESS };\n  }\n\n  let errors = {};\n  let statusesCount = 0;\n  let errorsCount = 0;\n\n  if (availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      source: availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  applications.map((app) => {\n    if (app.availability_status === UNAVAILABLE) {\n      errors = {\n        ...errors,\n        applications: [\n          ...(errors.applications ? errors.applications : []),\n          {\n            id: app.application_type_id,\n            error: app.availability_status_error || <UnknownError />,\n          },\n        ],\n      };\n      statusesCount++;\n      errorsCount++;\n    } else if (app.availability_status === AVAILABLE) {\n      statusesCount++;\n    }\n  });\n\n  if (endpoint?.availability_status === UNAVAILABLE) {\n    errors = {\n      ...errors,\n      endpoint: endpoint.availability_status_error || <UnknownError />,\n    };\n    statusesCount++;\n    errorsCount++;\n  } else if (endpoint?.availability_status === AVAILABLE) {\n    statusesCount++;\n  }\n\n  if (endpoint?.authentications) {\n    endpoint.authentications.map((auth) => {\n      if (auth.availability_status === UNAVAILABLE) {\n        errors = {\n          ...errors,\n          authentications: [\n            ...(errors.authentications ? errors.authentications : []),\n            {\n              type: auth.authtype,\n              error: auth.availability_status_error || <UnknownError />,\n            },\n          ],\n        };\n        statusesCount++;\n        errorsCount++;\n      } else if (auth.availability_status === AVAILABLE) {\n        statusesCount++;\n      }\n    });\n  }\n\n  return {\n    errors,\n    status:\n      errorsCount === 0\n        ? statusesCount === 0\n          ? UNKNOWN\n          : AVAILABLE\n        : errorsCount === statusesCount\n        ? UNAVAILABLE\n        : PARTIALLY_UNAVAILABLE,\n  };\n};\n\nexport const availabilityFormatter = (_status, source, { appTypes }) => {\n  const meta = getAllErrors(source);\n  const status = source.paused_at ? PAUSED : meta.status;\n\n  return (\n    <span>\n      <Popover\n        showClose={false}\n        aria-label={`${status} popover`}\n        bodyContent={getStatusTooltipText(status, appTypes, meta.errors)}\n      >\n        <Label\n          className=\"src-m-clickable\"\n          color={getStatusColor(status)}\n          {...(source.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n          {...(source.paused_at && { icon: <PauseIcon /> })}\n        >\n          {getStatusText(status)}\n        </Label>\n      </Popover>\n    </span>\n  );\n};\n\nexport const getStatusTooltipTextApp = (status, error, intl) =>\n  ({\n    [AVAILABLE]: intl.formatMessage({\n      id: 'sources.appStatusOK',\n      defaultMessage: 'Everything works fine.',\n    }),\n    [UNAVAILABLE]: error || intl.formatMessage({ id: 'sources.unknownError', defaultMessage: 'Unknown error' }),\n    [IN_PROGRESS]: (\n      <FormattedMessage\n        id=\"sources.inProgressStatus\"\n        defaultMessage=\"We are still working to validate credentials. Check back for status updates.\"\n      />\n    ),\n  }[status] ||\n  intl.formatMessage({\n    id: 'sources.appStatusUnknown',\n    defaultMessage: 'Status has not been verified.',\n  }));\n\nexport const ApplicationLabel = ({ app, showStatusText, ...props }) => {\n  const intl = useIntl();\n\n  const statusText = getStatusTooltipTextApp(app.availability_status, app.availability_status_error, intl);\n\n  return (\n    <Popover\n      showClose={false}\n      key={app.display_name}\n      aria-label={`${app.display_name} popover`}\n      bodyContent={\n        app.paused_at\n          ? `${statusText} ${intl.formatMessage({\n              id: 'appplication.paused.additionalText',\n              defaultMessage: 'Resume this application to continue data collection.',\n            })}`\n          : statusText\n      }\n      {...(app.paused_at && {\n        headerContent: intl.formatMessage({\n          id: 'application.paused.header',\n          defaultMessage: 'Application paused',\n        }),\n      })}\n    >\n      <Label\n        className=\"src-m-clickable\"\n        color={getStatusColor(app.availability_status)}\n        {...(app.availability_status === IN_PROGRESS && { icon: <WrenchIcon /> })}\n        {...(app.paused_at && { icon: <PauseIcon /> })}\n        {...props}\n      >\n        {showStatusText ? getStatusText(app.availability_status) : app.display_name}\n      </Label>\n    </Popover>\n  );\n};\n\nApplicationLabel.propTypes = {\n  app: PropTypes.shape({\n    display_name: PropTypes.string,\n    availability_status: PropTypes.string,\n    availability_status_error: PropTypes.string,\n    paused_at: PropTypes.string,\n  }),\n  showStatusText: PropTypes.bool,\n};\n\nconst EnhancedLabelGroup = ({ applications, ...props }) => {\n  const intl = useIntl();\n\n  return (\n    <LabelGroup\n      {...props}\n      numLabels={2}\n      collapsedText={intl.formatMessage(\n        { id: 'applications.showMore', defaultMessage: '{remaining} more' },\n        { remaining: '${remaining}' }\n      )}\n    >\n      {applications.map((app, index) => (\n        <ApplicationLabel app={app} key={app.id || index} />\n      ))}\n    </LabelGroup>\n  );\n};\n\nEnhancedLabelGroup.propTypes = {\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      display_name: PropTypes.string,\n      availability_status: PropTypes.string,\n      availability_status_error: PropTypes.string,\n      paused_at: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport const getAppStatus = (app, source, appTypes) => {\n  const application = appTypes.find((type) => type.id === app.application_type_id);\n\n  if (application) {\n    let availability_status = app.availability_status;\n    let availability_status_error = app.availability_status_error;\n\n    if (app.authentications?.[0]?.resource_type === 'Endpoint') {\n      availability_status = source.endpoints?.[0]?.availability_status;\n      availability_status_error = source.endpoints?.[0]?.availability_status_error;\n    }\n\n    return {\n      display_name: application.display_name,\n      paused_at: app.paused_at,\n      availability_status,\n      availability_status_error,\n    };\n  }\n};\n\nexport const applicationFormatter = (apps, item, { appTypes }) => {\n  const applications = apps\n    .map((app) => getAppStatus(app, item, appTypes))\n    .filter(Boolean)\n    .sort((a, b) => a.display_name.localeCompare(b.display_name));\n\n  if (applications.length === 0) {\n    return '--';\n  }\n\n  return <EnhancedLabelGroup numLabels={2} collapsedText applications={applications} />;\n};\n\nexport const configurationModeFormatter = (mode, item, { intl, sourceType }) => {\n  if (mode === ACCOUNT_AUTHORIZATION) {\n    const superKeyType = sourceType?.schema.authentication.find(({ is_superkey }) => is_superkey);\n    const superKeyAuth = item?.authentications?.find(({ authtype }) => authtype && authtype === superKeyType.type);\n\n    return (\n      <React.Fragment>\n        {intl.formatMessage({\n          id: 'configurationMode.trust',\n          defaultMessage: 'Account authorization',\n        })}\n        {superKeyAuth?.availability_status === UNAVAILABLE && (\n          <Tooltip\n            position=\"top\"\n            content={\n              superKeyAuth.availability_status_error ||\n              intl.formatMessage({\n                id: 'configurationMode.trustmode.defaultError',\n                defaultMessage: 'Edit credentials required.',\n              })\n            }\n          >\n            <span className=\"pf-u-ml-sm\">\n              <ExclamationCircleIcon fill=\"#C9190B\" />\n            </span>\n          </Tooltip>\n        )}\n        <div className=\"pf-u-mt-sm\">\n          <Link to={replaceRouteId(routes.sourcesDetailEditCredentials.path, item.id)}>\n            <Button variant=\"link\" id=\"edit-super-credentials\" isInline>\n              {item.paused_at\n                ? intl.formatMessage({\n                    id: 'sources.viewCredentials',\n                    defaultMessage: 'View credentials',\n                  })\n                : intl.formatMessage({\n                    id: 'sources.editCredentials',\n                    defaultMessage: 'Edit credentials',\n                  })}\n            </Button>\n          </Link>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return intl.formatMessage({\n    id: 'configurationMode.manual',\n    defaultMessage: 'Manual configuration',\n  });\n};\n","import {\n  applicationFormatter,\n  availabilityFormatter,\n  dateFormatter,\n  importedFormatter,\n  nameFormatter,\n  sourceTypeFormatter,\n} from './formatters';\n\nexport const sourcesColumns = (intl, notSortable = false) => [\n  {\n    title: intl.formatMessage({\n      id: 'sources.name',\n      defaultMessage: 'Name',\n    }),\n    value: 'name',\n    formatter: nameFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.type',\n      defaultMessage: 'Type',\n    }),\n    value: 'source_type_id',\n    formatter: sourceTypeFormatter,\n    sortable: !notSortable,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.connectedApplications',\n      defaultMessage: 'Connected applications',\n    }),\n    value: 'applications',\n    formatter: applicationFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.addedDate',\n      defaultMessage: 'Date added',\n    }),\n    value: 'created_at',\n    formatter: dateFormatter,\n    sortable: !notSortable,\n  },\n  {\n    hidden: true,\n    value: 'imported',\n    formatter: importedFormatter,\n  },\n  {\n    title: intl.formatMessage({\n      id: 'sources.status',\n      defaultMessage: 'Status',\n    }),\n    value: 'availability_status',\n    formatter: availabilityFormatter,\n  },\n];\n\nconst KEBAB_COLUMN = 1;\nconst COUNT_OF_COLUMNS = sourcesColumns({ formatMessage: () => '' }).length;\n\nexport const COLUMN_COUNT = COUNT_OF_COLUMNS + KEBAB_COLUMN;\n"],"names":["ErrorBoundary","error","sentryId","Sentry","this","props","dispatch","addMessage","title","toString","variant","description","stack","state","children","Fragment","errorInfo","Component","propTypes","PropTypes","connect","useDispatch","useEffect","Promise","all","type","ACTION_TYPES","insights","chrome","getUserPermissions","then","permissions","allPermission","reduce","acc","curr","permission","writePermissions","includes","payload","detail","data","auth","getUser","is_org_admin","identity","user","pathname","useLocation","sources","useSelector","shallowEqual","previousPathname","useRef","loadEnhancedAttributes","applications","types","loadSourceTypes","loadAppTypes","loadHcsEnrollment","loadEntities","parseQuery","current","updateQuery","history","useHistory","init","identifyApp","unregister","on","event","navId","split","pop","domEvent","href","push","routes","_exception","console","warn","getBaseName","level","release","pathName","replace","shift","Array","_curr","key","sessionStorage","removeItem","CLOUD_CARDS_KEY","basename","location","locale","Main","style","padding","Routes","SourcesPage","lazy","SourceDetail","path","sourcesNew","writeAccess","sourcesRemove","redirectNoId","sourcesDetail","sourcesDetailRename","noPaused","sourcesDetailRemove","sourcesDetailAddApp","sourcesDetailRemoveApp","sourcesDetailEditCredentials","replaceRouteId","id","Suspense","fallback","Switch","Route","component","config","window","SOURCES_API_BASE_V3","process","env","BASE_PATH","axiosInstanceInsights","axios","interceptors","request","use","response","status","logout","configureScope","scope","setTag","req_id","err","errObject","customError","captureException","errors","length","reject","message","getSourcesApi","checkAvailabilitySource","post","updateSource","patch","updateEndpoint","createEndpoint","updateAuthentication","createAuthentication","showSource","get","listSourceEndpoints","listSourceApplications","listEndpointAuthentications","deleteSource","createApplication","postGraphQL","listSourceTypes","doLoadAppTypes","deleteApplication","createAuthApp","deleteAuthentication","showAuthentication","updateApplication","showApplication","listSourceAuthentications","createSource","getEndpoint","getGoogleAccount","bulkCreate","pauseApplication","unpauseApplication","pauseSource","unpauseSource","getLighthouseLink","getProvAppType","getProvMetadata","provAppTypeId","doRemoveSource","sourceId","pagination","pageSize","pageNumber","sorting","sortBy","sortDirection","graphQlAttributes","doLoadEntities","filter","filterValue","category","filterQueries","name","source_type_id","map","x","join","CLOUD_VENDOR","REDHAT_VENDOR","availability_status","AVAILABLE","UNAVAILABLE","PARTIALLY_UNAVAILABLE","filtering","activeCategory","filterSection","query","doCreateApplication","doDeleteApplication","appId","errorMessage","restFilterGenerator","doLoadSource","doLoadApplicationsForEdit","handleError","undefined","JSON","stringify","errorDelete","errorDeleteDetail","PREFIX","isBeta","INSIGHTS_SERVICES","SUBWATCH_HREF","CloudCards","useState","session","getItem","isExpanded","setExpanded","intl","useIntl","setItem","Card","className","CardHeader","onExpand","CardTitle","formatMessage","defaultMessage","CardExpandableContent","CardBody","TextContent","Grid","hasGutter","GridItem","md","Stack","StackItem","Text","color","isFilled","target","rel","React","Loader","width","height","role","AppPlaceholder","PaginationLoader","PlaceHolderTable","Bullseye","Spinner","size","RowWrapperLoader","row","isDeleting","initialProps","colSpan","COLUMN_COUNT","RowWrapper","CardLoader","DetailLoader","MANUAL_CONFIGURATION","ACCOUNT_AUTHORIZATION","SORT_ENTITIES","PAGE_AND_SIZE","FILTER_SOURCES","ADD_APP_TO_SOURCE","SET_COUNT","ADD_HIDDEN_SOURCE","CLEAR_FILTERS","SET_CATEGORY","STATUS_CHECK_PENDING","checkAccountHCS","getToken","jwtToken","fetch","isProd","headers","Authorization","statusText","hcsDeal","json","options","getState","meta","noError","sourceTypes","appTypes","sortEntities","column","direction","pageAndSize","page","paginationClicked","filterSources","value","ADD_NOTIFICATION","dismissable","removeSource","loaded","removeMessage","REMOVE_NOTIFICATION","removeApplication","successTitle","errorTitle","notifications","fulfilled","addHiddenSource","source","setCheckPenging","clearFilters","renameSource","oldName","entities","find","setActiveCategory","sourceName","b","bold","customIcon","tryAgainMessage","resumeSource","HCS_NAME","SATELLITE_NAME","ANSIBLE_TOWER_NAME","TOPOLOGY_INV_NAME","COST_MANAGEMENT_APP_NAME","CLOUD_METER_APP_NAME","PROVISIONING_APP_NAME","CATALOG_APP","HCS_APP_NAME","COST_MANAGEMENT_APP_ID","timeoutedApps","boldId","chunks","defaultSourcesState","numberOfEntities","appTypesLoaded","sourceTypesLoaded","removingSources","hcsEnrolled","hcsEnrolledLoaded","addAppToSource","app","entity","sourceRenamePending","Math","max","count","fetchingError","hidden","isCheckPending","defaultUserState","isOrgAdmin","writePermissionsPending","isOrgAdminPending","urlQueryMiddleware","store","next","action","getProdStore","addMiddlewares","initialState","middlewares","thunk","notificationsMiddleware","errorTitleKey","errorDescriptionKey","promise","registry","ReducerRegistry","register","applyReducerHash","SourcesReducer","UserReducer","notificationsReducer","getStore","sortQuery","paginationQuery","filterQuery","fullHref","decodeURIComponent","replaceState","params","urlParams","URLSearchParams","search","getAll","fetchOptions","sortByRaw","sourcesColumns","sortable","offset","isNaN","parseInt","min","applicationTypes","applicationIds","Boolean","typeIds","Object","entries","defaultPort","scheme","http","https","endpointToUrl","endpoint","onlyTrueEndpointValues","keys","host","port","url","schema","String","schemaToPort","sourceTypeFormatter","sourceType","_item","product_name","dateFormatter","str","date","nameFormatter","Link","to","TextVariants","sourceIsOpenShift","endpoints","formatURL","importedFormatter","text","cfme","toLowerCase","importsTexts","Tooltip","content","Badge","isRead","IN_PROGRESS","PAUSED","getStatusColor","getStatusText","UnknownError","formatAvailibilityErrors","values","authentications","display_name","getStatusTooltipText","availabilityFormatter","_status","availability_status_error","statusesCount","errorsCount","application_type_id","authtype","getAllErrors","paused_at","Popover","showClose","bodyContent","Label","icon","ApplicationLabel","showStatusText","getStatusTooltipTextApp","headerContent","EnhancedLabelGroup","LabelGroup","numLabels","collapsedText","remaining","index","isRequired","applicationFormatter","apps","item","application","resource_type","getAppStatus","sort","a","localeCompare","configurationModeFormatter","mode","superKeyType","authentication","is_superkey","superKeyAuth","position","fill","Button","isInline","notSortable","formatter"],"sourceRoot":""}