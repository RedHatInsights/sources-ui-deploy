{"version":3,"file":"js/8571.b1e6085456de16f1a644.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/copy-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyAction.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/angle-down-icon.js"],"sourcesContent":["import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"clipboardCopy\": \"pf-v5-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-v5-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-v5-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-v5-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-v5-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-v5-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-v5-c-clipboard-copy__toggle-icon\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import { createIcon } from '../createIcon';\n\nexport const CopyIconConfig = {\n  name: 'CopyIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CopyIcon = createIcon(CopyIconConfig);\n\nexport default CopyIcon;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport CopyIcon from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nexport const ClipboardCopyButton = (_a) => {\n    var { onClick, exitDelay = 0, entryDelay = 300, maxWidth = '100px', position = 'top', 'aria-label': ariaLabel = 'Copyable input', id, textId, children, variant = 'control', onTooltipHidden = () => { } } = _a, props = __rest(_a, [\"onClick\", \"exitDelay\", \"entryDelay\", \"maxWidth\", \"position\", 'aria-label', \"id\", \"textId\", \"children\", \"variant\", \"onTooltipHidden\"]);\n    const triggerRef = React.createRef();\n    return (React.createElement(Tooltip, { trigger: \"mouseenter focus click\", triggerRef: triggerRef, exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, \"aria-live\": \"polite\", aria: \"none\", content: React.createElement(\"div\", null, children), onTooltipHidden: onTooltipHidden },\n        React.createElement(Button, Object.assign({ type: \"button\", variant: variant, onClick: onClick, \"aria-label\": ariaLabel, id: id, \"aria-labelledby\": `${id} ${textId}` }, props, { ref: triggerRef }),\n            React.createElement(CopyIcon, null))));\n};\nClipboardCopyButton.displayName = 'ClipboardCopyButton';\n//# sourceMappingURL=ClipboardCopyButton.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport AngleDownIcon from '@patternfly/react-icons/dist/esm/icons/angle-down-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": `${id} ${contentId}`, \"aria-expanded\": isExpanded }, props), isExpanded ? React.createElement(AngleDownIcon, { \"aria-hidden\": \"true\" }) : React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport class ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e, e.target.innerText), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", null, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\n//# sourceMappingURL=ClipboardCopyExpanded.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipPosition } from '../Tooltip';\nimport { TextInput } from '../TextInput';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nimport { getOUIAProps } from '../../helpers';\nexport const clipboardCopyFunc = (event, text) => {\n    navigator.clipboard.writeText(text.toString());\n};\nexport var ClipboardCopyVariant;\n(function (ClipboardCopyVariant) {\n    ClipboardCopyVariant[\"inline\"] = \"inline\";\n    ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n    ClipboardCopyVariant[\"inlineCompact\"] = \"inline-compact\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\nexport class ClipboardCopy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.componentDidUpdate = (prevProps, prevState) => {\n            if (prevProps.children !== this.props.children) {\n                this.setState({ text: this.props.children });\n            }\n        };\n        this.componentWillUnmount = () => {\n            if (this.timer) {\n                window.clearTimeout(this.timer);\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.expandContent = (_event) => {\n            this.setState((prevState) => ({\n                expanded: !prevState.expanded\n            }));\n        };\n        this.updateText = (event, text) => {\n            this.setState({ text });\n            this.props.onChange(event, text);\n        };\n        this.render = () => {\n            const _a = this.props, { \n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            isExpanded, onChange, // Don't pass to <div>\n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe } = _a, divProps = __rest(_a, [\"isExpanded\", \"onChange\", \"isReadOnly\", \"isCode\", \"isBlock\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\", \"additionalActions\", \"ouiaId\", \"ouiaSafe\"]);\n            const textIdPrefix = 'text-input-';\n            const toggleIdPrefix = 'toggle-';\n            const contentIdPrefix = 'content-';\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.clipboardCopy, variant === 'inline-compact' && styles.modifiers.inline, isBlock && styles.modifiers.block, this.state.expanded && styles.modifiers.expanded, className) }, divProps, getOUIAProps(ClipboardCopy.displayName, ouiaId, ouiaSafe)),\n                variant === 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    !isCode && (React.createElement(\"span\", { className: css(styles.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    isCode && (React.createElement(\"code\", { className: css(styles.clipboardCopyText, styles.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    React.createElement(\"span\", { className: css(styles.clipboardCopyActions) },\n                        React.createElement(\"span\", { className: css(styles.clipboardCopyActionsItem) },\n                            React.createElement(ClipboardCopyButton, { variant: \"plain\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                    onCopy(event, this.state.text);\n                                    this.setState({ copied: true });\n                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                        additionalActions && additionalActions))))),\n                variant !== 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.clipboardCopyGroup) },\n                        variant === 'expansion' && (React.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: this.expandContent, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, \"aria-label\": toggleAriaLabel })),\n                        React.createElement(TextInput, { readOnlyVariant: isReadOnly || this.state.expanded ? 'default' : undefined, onChange: this.updateText, value: this.state.text, id: `text-input-${id}`, \"aria-label\": textAriaLabel }),\n                        React.createElement(ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                onCopy(event, this.state.text);\n                                this.setState({ copied: true });\n                            }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                    this.state.expanded && (React.createElement(ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateText }, this.state.text))))))));\n        };\n        this.state = {\n            text: Array.isArray(this.props.children)\n                ? this.props.children.join('')\n                : this.props.children,\n            expanded: this.props.isExpanded,\n            copied: false\n        };\n    }\n}\nClipboardCopy.displayName = 'ClipboardCopy';\nClipboardCopy.defaultProps = {\n    hoverTip: 'Copy to clipboard',\n    clickTip: 'Successfully copied to clipboard!',\n    isReadOnly: false,\n    isExpanded: false,\n    isCode: false,\n    variant: 'inline',\n    position: TooltipPosition.top,\n    maxWidth: '150px',\n    exitDelay: 1500,\n    entryDelay: 300,\n    onCopy: clipboardCopyFunc,\n    onChange: () => undefined,\n    textAriaLabel: 'Copyable input',\n    toggleAriaLabel: 'Show content',\n    additionalActions: null,\n    ouiaSafe: true\n};\n//# sourceMappingURL=ClipboardCopy.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy';\nimport { css } from '@patternfly/react-styles';\nexport const ClipboardCopyAction = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: css(styles.clipboardCopyActionsItem, className) }, props), children));\n};\nClipboardCopyAction.displayName = 'ClipboardCopyAction';\n//# sourceMappingURL=ClipboardCopyAction.js.map","import { createIcon } from '../createIcon';\n\nexport const AngleDownIconConfig = {\n  name: 'AngleDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const AngleDownIcon = createIcon(AngleDownIconConfig);\n\nexport default AngleDownIcon;"],"names":["name","height","width","svgPath","yOffset","xOffset","ClipboardCopyButton","_a","onClick","exitDelay","entryDelay","maxWidth","position","ariaLabel","id","textId","children","variant","onTooltipHidden","props","triggerRef","Tooltip","trigger","aria","content","Button","Object","assign","type","ref","displayName","ClipboardCopyToggle","contentId","isExpanded","ClipboardCopyExpanded","constructor","super","render","this","className","onChange","isReadOnly","isCode","suppressContentEditableWarning","onInput","e","target","innerText","contentEditable","defaultProps","clipboardCopyFunc","event","text","navigator","clipboard","writeText","toString","ClipboardCopyVariant","ClipboardCopy","timer","componentDidUpdate","prevProps","prevState","setState","componentWillUnmount","window","clearTimeout","expandContent","_event","expanded","updateText","isBlock","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","additionalActions","ouiaId","ouiaSafe","divProps","textIdPrefix","state","getOUIAProps","GenerateId","prefix","copied","TextInput","readOnlyVariant","undefined","value","Array","isArray","join","top","ClipboardCopyAction","AngleDownIconConfig","AngleDownIcon"],"sourceRoot":""}