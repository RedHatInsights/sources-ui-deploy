{"version":3,"file":"js/8571.402a65bb7322d5085287.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/copy-icon.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyAction.js"],"sourcesContent":["import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-v5-c-button\",\n  \"clipboardCopy\": \"pf-v5-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-v5-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-v5-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-v5-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-v5-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-v5-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-v5-c-clipboard-copy__toggle-icon\",\n  \"dirRtl\": \"pf-v5-m-dir-rtl\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};","import { createIcon } from '../createIcon';\n\nexport const CopyIconConfig = {\n  name: 'CopyIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CopyIcon = createIcon(CopyIconConfig);\n\nexport default CopyIcon;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport CopyIcon from '@patternfly/react-icons/dist/esm/icons/copy-icon';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nexport const ClipboardCopyButton = (_a) => {\n    var { onClick, exitDelay = 0, entryDelay = 300, maxWidth = '100px', position = 'top', 'aria-label': ariaLabel = 'Copyable input', id, textId, children, variant = 'control', onTooltipHidden = () => { }, className } = _a, props = __rest(_a, [\"onClick\", \"exitDelay\", \"entryDelay\", \"maxWidth\", \"position\", 'aria-label', \"id\", \"textId\", \"children\", \"variant\", \"onTooltipHidden\", \"className\"]);\n    const triggerRef = React.createRef();\n    return (React.createElement(Tooltip, { trigger: \"mouseenter focus click\", triggerRef: triggerRef, exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, \"aria-live\": \"polite\", aria: \"none\", content: React.createElement(\"div\", null, children), onTooltipHidden: onTooltipHidden },\n        React.createElement(Button, Object.assign({ type: \"button\", variant: variant, onClick: onClick, \"aria-label\": ariaLabel, className: className, id: id, \"aria-labelledby\": `${id} ${textId}` }, props, { ref: triggerRef }),\n            React.createElement(CopyIcon, null))));\n};\nClipboardCopyButton.displayName = 'ClipboardCopyButton';\n//# sourceMappingURL=ClipboardCopyButton.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Button } from '../Button';\nexport const ClipboardCopyToggle = (_a) => {\n    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, [\"onClick\", \"id\", \"textId\", \"contentId\", \"isExpanded\"]);\n    return (React.createElement(Button, Object.assign({ type: \"button\", variant: \"control\", onClick: onClick, id: id, \"aria-labelledby\": `${id} ${textId}`, \"aria-controls\": contentId, \"aria-expanded\": isExpanded }, props),\n        React.createElement(\"div\", { className: css(styles.clipboardCopyToggleIcon) },\n            React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))));\n};\nClipboardCopyToggle.displayName = 'ClipboardCopyToggle';\n//# sourceMappingURL=ClipboardCopyToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nclass ClipboardCopyExpanded extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, [\"className\", \"children\", \"onChange\", \"isReadOnly\", \"isCode\"]);\n        return (React.createElement(\"div\", Object.assign({ suppressContentEditableWarning: true, className: css(styles.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e, e.target.innerText), contentEditable: !isReadOnly }, props), isCode ? React.createElement(\"pre\", { dir: \"ltr\" }, children) : children));\n    }\n}\nClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';\nClipboardCopyExpanded.defaultProps = {\n    onChange: () => undefined,\n    className: '',\n    isReadOnly: false,\n    isCode: false\n};\nexport { ClipboardCopyExpanded };\n//# sourceMappingURL=ClipboardCopyExpanded.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { TooltipPosition } from '../Tooltip';\nimport { TextInput } from '../TextInput';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nimport { ClipboardCopyButton } from './ClipboardCopyButton';\nimport { ClipboardCopyToggle } from './ClipboardCopyToggle';\nimport { ClipboardCopyExpanded } from './ClipboardCopyExpanded';\nimport { getOUIAProps } from '../../helpers';\nexport const clipboardCopyFunc = (_event, text) => {\n    try {\n        navigator.clipboard.writeText(text.toString());\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Clipboard API not found, this copy function will not work. This is likely because you're using an\", \"unsupported browser or you're not using HTTPS. \\n\\nIf you're a developer building an application which needs\", \"to support copying to the clipboard without the clipboard API, you'll have to create your own copy\", 'function and pass it to the ClipboardCopy component as the onCopy prop. For more information see', 'https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard');\n        // eslint-disable-next-line no-console\n        console.error(error);\n    }\n};\nexport var ClipboardCopyVariant;\n(function (ClipboardCopyVariant) {\n    ClipboardCopyVariant[\"inline\"] = \"inline\";\n    ClipboardCopyVariant[\"expansion\"] = \"expansion\";\n    ClipboardCopyVariant[\"inlineCompact\"] = \"inline-compact\";\n})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));\nclass ClipboardCopy extends React.Component {\n    constructor(props) {\n        super(props);\n        this.timer = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.componentDidUpdate = (prevProps, prevState) => {\n            if (prevProps.children !== this.props.children) {\n                const newText = this.props.children;\n                this.setState({ text: newText, textWhenExpanded: newText });\n            }\n        };\n        this.componentWillUnmount = () => {\n            if (this.timer) {\n                window.clearTimeout(this.timer);\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.expandContent = (_event) => {\n            this.setState((prevState) => ({\n                expanded: !prevState.expanded\n            }));\n        };\n        this.updateText = (event, text) => {\n            this.setState({ text });\n            this.props.onChange(event, text);\n        };\n        this.updateTextWhenExpanded = (event, text) => {\n            this.setState({ textWhenExpanded: text });\n            this.props.onChange(event, text);\n        };\n        this.render = () => {\n            const _a = this.props, { \n            /* eslint-disable @typescript-eslint/no-unused-vars */\n            isExpanded, onChange, // Don't pass to <div>\n            /* eslint-enable @typescript-eslint/no-unused-vars */\n            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe } = _a, divProps = __rest(_a, [\"isExpanded\", \"onChange\", \"isReadOnly\", \"isCode\", \"isBlock\", \"exitDelay\", \"maxWidth\", \"entryDelay\", \"onCopy\", \"hoverTip\", \"clickTip\", \"textAriaLabel\", \"toggleAriaLabel\", \"variant\", \"position\", \"className\", \"additionalActions\", \"ouiaId\", \"ouiaSafe\"]);\n            const textIdPrefix = 'text-input-';\n            const toggleIdPrefix = 'toggle-';\n            const contentIdPrefix = 'content-';\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.clipboardCopy, variant === 'inline-compact' && styles.modifiers.inline, isBlock && styles.modifiers.block, this.state.expanded && styles.modifiers.expanded, className) }, divProps, getOUIAProps(ClipboardCopy.displayName, ouiaId, ouiaSafe)),\n                variant === 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    !isCode && (React.createElement(\"span\", { className: css(styles.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    isCode && (React.createElement(\"code\", { className: css(styles.clipboardCopyText, styles.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),\n                    React.createElement(\"span\", { className: css(styles.clipboardCopyActions) },\n                        React.createElement(\"span\", { className: css(styles.clipboardCopyActionsItem) },\n                            React.createElement(ClipboardCopyButton, { variant: \"plain\", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                    onCopy(event, this.state.text);\n                                    this.setState({ copied: true });\n                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                        additionalActions && additionalActions))))),\n                variant !== 'inline-compact' && (React.createElement(GenerateId, { prefix: \"\" }, (id) => (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { className: css(styles.clipboardCopyGroup) },\n                        variant === 'expansion' && (React.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: (_event) => {\n                                this.expandContent(_event);\n                                if (this.state.expanded) {\n                                    this.setState({ text: this.state.textWhenExpanded });\n                                }\n                                else {\n                                    this.setState({ textWhenExpanded: this.state.text });\n                                }\n                            }, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, \"aria-label\": toggleAriaLabel })),\n                        React.createElement(TextInput, Object.assign({ readOnlyVariant: isReadOnly || this.state.expanded ? 'default' : undefined, onChange: this.updateText, value: this.state.expanded ? this.state.textWhenExpanded : this.state.text, id: `text-input-${id}`, \"aria-label\": textAriaLabel }, (isCode && { dir: 'ltr' }))),\n                        React.createElement(ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, \"aria-label\": hoverTip, onClick: (event) => {\n                                onCopy(event, this.state.expanded ? this.state.textWhenExpanded : this.state.text);\n                                this.setState({ copied: true });\n                            }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),\n                    this.state.expanded && (React.createElement(ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateTextWhenExpanded }, this.state.text))))))));\n        };\n        const text = Array.isArray(this.props.children) ? this.props.children.join('') : this.props.children;\n        this.state = {\n            text,\n            expanded: this.props.isExpanded,\n            copied: false,\n            textWhenExpanded: text\n        };\n    }\n}\nClipboardCopy.displayName = 'ClipboardCopy';\nClipboardCopy.defaultProps = {\n    hoverTip: 'Copy to clipboard',\n    clickTip: 'Successfully copied to clipboard!',\n    isReadOnly: false,\n    isExpanded: false,\n    isCode: false,\n    variant: 'inline',\n    position: TooltipPosition.top,\n    maxWidth: '150px',\n    exitDelay: 1500,\n    entryDelay: 300,\n    onCopy: clipboardCopyFunc,\n    onChange: () => undefined,\n    textAriaLabel: 'Copyable input',\n    toggleAriaLabel: 'Show content',\n    additionalActions: null,\n    ouiaSafe: true\n};\nexport { ClipboardCopy };\n//# sourceMappingURL=ClipboardCopy.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const ClipboardCopyAction = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: css(styles.clipboardCopyActionsItem, className) }, props), children));\n};\nClipboardCopyAction.displayName = 'ClipboardCopyAction';\n//# sourceMappingURL=ClipboardCopyAction.js.map"],"names":["name","height","width","svgPath","yOffset","xOffset","ClipboardCopyButton","_a","onClick","exitDelay","entryDelay","maxWidth","position","ariaLabel","id","textId","children","variant","onTooltipHidden","className","props","__rest","triggerRef","Tooltip","trigger","aria","content","Button","Object","assign","type","ref","displayName","ClipboardCopyToggle","contentId","isExpanded","ClipboardCopyExpanded","constructor","super","render","this","onChange","isReadOnly","isCode","suppressContentEditableWarning","onInput","e","target","innerText","contentEditable","dir","defaultProps","clipboardCopyFunc","_event","text","navigator","clipboard","writeText","toString","error","console","warn","ClipboardCopyVariant","ClipboardCopy","timer","componentDidUpdate","prevProps","prevState","newText","setState","textWhenExpanded","componentWillUnmount","window","clearTimeout","expandContent","expanded","updateText","event","updateTextWhenExpanded","isBlock","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","additionalActions","ouiaId","ouiaSafe","divProps","textIdPrefix","state","getOUIAProps","GenerateId","prefix","copied","TextInput","readOnlyVariant","undefined","value","Array","isArray","join","top","ClipboardCopyAction"],"sourceRoot":""}