{"version":3,"file":"js/902.9be7e14df075fbc3616d.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/hooks/useAppNavigate.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationTriangleIcon = createIcon(ExclamationTriangleIconConfig);\n\nexport default ExclamationTriangleIcon;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router-dom';\n\nimport { Button, Modal, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { replaceRouteId, routes } from '../../Routing';\nimport { useAppNavigate } from '../../hooks/useAppNavigate';\nimport AppNavigate from '../AppNavigate';\n\nconst RemoveAppModal = () => {\n  const intl = useIntl();\n  const navigate = useAppNavigate();\n  const { app_id } = useParams();\n  const source = useSource();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const dispatch = useDispatch();\n\n  const application = source.applications?.find(({ id }) => id === app_id);\n\n  if (!application) {\n    return <AppNavigate to={replaceRouteId('/' + routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const appType = appTypes.find(({ id }) => id === application?.application_type_id);\n\n  const app = {\n    id: app_id,\n    display_name: appType?.display_name,\n    dependent_applications: appType?.dependent_applications,\n    sourceAppsNames: source.applications.map(\n      ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name\n    ),\n  };\n\n  const onCancel = () => navigate(replaceRouteId(routes.sourcesDetail.path, source.id));\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  const dependentApps = appType?.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return source?.applications?.find(({ application_type_id }) => application_type_id === appType.id) && appType?.display_name;\n    })\n    .filter(Boolean);\n\n  return (\n    <Modal\n      className=\"sources\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\" className=\"sources\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert src-c-delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> }\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps }\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nexport default RemoveAppModal;\n","import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import { useNavigate } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../utilities/utils';\n\nexport const useAppNavigate = () => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n"],"names":["ExclamationTriangleIconConfig","name","height","width","svgPath","yOffset","xOffset","ExclamationTriangleIcon","intl","useIntl","navigate","useAppNavigate","app_id","useParams","source","useSource","appTypes","useSelector","sources","dispatch","useDispatch","application","applications","find","id","to","replaceRouteId","routes","appType","application_type_id","app","display_name","dependent_applications","sourceAppsNames","map","onCancel","dependentApps","appName","filter","Boolean","Modal","className","isOpen","onClose","variant","formatMessage","defaultMessage","header","Title","headingLevel","size","actions","Button","key","type","onClick","removeAppSubmit","TextContent","Text","component","TextVariants","length","apps","titleSuccess","titleError","removeApplication","useNavigate","options","mergeToBasename","linkBasename"],"sourceRoot":""}