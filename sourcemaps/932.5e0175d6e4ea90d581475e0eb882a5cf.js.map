{"version":3,"file":"js/932.231ff6b2db46789866e5.js","mappings":"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","sources":["webpack:///./src/api/checkSourceStatus.js","webpack:///./src/api/delay.js","webpack:///./src/api/getApplicationStatus.js","webpack:///./src/components/CloseModal.js","webpack:///./src/components/steps/AmazonFinishedStep.js","webpack:///./src/components/steps/ErroredStep.js","webpack:///./src/components/steps/FinishedStep.js","webpack:///./src/components/steps/LoadingStep.js","webpack:///./src/components/steps/TimeoutStep.js","webpack:///./src/utilities/computeSourceError.js","webpack:///./src/utilities/computeSourceStatus.js","webpack:///./src/utilities/computeSourcesUrl.js","webpack:///./src/utilities/filterApps.js"],"sourcesContent":["import { getSourcesApi } from './entities';\n\nexport const checkSourceStatus = (id) =>\n  getSourcesApi()\n    .checkAvailabilitySource(id)\n    .catch(() => {});\n\nexport default checkSourceStatus;\n","export const delay = (interval, prms) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve.bind(null, prms), interval);\n  });\n};\n","import { getSourcesApi } from './entities';\nimport { delay } from './delay';\n\nexport const checkAppAvailability = (id, timeout = 10000, interval = 1000, entity = 'showApplication', updatedTime) =>\n  new Promise((res, rej) => {\n    const start = Date.now();\n\n    const checkSource = () =>\n      // eslint-disable-next-line prettier/prettier\n      getSourcesApi()[entity](id)\n        .then((data) => {\n          const isTimeOuted = Date.now() - start >= timeout;\n\n          if (isTimeOuted) {\n            if (updatedTime) {\n              return {\n                ...data,\n                availability_status: null,\n                availability_status_error: null,\n              };\n            }\n\n            return data;\n          }\n\n          if (data.availability_status === 'available' || data.availability_status === 'unavailable') {\n            if (updatedTime && new Date(data.last_checked_at || data.updated_at) > updatedTime) {\n              return data;\n            }\n\n            if (!updatedTime) {\n              return data;\n            }\n          }\n\n          return delay(interval).then(() => checkSource());\n        });\n\n    return checkSource()\n      .then((data) => res(data))\n      .catch((error) => rej(error));\n  });\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { Button, Modal, Title } from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\n\nconst CloseModal = ({ onExit, onStay, title, exitTitle, stayTitle, description }) => {\n  const intl = useIntl();\n\n  const isMounted = useRef(false);\n\n  return (\n    <Modal\n      onEscapePress={(e) => {\n        isMounted.current ? onStay(e) : undefined;\n        isMounted.current = true;\n      }}\n      className=\"sources\"\n      variant=\"small\"\n      title={title}\n      aria-label={intl.formatMessage({ id: 'wizard.closeAriaLabel', defaultMessage: 'Close add source wizard' })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"src-c-warning-icon\" aria-label=\"Exclamation icon\" />\n          {title}\n        </Title>\n      }\n      isOpen\n      onClose={onStay}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" id=\"on-exit-button\" onClick={onExit}>\n          {exitTitle}\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" id=\"on-stay-button\" onClick={onStay}>\n          {stayTitle}\n        </Button>,\n      ]}\n    >\n      {description}\n    </Modal>\n  );\n};\n\nCloseModal.propTypes = {\n  onExit: PropTypes.func.isRequired,\n  onStay: PropTypes.func.isRequired,\n  title: PropTypes.node,\n  exitTitle: PropTypes.node,\n  stayTitle: PropTypes.node,\n  description: PropTypes.node,\n};\n\nCloseModal.defaultProps = {\n  title: <FormattedMessage id=\"wizard.closeTitle\" defaultMessage=\"Exit source creation?\" />,\n  exitTitle: <FormattedMessage id=\"wizard.exitText\" defaultMessage=\"Exit\" />,\n  stayTitle: <FormattedMessage id=\"wizard.stayText\" defaultMessage=\"Stay\" />,\n  description: <FormattedMessage id=\"wizard.closeWarning\" defaultMessage=\"All inputs will be discarded.\" />,\n};\n\nexport default CloseModal;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport {\n  Alert,\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  EmptyStateVariant,\n  Grid,\n  GridItem,\n  Text,\n  Title,\n} from '@patternfly/react-core';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\n\nconst AwsLink = ({ href, children }) => (\n  <React.Fragment>\n    <CheckCircleIcon className=\"pf-u-mr-sm\" fill=\"var(--pf-global--success-color--100)\" />\n    <Text component=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Text>\n  </React.Fragment>\n);\n\nAwsLink.propTypes = {\n  href: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst PREFIX = insights.chrome.isBeta() ? 'preview/' : '';\n\nconst GOLDIMAGES_HREF = 'https://access.redhat.com/management/cloud';\nconst SUBWATCH_HREF = `/${PREFIX}subscriptions`;\nconst INSIGHTS_HREF = `/${PREFIX}insights`;\nconst COST_HREF = `/${PREFIX}cost-management`;\nconst LEARNMORE_HREF = 'https://access.redhat.com/public-cloud/aws';\n\nconst AmazonFinishedStep = ({ onClose }) => {\n  const intl = useIntl();\n\n  return (\n    <Fragment>\n      <Alert\n        variant=\"info\"\n        isInline\n        title={intl.formatMessage({ id: 'aws.alertTitle', defaultMessage: 'Allow 24 hours for full activation' })}\n      >\n        {intl.formatMessage({\n          id: 'aws.alertDescription',\n          defaultMessage: 'Manage connections for this source at any time in Settings > Sources.',\n        })}\n      </Alert>\n      <Bullseye>\n        <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-md\">\n          <EmptyStateIcon icon={CheckCircleIcon} color=\"var(--pf-global--success-color--100)\" className=\"pf-u-mb-0\" />\n          <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n            {intl.formatMessage({ id: 'aws.successTitle', defaultMessage: 'Amazon Web Services connection established' })}\n          </Title>\n          <EmptyStateBody>\n            {intl.formatMessage({\n              id: 'aws.successDescription',\n              defaultMessage: 'Discover the benefits of your connection or exit to manage your new source.',\n            })}\n            <Grid hasGutter className=\"src-c-aws-grid pf-u-mt-md\">\n              <GridItem md=\"6\">\n                <AwsLink href={GOLDIMAGES_HREF}>\n                  {intl.formatMessage({ id: 'aws.goldImages', defaultMessage: 'View enabled AWS gold images' })}\n                </AwsLink>\n              </GridItem>\n              <GridItem md=\"6\">\n                <AwsLink href={SUBWATCH_HREF}>\n                  {intl.formatMessage({ id: 'aws.subwtachUsage', defaultMessage: 'Subscription Watch usage' })}\n                </AwsLink>\n              </GridItem>\n              <GridItem md=\"6\">\n                <AwsLink href={INSIGHTS_HREF}>\n                  {intl.formatMessage({ id: 'aws.insights', defaultMessage: 'Get started with Red Hat Insights' })}\n                </AwsLink>\n              </GridItem>\n              <GridItem md=\"6\">\n                <AwsLink href={COST_HREF}>\n                  {intl.formatMessage({ id: 'aws.costLink', defaultMessage: 'Cost Management reporting' })}\n                </AwsLink>\n              </GridItem>\n            </Grid>\n          </EmptyStateBody>\n          <Button variant=\"primary\" onClick={onClose} className=\"pf-u-mt-xl\">\n            {intl.formatMessage({ id: 'exit', defaultMessage: 'Exit' })}\n          </Button>\n          <EmptyStateSecondaryActions>\n            <Text component=\"a\" href={LEARNMORE_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n              {intl.formatMessage({ id: 'aws.learnMore', defaultMessage: 'Learn more about this Cloud' })}\n            </Text>\n          </EmptyStateSecondaryActions>\n        </EmptyState>\n      </Bullseye>\n    </Fragment>\n  );\n};\n\nAmazonFinishedStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default AmazonFinishedStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\n\nconst ErroredStep = ({ onClose, returnButtonTitle, message, title, customText, primaryAction, secondaryActions, Component }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={ExclamationCircleIcon} color=\"var(--pf-global--danger-color--100)\" className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {title}\n      </Title>\n      <EmptyStateBody className=\"src-c-wizard--step-text\">{message || customText}</EmptyStateBody>\n      <Component variant=\"primary\" onClick={primaryAction || onClose}>\n        {returnButtonTitle}\n      </Component>\n      {secondaryActions && <EmptyStateSecondaryActions className=\"pf-u-mt-sm\">{secondaryActions}</EmptyStateSecondaryActions>}\n    </EmptyState>\n  </Bullseye>\n);\n\nErroredStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  returnButtonTitle: PropTypes.node,\n  message: PropTypes.node,\n  title: PropTypes.node,\n  customText: PropTypes.node,\n  primaryAction: PropTypes.func,\n  secondaryActions: PropTypes.node,\n  Component: PropTypes.elementType,\n};\n\nErroredStep.defaultProps = {\n  title: <FormattedMessage id=\"wizard.unsuccConfiguration\" defaultMessage=\"Something went wrong\" />,\n  // eslint-disable-next-line max-len\n  customText: (\n    <FormattedMessage\n      id=\"wizard.errorText\"\n      defaultMessage=\"There was a problem while trying to add your source. Please try again. If the error persists, open a support case.\"\n    />\n  ),\n  Component: Button,\n};\n\nexport default ErroredStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { ClipboardCopy } from '@patternfly/react-core';\n\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  EmptyStateVariant,\n  Form,\n  FormGroup,\n  Title,\n} from '@patternfly/react-core';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport computeSourcesUrl from '../../utilities/computeSourcesUrl';\n\nconst FinishedStep = ({\n  onClose,\n  successfulMessage,\n  hideSourcesButton,\n  returnButtonTitle,\n  title,\n  linkText,\n  secondaryActions,\n  uuid,\n}) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={CheckCircleIcon} color=\"var(--pf-global--success-color--100)\" className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {title}\n      </Title>\n      <EmptyStateBody className=\"src-c-wizard--step-text\">{successfulMessage}</EmptyStateBody>\n      {uuid && (\n        <Form className=\"src-c-uuid\">\n          <FormGroup label={<FormattedMessage id=\"wizard.sourcesUid\" defaultMessage=\"Source UUID\" />} fieldId=\"source-uuid\">\n            <ClipboardCopy id=\"source-uuid\" isReadOnly hoverTip=\"Source UUID\" clickTip=\"Copied\" className=\"pf-u-mt-md\">\n              {uuid}\n            </ClipboardCopy>\n          </FormGroup>\n        </Form>\n      )}\n      <Button variant=\"primary\" onClick={onClose} className=\"pf-u-mt-xl\">\n        {returnButtonTitle}\n      </Button>\n      {!hideSourcesButton && (\n        <EmptyStateSecondaryActions>\n          <Button variant=\"link\" component=\"a\" target=\"_blank\" rel=\"noopener noreferrer\" href={computeSourcesUrl()}>\n            {linkText}\n          </Button>\n        </EmptyStateSecondaryActions>\n      )}\n      {secondaryActions && <EmptyStateSecondaryActions>{secondaryActions}</EmptyStateSecondaryActions>}\n    </EmptyState>\n  </Bullseye>\n);\n\nFinishedStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  successfulMessage: PropTypes.node.isRequired,\n  hideSourcesButton: PropTypes.bool,\n  returnButtonTitle: PropTypes.node.isRequired,\n  title: PropTypes.node,\n  linkText: PropTypes.node,\n  secondaryActions: PropTypes.node,\n  uuid: PropTypes.string,\n};\n\nFinishedStep.defaultProps = {\n  title: <FormattedMessage id=\"wizard.succConfiguration\" defaultMessage=\"Configuration successful\" />,\n  linkText: <FormattedMessage id=\"wizard.toSources\" defaultMessage=\"Take me to sources\" />,\n};\n\nexport default FinishedStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  EmptyStateVariant,\n  Spinner,\n  Title,\n} from '@patternfly/react-core';\n\nconst LoadingStep = ({ onClose, customText, cancelTitle, description }) => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n      <EmptyStateIcon icon={Spinner} className=\"pf-u-mb-0\" />\n      <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n        {customText}\n      </Title>\n      {description && <EmptyStateBody className=\"src-c-wizard--step-text\">{description}</EmptyStateBody>}\n      {onClose && (\n        <EmptyStateSecondaryActions className=\"pf-u-mt-xl\">\n          <Button variant=\"link\" onClick={onClose}>\n            {cancelTitle}\n          </Button>\n        </EmptyStateSecondaryActions>\n      )}\n    </EmptyState>\n  </Bullseye>\n);\n\nLoadingStep.propTypes = {\n  onClose: PropTypes.func,\n  customText: PropTypes.node,\n  cancelTitle: PropTypes.node,\n  description: PropTypes.node,\n};\n\nLoadingStep.defaultProps = {\n  customText: <FormattedMessage id=\"wizard.loadingText\" defaultMessage=\"Loading, please wait.\" />,\n  cancelTitle: <FormattedMessage id=\"wizard.cancelText\" defaultMessage=\"Cancel\" />,\n};\n\nexport default LoadingStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { ClipboardCopy } from '@patternfly/react-core';\n\nimport {\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\n\nimport WrenchIcon from '@patternfly/react-icons/dist/esm/icons/wrench-icon';\n\nconst TimeoutStep = ({ onClose, returnButtonTitle, title, secondaryActions, uuid }) => {\n  const intl = useIntl();\n\n  return (\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n        <EmptyStateIcon icon={WrenchIcon} color=\"var(--pf-global--Color--200)\" className=\"pf-u-mb-0\" />\n        <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n          {title}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage(\n            {\n              id: 'wizard.uncompleteConfigurationDescription',\n              defaultMessage:\n                'We are still working to confirm credentials and app settings.{newLine}To track progress, check the Status column in the Sources table.',\n            },\n            { newLine: <br key=\"br\" /> }\n          )}\n          {uuid ?? (\n            <ClipboardCopy isReadOnly hoverTip=\"Source UUID\" clickTip=\"Copied\" className=\"pf-u-mt-md\">\n              {uuid}\n            </ClipboardCopy>\n          )}\n        </EmptyStateBody>\n        <Button variant=\"primary\" onClick={onClose} className=\"pf-u-mt-xl\">\n          {returnButtonTitle}\n        </Button>\n        {secondaryActions && <EmptyStateSecondaryActions>{secondaryActions}</EmptyStateSecondaryActions>}\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nTimeoutStep.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  returnButtonTitle: PropTypes.node.isRequired,\n  title: PropTypes.node,\n  secondaryActions: PropTypes.node,\n  uuid: PropTypes.string,\n};\n\nTimeoutStep.defaultProps = {\n  title: <FormattedMessage id=\"wizard.uncompleteConfigurationTitle\" defaultMessage=\"Configuration in progress\" />,\n};\n\nexport default TimeoutStep;\n","const computeSourceError = (source, intl) =>\n  source.applications?.filter(Boolean).find(({ availability_status_error }) => availability_status_error)\n    ?.availability_status_error ||\n  source.endpoint?.filter(Boolean).find(({ availability_status_error }) => availability_status_error)\n    ?.availability_status_error ||\n  source.authentications?.filter(Boolean).find(({ availability_status_error }) => availability_status_error)\n    ?.availability_status_error ||\n  intl.formatMessage({ id: 'wizard.unknownError', defaultMessage: 'Unknown error' });\n\nexport default computeSourceError;\n","export const computeSourceStatus = (source) => {\n  const appStatuses =\n    source.applications?.filter(Boolean).map(({ availability_status }) => availability_status || 'timeout') || [];\n  const endpointStatuses =\n    source.endpoint?.filter(Boolean).map(({ availability_status }) => availability_status || 'timeout') || [];\n  const authenticationsStatuses =\n    source.authentications?.filter(Boolean).map(({ availability_status }) => availability_status || 'timeout') || [];\n\n  const statuses = [...appStatuses, ...endpointStatuses, ...authenticationsStatuses];\n\n  if (statuses.includes('unavailable')) {\n    return 'unavailable';\n  }\n\n  if (statuses.length > 0 && statuses.every((status) => status === 'available')) {\n    return 'available';\n  }\n\n  if (statuses.includes('timeout')) {\n    return 'timeout';\n  }\n\n  return 'finished';\n};\n\nexport default computeSourceStatus;\n","const computeSourcesUrl = () => (insights.chrome.isBeta() ? `/preview/settings/sources` : `/settings/sources`);\n\nexport default computeSourcesUrl;\n","import { TOPOLOGY_INV_NAME } from './constants';\n\nconst filterApps = (type) => type.name !== TOPOLOGY_INV_NAME;\n\nexport const filterVendorAppTypes =\n  (sourceTypes, category) =>\n  ({ supported_source_types }) =>\n    supported_source_types.find((type) => sourceTypes.find(({ name }) => type === name)?.category === category);\n\nexport default filterApps;\n"],"names":["checkSourceStatus","id","getSourcesApi","checkAvailabilitySource","delay","interval","prms","Promise","resolve","setTimeout","bind","checkAppAvailability","timeout","entity","updatedTime","res","rej","start","Date","now","checkSource","then","data","availability_status","availability_status_error","last_checked_at","updated_at","error","CloseModal","onExit","onStay","title","exitTitle","stayTitle","description","intl","useIntl","isMounted","useRef","Modal","onEscapePress","e","current","className","variant","formatMessage","defaultMessage","header","Title","headingLevel","size","isOpen","onClose","actions","Button","key","onClick","propTypes","PropTypes","defaultProps","AwsLink","href","children","fill","Text","component","target","rel","PREFIX","insights","chrome","isBeta","SUBWATCH_HREF","INSIGHTS_HREF","COST_HREF","AmazonFinishedStep","Fragment","Alert","isInline","Bullseye","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","CheckCircleIcon","color","EmptyStateBody","Grid","hasGutter","GridItem","md","EmptyStateSecondaryActions","ErroredStep","returnButtonTitle","message","customText","primaryAction","secondaryActions","Component","ExclamationCircleIcon","FinishedStep","successfulMessage","hideSourcesButton","linkText","uuid","Form","FormGroup","label","fieldId","ClipboardCopy","isReadOnly","hoverTip","clickTip","computeSourcesUrl","LoadingStep","cancelTitle","Spinner","TimeoutStep","WrenchIcon","newLine","source","applications","filter","Boolean","find","endpoint","authentications","appStatuses","map","endpointStatuses","authenticationsStatuses","statuses","includes","length","every","status","filterVendorAppTypes","sourceTypes","category","supported_source_types","type","name","TOPOLOGY_INV_NAME"],"sourceRoot":""}