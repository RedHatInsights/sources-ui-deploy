{"version":3,"file":"js/970.c20f9256d45fce7434dd.js","mappings":"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","sources":["webpack:///./src/components/CredentialsForm/ModalFormTemplate.js","webpack:///./src/components/CredentialsForm/CredentialsForm.js","webpack:///./src/components/addSourceWizard/superKey/generateSuperKeyFields.js","webpack:///./src/hooks/useAppNavigate.js"],"sourcesContent":["import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { ActionGroup, Button, Form, Modal } from '@patternfly/react-core';\n\nconst CustomFormWrapper = (props) => <Form {...props} id=\"modal-form\" />;\n\nconst CustomButtons = () => {\n  const intl = useIntl();\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy\n      subscription={{\n        submitting: true,\n        pristine: true,\n        invalid: true,\n        validating: true,\n      }}\n    >\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-v5-c-form\">\n          <ActionGroup className=\"pf-v5-u-mt-0\">\n            <Button\n              variant=\"primary\"\n              form=\"modal-form\"\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {intl.formatMessage({\n                id: 'sources.submit',\n                defaultMessage: 'Submit',\n              })}\n            </Button>\n            <Button variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {intl.formatMessage({\n                id: 'sources.cancel',\n                defaultMessage: 'Cancel',\n              })}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nconst ModalFormTemplate = ({ ModalProps, ...props }) => (\n  <Modal footer={<CustomButtons />} {...ModalProps}>\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ModalFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\n\nimport { Bullseye, Modal, Spinner } from '@patternfly/react-core';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport { replaceRouteId, routes } from '../../Routing';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport ModalFormTemplate from './ModalFormTemplate';\nimport { getSourcesApi } from '../../api/entities';\nimport { addMessage } from '../../redux/sources/actions';\nimport generateSuperKeyFields from '../../components/addSourceWizard/superKey/generateSuperKeyFields';\nimport { useAppNavigate } from '../../hooks/useAppNavigate';\n\nconst initialState = {\n  loading: true,\n  initialValues: {},\n};\n\nconst reducer = (state, { type, values }) => {\n  switch (type) {\n    case 'loaded':\n      return {\n        ...state,\n        loading: false,\n        initialValues: {\n          authentication: values,\n        },\n      };\n  }\n};\n\nconst CredentialsForm = () => {\n  const source = useSource();\n  const navigate = useAppNavigate();\n  const intl = useIntl();\n  const reduxDispatch = useDispatch();\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes, shallowEqual);\n  const sourceTypeName = sourceTypes.find(({ id }) => id === source.source_type_id).name;\n\n  const [{ loading, initialValues }, dispatch] = useReducer(reducer, initialState);\n\n  const goBackToDetail = () => navigate(replaceRouteId(routes.sourcesDetail.path, source.id));\n\n  const isPaused = source.paused_at;\n\n  const title = isPaused\n    ? intl.formatMessage({ id: 'editCredentials.paused.title', defaultMessage: 'View account authorization credentials' })\n    : intl.formatMessage({ id: 'editCredentials.title', defaultMessage: 'Edit account authorization credentials' });\n  const description = isPaused\n    ? undefined\n    : intl.formatMessage({\n        id: 'editCredentials.description',\n        defaultMessage:\n          'Use the fields below to reset your account authorization credentials. It may take some time to validate new information.',\n      });\n\n  useEffect(() => {\n    getSourcesApi()\n      .listSourceAuthentications(source.id)\n      .then(({ data }) => {\n        const authhype = sourceTypes\n          .find(({ name }) => name === sourceTypeName)\n          ?.schema.authentication.find(({ is_superkey }) => is_superkey);\n\n        const values = data.find(({ authtype }) => authtype === authhype.type);\n\n        dispatch({ type: 'loaded', values });\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Modal title={title} variant=\"small\" isOpen onClose={goBackToDetail}>\n        <Bullseye className=\"pf-v5-u-m-2xl\">\n          <Spinner />\n        </Bullseye>\n      </Modal>\n    );\n  }\n\n  return (\n    <SourcesFormRenderer\n      clearedValue={null}\n      schema={{\n        fields: generateSuperKeyFields(sourceTypes, sourceTypeName).map((field) =>\n          source.paused_at ? { ...field, isDisabled: true } : field,\n        ),\n      }}\n      // eslint-disable-next-line no-unused-vars\n      onSubmit={async ({ authentication: { tenant, source_id, id, authtype, resource_id, resource_type, ...values } }) => {\n        goBackToDetail();\n\n        try {\n          await getSourcesApi().updateAuthentication(id, values);\n\n          reduxDispatch(\n            addMessage({\n              title: intl.formatMessage({ id: 'editCredentials.alert.title', defaultMessage: 'New credentials saved' }),\n              description: intl.formatMessage({\n                id: 'editCredentials.alert.description',\n                defaultMessage: 'It may take some time to validate your new credentials. Check this page for status updates.',\n              }),\n              variant: 'info',\n            }),\n          );\n        } catch (error) {\n          reduxDispatch(\n            addMessage({\n              title: intl.formatMessage({\n                id: 'editCredentials.alert.warning.title',\n                defaultMessage: 'Error updating credentials',\n              }),\n              description: intl.formatMessage({\n                id: 'editCredentials.alert.warning.description',\n                defaultMessage:\n                  'There was a problem while trying to update credentials. Please try again. If the error persists, open a support case.',\n              }),\n              variant: 'danger',\n            }),\n          );\n        }\n      }}\n      initialValues={initialValues}\n      FormTemplate={(props) => (\n        <ModalFormTemplate\n          {...props}\n          ModalProps={{\n            isOpen: true,\n            onClose: goBackToDetail,\n            variant: 'small',\n            title,\n            description,\n            ...(isPaused && {\n              footer: null,\n            }),\n          }}\n        />\n      )}\n      onCancel={goBackToDetail}\n    />\n  );\n};\n\nexport default CredentialsForm;\n","import { getAdditionalAuthFields, getAdditionalStepKeys, getNoStepsFields, injectAuthFieldsInfo } from '../schemaBuilder';\n\nconst generateSuperKeyFields = (sourceTypes, source_type) => {\n  const authype = sourceTypes\n    .find(({ name }) => name === source_type)\n    ?.schema.authentication.find(({ is_superkey, type }) => is_superkey || type === 'access_key_secret_key');\n\n  const additionalIncludesStepKeys = getAdditionalStepKeys(source_type, authype.type);\n\n  const fields = [\n    ...getAdditionalAuthFields(source_type, authype.type),\n    ...injectAuthFieldsInfo(getNoStepsFields(authype.fields, additionalIncludesStepKeys), source_type, authype.type),\n  ];\n\n  return fields;\n};\n\nexport default generateSuperKeyFields;\n","import { useNavigate } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../utilities/utils';\n\nexport const useAppNavigate = () => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n"],"names":["CustomFormWrapper","props","Form","id","CustomButtons","intl","onCancel","subscription","submitting","pristine","invalid","validating","className","ActionGroup","Button","variant","form","type","isDisabled","formatMessage","defaultMessage","onClick","ModalFormTemplate","ModalProps","Modal","footer","showFormControls","FormWrapper","propTypes","initialState","loading","initialValues","reducer","state","values","authentication","source","useSource","navigate","useAppNavigate","reduxDispatch","sourceTypes","sources","sourceTypeName","find","source_type_id","name","dispatch","useReducer","goBackToDetail","sourcesDetail","path","isPaused","paused_at","title","description","undefined","useEffect","listSourceAuthentications","then","data","authhype","schema","is_superkey","authtype","isOpen","onClose","Bullseye","Spinner","SourcesFormRenderer","clearedValue","fields","generateSuperKeyFields","map","field","onSubmit","async","tenant","source_id","resource_id","resource_type","updateAuthentication","error","FormTemplate","source_type","authype","additionalIncludesStepKeys","useNavigate","to","options"],"sourceRoot":""}