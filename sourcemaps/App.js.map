{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/redux/sources/actions-types.js","webpack:///./src/redux/sources/actions.js","webpack:///./src/api/source_types.js","webpack:///./src/api/doUpdateSource.js","webpack:///./src/api/patchCmValues.js","webpack:///./src/api/entities.js","webpack:///./src/App.scss","webpack:///./src/Routes.js","webpack:///./src/App.scss?cd4f","webpack:///./src/views/sourcesViewDefinition.js","webpack:///./src/components/SourcesSimpleView/loaders.js","webpack:///./src/components/SourcesSimpleView/EmptyStateTable.js","webpack:///./src/hooks/useIsLoaded.js","webpack:///./src/hooks/useIsOrgAdmin.js","webpack:///./src/components/SourcesSimpleView/SourcesSimpleView.js","webpack:///./src/components/SourcesEmptyState.js","webpack:///./src/components/editField/EditField.js","webpack:///./src/Utilities/SourcesFormRenderer.js","webpack:///./src/components/SourceEditForm/parser/genericInfo.js","webpack:///./src/components/SourceEditForm/parser/authentication.js","webpack:///./src/components/SourceEditForm/parser/unsupportedAuthType.js","webpack:///./src/components/SourceEditForm/parser/helpers.js","webpack:///./src/components/SourceEditForm/parser/endpoint.js","webpack:///./src/components/SourceEditForm/parser/application.js","webpack:///./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack:///./src/api/doLoadSourceForEdit.js","webpack:///./src/components/SourceEditForm/HorizontalFormWrapper.js","webpack:///./src/components/SourceEditForm/Header.js","webpack:///./src/components/SourceEditForm/helpers.js","webpack:///./src/components/SourceEditForm/onSubmit.js","webpack:///./src/components/SourceEditForm/SourceEditModal.js","webpack:///./src/api/getCmValues.js","webpack:///./src/components/SourceEditForm/importedRedirect.js","webpack:///./src/components/RedirectNoId/RedirectNoId.js","webpack:///./src/hooks/useSource.js","webpack:///./src/components/ApplicationsList/ApplicationList.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/SourceRemoveModal.js","webpack:///./src/components/AddApplication/AddApplicationDescription.js","webpack:///./src/components/AddApplication/AuthTypeSetter.js","webpack:///./src/components/AddApplication/AddApplicationSchema.js","webpack:///./src/components/steps/LoadingStep.js","webpack:///./src/components/steps/ErroredStep.js","webpack:///./src/components/AddApplication/steps/ErroredStep.js","webpack:///./src/components/steps/FinishedStep.js","webpack:///./src/components/AddApplication/steps/FinishedStep.js","webpack:///./src/components/AddApplication/WizardBody.js","webpack:///./src/api/doAttachApp.js","webpack:///./src/components/AddApplication/AddApplication.js","webpack:///./src/components/UndoButton/UndoButtonAdd.js","webpack:///./src/components/UndoButton/refreshPage.js","webpack:///./src/pages/SourcesPage/helpers.js","webpack:///./src/pages/SourcesPage/PaginationLoader.js","webpack:///./src/components/RedirectNotAdmin/RedirectNotAdmin.js","webpack:///./src/pages/SourcesPage.js","webpack:///./src/components/ErrorBoundary.js","webpack:///./src/redux/user/actions-types.js","webpack:///./src/components/PermissionsChecker.js","webpack:///./src/redux/user/actions.js","webpack:///./src/App.js","webpack:///./src/redux/sources/reducer.js","webpack:///./src/redux/user/reducer.js","webpack:///./src/Utilities/store.js","webpack:///./src/entry.js","webpack:///./src/entries.js","webpack:///./src/components/SourcesSimpleView/formatters.js","webpack:///./src/api/constants.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","parentHotUpdateCallback","window","hotAvailableFilesMap","hotRequestedFilesMap","hotUpdate","hotWaitingFiles","hotChunksLoading","hotUpdateDownloaded","hotAddUpdateChunk","hotCurrentChildModule","hotApplyOnUpdate","hotCurrentHash","hotCurrentModuleData","hotCurrentParents","hotCurrentParentsTemp","hotCreateModule","hot","_acceptedDependencies","_declinedDependencies","_selfAccepted","_selfDeclined","_disposeHandlers","_main","active","accept","dep","callback","undefined","decline","dispose","addDisposeHandler","removeDisposeHandler","idx","indexOf","check","hotCheck","hotApply","status","l","hotStatus","hotStatusHandlers","addStatusHandler","removeStatusHandler","hotSetStatus","newStatus","hotDeferred","hotUpdateNewHash","hotWaitingFilesMap","toModuleId","id","Error","requestTimeout","Promise","resolve","reject","XMLHttpRequest","request","requestPath","p","open","timeout","send","err","onreadystatechange","readyState","update","JSON","parse","responseText","e","then","c","h","promise","hotEnsureUpdateChunk","script","document","createElement","charset","src","head","appendChild","hotDownloadUpdateChunk","deferred","outdatedModules","options","cb","module","getAffectedStuff","updateModuleId","outdatedDependencies","queue","map","chain","queueItem","pop","installedModules","type","parents","parentId","parent","concat","addAllToSet","a","b","item","appliedUpdate","warnUnexpectedRequire","console","warn","abortError","doApply","doDispose","chainInfo","join","onDeclined","ignoreDeclined","onUnaccepted","ignoreUnaccepted","onAccepted","onDisposed","outdatedSelfAcceptedModules","errorHandler","keys","forEach","hotDisposeChunk","dependency","moduleOutdatedDependencies","slice","disposeHandlers","children","child","error","callbacks","onErrored","dependencyId","ignoreErrored","err2","originalError","0","exports","me","fn","ObjectFactory","name","configurable","enumerable","get","set","value","defineProperty","finishChunkLoading","t","mode","hotCreateRequire","m","d","getter","o","r","Symbol","toStringTag","__esModule","ns","create","key","bind","n","object","property","jsonpArray","oldJsonpFunction","ACTION_TYPES","reduce","acc","curr","SORT_ENTITIES","PAGE_AND_SIZE","FILTER_SOURCES","ADD_APP_TO_SOURCE","UNDO_ADD_SOURCE","CLEAR_ADD_SOURCE","SET_COUNT","ADD_HIDDEN_SOURCE","CLEAR_FILTERS","loadEntities","dispatch","getState","LOAD_ENTITIES_PENDING","sources","pageSize","pageNumber","sortBy","sortDirection","filterValue","all","doLoadEntities","doLoadCountOfSources","count","meta","payload","LOAD_ENTITIES_FULFILLED","LOAD_ENTITIES_REJECTED","detail","title","loadSourceTypes","LOAD_SOURCE_TYPES_PENDING","getSourcesApi","listSourceTypes","sourceTypes","LOAD_SOURCE_TYPES_FULFILLED","loadAppTypes","LOAD_APP_TYPES_PENDING","doLoadAppTypes","appTypes","LOAD_APP_TYPES_FULFILLED","sortEntities","column","direction","pageAndSize","page","size","paginationClicked","filterSources","updateSource","source","formData","description","errorTitles","doUpdateSource","_finished","ADD_NOTIFICATION","variant","dismissable","addMessage","customId","removeSource","sourceId","REMOVE_SOURCE_PENDING","doRemoveSource","loaded","REMOVE_SOURCE_FULFILLED","REMOVE_SOURCE_REJECTED","removeMessage","REMOVE_NOTIFICATION","removeApplication","appId","successTitle","errorTitle","REMOVE_APPLICATION","doDeleteApplication","notifications","undoAddSource","values","clearAddSource","addHiddenSource","clearFilters","urlOrHost","url","scheme","host","port","path","u","URL","protocol","replace","hostname","defaultPort","pathname","parseUrl","endpoint","promises","errors","endPointPort","parseInt","endpointData","isNaN","updateEndpoint","endpoints","authentications","idWithoutPrefix","updateAuthentication","authentication","billing_source","credentials","cmDataOut","axiosInstance","patch","COST_MANAGEMENT_API_BASE","costManagement","apiInstance","axiosInstanceInsights","interceptors","response","use","message","SourcesDefaultApi","SOURCES_API_BASE","deleteSource","pagination","sorting","filtering","filterQueries","source_type_id","x","graphQlAttributes","postGraphQL","query","doCreateApplication","source_id","application_type_id","createApplication","errorMessage","deleteApplication","restFilterGenerator","doLoadSource","SourcesPage","lazy","Loader","y","rx","ry","width","height","paths","sourcesNew","sourcesEdit","sourcesRemove","sourceManageApps","Routes","fallback","component","content","transform","locals","newContent","sourcesColumns","intl","notSortable","formatMessage","defaultMessage","formatter","sortable","hidden","COLUMN_COUNT","PlaceHolderTable","className","Array","fill","_","RowWrapperLoader","row","isDeleting","initialProps","colSpan","RowWrapper","propTypes","PropTypes","isRequired","EmptyStateTable","useDispatch","Bullseye","EmptyState","EmptyStateVariant","small","EmptyStateIcon","icon","SearchIcon","Title","headingLevel","EmptyStateBody","Button","onClick","useIsLoaded","useSelector","useIsOrgAdmin","user","isOrgAdmin","itemToCells","columns","filter","col","formatters","renderSources","entities","isOpen","expanded","cells","disableActions","prepareColumnsCells","transforms","reducer","state","actionResolver","rowData","actions","_ev","_i","style","color","imported","insertEditAction","SourcesSimpleView","useHistory","useIntl","shallowEqual","sourceTypesLoaded","appTypesLoaded","numberOfEntities","reduxDispatch","useReducer","rows","isLoaded","refreshSources","useEffect","shownRows","heightAuto","props","Table","gridBreakPoint","aria-label","onSort","_event","index","cell","rowWrapper","SourcesEmptyState","body","Card","CardBody","WrenchIcon","to","marginTop","node","EditField","label","helperText","hideLabel","input","setEdit","showError","touched","emptyText","includes","FormGroup","fieldId","isValid","helperTextInvalid","tabIndex","onKeyPress","charCode","preventDefault","TextContent","string","bool","FieldProvider","oneOfType","func","shape","any","EditFieldProvider","rest","SourcesFormRenderer","layoutMapper","formFieldsMapper","mapperExtension","genericInfo","editing","componentTypes","TEXT_FIELD","validate","asyncValidator","isReadOnly","modifyAuthSchemas","fields","field","editedName","startsWith","fieldName","createAuthFieldName","isEditing","finalField","split","validation","validatorTypes","REQUIRED","removeRequiredValidator","authenticationFields","sourceType","schema","auth","schemaAuth","find","authtype","Content","Text","TextVariants","additionalStepKeys","hardcodedSchemas","getAdditionalAuthSteps","enhancedFields","stepKey","getEnhancedAuthField","SUB_FORM","NOT_CHANGING_COMPONENTS","CHECKBOX","SWITCH","modifyFields","endpointFields","getEnhancedEndpointField","APP_NAMES","cmFieldsPrefixes","isCMField","some","prefix","getCMFields","flatMap","getEnhancedCMField","authenticationsTypes","apps","hasAppField","appendClusterIdentifier","costManagementFields","applications","costManagementApp","hasCostManagement","billingSourceFields","enhandcedFields","display_name","applicationsFields","parseSourceToSchema","Boolean","HorizontalFormWrapper","Form","isHorizontal","Header","Grid","GridItem","xs","TitleLevel","h1","prepareInitialValues","sourceTypeName","auhenticationsFinal","endpointToUrl","source_type","onSubmit","filteredValues","selectOnlyEditedValues","initialState","loading","initialValues","SourceEditModal","setState","useParams","history","showSource","listSourceEndpoints","listSourceApplications","sourceData","basicValues","listEndpointAuthentications","doLoadSourceForEdit","redirectWhenImported","product_name","Modal","header","isLarge","onClose","onCancel","formApi","dirtyFields","FormWrapper","clearedValue","canReset","disableSubmit","onReset","buttonsLabels","submitLabel","RedirectNoId","useState","applicationIsLoaded","setIsApplicationLoaded","useSource","ApplicationList","setApplicationToRemove","breakpoints","namePrefix","sourceAppsNames","appType","app","dependent_applications","sort","localeCompare","md","marginBottom","remove","ButtonVariant","link","isInline","number","defaultProps","RemoveAppModal","dependentApps","appName","isSmall","isFooterLeftAligned","titleSuccess","titleError","Split","gutter","SplitItem","isFilled","Stack","arrayOf","SourceRemoveModal","acknowledge","setAcknowledge","removingApp","sourceHasActiveApp","isDisabled","Fragment","TextList","TextListItem","Checkbox","onChange","isChecked","AddApplicationDescription","h4","AuthTypeSetter","formOptions","authenticationValues","newAuthType","previousAuthType","checkAuthType","formValues","application","supported_auth_type","change","hasAuthenticationAlready","innerSetter","NoAvailableApplicationDescription","ApplicationSummary","hasAlreadySupportedAuthType","authValues","applicationTypes","hasAvailableApps","nextStep","appendEndpoint","hasEndpointStep","supported_source_types","doNotRequirePasswords","schemaBuilder","createSpecificAuthTypeSelection","appAdditionalSteps","getAdditionalSteps","createAdditionalSteps","createEndpointStep","applicationSelection","DefaultIcon","WIZARD","inModal","predictSteps","showTitles","buttonLabels","submit","cancel","back","hideField","LoadingStep","customText","full","EmptyStateSecondaryActions","ErroredStep","onRetry","ErrorCircleOIcon","ErroredStepAttach","goToSources","h6","FinishedStep","successfulMessage","secondaryActions","CheckCircleIcon","FinishedStepAttach","WizardBodyAttach","step","Wizard","steps","isFinishedStep","removeEmpty","obj","isEmpty","doAttachApp","authenticationInitialValues","formState","allFormValues","selectedAuthId","authInitialValues","valuesWithoutAuth","newAddedValues","addedDiff","updatedValues","updatedDiff","newAddedAuthValues","updatedAuthValues","merge","cloneDeep","endpointId","hasModifiedEndpoint","hasModifiedUrl","createEndpointData","default","createEndpoint","authenticationData","resource_id","resource_type","createAuthentication","patchSource","handleError","selectedApp","saveSelectedApp","authenticationsValues","sourceAppsLength","AddApplication","removeAppAction","WizardBody","shownStep","appIds","filteredAppTypes","availableAppTypes","hasDeletingApp","createSchema","onSubmitFinal","showFormControls","subscription","onStateUpdate","UndoButton","messageId","notification","location","goBack","refreshPage","debouncedFiltering","awesomeDebounce","refresh","afterSuccessLoadParameters","prepareSourceTypeSelection","setFilter","prepareChips","category","chips","chipsFormatters","loadedTypes","types","PaginationLoader","speed","primaryColor","secondaryColor","RedirectNotAdmin","showEmptyState","setShowEmptyState","checkEmptyState","setCheckEmptyState","setFilterValue","fetchingError","addSourceInitialValues","onSetPage","_e","maximumPageNumber","Math","ceil","max","paginationConfig","itemCount","perPage","onPerPageSelect","isCompact","paginationConfigBottom","dropDirection","showPaginationLoader","exact","render","Date","now","undo","UndoButtonAdd","onCloseAddSourceWizard","afterSuccess","hideSourcesButton","actionsConfig","filterConfig","items","filterValues","activeFiltersConfig","filters","onDelete","deleteAll","chip","removeChips","ErrorBoundary","sentryId","Sentry","this","toString","stack","errorInfo","Component","connect","PermissionsChecker","SET_ORG_ADMIN_PENDING","insights","chrome","getUser","identity","is_org_admin","SET_ORG_ADMIN_FULFILLED","SET_ORG_ADMIN_REJECTED","loadOrgAdmin","App","init","identifyApp","_exception","basename","getBaseName","locale","padding","childProps","defaultSourcesState","addAppToSource","entity","REMOVE_APPLICATION_PENDING","REMOVE_APPLICATION_FULFILLED","REMOVE_APPLICATION_REJECTED","defaultUserState","getStore","includeLogger","middlewares","thunk","notificationsMiddleware","errorTitleKey","errorDescriptionKey","logger","registry","ReducerRegistry","register","applyReducerHash","SourcesReducer","UserReducer","ReactDOM","store","getElementById","http","https","onlyTrueEndpointValues","String","schemaToPort","applicationFormatter","_item","filteredApplications","sourceTypeFormatter","dateFormatter","str","date","nameFormatter","sourceIsOpenShift","formatURL","importedFormatter","text","cfme","toLowerCase","importsTexts","isRead","formatAvailibilityErrors","availability_status","availability_status_error","applicationName","availabilityFormatter","noApps","statusContent","unavailable","available","partially_available","getStatusIcon","getStatusText","tooltipText","getStatusTooltipText","bodyContent","sourceTypeIconFormatter","sourceTypeId","icon_url","alt","defaultFormatter","process"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"7f8236ddd1936ff4a359\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted &&\n \t\t\t\t// removed self-accepted modules should not be required\n \t\t\t\tappliedUpdate[moduleId] !== warnUnexpectedRequire\n \t\t\t) {\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Now in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/sources/\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([546,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const ACTION_TYPES = [\n    'LOAD_ENTITIES',\n    'CREATE_SOURCE',\n    'REMOVE_SOURCE',\n    'LOAD_SOURCE_TYPES',\n    'LOAD_APP_TYPES',\n    'REMOVE_APPLICATION'\n].reduce((acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`\n}), {});\n\nexport const SORT_ENTITIES = 'SORT_ENTITIES';\nexport const PAGE_AND_SIZE = 'PAGE_AND_SIZE';\nexport const FILTER_SOURCES  = 'FILTER_SOURCES';\nexport const ADD_APP_TO_SOURCE = 'ADD_APP_TO_SOURCE';\nexport const UNDO_ADD_SOURCE = 'UNDO_ADDD_SOURCE';\nexport const CLEAR_ADD_SOURCE = 'CLEAR_ADD_SOURCE';\nexport const SET_COUNT = 'SET_COUNT';\nexport const ADD_HIDDEN_SOURCE = 'ADD_HIDDEN_SOURCE';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\n","import { ADD_NOTIFICATION, REMOVE_NOTIFICATION } from '@redhat-cloud-services/frontend-components-notifications';\nimport {\n    ACTION_TYPES,\n    SORT_ENTITIES,\n    PAGE_AND_SIZE,\n    FILTER_SOURCES,\n    ADD_APP_TO_SOURCE,\n    UNDO_ADD_SOURCE,\n    CLEAR_ADD_SOURCE,\n    SET_COUNT,\n    ADD_HIDDEN_SOURCE,\n    CLEAR_FILTERS\n} from './actions-types';\nimport {\n    doLoadAppTypes,\n    doRemoveSource,\n    doLoadEntities,\n    doDeleteApplication,\n    doLoadCountOfSources\n} from '../../api/entities';\nimport { doUpdateSource } from '../../api/doUpdateSource';\nimport { doLoadSourceTypes } from '../../api/source_types';\n\nexport const loadEntities = (options) => (dispatch, getState) => {\n    dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_PENDING,\n        options\n    });\n\n    const { pageSize, pageNumber, sortBy, sortDirection, filterValue } = getState().sources;\n\n    return Promise.all([\n        doLoadEntities({ pageSize, pageNumber, sortBy, sortDirection, filterValue }),\n        doLoadCountOfSources(filterValue).then(({ meta: { count } }) => dispatch({ type: SET_COUNT, payload: { count } }))\n    ]).then(([{ sources }]) => dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_FULFILLED,\n        payload: sources\n    })).catch(error => dispatch({\n        type: ACTION_TYPES.LOAD_ENTITIES_REJECTED,\n        payload: { error: { detail: error.detail || error.data, title: 'Fetching data failed, try refresh page' } }\n    }));\n};\n\nexport const loadSourceTypes = () => (dispatch) => {\n    dispatch({ type: ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING });\n\n    return doLoadSourceTypes().then(sourceTypes => dispatch({\n        type: ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED,\n        payload: sourceTypes\n    }));\n};\n\nexport const loadAppTypes = () => (dispatch) => {\n    dispatch({ type: ACTION_TYPES.LOAD_APP_TYPES_PENDING });\n\n    return doLoadAppTypes().then(appTypes => dispatch({\n        type: ACTION_TYPES.LOAD_APP_TYPES_FULFILLED,\n        payload: appTypes.data\n    }));\n};\n\nexport const sortEntities = (column, direction) => (dispatch) => {\n    dispatch({\n        type: SORT_ENTITIES,\n        payload: { column, direction }\n    });\n\n    return dispatch(loadEntities());\n};\n\nexport const pageAndSize = (page, size) => (dispatch) => {\n    dispatch({\n        type: PAGE_AND_SIZE,\n        payload: { page, size }\n    });\n\n    return dispatch(loadEntities({ paginationClicked: true }));\n};\n\nexport const filterSources = (value) => (dispatch) => {\n    dispatch(({\n        type: FILTER_SOURCES,\n        payload: { value }\n    }));\n\n    return dispatch(loadEntities());\n};\n\nexport const updateSource = (source, formData, title, description, errorTitles) => (dispatch) =>\n    doUpdateSource(source, formData, errorTitles).then(_finished => dispatch({\n        type: ADD_NOTIFICATION,\n        payload: {\n            variant: 'success',\n            title,\n            description,\n            dismissable: true\n        }\n    })).catch(error => {\n        dispatch({\n            type: 'FOOBAR_REJECTED',\n            payload: error\n        });\n\n        throw error;\n    });\n\nexport const addMessage = (title, variant, description, customId) => (dispatch) => dispatch({\n    type: ADD_NOTIFICATION,\n    payload: {\n        title,\n        variant,\n        description,\n        dismissable: true,\n        customId\n    }\n});\n\nexport const removeSource = (sourceId, title) => (dispatch) => {\n    dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_PENDING,\n        meta: {\n            sourceId\n        }\n    });\n\n    return doRemoveSource(sourceId).then(() => dispatch(loadEntities({ loaded: 0 })))\n    .then(() => {\n        dispatch({\n            type: ACTION_TYPES.REMOVE_SOURCE_FULFILLED,\n            meta: {\n                sourceId\n            }\n        });\n        dispatch(addMessage(title, 'success'));\n    })\n    .catch(() => dispatch({\n        type: ACTION_TYPES.REMOVE_SOURCE_REJECTED,\n        meta: {\n            sourceId\n        }\n    }));\n};\n\nexport const removeMessage = (id) => (dispatch) => dispatch({\n    type: REMOVE_NOTIFICATION,\n    payload: id\n});\n\nexport const removeApplication = (appId, sourceId, successTitle, errorTitle) => (dispatch) => {\n    dispatch({\n        type: ACTION_TYPES.REMOVE_APPLICATION,\n        payload: () => doDeleteApplication(appId, errorTitle),\n        meta: {\n            appId,\n            sourceId,\n            notifications: {\n                fulfilled: {\n                    variant: 'success',\n                    title: successTitle,\n                    dismissable: true\n                }\n            }\n        }\n    });\n};\n\nexport const addAppToSource = (sourceId, app) => ({\n    type: ADD_APP_TO_SOURCE,\n    payload: {\n        sourceId,\n        app\n    }\n});\n\nexport const undoAddSource = (values) => ({\n    type: UNDO_ADD_SOURCE,\n    payload: { values }\n});\n\nexport const clearAddSource = () => ({\n    type: CLEAR_ADD_SOURCE\n});\n\nexport const addHiddenSource = (source) => ({\n    type: ADD_HIDDEN_SOURCE,\n    payload: {\n        source\n    }\n});\n\nexport const clearFilters = () => (dispatch) => {\n    dispatch({\n        type: CLEAR_FILTERS\n    });\n\n    return dispatch(loadEntities());\n};\n","import { getSourcesApi } from './entities.js';\n\nexport const doLoadSourceTypes = () =>\n    getSourcesApi().listSourceTypes().then(data => data.data);\n","import { defaultPort } from '../components/SourcesSimpleView/formatters';\nimport { getSourcesApi } from './entities';\nimport { patchCmValues } from './patchCmValues';\n\nexport const parseUrl = url => {\n    if (url === null) {\n        return {\n            scheme: null,\n            host: null,\n            port: null,\n            path: null\n        };\n    }\n\n    if (!url) {\n        return ({});\n    }\n\n    try {\n        const u = new URL(url);\n        const scheme =  u.protocol.replace(/:$/, '');\n\n        return {\n            scheme,\n            host: u.hostname,\n            port: u.port === '' ? defaultPort(scheme) : u.port,\n            path: u.pathname\n        };\n    } catch (error) {\n        return ({});\n    }\n};\n\nexport const urlOrHost = formData =>\n    formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData, errorTitles) => {\n    const promises = [];\n\n    if (formData.source) {\n        promises.push(getSourcesApi().updateSource(source.source.id, formData.source).catch((error) => {\n            throw { error: { title: errorTitles.source, detail: error.errors[0].detail } };\n        }));\n    }\n\n    if (formData.endpoint || formData.url || formData.url === null) {\n        const { scheme, host, port, path } = urlOrHost(formData);\n        const endPointPort = port === null ? null : parseInt(port, 10);\n\n        const endpointData = {\n            scheme,\n            host,\n            path,\n            port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n            ...formData.endpoint\n        };\n\n        promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData).catch((error) => {\n            throw { error: { title: errorTitles.endpoint, detail: error.errors[0].detail } };\n        }));\n    }\n\n    if (formData.authentications) {\n        Object.keys(formData.authentications).forEach((key) => {\n            const idWithoutPrefix = key.replace('a', '');\n\n            promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]).catch((error) => {\n                throw { error: { title: errorTitles.authentication, detail: error.errors[0].detail } };\n            }));\n        });\n    }\n\n    if (formData.billing_source || formData.credentials) {\n        let cmDataOut = {};\n\n        if (formData.credentials) {\n            cmDataOut = {\n                authentication: {\n                    credentials: formData.credentials\n                }\n            };\n        }\n\n        if (formData.billing_source) {\n            cmDataOut = {\n                ...cmDataOut,\n                billing_source: formData.billing_source\n            };\n        }\n\n        promises.push(patchCmValues(source.source.id, cmDataOut).catch((error) => {\n            throw { error: { title: errorTitles.costManagement, detail: error.errors[0].detail } };\n        }));\n    }\n\n    return Promise.all(promises);\n};\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const patchCmValues = (id, data) => axiosInstance.patch(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`, data);\n","import axiosInstanceInsights from '@redhat-cloud-services/frontend-components-utilities/files/interceptors';\nimport { DefaultApi as SourcesDefaultApi } from '@redhat-cloud-services/sources-client';\n\nimport { SOURCES_API_BASE } from './constants';\n\nexport const graphQlErrorInterceptor = response => {\n    if (response.errors && response.errors.length > 0) {\n        return Promise.reject({ detail: response.errors[0].message });\n    }\n\n    return response;\n};\n\naxiosInstanceInsights.interceptors.response.use(graphQlErrorInterceptor);\n\nexport { axiosInstanceInsights as axiosInstance };\n\nlet apiInstance;\n\nexport const getSourcesApi = () =>\n    apiInstance || (apiInstance = new SourcesDefaultApi(undefined, SOURCES_API_BASE, axiosInstanceInsights));\n\nexport const doLoadAppTypes = () =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE}/application_types`);\n\nexport const doRemoveSource = (sourceId) => getSourcesApi().deleteSource(sourceId).catch((error) => {\n    throw { error: { detail: error.errors[0].detail } };\n});\n\nexport const pagination = (pageSize, pageNumber) =>\n    `limit:${pageSize}, offset:${(pageNumber - 1) * pageSize}`;\n\nexport const sorting = (sortBy, sortDirection) =>\n    sortBy ? `, sort_by:\"${sortBy}:${sortDirection}\"` : '';\n\nexport const filtering = (filterValue = {}) => {;\n    let filterQueries = [];\n\n    if (filterValue.name) {\n        filterQueries.push(`name: { contains_i: \"${filterValue.name}\" }`);\n    }\n\n    if (filterValue.source_type_id && filterValue.source_type_id.length > 0) {\n        filterQueries.push(`source_type_id: { eq: [${filterValue.source_type_id.map(x => `\"${x}\"`).join(', ')}] }`);\n\n    }\n\n    if (filterQueries.length > 0) {\n        return `, filter: { ${filterQueries.join(', ')} }`;\n    }\n\n    return '';\n};\n\nexport const graphQlAttributes = `\n    id,\n    created_at,\n    source_type_id,\n    name,\n    tenant,\n    uid,\n    updated_at,\n    imported,\n    availability_status,\n    applications { application_type_id, id, availability_status_error, availability_status },\n    endpoints { id, scheme, host, port, path }\n`;\n\nexport const doLoadEntities = ({ pageSize, pageNumber, sortBy, sortDirection, filterValue }) => getSourcesApi().postGraphQL({\n    query: `{ sources(${pagination(pageSize, pageNumber)}${sorting(sortBy, sortDirection)}${filtering(filterValue)})\n        { ${graphQlAttributes} }\n    }`\n}).then(({ data }) => data);\n\nexport const doCreateApplication = (source_id, application_type_id) => getSourcesApi().createApplication({\n    source_id,\n    application_type_id\n});\n\nexport const doDeleteApplication = (appId, errorMessage) =>\n    getSourcesApi()\n    .deleteApplication(appId)\n    .catch(({ errors: [{ detail }] }) => { throw { error: { title: errorMessage, detail } };});\n\nexport const restFilterGenerator = (filterValue = {}) => {\n    let filterQueries = [];\n\n    if (filterValue.name) {\n        filterQueries.push(`filter[name][contains_i]=${filterValue.name}`);\n    }\n\n    if (filterValue.source_type_id && filterValue.source_type_id.length > 0) {\n        filterValue.source_type_id.map((id) => filterQueries.push(`filter[source_type_id][]=${id}`));\n    }\n\n    if (filterQueries.length > 0) {\n        return filterQueries.join('&');\n    }\n\n    return '';\n};\n\nexport const doLoadCountOfSources = (filterValue = {}) =>\n    axiosInstanceInsights.get(`${SOURCES_API_BASE}/sources?${restFilterGenerator(filterValue)}`);\n\nexport const doLoadSource = (id) => getSourcesApi().postGraphQL({\n    query: `{ sources(filter: { id: { eq: ${id}}})\n            { ${graphQlAttributes} }\n        }`\n}).then(({ data }) => data);\n","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Imports\nexports.i(require(\"-!../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components/index.css\"), \"\");\nexports.i(require(\"-!../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components-notifications/index.css\"), \"\");\nexports.i(require(\"-!../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components-sources/index.css\"), \"\");\n\n// Module\nexports.push([module.id, \"button:focus{outline:none}.pf-l-gallery{padding-bottom:20px}.pf-c-backdrop>.pf-l-bullseye>.pf-l-bullseye{flex:1}.sources-placeholder-table{background:white;width:100%;border-top:1px solid #ccc;border-bottom:1px solid #ccc;border-collapse:collapse}.sources-placeholder-table td{display:block;padding:10px}.ins-c-sources__dialog--warning .ins-c-source__delete-icon{color:var(--pf-global--warning-color--100)}.ins-c-sources__dialog--spinnerContainer{min-height:64px;text-align:center}.ins-c-sources__row-vertical-centered td{vertical-align:middle !important}.ins-c-sources__help-cursor:hover{cursor:help}.ins-c-sources__edit-field-group{min-height:36px;display:table;top:0;left:0;height:100%;width:100%}.ins-c-sources__edit-field-group .ins-c-sources__edit-field-group-text-content{display:table-cell;vertical-align:middle;color:var(--pf-global--disabled-color--100)}.ins-c-sources__edit-field-group .ins-c-sources__edit-field-group-text-content.clickable:hover{color:var(--pf-global--Color--100)}.ins-c-sources__edit-field-value{display:inline-block;max-width:calc(100% - 24px);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;vertical-align:middle}.ins-c-sources__availability-ok{color:var(--pf-global--success-color--100)}.ins-c-sources__availability-partially{color:var(--pf-global--warning-color--100)}.ins-c-sources__availability-not-ok{color:var(--pf-global--danger-color--100)}.ins-c-sources__availability-unknown{color:var(--pf-global--icon--Color--light)}.clickable{cursor:pointer}.ins-c-sources__pagination-loader-wrapper{width:300px}.ins-c-sources__icon{min-width:32px;min-height:32px;width:32px;height:32px}\\n\", \"\"]);\n\n","import React, { Suspense, lazy } from 'react';\nimport { Route } from 'react-router-dom';\nimport ContentLoader from 'react-content-loader';\n\nconst SourcesPage = lazy(() => import('./pages/SourcesPage'));\n\nconst Loader = () => (\n    <ContentLoader>\n        <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"70\" height=\"70\" />\n        <rect x=\"80\" y=\"17\" rx=\"4\" ry=\"4\" width=\"300\" height=\"13\" />\n        <rect x=\"80\" y=\"40\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n    </ContentLoader>\n);\n\nexport const paths = {\n    sources: '/',\n    sourcesNew: '/new',\n    sourcesEdit: '/edit/:id',\n    sourcesRemove: '/remove/:id',\n    sourceManageApps: '/manage_apps/:id'\n};\n\nconst Routes = () =>  (\n    <Suspense fallback={<Loader/>}>\n        <Route path={paths.sources} component={SourcesPage} />\n    </Suspense>\n);\n\nexport default Routes;\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js!./App.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","export const sourcesColumns = (intl, notSortable = false) => ([{\n    title: intl.formatMessage({\n        id: 'sources.name',\n        defaultMessage: 'Name'\n    }),\n    value: 'name',\n    formatter: 'nameFormatter',\n    sortable: !notSortable\n}, {\n    hidden: true,\n    value: 'source_type_id',\n    formatter: 'sourceTypeIconFormatter'\n}, {\n    title: intl.formatMessage({\n        id: 'sources.type',\n        defaultMessage: 'Type'\n    }),\n    value: 'source_type_id',\n    formatter: 'sourceTypeFormatter'\n}, {\n    title: intl.formatMessage({\n        id: 'sources.application',\n        defaultMessage: 'Application'\n    }),\n    value: 'applications',\n    formatter: 'applicationFormatter'\n}, {\n    title: intl.formatMessage({\n        id: 'sources.addedDate',\n        defaultMessage: 'Date added'\n    }),\n    value: 'created_at',\n    formatter: 'dateFormatter',\n    sortable: !notSortable\n}, {\n    hidden: true,\n    value: 'imported',\n    formatter: 'importedFormatter'\n}, {\n    title: intl.formatMessage({\n        id: 'sources.status',\n        defaultMessage: 'Status'\n    }),\n    value: 'availability_status',\n    formatter: 'availabilityFormatter',\n    sortable: !notSortable\n}]);\n\nconst KEBAB_COLUMN = 1;\nconst COUNT_OF_COLUMNS = sourcesColumns({ formatMessage: () => '' }).length;\n\nexport const COLUMN_COUNT = COUNT_OF_COLUMNS + KEBAB_COLUMN;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\nimport { RowLoader } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\nimport { COLUMN_COUNT } from '../../views/sourcesViewDefinition';\n\nexport const PlaceHolderTable = () => (\n    <table className=\"sources-placeholder-table pf-m-compact ins-entity-table\">\n        <tbody>\n            {new Array(12).fill(null).map((_, idx) => <tr key={idx}><td><RowLoader /></td></tr>)}\n        </tbody>\n    </table>\n);\n\nexport const RowWrapperLoader = ({ row: { isDeleting, ...row }, ...initialProps }) => (isDeleting ?\n    <tr><td colSpan={COLUMN_COUNT}><RowLoader /></td></tr> :\n    <RowWrapper {...initialProps} row={row} className='ins-c-sources__row-vertical-centered'/>\n);\n\nRowWrapperLoader.propTypes = {\n    row: PropTypes.object.isRequired\n};\n","import React from 'react';\nimport { Bullseye, EmptyState, EmptyStateVariant, EmptyStateIcon, Title, EmptyStateBody, Button } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { FormattedMessage } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport { clearFilters } from '../../redux/sources/actions';\n\nconst EmptyStateTable = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <Bullseye>\n            <EmptyState variant={EmptyStateVariant.small}>\n                <EmptyStateIcon icon={SearchIcon} />\n                <Title headingLevel=\"h2\" size=\"lg\">\n                    <FormattedMessage\n                        defaultMessage=\"No results found\"\n                        id=\"sources.noResultsFoundTitle\"\n                    />\n                </Title>\n                <EmptyStateBody>\n                    <FormattedMessage\n                        defaultMessage=\"No results match the filter criteria. Remove\n                    all filters or clear all filters to show results.\"\n                        id=\"sources.noResultsFoundDescription\"\n                    />\n                </EmptyStateBody>\n                <Button variant=\"link\" onClick={() => dispatch(clearFilters())}>\n                    <FormattedMessage\n                        defaultMessage=\"Clear all filters\"\n                        id=\"sources.clearAllFilters\"\n                    />\n                </Button>\n            </EmptyState>\n        </Bullseye>\n    );};\n\nexport default EmptyStateTable;\n","import { useSelector } from 'react-redux';\n\nexport const useIsLoaded = () => {\n    const isLoaded = useSelector(({ sources }) => sources.loaded);\n\n    return isLoaded <= 0;\n};\n","import { useSelector } from 'react-redux';\n\nexport const useIsOrgAdmin = () => {\n    const isOrgAdmin = useSelector(({ user }) => user.isOrgAdmin);\n\n    return isOrgAdmin;\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, sortable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\n\nimport { sortEntities } from '../../redux/sources/actions';\nimport { formatters } from './formatters';\nimport { PlaceHolderTable, RowWrapperLoader } from './loaders';\nimport { sourcesColumns, COLUMN_COUNT } from '../../views/sourcesViewDefinition';\nimport EmptyStateTable from './EmptyStateTable';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { useIsOrgAdmin } from '../../hooks/useIsOrgAdmin';\n\nconst itemToCells = (item, columns, sourceTypes, appTypes) => columns.filter(column => column.title || column.hidden)\n.map(col => ({\n    title: col.formatter ? formatters(col.formatter)(item[col.value], item, { sourceTypes, appTypes }) : item[col.value] || ''\n}));\n\nconst renderSources = (entities, columns, sourceTypes, appTypes) =>\n    entities.filter(({ hidden }) => !hidden).reduce((acc, item) => ([\n        ...acc,\n        {\n            ...item,\n            isOpen: !!item.expanded,\n            cells: itemToCells(item, columns, sourceTypes, appTypes),\n            disableActions: !!item.isDeleting\n        }\n    ]), []);\n\nexport const prepareColumnsCells = columns => columns.filter(column => column.title || column.hidden).map(column => ({\n    title: column.title || '',\n    value: column.value,\n    ...(column.sortable && { transforms: [sortable] })\n}));\n\nconst reducer = (state, payload) => ({ ...state, ...payload });\n\nconst initialState = (columns) => ({\n    rows: [],\n    sortBy: {},\n    isLoaded: false,\n    cells: prepareColumnsCells(columns)\n});\n\nexport const insertEditAction = (actions, intl, push) => actions.splice(1, 0, {\n    title: intl.formatMessage({\n        id: 'sources.edit',\n        defaultMessage: 'Edit'\n    }),\n    onClick: (_ev, _i, { id }) => push(`/edit/${id}`)\n});\n\nexport const actionResolver = (intl, push) => (rowData) => {\n    const actions = [{\n        title: intl.formatMessage({\n            id: 'sources.manageApps',\n            defaultMessage: 'Manage applications'\n        }),\n        onClick: (_ev, _i, { id }) => push(`/manage_apps/${id}`)\n    },\n    {\n        style: { color: 'var(--pf-global--danger-color--100)' },\n        title: intl.formatMessage({\n            id: 'sources.delete',\n            defaultMessage: 'Delete'\n        }),\n        onClick: (_ev, _i, { id }) => push(`/remove/${id}`)\n    }];\n\n    const isSourceEditable = !rowData.imported;\n\n    if (isSourceEditable) {\n        insertEditAction(actions, intl, push);\n    }\n\n    return actions;\n};\n\nconst SourcesSimpleView = () => {\n    const { push } = useHistory();\n    const intl = useIntl();\n\n    const loaded = useIsLoaded();\n    const isOrgAdmin = useIsOrgAdmin();\n\n    const {\n        appTypes,\n        entities,\n        sourceTypes,\n        sourceTypesLoaded,\n        appTypesLoaded,\n        sortBy,\n        sortDirection,\n        numberOfEntities\n    } = useSelector(({ sources }) => sources, shallowEqual);\n    const reduxDispatch = useDispatch();\n\n    const [state, dispatch] = useReducer(reducer, initialState(sourcesColumns(intl)));\n\n    const refreshSources = () => {\n        const notSortable = numberOfEntities === 0;\n        const columns = sourcesColumns(intl, notSortable);\n\n        return dispatch({\n            rows: renderSources(entities, columns, sourceTypes, appTypes),\n            cells: prepareColumnsCells(columns)\n        });\n    };\n\n    useEffect(() => {\n        if (loaded && sourceTypesLoaded && appTypesLoaded) {\n            dispatch({ isLoaded: true });\n            refreshSources();\n        } else {\n            dispatch({ isLoaded: false });\n        }\n    }, [loaded, sourceTypesLoaded, appTypesLoaded]);\n\n    useEffect(() => {\n        if (state.isLoaded) {\n            refreshSources();\n        }\n    }, [entities]);\n\n    if (!state.isLoaded) {\n        return <PlaceHolderTable />;\n    }\n\n    let shownRows = state.rows;\n    if (numberOfEntities === 0) {\n        shownRows = [{\n            heightAuto: true,\n            cells: [{\n                props: { colSpan: COLUMN_COUNT },\n                title: <EmptyStateTable />\n            }]\n        }];\n    }\n\n    return (\n        <Table\n            gridBreakPoint='grid-lg'\n            aria-label={intl.formatMessage({\n                id: 'sources.list',\n                defaultMessage: 'List of Sources'\n            })}\n            onSort={(_event, key, direction) => reduxDispatch(sortEntities(state.cells[key].value, direction))}\n            sortBy={{\n                index: state.cells.map(cell => cell.value).indexOf(sortBy),\n                direction: sortDirection\n            }}\n            rows={shownRows}\n            cells={state.cells}\n            actionResolver={isOrgAdmin && numberOfEntities > 0 ? actionResolver(intl, push) : undefined}\n            rowWrapper={RowWrapperLoader}\n        >\n            <TableHeader />\n            <TableBody />\n        </Table>\n    );\n};\n\nexport default SourcesSimpleView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Bullseye,\n    Card,\n    CardBody,\n    Title,\n    Button,\n    EmptyState,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { FormattedMessage } from 'react-intl';\n\nimport { WrenchIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport { paths } from '../Routes';\nimport { useIsOrgAdmin } from '../hooks/useIsOrgAdmin';\n\nconst SourcesEmptyState = ({ title, body }) => {\n    const isOrgAdmin = useIsOrgAdmin();\n\n    return (\n        <Card>\n            <CardBody>\n                <Bullseye>\n                    <EmptyState>\n                        <EmptyStateIcon icon={WrenchIcon} />\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                            {title ? title :\n                                <FormattedMessage\n                                    id=\"sources.emptyStateTitle\"\n                                    defaultMessage=\"No sources\"\n                                />\n                            }\n                        </Title>\n                        <EmptyStateBody>\n                            {body ? body :\n                                isOrgAdmin && <FormattedMessage\n                                    id=\"sources.emptyStateBody\"\n                                    defaultMessage=\"No sources have been defined. To start define a source.\"\n                                />}\n                            {!isOrgAdmin && <FormattedMessage\n                                id=\"sources.emptyStateBodyNotAdmin\"\n                                defaultMessage=\"To define a source, you have to be an organisation admin.\"\n                            />}\n                        </EmptyStateBody>\n                        {isOrgAdmin && <Link to={paths.sourcesNew}>\n                            <Button style={{ marginTop: 'var(--pf-c-empty-state--c-button--MarginTop)' }}\n                                variant=\"primary\">\n                                <FormattedMessage\n                                    id=\"sources.emptyStateButton\"\n                                    defaultMessage=\"Add a source\"\n                                />\n                            </Button>\n                        </Link>}\n                    </EmptyState>\n                </Bullseye>\n            </CardBody>\n        </Card>\n    );\n};\n\nSourcesEmptyState.propTypes = {\n    title: PropTypes.node,\n    body: PropTypes.node\n};\n\nexport default SourcesEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup, TextContent } from '@patternfly/react-core';\nimport { PencilAltIcon } from '@patternfly/react-icons';\n\nexport const EDIT_FIELD_NAME = 'edit-field';\n\nconst EditField = ({ isRequired, label, helperText, hideLabel, meta, input, type, setEdit }) => {\n    const { error, touched } = meta;\n    const showError = touched && error;\n\n    let value = input.value;\n\n    if (typeof value === 'boolean') {\n        value = value ? 'True' : 'False';\n    }\n\n    const isPassword = type === 'password' || input.name.includes('password');\n    const emptyText = isPassword ? 'Click to edit' : 'Click to add';\n\n    return (\n        <FormGroup\n            isRequired={ isRequired }\n            label={ !hideLabel && label }\n            fieldId={ input.name }\n            isValid={ !showError }\n            helperText={ helperText }\n            helperTextInvalid={ error }\n            onClick={setEdit ? () => setEdit(input.name) : undefined}\n            tabIndex={0}\n            onKeyPress={(e) => {\n                if (e.charCode === 32 && setEdit) {\n                    e.preventDefault();\n                    setEdit(input.name);\n                }\n            }}\n        >\n            <div className={`pf-c-form__horizontal-group ins-c-sources__edit-field-group ${setEdit ? 'clickable' : ''}`}>\n                <TextContent className={`ins-c-sources__edit-field-group-text-content ${setEdit ? 'clickable' : ''}`}>\n                    <span className=\"ins-c-sources__edit-field-value pf-u-mr-sm\">\n                        {value ? value : setEdit ? emptyText : ''}\n                    </span>\n                    {setEdit && <PencilAltIcon />}\n                </TextContent>\n            </div>\n        </FormGroup>\n    );\n};\n\nEditField.propTypes = {\n    label: PropTypes.string,\n    isRequired: PropTypes.bool,\n    helperText: PropTypes.string,\n    meta: PropTypes.object.isRequired,\n    FieldProvider: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    input: PropTypes.shape({\n        value: PropTypes.any,\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    hideLabel: PropTypes.bool,\n    setEdit: PropTypes.func,\n    type: PropTypes.string\n};\n\nconst EditFieldProvider = ({ FieldProvider, ...rest }) =>\n    (\n        <FieldProvider { ...rest }>\n            { (props) =>  <EditField  { ...props }/> }\n        </FieldProvider>\n    );\n\nEditFieldProvider.propTypes = {\n    FieldProvider: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nexport default EditFieldProvider;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources';\n\nimport EditField from '../components/editField/EditField';\n\nconst SourcesFormRenderer = props => (\n    <FormRenderer\n        layoutMapper={layoutMapper}\n        formFieldsMapper={{\n            ...formFieldsMapper,\n            ...mapperExtension,\n            'edit-field': EditField\n        }}\n        {...props}\n    />\n);\n\nexport default SourcesFormRenderer;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { asyncValidator } from '@redhat-cloud-services/frontend-components-sources';\nimport { EDIT_FIELD_NAME } from '../../editField/EditField';\n\nexport const genericInfo = (editing, setEdit, sourceId) => ([\n    {\n        name: 'source.name',\n        label: <FormattedMessage\n            id=\"sources.sourceName\"\n            defaultMessage=\"Source Name\"\n        />,\n        component: editing['source.name'] ? componentTypes.TEXT_FIELD : EDIT_FIELD_NAME,\n        setEdit: editing['source.name'] ? undefined : setEdit,\n        validate: [\n            (value) => asyncValidator(value, sourceId)\n        ],\n        isRequired: true\n    }, {\n        name: 'source_type',\n        label: <FormattedMessage\n            id=\"sources.sourceType\"\n            defaultMessage=\"Source Type\"\n        />,\n        isReadOnly: true,\n        component: EDIT_FIELD_NAME\n    }\n]);\n","import React from 'react';\nimport get from 'lodash/get';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { FormattedMessage } from 'react-intl';\n\nimport { EDIT_FIELD_NAME } from '../../editField/EditField';\nimport { unsupportedAuthTypeField } from './unsupportedAuthType';\n\nexport const createAuthFieldName = (fieldName, id) => `authentications.a${id}.${fieldName.replace('authentication.', '')}`;\n\nexport const getLastPartOfName = (fieldName) => fieldName.split('.').pop();\n\nexport const removeRequiredValidator = (validate = []) =>\n    validate.filter(validation => validation.type !== validatorTypes.REQUIRED);\n\nexport const getEnhancedAuthField = (sourceType, authtype, name) =>\n    get(hardcodedSchemas, [sourceType, 'authentication', authtype, 'generic', name], {});\n\nexport const getAdditionalAuthSteps = (sourceType, authtype) =>\n    get(hardcodedSchemas, [sourceType, 'authentication', authtype, 'generic', 'includeStepKeyFields'], []);\n\nexport const modifyAuthSchemas = (fields, id, editing, setEdit) => fields.map((field) => {\n    const editedName = field.name.startsWith('authentication') ? createAuthFieldName(field.name, id) : field.name;\n    const isEditing = editing[editedName];\n\n    const finalField = ({\n        ...field,\n        name: editedName,\n        component: isEditing ? field.component : EDIT_FIELD_NAME\n    });\n\n    if (!isEditing) {\n        finalField.setEdit = setEdit;\n    }\n\n    const isPassword = getLastPartOfName(finalField.name) === 'password';\n\n    if (isPassword) {\n        finalField.helperText = (<FormattedMessage\n            id=\"sources.passwordResetHelperText\"\n            defaultMessage={`Changing this resets your current { label }.`}\n            values={{\n                label: finalField.label\n            }}\n        />);\n        finalField.isRequired = false;\n        finalField.validate = removeRequiredValidator(finalField.validate);\n    }\n\n    return finalField;\n});\n\nexport const authenticationFields = (authentications, sourceType, editing, setEdit) => {\n    if (!authentications || authentications.length === 0 || !sourceType.schema || !sourceType.schema.authentication) {\n        return [];\n    }\n\n    return authentications.map((auth) => {\n        const schemaAuth = sourceType.schema.authentication.find(({ type }) => type === auth.authtype);\n\n        if (!schemaAuth) {\n            return unsupportedAuthTypeField(auth.authtype);\n        }\n\n        const additionalStepKeys = getAdditionalAuthSteps(sourceType.name, auth.authtype);\n\n        const enhancedFields = schemaAuth.fields\n        .filter(field => !field.stepKey || additionalStepKeys.includes(field.stepKey))\n        .map((field) => ({\n            ...field,\n            ...getEnhancedAuthField(sourceType.name, auth.authtype, field.name)\n        }));\n\n        return ({\n            component: componentTypes.SUB_FORM,\n            title: schemaAuth.name,\n            name: schemaAuth.name,\n            fields: [\n                modifyAuthSchemas(enhancedFields, auth.id, editing, setEdit)\n            ]\n        });\n    });\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    TextContent,\n    Text,\n    TextVariants\n} from '@patternfly/react-core';\n\nexport const unsupportedAuthTypeField = (type) => ({\n    component: 'description',\n    name: `${type}-unsupported`,\n    // eslint-disable-next-line react/display-name\n    Content: () => (\n        <TextContent>\n            <Text component={ TextVariants.p }>\n                <FormattedMessage\n                    id=\"sources.unsupportedAuthType\"\n                    defaultMessage={`Authentication type of { type } is no longer supported.`}\n                    values={{ type }}\n                />\n            </Text>\n        </TextContent>\n    )\n});\n","import { EDIT_FIELD_NAME } from '../../editField/EditField';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\n\nexport const NOT_CHANGING_COMPONENTS = [componentTypes.CHECKBOX, componentTypes.SWITCH];\n\nexport const modifyFields = (fields, editing, setEdit) => fields.map((field) => {\n    const isEditing = editing[field.name];\n\n    const finalField = ({\n        ...field,\n        component: isEditing || NOT_CHANGING_COMPONENTS.includes(field.component)  ? field.component : EDIT_FIELD_NAME\n    });\n\n    if (!isEditing && !NOT_CHANGING_COMPONENTS.includes(field.component)) {\n        finalField.setEdit = setEdit;\n    }\n\n    return finalField;\n});\n","import React from 'react';\nimport get from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { modifyFields } from './helpers';\n\nexport const getEnhancedEndpointField = (sourceType, name) =>\n    get(hardcodedSchemas, [sourceType, 'endpoint', name], {});\n\nexport const endpointFields = (sourceType, editing, setEdit) => {\n    if (!sourceType.schema || !sourceType.schema.endpoint || sourceType.schema.endpoint.hidden) {\n        return undefined;\n    }\n\n    const schemaAuth = sourceType.schema.endpoint;\n\n    const enhancedFields = schemaAuth.fields.map((field) => ({\n        ...field,\n        ...getEnhancedEndpointField(sourceType.name, field.name)\n    }));\n\n    return ({\n        component: componentTypes.SUB_FORM,\n        title: <FormattedMessage\n            id=\"sources.endpoint\"\n            defaultMessage=\"Endpoint\"\n        />,\n        name: 'endpoint',\n        fields: modifyFields(enhancedFields, editing, setEdit)\n    });\n};\n","import React from 'react';\nimport get from 'lodash/get';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { FormattedMessage } from 'react-intl';\nimport { modifyFields } from './helpers';\nimport { EDIT_FIELD_NAME } from '../../editField/EditField';\n\nexport const APP_NAMES = {\n    COST_MANAGAMENT: '/insights/platform/cost-management'\n};\n\nexport const cmFieldsPrefixes = ['billing_source', 'credentials'];\n\nexport const isCMField = ({ name }) => cmFieldsPrefixes.some((prefix) => name.startsWith(prefix));\n\nexport const getCMFields = (authentication) =>\n    Object.keys(authentication)\n    .map((key) => authentication[key].fields.filter(isCMField))\n    .flatMap((x) => x);\n\nexport const getEnhancedCMField = (sourceType, name, authenticationsTypes) => {\n    let field = undefined;\n\n    authenticationsTypes.forEach((type) => {\n        const apps = field ? {} : get(hardcodedSchemas, [sourceType, 'authentication', type], {});\n\n        Object.keys(apps).find((key) => {\n            const hasAppField = get(hardcodedSchemas, [sourceType, 'authentication', type, key, name], undefined);\n            if (hasAppField) {\n                field = hasAppField;\n                return true;\n            }\n        });\n    });\n\n    return field ? field : {};\n};\n\nexport const appendClusterIdentifier = (editing, setEdit, sourceType) =>\n    sourceType.name === 'openshift' ? [{\n        name: 'source.source_ref',\n        label: <FormattedMessage\n            id=\"sources.clusterIdentifier\"\n            defaultMessage=\"Cluster Identifier\"\n        />,\n        isRequired: true,\n        setEdit: editing['source.source_ref'] ? undefined : setEdit,\n        validate: [{ type: validatorTypes.REQUIRED }],\n        component: editing['source.source_ref'] ? componentTypes.TEXT_FIELD : EDIT_FIELD_NAME\n    }] : [];\n\nexport const costManagementFields = (\n    applications = [],\n    sourceType,\n    editing,\n    setEdit,\n    appTypes,\n    source\n) => {\n    const costManagementApp = appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT);\n\n    if (!costManagementApp) {\n        return undefined;\n    }\n\n    const hasCostManagement = applications.find(({ application_type_id }) => application_type_id === costManagementApp.id);\n\n    if (!hasCostManagement) {\n        return undefined;\n    }\n\n    const billingSourceFields = getCMFields(sourceType.schema.authentication);\n\n    const authenticationsTypes = source.authentications ? source.authentications.map(({ authtype }) => authtype) : [];\n\n    const enhandcedFields = billingSourceFields.map((field) => ({\n        ...field,\n        ...getEnhancedCMField(sourceType.name, field.name, authenticationsTypes)\n    }));\n\n    return ({\n        component: componentTypes.SUB_FORM,\n        title: costManagementApp.display_name,\n        name: costManagementApp.display_name,\n        fields: [\n            ...modifyFields(enhandcedFields, editing, setEdit),\n            ...appendClusterIdentifier(editing, setEdit, sourceType)\n        ]\n    });\n};\n\nexport const applicationsFields = (\n    applications,\n    sourceType,\n    editing,\n    setEdit,\n    appTypes,\n    source\n) => ([\n    costManagementFields(\n        applications,\n        sourceType,\n        editing,\n        setEdit,\n        appTypes,\n        source\n    )\n]);\n","import { genericInfo } from './genericInfo';\nimport { authenticationFields } from './authentication';\nimport { endpointFields } from './endpoint';\nimport { applicationsFields } from './application';\n\nexport const parseSourceToSchema = (source, editing, setEdit, sourceType, appTypes) => ({\n    fields: [\n        ...genericInfo(editing, setEdit, source.source.id),\n        ...authenticationFields(source.authentications, sourceType, editing, setEdit),\n        ...applicationsFields(source.applications, sourceType, editing, setEdit, appTypes, source),\n        source.endpoints && source.endpoints.length > 0 ? endpointFields(sourceType, editing, setEdit) : false\n    ].filter(Boolean)\n});\n","import { getSourcesApi } from './entities';\nimport { getCmValues } from './getCmValues';\n\nexport const doLoadSourceForEdit = sourceId => Promise.all([\n    getSourcesApi().showSource(sourceId),\n    getSourcesApi().listSourceEndpoints(sourceId),\n    getSourcesApi().listSourceApplications(sourceId),\n    getCmValues(sourceId).catch(() => undefined)\n]).then(([sourceData, endpoints, applications, costManagement]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    let basicValues = {\n        source: sourceData,\n        applications: applications.data\n    };\n\n    if (costManagement) {\n        basicValues = {\n            ...basicValues,\n            billing_source: costManagement.billing_source,\n            credentials: costManagement.authentication.credentials\n        };\n    }\n\n    if (!endpoint) { // bail out\n        return basicValues;\n    }\n\n    return getSourcesApi().listEndpointAuthentications(endpoint.id).then(authentications => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data\n    }));\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from '@patternfly/react-core';\n\nconst HorizontalFormWrapper = ({ children, ...props }) => <Form {...props} isHorizontal>{children}</Form>;\n\nHorizontalFormWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default HorizontalFormWrapper;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { GridItem, Title, TitleLevel, Grid } from '@patternfly/react-core';\n\nconst Header = () => (\n    <Grid>\n        <GridItem xs={12}>\n            <Title headingLevel={TitleLevel.h1} size=\"3xl\">\n                <FormattedMessage\n                    id=\"sources.editSource\"\n                    defaultMessage=\"Edit a source\"\n                />\n            </Title>\n        </GridItem>\n        <GridItem xs={12}>\n            <FormattedMessage\n                id=\"sources.editSourceDescription\"\n                defaultMessage=\"You are editing a source\"\n            />\n        </GridItem>\n    </Grid>\n);\n\nexport default Header;\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl } from '../SourcesSimpleView/formatters';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n    const filteredValues = {};\n\n    Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n        set(filteredValues, key, get(values, key));\n    });\n\n    return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, ...rest }, sourceTypeName) => {\n    const auhenticationsFinal = {};\n\n    if (authentications && authentications.length > 0) {\n        authentications.forEach((auth) => {\n            auhenticationsFinal[`a${auth.id}`] = auth;\n        });\n    }\n\n    let endpoint;\n    let url;\n\n    if (endpoints && endpoints.length > 0) {\n        endpoint = endpoints[0];\n    }\n\n    if (endpoint) {\n        url = (endpoint.scheme || endpoint.host || endpoint.path || endpoint.port) ? endpointToUrl(endpoint) : undefined;\n    }\n\n    return ({\n        source_type: sourceTypeName,\n        endpoint,\n        authentications: auhenticationsFinal,\n        url,\n        ...rest\n    });\n};\n","import { selectOnlyEditedValues } from './helpers';\nimport { updateSource, loadEntities } from '../../redux/sources/actions';\nimport { paths } from '../../Routes';\n\nexport const onSubmit = (values, editing, dispatch, source, intl, push) => dispatch(updateSource(\n    source,\n    selectOnlyEditedValues(values, editing),\n    intl.formatMessage({\n        id: 'sources.modifiedNotificationTitle',\n        defaultMessage: `\"{ name }\" was modified successfully.`\n    }, { name: source.source.name }),\n    intl.formatMessage({\n        id: 'sources.modifiedNotificationDescription',\n        defaultMessage: 'The source was successfully modified.'\n    }),\n    {\n        authentication: intl.formatMessage({\n            id: 'sources.sourceEditAuthFailure',\n            defaultMessage: 'Authentication update failure.'\n        }),\n        source: intl.formatMessage({\n            id: 'sources.sourceEditFailure',\n            defaultMessage: 'Source update failure.'\n        }),\n        endpoint: intl.formatMessage({\n            id: 'sources.sourceEditEndpointFailure',\n            defaultMessage: 'Endpoint update failure.'\n        }),\n        costManagement: intl.formatMessage({\n            id: 'sources.sourceCostmanagementFailure',\n            defaultMessage: 'Cost Management update failure.'\n        })\n    }))\n.then(() => {\n    push(paths.sources);\n    dispatch(loadEntities());\n});\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Modal } from '@patternfly/react-core';\nimport { Spinner } from '@redhat-cloud-services/frontend-components';\nimport { layoutMapper } from '@data-driven-forms/pf4-component-mapper';\n\nimport SourcesFormRenderer from '../../Utilities/SourcesFormRenderer';\nimport { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport HorizontalFormWrapper from './HorizontalFormWrapper';\nimport Header from './Header';\nimport { prepareInitialValues } from './helpers';\nimport { onSubmit } from './onSubmit';\n\nimport { redirectWhenImported } from './importedRedirect';\n\nconst initialState = {\n    loading: true,\n    editing: {},\n    source: undefined,\n    initialValues: {},\n    sourceType: undefined,\n    schema: undefined\n};\n\nconst reducer = (state, payload) => ({ ...state, ...payload });\n\nconst SourceEditModal = () => {\n    const [state, setState] = useReducer(reducer, initialState);\n    const { id } = useParams();\n    const history = useHistory();\n\n    const { loading, editing, source, initialValues, sourceType, schema } = state;\n\n    const intl = useIntl();\n\n    const {\n        sourceTypes,\n        appTypes,\n        sourceTypesLoaded,\n        appTypesLoaded\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        doLoadSourceForEdit(id).then((source) => {\n            if (source.source.imported) {\n                redirectWhenImported(dispatch, intl, history, source.source.name);\n            }\n\n            setState({ source });\n        });\n    }, []);\n\n    const setEdit = (name) => setState({\n        editing: {\n            ...editing,\n            [name]: !editing[name]\n        }\n    });\n\n    useEffect(() => {\n        if (source && appTypesLoaded && sourceTypesLoaded) {\n            const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n            setState({\n                sourceType,\n                initialValues: prepareInitialValues(source, sourceType.product_name),\n                schema: parseSourceToSchema(source, editing, setEdit, sourceType, appTypes),\n                loading: false\n            });\n        }\n    }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n    useEffect(() => {\n        if (source && !loading) {\n            setState({\n                schema: parseSourceToSchema(source, editing, setEdit, sourceType, appTypes)\n            });\n        }\n    }, [editing]);\n\n    const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n    if (isLoading) {\n        return (\n            <Modal\n                title={intl.formatMessage({\n                    id: 'sources.editSource',\n                    defaultMessage: 'Edit a source.'\n                })}\n                header={<Header />}\n                isOpen={true}\n                isLarge\n                onClose={() => history.push('/')}\n            >\n                <div className=\"ins-c-sources__dialog--spinnerContainer\">\n                    <Spinner />\n                </div>\n            </Modal>\n        );\n    }\n\n    return (\n        <Modal\n            title={intl.formatMessage({\n                id: 'sources.editSource',\n                defaultMessage: 'Edit a source.'\n            })}\n            header={<Header />}\n            isOpen={true}\n            isLarge\n            onClose={() => history.push('/')}\n        >\n            <SourcesFormRenderer\n                onCancel={() => history.push('/')}\n                schema={schema}\n                onSubmit={\n                    (values, formApi) => onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, history.push)\n                }\n                layoutMapper={{\n                    ...layoutMapper,\n                    FormWrapper: HorizontalFormWrapper\n                }}\n                clearedValue={null}\n                canReset\n                disableSubmit={['submitting']}\n                onReset={() => setState({ editing: {} })}\n                initialValues={initialValues}\n                buttonsLabels={{ submitLabel: intl.formatMessage({\n                    id: 'sources.save',\n                    defaultMessage: 'Save'\n                }) }}\n            />\n        </Modal>\n    );\n};\n\nexport default SourceEditModal;\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const getCmValues = (id) => axiosInstance.get(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`);\n","import { paths } from '../../Routes';\nimport { addMessage } from '../../redux/sources/actions';\n\nexport const redirectWhenImported = (dispatch, intl, history, name) => {\n    dispatch(addMessage(\n        intl.formatMessage({\n            id: 'sources.importSourceCannotEdited',\n            defaultMessage: 'Source { name } is imported.'\n        }, { name }),\n        'danger',\n        intl.formatMessage({\n            id: 'sources.importedSourcesCannotEdited',\n            defaultMessage: 'Imported sources cannot be edited.'\n        }),\n    ));\n    history.push(paths.sources);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage, addHiddenSource } from '../../redux/sources/actions';\nimport { doLoadSource } from '../../api/entities';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\n\nconst RedirectNoId = () => {\n    const { id } = useParams();\n    const intl = useIntl();\n\n    const loaded = useIsLoaded();\n\n    const { appTypesLoaded, sourceTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n    const dispatch = useDispatch();\n\n    const [applicationIsLoaded, setIsApplicationLoaded] = useState(false);\n\n    useEffect(() => {\n        if (loaded && appTypesLoaded && sourceTypesLoaded) {\n            doLoadSource(id).then(({ sources: [source] }) => dispatch(addHiddenSource(source)))\n            .then(() => {\n                setIsApplicationLoaded(true);\n            });\n        }\n    }, [loaded, appTypesLoaded, sourceTypesLoaded]);\n\n    if (applicationIsLoaded) {\n        dispatch(addMessage(\n            intl.formatMessage({\n                id: 'sources.sourceNotFoundTitle',\n                defaultMessage: 'Requested source was not found'\n            }),\n            'danger',\n            intl.formatMessage({\n                id: 'sources.sourceNotFoundTitleDescription',\n                defaultMessage: 'Source with { id } was not found. Try it again later.'\n            }, { id })\n        ));\n        return <Redirect to=\"/\" />;\n    }\n\n    return null;\n};\n\nexport default RedirectNoId;\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nexport const useSource = () => {\n    const { id } = useParams();\n    const source = useSelector(({ sources }) => sources.entities.find(source => source.id === id));\n\n    return source;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem,\n    Text,\n    Button,\n    ButtonVariant\n} from '@patternfly/react-core';\n\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\nimport { useSource } from '../../hooks/useSource';\n\nconst ApplicationList = ({ setApplicationToRemove, breakpoints, namePrefix }) => {\n    const appTypes = useSelector(({ sources }) => sources.appTypes);\n    const source = useSource();\n\n    if (!source) {\n        return <RedirectNoId/>;\n    }\n\n    const sourceAppsNames = source.applications\n    .map(({ application_type_id }) => {\n        const appType = appTypes.find(({ id }) => id === application_type_id);\n        return appType ? appType.display_name : undefined;\n    });\n\n    return source.applications\n    .filter((app) => !app.isDeleting)\n    .map((app) => {\n        const type = appTypes.find((appType) => appType.id === app.application_type_id);\n\n        if (type) {\n            return {\n                display_name: type.display_name,\n                id: app.id,\n                dependent_applications: type.dependent_applications\n            };\n        }\n    })\n    .sort((a, b) => a.display_name.localeCompare(b.display_name))\n    .map(({ display_name, id, dependent_applications }) => (\n        <TextContent key={id}>\n            <Grid>\n                <GridItem md={breakpoints.display_name || 4}>\n                    <Text component={TextVariants.p} style={{ marginBottom: 0 }}>\n                        { namePrefix }{ display_name }\n                    </Text>\n                </GridItem>\n                <GridItem md={breakpoints.remove || 8} className=\"ins-c-sources__remove-app\">\n                    <Button\n                        variant={ButtonVariant.link}\n                        isInline\n                        onClick={() => setApplicationToRemove({ id, display_name, dependent_applications, sourceAppsNames })}\n                    >\n                        <FormattedMessage\n                            id=\"sources.remove\"\n                            defaultMessage=\"Remove\"\n                        />\n                    </Button>\n                </GridItem>\n            </Grid>\n        </TextContent>\n    ));\n};\n\nApplicationList.propTypes = {\n    setApplicationToRemove: PropTypes.func.isRequired,\n    breakpoints: PropTypes.shape({\n        display_name: PropTypes.number,\n        remove: PropTypes.number\n    }),\n    namePrefix: PropTypes.node\n};\n\nApplicationList.defaultProps = {\n    breakpoints: {}\n};\n\nexport default ApplicationList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport {\n    Button,\n    Modal,\n    TextContent,\n    Stack,\n    SplitItem,\n    Split,\n    Text,\n    TextVariants\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nimport { removeApplication } from '../../redux/sources/actions';\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\nimport { useSource } from '../../hooks/useSource';\n\nconst RemoveAppModal = ({ app, onCancel }) => {\n    const intl = useIntl();\n\n    const appTypes = useSelector(({ sources }) => sources.appTypes);\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    if (!source) {\n        return <RedirectNoId/>;\n    }\n\n    const dependentApps = app.dependent_applications.map(appName => {\n        const appType = appTypes.find(({ name }) => name === appName);\n\n        return appType ? app.sourceAppsNames.includes(appType.display_name) ? appType.display_name : undefined : undefined;\n    }).filter(x => x);\n\n    const onSubmit = () => {\n        const titleSuccess = intl.formatMessage({\n            id: 'sources.removeAppWarning',\n            defaultMessage: `{ name } was removed from this source.`\n        },\n        {\n            name: app.display_name\n        });\n        const titleError = intl.formatMessage({\n            id: 'sources.removeAppError',\n            defaultMessage: `Removing of { name } application from this source was unsuccessful.`\n        }, {\n            name: app.display_name\n        });\n        onCancel();\n        return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n    };\n\n    return (\n        <Modal\n            className=\"ins-c-sources__dialog--warning\"\n            title={`Remove ${app.display_name} application`}\n            isOpen={true}\n            isSmall\n            onClose={onCancel}\n            isFooterLeftAligned\n            actions={[\n                <Button\n                    id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={ onSubmit }\n                >\n                    <FormattedMessage\n                        id=\"sources.remove\"\n                        defaultMessage=\"Remove\"\n                    />\n                </Button>,\n                <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n                    <FormattedMessage\n                        id=\"sources.cancel\"\n                        defaultMessage=\"Cancel\"\n                    />\n                </Button>\n            ]}\n        >\n            <Split gutter=\"md\">\n                <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert ins-c-source__delete-icon\" /></SplitItem>\n                <SplitItem isFilled>\n                    <Stack gutter=\"md\">\n                        <TextContent>\n                            <Text component={TextVariants.p}>\n                                <FormattedMessage\n                                    id=\"sources.deleteAppWarning\"\n                                    defaultMessage={`Are you sure to remove { appName } from this source?`}\n                                    values={{\n                                        appName: app.display_name\n                                    }}\n                                />\n                            </Text>\n                            {dependentApps.length > 0 && <Text component={TextVariants.p}>\n                                <FormattedMessage\n                                    id=\"sources.deleteAppDetails\"\n                                    defaultMessage={`This change will affect these applications: { apps }.`}\n                                    values={{\n                                        apps: dependentApps\n                                    }}\n                                />\n                            </Text>}\n                        </TextContent>\n                    </Stack>\n                </SplitItem>\n            </Split>\n        </Modal>\n    );\n};\n\nRemoveAppModal.propTypes = {\n    app: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        display_name: PropTypes.string.isRequired,\n        dependent_applications: PropTypes.arrayOf(PropTypes.string),\n        sourceAppsNames: PropTypes.arrayOf(PropTypes.string)\n    }).isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default RemoveAppModal;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport {\n    Modal,\n    Button,\n    Split,\n    SplitItem,\n    Stack,\n    Text,\n    TextContent,\n    TextVariants,\n    TextList,\n    TextListItem,\n    Checkbox\n} from '@patternfly/react-core';\nimport { removeSource } from '../redux/sources/actions';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport ApplicationList from './ApplicationsList/ApplicationList';\nimport RemoveAppModal from './AddApplication/RemoveAppModal';\nimport RedirectNoId from './RedirectNoId/RedirectNoId';\nimport { useSource } from '../hooks/useSource';\n\nconst SourceRemoveModal = () => {\n    const { push } = useHistory();\n\n    const [acknowledge, setAcknowledge] = useState(false);\n    const [removingApp, setApplicationToRemove] = useState({});\n\n    const intl = useIntl();\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    if (!source) {\n        return <RedirectNoId/>;\n    }\n\n    const onSubmit = () => {\n        push('/');\n        dispatch(removeSource(source.id, intl.formatMessage({\n            id: 'sources.notificationDeleteMessage',\n            defaultMessage: `{title} was deleted successfully.`\n        }, { title: source.name })));\n    };\n\n    const onCancel = () => push('/');\n\n    const sourceHasActiveApp = source.applications.some((app) => !app.isDeleting);\n\n    const actions = source.applications.length > 0 ? [\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n            <FormattedMessage\n                id=\"sources.close\"\n                defaultMessage=\"Close\"\n            />\n        </Button>\n    ] : [\n        <Button\n            id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={ onSubmit } isDisabled={!acknowledge}\n        >\n            <FormattedMessage\n                id=\"sources.deleteConfirm\"\n                defaultMessage=\"Delete this source and its data\"\n            />\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n            <FormattedMessage\n                id=\"sources.deleteCancel\"\n                defaultMessage=\"Do not delete this source\"\n            />\n        </Button>\n    ];\n\n    const body = source.applications.length > 0 ? (\n        <React.Fragment>\n            <Text component={ TextVariants.p }>\n                <FormattedMessage\n                    id=\"sources.deleteTextBodyWithApp\"\n                    defaultMessage=\"This action cannot be enacted until all assigned\n                    applications have been removed from this source.\"\n                />\n            </Text>\n            <Button\n                variant=\"link\"\n                isInline\n                onClick={ (_ev) => push(`/manage_apps/${source.id}`)}\n            >\n                <Text component={ TextVariants.p } style={{ marginBottom: 0 }}>\n                    <FormattedMessage\n                        id=\"sources.connectedApps\"\n                        defaultMessage=\"Connected applications:\"\n                    />\n                </Text>\n            </Button>\n            {\n                sourceHasActiveApp ? <ApplicationList\n                    breakpoints={{ display_name: 8, remove: 4 }}\n                    setApplicationToRemove={setApplicationToRemove}\n                    namePrefix='- '\n                /> : <Text component={ TextVariants.p }>\n                    <FormattedMessage\n                        id=\"sources.connectedApps\"\n                        defaultMessage=\"Connected applications are being removed.\"\n                    />\n                </Text>\n            }\n        </React.Fragment>\n    ) : (\n        <React.Fragment>\n            <Text component={ TextVariants.p }>\n                <FormattedMessage\n                    id=\"sources.deleteTextBody\"\n                    defaultMessage={`Are you sure that you want to delete \"{ name }\"?`}\n                    values={{\n                        name: source.name\n                    }}\n                />\n            </Text>\n            <Text component={ TextVariants.p }>\n                <FormattedMessage\n                    id=\"sources.delete-text-body-2\"\n                    defaultMessage=\"Deleting this source will permanently delete:\"\n                />\n            </Text>\n            <TextList>\n                <TextListItem>\n                    <FormattedMessage\n                        id=\"sources.deleteTextBody3\"\n                        defaultMessage=\"All data collected\"\n                    />\n                </TextListItem>\n                <TextListItem>\n                    <FormattedMessage\n                        id=\"sources.deleteTextBody4\"\n                        defaultMessage=\"Any and all historical data\"\n                    />\n                </TextListItem>\n            </TextList>\n            <Checkbox\n                label={intl.formatMessage({\n                    id: 'sources.deleteCheckboxTitle',\n                    defaultMessage: `I acknowledge that this action cannot be undone.`\n                })}\n                onChange={() => setAcknowledge((value) => !value)}\n                aria-label={\n                    intl.formatMessage({\n                        id: 'sources.deleteCheckboxTitle',\n                        defaultMessage: `I acknowledge that this action cannot be undone.`\n                    })\n                }\n                id=\"acknowledgeDelete\"\n                name=\"acknowledgeDelete\"\n                isChecked={acknowledge}\n            />\n        </React.Fragment>\n    );\n\n    return (\n        <Modal className=\"ins-c-sources__dialog--warning\"\n            title={\n                intl.formatMessage({\n                    id: 'sources.deleteTitle',\n                    defaultMessage: `Delete {title}`\n                }, { title: source.name })\n            }\n            isOpen\n            isSmall\n            onClose={ onCancel }\n            actions={ actions }\n            isFooterLeftAligned\n        >\n            {removingApp.id && <RemoveAppModal\n                app={removingApp}\n                onCancel={() => setApplicationToRemove({})}\n            />}\n            <Split gutter=\"md\">\n                <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert ins-c-source__delete-icon\" /></SplitItem>\n                <SplitItem isFilled>\n                    <Stack gutter=\"md\">\n                        <TextContent>\n                            { body }\n                        </TextContent>\n                    </Stack>\n                </SplitItem>\n            </Split>\n        </Modal>\n    );\n};\n\nexport default SourceRemoveModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem,\n    Text\n} from '@patternfly/react-core';\n\nimport RemoveAppModal from './RemoveAppModal';\nimport ApplicationList from '../ApplicationsList/ApplicationList';\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\nimport { useSource } from '../../hooks/useSource';\n\nconst AddApplicationDescription = () => {\n    const [removingApp, setApplicationToRemove] = useState({});\n\n    const sourceTypes = useSelector(({ sources }) => sources.sourceTypes);\n    const source = useSource();\n\n    if (!source) {\n        return <RedirectNoId />;\n    }\n\n    const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n    const apps = source.applications.filter((app) => !app.isDeleting);\n\n    return (\n        <React.Fragment>\n            {removingApp.id && <RemoveAppModal\n                app={removingApp}\n                onCancel={() => setApplicationToRemove({})}\n            />}\n            <TextContent>\n                <Grid gutter=\"md\">\n                    <GridItem md={2}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.sourceName\"\n                                defaultMessage=\"Source name\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.type\"\n                                defaultMessage=\"Type\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={8}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.apps\"\n                                defaultMessage=\"Applications\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.p}>\n                            {source.name}\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.p}>\n                            { sourceType ? sourceType.product_name : <FormattedMessage\n                                id=\"sources.typeNotFound\"\n                                defaultMessage=\"Type not found\"\n                            />}\n                        </Text>\n                    </GridItem>\n                    <GridItem md={8}>\n                        {apps.length > 0 ? <ApplicationList setApplicationToRemove={setApplicationToRemove}/> : <FormattedMessage\n                            id=\"sources.noApps\"\n                            defaultMessage=\"No applications\"\n                        />}\n                    </GridItem>\n                </Grid>\n            </TextContent>\n        </React.Fragment>\n    );\n};\n\nexport default AddApplicationDescription;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { useSource } from '../../hooks/useSource';\nimport get from 'lodash/get';\n\nexport const checkAuthTypeMemo = () => {\n    let previousAuthType;\n\n    return (newAuthType) => {\n        if (previousAuthType === newAuthType) {\n            return false;\n        }\n\n        previousAuthType = newAuthType;\n        return true;\n    };\n};\n\nexport const innerSetter = ({ sourceTypes, source, appTypes, formOptions, checkAuthType, authenticationValues }) => {\n    const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id);\n\n    const formValues = formOptions.getState();\n\n    const application = appTypes.find(\n        ({ id }) => id === get(formValues, 'values.application.application_type_id', undefined)\n    );\n    const supported_auth_type = get(application, `supported_authentication_types[${sourceType.name}][0]`, '');\n\n    if (checkAuthType(supported_auth_type)) {\n        formOptions.change('supported_auth_type', supported_auth_type);\n\n        const hasAuthenticationAlready = authenticationValues.find(({ authtype }) => authtype === supported_auth_type);\n\n        if (hasAuthenticationAlready) {\n            formOptions.change('authentication', hasAuthenticationAlready);\n        } else {\n            formOptions.change('authentication', undefined);\n        }\n    }\n};\n\nexport const AuthTypeSetter = ({ formOptions, authenticationValues }) => {\n    const [checkAuthType] = useState(() => checkAuthTypeMemo());\n\n    const { appTypes, sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const source = useSource();\n\n    innerSetter({ sourceTypes, checkAuthType, formOptions, authenticationValues, appTypes, source });\n\n    return null;\n};\n\nAuthTypeSetter.propTypes = {\n    formOptions: PropTypes.shape({\n        getState: PropTypes.func.isRequired,\n        change: PropTypes.func.isRequired\n    }).isRequired,\n    authenticationValues: PropTypes.arrayOf(PropTypes.object)\n};\n","import React from 'react';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport {\n    TextContent,\n    Text,\n    TextVariants\n} from '@patternfly/react-core';\nimport { FormattedMessage } from 'react-intl';\nimport { schemaBuilder } from '@redhat-cloud-services/frontend-components-sources';\nimport get from 'lodash/get';\n\nimport AddApplicationDescription from './AddApplicationDescription';\nimport { AuthTypeSetter } from './AuthTypeSetter';\n\nexport const NoAvailableApplicationDescription = () => (<TextContent>\n    <Text component={ TextVariants.p }>\n        <FormattedMessage\n            id=\"sources.allApplicationsAssigned\"\n            defaultMessage=\"All available applications have already been added to this source\n        or there is no available application for this source type.\"\n        />\n    </Text>\n</TextContent>);\n\nexport const ApplicationSummary = () => (<TextContent>\n    <Text component={ TextVariants.p }>\n        <FormattedMessage\n            id=\"sources.reviewAddAppSummary\"\n            defaultMessage=\"Review the information below and click Finish to add the application to your source.\"\n        /> <br />\n        <FormattedMessage\n            id=\"sources.backGuide\"\n            defaultMessage=\"Use the Back button to make changes.\"\n        />\n    </Text>\n</TextContent>);\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n    authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nconst fields = (applications = [], intl, sourceTypes, applicationTypes, authenticationValues, source) => {\n    const hasAvailableApps = applications.length > 0;\n\n    let nextStep = hasAvailableApps ? 'summary' : undefined;\n    let authenticationFields = [];\n\n    if (!source.imported && hasAvailableApps) {\n        const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id);\n\n        const appendEndpoint = sourceType.schema.endpoint.hidden ? sourceType.schema.endpoint.fields : [];\n        const hasEndpointStep = appendEndpoint.length === 0;\n\n        applicationTypes.forEach(appType => {\n            if (appType.supported_source_types.includes(sourceType.name)) {\n                const doNotRequirePasswords = hasAlreadySupportedAuthType(authenticationValues, appType, sourceType.name);\n\n                authenticationFields.push(\n                    schemaBuilder.createSpecificAuthTypeSelection(\n                        sourceType,\n                        appType,\n                        appendEndpoint,\n                        false,\n                        doNotRequirePasswords\n                    )\n                );\n            }\n        });\n\n        sourceType.schema.authentication.forEach(auth => {\n            applicationTypes.forEach(appType => {\n                if (appType.supported_source_types.includes(sourceType.name)) {\n                    const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name);\n\n                    if (appAdditionalSteps.length > 0) {\n                        const doNotRequirePasswords = hasAlreadySupportedAuthType(authenticationValues, appType, sourceType.name);\n\n                        authenticationFields.push(\n                            ...schemaBuilder.createAdditionalSteps(\n                                appAdditionalSteps,\n                                sourceType.name,\n                                auth.type,\n                                hasEndpointStep,\n                                auth.fields,\n                                appType.name,\n                                doNotRequirePasswords\n                            )\n                        );\n                    }\n                }\n            });\n        });\n\n        if (hasEndpointStep) {\n            authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n        }\n\n        nextStep = ({ values: { application } }) => {\n            const app = application ? application : {};\n            const appId = app.application_type_id ? app.application_type_id : '';\n\n            return `${sourceType.name}-${appId}`;\n        };\n    }\n\n    const applicationSelection = hasAvailableApps ? {\n        component: 'card-select',\n        name: 'application.application_type_id',\n        options: applications,\n        label: intl.formatMessage({\n            id: 'sources.chooseAppToAdd',\n            defaultMessage: 'Choose an application to add'\n        }),\n        DefaultIcon: null,\n        isRequired: true,\n        validate: [{\n            type: validatorTypes.REQUIRED\n        }]\n    } : {\n        component: 'description',\n        name: 'description-no-options',\n        validate: [{\n            type: validatorTypes.REQUIRED\n        }],\n        Content: NoAvailableApplicationDescription\n    };\n\n    return ({\n        fields: [\n            {\n                component: componentTypes.WIZARD,\n                name: 'wizard',\n                title: intl.formatMessage({\n                    id: 'sources.manageApps',\n                    defaultMessage: 'Manage applications'\n                }),\n                inModal: true,\n                predictSteps: true,\n                showTitles: true,\n                description: intl.formatMessage({\n                    id: 'sources.addAppDescription',\n                    defaultMessage: 'You are managing applications of this source'\n                }),\n                buttonLabels: {\n                    submit: intl.formatMessage({\n                        id: 'sources.finish',\n                        defaultMessage: 'Finish'\n                    }),\n                    cancel: intl.formatMessage({\n                        id: 'sources.cancel',\n                        defaultMessage: 'Cancel'\n                    }),\n                    back: intl.formatMessage({\n                        id: 'sources.back',\n                        defaultMessage: 'Back'\n                    })\n                },\n                fields: [\n                    {\n                        nextStep,\n                        title: intl.formatMessage({\n                            id: 'sources.selectApp',\n                            defaultMessage: 'Select application'\n                        }),\n                        stepKey: 1,\n                        fields: [\n                            {\n                                component: 'description',\n                                name: 'description',\n                                Content: AddApplicationDescription\n                            },\n                            applicationSelection,\n                            {\n                                component: 'description',\n                                name: 'authtypesetter',\n                                Content: AuthTypeSetter,\n                                authenticationValues,\n                                hideField: true\n                            }]\n                    }, {\n                        title: intl.formatMessage({\n                            id: 'sources.review',\n                            defaultMessage: 'Review'\n                        }),\n                        stepKey: 'summary',\n                        fields: [{\n                            component: 'description',\n                            name: 'description-summary',\n                            Content: ApplicationSummary\n                        }, {\n                            component: 'summary',\n                            name: 'summary',\n                            sourceTypes,\n                            applicationTypes\n                        }]\n                    },\n                    ...authenticationFields\n                ]\n            }\n        ]\n    });\n};\n\nexport default fields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateBody,\n    EmptyStateSecondaryActions,\n    Button,\n    Bullseye\n} from '@patternfly/react-core';\nimport { Spinner } from '@redhat-cloud-services/frontend-components';\nimport { FormattedMessage } from 'react-intl';\n\nconst LoadingStep = ({ onClose, customText }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <div>\n                <Spinner />\n            </div>\n            <EmptyStateBody>\n                { customText }\n            </EmptyStateBody>\n            { onClose &&\n        <EmptyStateSecondaryActions>\n            <Button variant=\"link\" onClick={ onClose }>\n                <FormattedMessage\n                    id=\"sources.cancel\"\n                    defaultMessage=\"Cancel\"\n                />\n            </Button>\n        </EmptyStateSecondaryActions> }\n        </EmptyState>\n    </Bullseye>\n);\n\nLoadingStep.propTypes = {\n    onClose: PropTypes.func,\n    customText: PropTypes.node\n};\n\nLoadingStep.defaultProps = {\n    customText: <FormattedMessage\n        id=\"sources.loading\"\n        defaultMessage=\"Loading, please wait.\"\n    />\n};\n\nexport default LoadingStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyStateBody,\n    EmptyState,\n    EmptyStateIcon,\n    Title, Button,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    Bullseye\n} from '@patternfly/react-core';\nimport { ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { FormattedMessage } from 'react-intl';\n\nconst ErroredStep = ({ onClose, onRetry, message, title }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ ErrorCircleOIcon } color=\"var(--pf-global--danger-color--100)\" />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                { title }\n            </Title>\n            <EmptyStateBody>\n                { message }\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={ onClose }>\n                <FormattedMessage\n                    id=\"sources.backToSources\"\n                    defaultMessage=\"Back to Sources\"\n                />\n            </Button>\n            { onRetry && <EmptyStateSecondaryActions>\n                <Button variant=\"link\" onClick={ onRetry }>\n                    <FormattedMessage\n                        id=\"sources.retry\"\n                        defaultMessage=\"Retry\"\n                    />\n                </Button>\n            </EmptyStateSecondaryActions>}\n        </EmptyState>\n    </Bullseye>\n);\n\nErroredStep.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    message: PropTypes.node.isRequired,\n    title: PropTypes.node.isRequired,\n    onRetry: PropTypes.func\n};\n\nexport default ErroredStep;\n","import React from 'react';\nimport { FormattedMessage  } from 'react-intl';\nimport { PropTypes } from 'prop-types';\n\nimport ErroredStep from '../../steps/ErroredStep';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n\nconst ErroredStepAttach = ({ setState, goToSources, error }) => (<ErroredStep\n    onClose={goToSources}\n    message={\n        <React.Fragment>\n            <FormattedMessage\n                id=\"sources.successAddApp\"\n                defaultMessage=\"Your application has not been successfully added:\"\n            />\n            <br />\n            <TextContent>\n                <Text component={TextVariants.h6}>{ error }</Text>\n            </TextContent>\n        </React.Fragment>\n    }\n    title={<FormattedMessage\n        id=\"sources.configurationSuccessful\"\n        defaultMessage=\"Configuration unsuccessful\"\n    />}\n    onRetry={() => setState({ state: 'wizard' })}\n/>);\n\nErroredStepAttach.propTypes = {\n    setState: PropTypes.func.isRequired,\n    goToSources: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired\n};\n\nexport default ErroredStepAttach;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyStateBody,\n    EmptyState,\n    EmptyStateIcon,\n    Title,\n    Button,\n    EmptyStateVariant,\n    Bullseye,\n    EmptyStateSecondaryActions\n} from '@patternfly/react-core';\nimport { CheckCircleIcon } from '@patternfly/react-icons';\nimport { FormattedMessage } from 'react-intl';\n\nconst FinishedStep = ({ onClose, title, successfulMessage, secondaryActions }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ CheckCircleIcon } color=\"var(--pf-global--success-color--100)\" />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                { title }\n            </Title>\n            <EmptyStateBody>\n                { successfulMessage }\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={ onClose }>\n                <FormattedMessage\n                    id=\"sources.backToSources\"\n                    defaultMessage=\"Back to Sources\"\n                />\n            </Button>\n            {  secondaryActions && <EmptyStateSecondaryActions>\n                { secondaryActions }\n            </EmptyStateSecondaryActions> }\n        </EmptyState>\n    </Bullseye>\n);\n\nFinishedStep.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    successfulMessage: PropTypes.node.isRequired,\n    title: PropTypes.node.isRequired,\n    secondaryActions: PropTypes.node\n};\n\nexport default FinishedStep;\n","import React from 'react';\nimport { FormattedMessage  } from 'react-intl';\nimport { PropTypes } from 'prop-types';\nimport { Button } from '@patternfly/react-core';\n\nimport FinishedStep from '../../steps/FinishedStep';\n\nconst FinishedStepAttach = ({ setState, goToSources }) => (\n    <FinishedStep\n        onClose={goToSources}\n        successfulMessage={<FormattedMessage\n            id=\"sources.successAddApp\"\n            defaultMessage=\"Your application has been successfully added.\"\n        />}\n        title={<FormattedMessage\n            id=\"sources.configurationSuccessful\"\n            defaultMessage=\"Configuration successful\"\n        />}\n        secondaryActions={\n            <Button variant=\"link\" onClick={() => setState({ state: 'wizard' })}>\n                <FormattedMessage\n                    id=\"sources.continueManageApp\"\n                    defaultMessage=\"Continue managing applications\"\n                />\n            </Button>\n        }\n    />\n);\n\nFinishedStepAttach.propTypes = {\n    setState: PropTypes.func.isRequired,\n    goToSources: PropTypes.func.isRequired\n};\n\nexport default FinishedStepAttach;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core';\n\nconst WizardBodyAttach = ({ step, goToSources }) => {\n    const intl = useIntl();\n\n    return (\n        <Wizard\n            isOpen={ true }\n            onClose={goToSources}\n            title={intl.formatMessage({\n                id: 'sources.manageApps',\n                defaultMessage: 'Manage applications'\n            })}\n            description={\n                intl.formatMessage({\n                    id: 'sources.addAppDescription',\n                    defaultMessage: 'You are managing applications of this source'\n                })\n            }\n            steps={ [{\n                name: 'Finish',\n                component: step,\n                isFinishedStep: true\n            }] }\n        />\n    );\n};\n\nWizardBodyAttach.propTypes = {\n    step: PropTypes.node.isRequired,\n    goToSources: PropTypes.func.isRequired\n};\n\nexport default WizardBodyAttach;\n","import { addedDiff, updatedDiff } from 'deep-object-diff';\nimport { patchSource, handleError } from '@redhat-cloud-services/frontend-components-sources';\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { getSourcesApi, doCreateApplication } from './entities';\nimport { urlOrHost } from './doUpdateSource';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            if (isEmpty(obj[key])) {\n                delete obj[key];\n            } else {\n                removeEmpty(obj[key]);\n            }\n        } else if (typeof obj[key] === 'undefined') {\n            delete obj[key];\n        }\n    });\n    return obj;\n};\n\nexport const doAttachApp = async (values, formApi, authenticationInitialValues) => {\n    const formState = formApi.getState();\n\n    const initialValues = formState.initialValues;\n    const allFormValues = formState.values;\n\n    const selectedAuthId = allFormValues.authentication ? allFormValues.authentication.id : undefined;\n\n    const authInitialValues = selectedAuthId\n        ? authenticationInitialValues.find(({ id }) => id === selectedAuthId)\n        : undefined;\n\n    const { authentication, ...valuesWithoutAuth } = values;\n\n    const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n    const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n    const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n    const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n    const filteredValues = removeEmpty({\n        ...merge(cloneDeep(newAddedValues), updatedValues),\n        authentication: {\n            ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues)\n        }\n    });\n\n    try {\n        if (!allFormValues.source || !allFormValues.source.id) {\n            throw 'Missing source id';\n        }\n\n        const sourceId = allFormValues.source.id;\n        let endpointId = allFormValues.endpoint ? allFormValues.endpoint.id : undefined;\n\n        const promises = [];\n\n        if (filteredValues.source && !isEmpty(filteredValues.source)) {\n            promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n        }\n\n        const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n        const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n        if (hasModifiedEndpoint || hasModifiedUrl) {\n            const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n            const endPointPort = parseInt(port, 10);\n\n            const endpointData = removeEmpty({\n                ...filteredValues.endpoint,\n                scheme,\n                host,\n                port: isNaN(endPointPort) ? undefined : endPointPort,\n                path\n            });\n\n            if (endpointId) {\n                promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n            } else {\n                const createEndpointData = {\n                    ...endpointData,\n                    default: true,\n                    source_id: sourceId\n                };\n\n                const endpoint = await getSourcesApi().createEndpoint(createEndpointData);\n                endpointId = endpoint.id;\n            }\n        }\n\n        if (filteredValues.authentication && !isEmpty(filteredValues.authentication)) {\n            if (selectedAuthId) {\n                promises.push(getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication));\n            } else if (endpointId) {\n                const authenticationData = {\n                    ...filteredValues.authentication,\n                    resource_id: endpointId,\n                    resource_type: 'Endpoint'\n                };\n\n                promises.push(getSourcesApi().createAuthentication(authenticationData));\n            }\n        }\n\n        if (filteredValues.application && filteredValues.application.application_type_id) {\n            promises.push(doCreateApplication(sourceId, filteredValues.application.application_type_id));\n        }\n\n        await Promise.all(promises);\n\n        const isAttachingCostManagement = filteredValues.credentials || filteredValues.billing_source;\n        if (isAttachingCostManagement) {\n            const { credentials, billing_source } = filteredValues;\n            let data = {};\n            data = credentials ? { authentication: { credentials } } : {};\n            data = billing_source ? { ...data, billing_source } : data;\n            await patchSource({ id: sourceId, ...data });\n        }\n    } catch (error) {\n        const errorMessage = await handleError(error);\n        throw errorMessage;\n    }\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../Utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport LoadingStep from '../steps/LoadingStep';\nimport ErroredStep from './steps/ErroredStep';\nimport FinishedStep from './steps/FinishedStep';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../SourcesSimpleView/formatters';\nimport { paths } from '../../Routes';\n\nimport { doAttachApp } from '../../api/doAttachApp';\n\nlet selectedApp = undefined; // this has to be not-state value, because it shouldn't re-render the component when changes\nconst saveSelectedApp = ({ values: { application } }) => selectedApp = application;\n\nexport const onSubmit = (values, formApi, authenticationInitialValues, dispatch, setState) => {\n    setState({ state: 'submitting' });\n\n    return doAttachApp(values, formApi, authenticationInitialValues)\n    .then(async () => {\n        await dispatch(loadEntities());\n        selectedApp = undefined;\n        return setState({ state: 'finished' });\n    })\n    .catch(error => setState({\n        state: 'errored',\n        error\n    }));\n};\n\nconst initialState = {\n    state: 'loading',\n    error: '',\n    values: {},\n    authenticationsValues: [],\n    sourceAppsLength: 0\n};\n\nconst reducer = (state, payload) => ({ ...state, ...payload });\n\nconst AddApplication = () => {\n    const intl = useIntl();\n    const history = useHistory();\n\n    const loaded = useIsLoaded();\n\n    const {\n        appTypes,\n        sourceTypesLoaded,\n        appTypesLoaded,\n        sourceTypes\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        selectedApp = undefined;\n    }, []);\n\n    useEffect(() => {\n        if (source) {\n            // When app is only removed, there is no need to reload values\n            const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n            setState({ sourceAppsLength: source.applications.length });\n\n            if (!removeAppAction) {\n                if (source.endpoints && source.endpoints[0]) {\n                    getSourcesApi()\n                    .listEndpointAuthentications(source.endpoints[0].id)\n                    .then(({ data }) => setState({\n                        authenticationsValues: data,\n                        values: {\n                            source,\n                            endpoint: source.endpoints[0],\n                            url: endpointToUrl(source.endpoints[0]),\n                            application: selectedApp\n                        }\n                    }))\n                    .then(() => {\n                        if (state.state === 'loading') {\n                            setState({\n                                state: 'wizard'\n                            });\n                        }\n                    });\n                } else {\n                    setState({\n                        values: { source, application: selectedApp }\n                    });\n                    if (state.state === 'loading') {\n                        setState({\n                            state: 'wizard'\n                        });\n                    }\n                }\n            }\n        }\n    }, [source]);\n\n    const goToSources = () => history.push(paths.sources);\n\n    if (!appTypesLoaded || !sourceTypesLoaded || !loaded) {\n        return  (\n            <WizardBody\n                goToSources={goToSources}\n                step={<LoadingStep />}\n            />\n        );\n    }\n\n    if (!source) {\n        return <RedirectNoId />;\n    }\n\n    if (state.state === 'loading' || state.state === 'submitting') {\n        return  (\n            <WizardBody\n                goToSources={goToSources}\n                step={<LoadingStep />}\n            />\n        );\n    }\n\n    if (state.state !== 'wizard') {\n        const shownStep = state.state === 'finished' ? (<FinishedStep setState={setState} goToSources={goToSources}/>) :\n            (<ErroredStep setState={setState} goToSources={goToSources} error={state.error}/>);\n\n        return (\n            <WizardBody goToSources={goToSources} step={shownStep} />\n        );\n    }\n\n    const appIds = source.applications.filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n    const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n    const sourceTypeName = sourceType && sourceType.name;\n    const filteredAppTypes = appTypes.filter((type) =>\n        !appIds.includes(type.id) && type.supported_source_types.includes(sourceTypeName)\n    );\n\n    const availableAppTypes = filteredAppTypes.map((type) => {\n        const hasDeletingApp = source.applications.find(app => app.application_type_id === type.id);\n        const label = `${type.display_name} ${hasDeletingApp ? `(${intl.formatMessage({\n            id: 'sources.currentlyRemoving',\n            defaultMessage: 'Currently removing'\n        })})` : ''}`;\n\n        return ({ value: type.id, label, isDisabled: hasDeletingApp ? true : false });\n    });\n\n    const schema = createSchema(\n        availableAppTypes,\n        intl,\n        sourceTypes,\n        appTypes,\n        state.authenticationsValues,\n        source\n    );\n\n    const onSubmitWrapper = (values, formApi) => onSubmit(\n        values,\n        formApi,\n        state.authenticationsValues,\n        dispatch,\n        setState\n    );\n\n    const hasAvailableApps = filteredAppTypes.length > 0;\n    const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n    return (\n        <SourcesFormRenderer\n            schema={schema}\n            showFormControls={false}\n            onSubmit={onSubmitFinal}\n            onCancel={goToSources}\n            initialValues={state.values}\n            subscription={{ values: true }}\n            onStateUpdate={saveSelectedApp}\n            clearedValue={null}\n        />\n    );\n};\n\nexport default AddApplication;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nimport { removeMessage, undoAddSource } from '../../redux/sources/actions';\nimport { paths } from '../../Routes';\nimport { refreshPage } from './refreshPage';\n\nconst UndoButton = ({ messageId, values }) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const notifications = useSelector(({ notifications }) => notifications);\n\n    return (\n        <Button variant=\"link\" isInline onClick={() => {\n            const notification = notifications.find(({ customId }) => customId === messageId);\n\n            if (notification) {\n                dispatch(removeMessage(notification.id));\n            }\n\n            dispatch(undoAddSource(values));\n\n            const isOnWizard = history.location.pathname === paths.sourcesNew;\n\n            if (isOnWizard) {\n                refreshPage(history);\n            } else {\n                history.push(paths.sourcesNew);\n            }\n        }}>\n            <FormattedMessage\n                id=\"sources.undo\"\n                defaultMessage=\"Undo\"\n            />\n        </Button>\n    );};\n\nUndoButton.propTypes = {\n    messageId: PropTypes.number.isRequired,\n    values: PropTypes.object.isRequired\n};\n\nexport default UndoButton;\n","export const refreshPage = history => {\n    history.push('/');\n    history.goBack();\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport awesomeDebounce from 'awesome-debounce-promise';\nimport isEmpty from 'lodash/isEmpty';\n\nimport {\n    loadEntities,\n    clearAddSource,\n    filterSources,\n    addMessage\n} from '../../redux/sources/actions';\nimport UndoButtonAdd from '../../components/UndoButton/UndoButtonAdd';\n\nexport const onCloseAddSourceWizard = ({ values, dispatch, history, intl }) => {\n    if (values && !isEmpty(values)) {\n        const messageId = Date.now();\n        dispatch(addMessage(\n            intl.formatMessage({\n                id: 'sources.addWizardCanceled',\n                defaultMessage: 'Adding a source was cancelled'\n            }),\n            'success',\n            <FormattedMessage\n                id=\"sources.undoMistake\"\n                defaultMessage={ `{undo} if this was a mistake.` }\n                values={ { undo: <UndoButtonAdd messageId={messageId} values={values} /> } }\n            />,\n            messageId\n        ));\n    }\n\n    dispatch(clearAddSource());\n    history.push('/');\n};\n\nexport const debouncedFiltering = awesomeDebounce((refresh) => refresh(), 500);\n\nexport const afterSuccessLoadParameters = { pageNumber: 1, sortBy: 'created_at', sortDirection: 'desc' };\n\nexport const afterSuccess = (dispatch) => {\n    dispatch(clearAddSource());\n    dispatch(loadEntities(afterSuccessLoadParameters));\n};\n\nexport const prepareSourceTypeSelection = (sourceTypes) =>\n    sourceTypes.map(({ id, product_name }) => ({ label: product_name, value: id }))\n    .sort((a, b) => a.label.localeCompare(b.label));\n\nexport const setFilter = (column, value, dispatch) => dispatch(filterSources({\n    [column]: value\n}));\n\nexport const chipsFormatters = (key, filterValue, sourceTypes) => ({\n    name: () => ({ name: filterValue[key], key }),\n    source_type_id: () => ({\n        category: 'Source Type',\n        key,\n        chips: filterValue[key].map(id => {\n            const sourceType = sourceTypes.find((type) => type.id === id);\n\n            return ({ name: sourceType ? sourceType.product_name : id, value: id });\n        })\n    })\n}[key] || (() => ({ name: key })));\n\nexport const prepareChips = (filterValue, sourceTypes) =>\n    Object.keys(filterValue)\n    .map((key) =>\n        filterValue[key] && filterValue[key].length > 0 ? chipsFormatters(key, filterValue, sourceTypes)() : undefined\n    )\n    .filter(Boolean);\n\nexport const removeChips = (chips, filterValue, deleteAll) => {\n    if (deleteAll) {\n        return (\n            Object.keys(filterValue).reduce((acc, curr) => ({\n                ...acc,\n                [curr]: undefined\n            }), {})\n        );\n    }\n\n    const chip = chips[0];\n\n    return ({\n        ...filterValue,\n        [chip.key]: chip.chips ? filterValue[chip.key].filter((value) => value !== chip.chips[0].value) : undefined\n    });\n};\n\nexport const loadedTypes = (types, loaded) => loaded && types.length > 0 ? types : undefined;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PaginationLoader = () => (\n    <div className=\"ins-c-sources__pagination-loader-wrapper\">\n        <ContentLoader\n            height={36}\n            width={400}\n            speed={2}\n            primaryColor=\"#f3f3f3\"\n            secondaryColor=\"#ecebeb\"\n        >\n            <rect x=\"0\" y=\"0\" rx=\"6\" ry=\"6\" width=\"400\" height=\"36\" />\n        </ContentLoader>\n    </div>\n);\n\nexport default PaginationLoader;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { useIsOrgAdmin } from '../../hooks/useIsOrgAdmin';\n\nconst RedirectNotAdmin = () => {\n    const intl = useIntl();\n\n    const isOrgAdmin = useIsOrgAdmin();\n\n    const dispatch = useDispatch();\n\n    if (isOrgAdmin === false) {\n        const title = intl.formatMessage({\n            id: 'sources.insufficietnPerms',\n            defaultMessage: 'Insufficient permissions'\n        });\n        const description = intl.formatMessage({\n            id: 'sources.insufficietnPermsDesc',\n            defaultMessage: 'You have to be an organisation admin to be able to do this action'\n        });\n\n        dispatch(addMessage(\n            title,\n            'danger',\n            description\n        ));\n        return <Redirect to=\"/\" />;\n    }\n\n    return null;\n};\n\nexport default RedirectNotAdmin;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { PageHeader, PageHeaderTitle, Section } from '@redhat-cloud-services/frontend-components';\nimport { Link, useHistory, Route } from 'react-router-dom';\nimport {\n    loadAppTypes,\n    loadEntities,\n    loadSourceTypes,\n    filterSources\n} from '../redux/sources/actions';\nimport { Button } from '@patternfly/react-core';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { AddSourceWizard } from '@redhat-cloud-services/frontend-components-sources';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components';\n\nimport SourcesSimpleView from '../components/SourcesSimpleView/SourcesSimpleView';\nimport SourcesEmptyState from '../components/SourcesEmptyState';\nimport SourceEditModal from '../components/SourceEditForm/SourceEditModal';\nimport SourceRemoveModal from '../components/SourceRemoveModal';\nimport AddApplication from '../components/AddApplication/AddApplication';\nimport { pageAndSize } from '../redux/sources/actions';\nimport { paths } from '../Routes';\n\nimport {\n    prepareChips,\n    removeChips,\n    setFilter,\n    debouncedFiltering,\n    prepareSourceTypeSelection,\n    afterSuccess,\n    onCloseAddSourceWizard,\n    loadedTypes\n} from './SourcesPage/helpers';\nimport PaginationLoader from './SourcesPage/PaginationLoader';\nimport { useIsLoaded } from '../hooks/useIsLoaded';\nimport RedirectNotAdmin from '../components/RedirectNotAdmin/RedirectNotAdmin';\nimport { useIsOrgAdmin } from '../hooks/useIsOrgAdmin';\n\nconst SourcesPage = () => {\n    const [showEmptyState, setShowEmptyState] = useState(false);\n    const [checkEmptyState, setCheckEmptyState] = useState(false);\n    const [filter, setFilterValue] = useState();\n\n    const loaded = useIsLoaded();\n    const isOrgAdmin = useIsOrgAdmin();\n\n    const history = useHistory();\n    const intl = useIntl();\n\n    const {\n        filterValue,\n        numberOfEntities,\n        appTypes,\n        pageSize,\n        pageNumber,\n        fetchingError,\n        addSourceInitialValues,\n        sourceTypes,\n        entities,\n        paginationClicked,\n        appTypesLoaded,\n        sourceTypesLoaded\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadEntities())])\n        .then(() => setCheckEmptyState(true));\n    }, []);\n\n    useEffect(() => {\n        if (checkEmptyState) {\n            setShowEmptyState(entities.length === 0);\n        }\n    }, [checkEmptyState]);\n\n    useEffect(() => {\n        if (filter !== filterValue.name) {\n            setFilterValue(filterValue.name);\n        }\n    }, [filterValue.name]);\n\n    const onSetPage = (_e, page) => dispatch(pageAndSize(page, pageSize));\n\n    const onPerPageSelect = (_e, perPage) => dispatch(pageAndSize(1, perPage));\n\n    const maximumPageNumber = Math.ceil(numberOfEntities / pageSize);\n\n    if (entities.length > 0 && loaded && pageNumber > Math.max(maximumPageNumber, 1)) {\n        onSetPage(maximumPageNumber);\n    }\n\n    const paginationConfig = {\n        itemCount: numberOfEntities,\n        page: pageNumber,\n        perPage: pageSize,\n        onSetPage,\n        onPerPageSelect,\n        isCompact: false\n    };\n\n    const paginationConfigBottom = {\n        ...paginationConfig,\n        dropDirection: 'up',\n        variant: 'bottom'\n    };\n\n    const showPaginationLoader = (!loaded || !appTypesLoaded || !sourceTypesLoaded) && !paginationClicked;\n\n    const mainContent = () => (\n        <React.Fragment>\n            <PrimaryToolbar\n                pagination={showPaginationLoader ? <PaginationLoader /> : numberOfEntities > 0 ? paginationConfig : undefined}\n                actionsConfig={isOrgAdmin ? {\n                    actions: [\n                        <Link to={paths.sourcesNew} key=\"addSourceButton\">\n                            <Button variant='primary'>\n                                <FormattedMessage\n                                    id=\"sources.addSource\"\n                                    defaultMessage=\"Add a source\"\n                                />\n                            </Button>\n                        </Link>\n                    ]\n                } : undefined}\n                filterConfig={{\n                    items: [{\n                        label: intl.formatMessage({\n                            id: 'sources.name',\n                            defaultMessage: 'Name'\n                        }),\n                        filterValues: {\n                            'aria-label': intl.formatMessage({\n                                id: 'sources.filterByName',\n                                defaultMessage: 'Filter by name'\n                            }),\n                            onChange: (_event, value) => {\n                                setFilterValue(value);\n                                debouncedFiltering(() => setFilter('name', value, dispatch));\n                            },\n                            value: filter\n                        }\n                    }, {\n                        label: intl.formatMessage({\n                            id: 'sources.type',\n                            defaultMessage: 'Type'\n                        }),\n                        type: 'checkbox',\n                        filterValues: {\n                            onChange: (_event, value) =>\n                                setFilter('source_type_id', value, dispatch),\n                            items: prepareSourceTypeSelection(sourceTypes || []),\n                            value: filterValue.source_type_id\n                        }\n                    }]\n                }}\n                activeFiltersConfig={{\n                    filters: prepareChips(filterValue, sourceTypes),\n                    onDelete: (_event, chips, deleteAll) =>\n                        dispatch(filterSources(removeChips(chips, filterValue, deleteAll)))\n                }}\n            />\n            <SourcesSimpleView />\n            <PrimaryToolbar\n                pagination={\n                    showPaginationLoader ? <PaginationLoader />\n                        : numberOfEntities > 0 ? paginationConfigBottom : undefined\n                }\n            />\n        </React.Fragment>\n    );\n\n    return (\n        <React.Fragment>\n            <Route\n                exact path={paths.sourceManageApps}\n                render={ () => (<React.Fragment>\n                    <RedirectNotAdmin />\n                    <AddApplication/>\n                </React.Fragment>) }\n            />\n            <Route\n                exact path={paths.sourcesRemove}\n                render={ () => (<React.Fragment>\n                    <RedirectNotAdmin />\n                    <SourceRemoveModal />\n                </React.Fragment>) }\n            />\n            <Route\n                exact path={paths.sourcesNew}\n                render={ () => (<React.Fragment>\n                    <RedirectNotAdmin />\n                    <AddSourceWizard\n                        sourceTypes={loadedTypes(sourceTypes, sourceTypesLoaded)}\n                        applicationTypes={loadedTypes(appTypes, appTypesLoaded)}\n                        isOpen={true}\n                        onClose={(values) => onCloseAddSourceWizard({ values, dispatch, history, intl })}\n                        afterSuccess={() => afterSuccess(dispatch)}\n                        hideSourcesButton={true}\n                        initialValues={addSourceInitialValues}\n                    />\n                </React.Fragment>) }\n            />\n            <Route\n                exact path={paths.sourcesEdit}\n                render={ () => (<React.Fragment>\n                    <RedirectNotAdmin />\n                    <SourceEditModal />\n                </React.Fragment>) }\n            />\n            <PageHeader>\n                <PageHeaderTitle title={intl.formatMessage({\n                    id: 'sources.sources',\n                    defaultMessage: 'Sources'\n                })}/>\n            </PageHeader>\n            <Section type='content'>\n                { (showEmptyState || fetchingError) ?\n                    <SourcesEmptyState\n                        title={fetchingError ? fetchingError.title : undefined}\n                        body={fetchingError ? fetchingError.detail : undefined}\n                    />\n                    :\n                    mainContent()}\n            </Section>\n        </React.Fragment>\n    );\n};\n\nexport default SourcesPage;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Sentry from '@sentry/browser';\n\nimport { addMessage } from '../redux/sources/actions';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: null\n    }\n\n    static getDerivedStateFromError(error, errorInfo) {\n        return { error, errorInfo };\n    }\n\n    componentDidCatch(error) {\n        const sentryId = Sentry.captureException(error);\n        this.props.dispatch(addMessage(\n            `${error.toString()} (Sentry ID: ${sentryId})`,\n            'danger',\n            error.stack\n        ));\n    }\n\n    render() {\n        const { error } = this.state;\n        const { children } = this.props;\n\n        if (error) {\n            return (<Fragment>\n                Error occurred\n            </Fragment>);\n        }\n\n        return (<Fragment>\n            {children}\n        </Fragment>);\n    }\n};\n\nErrorBoundary.propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    children: PropTypes.node\n};\n\nexport default connect()(ErrorBoundary);\n","export const ACTION_TYPES = [\n    'SET_ORG_ADMIN'\n].reduce((acc, curr) => ({\n    ...acc,\n    [curr]: curr,\n    [`${curr}_PENDING`]: `${curr}_PENDING`,\n    [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n    [`${curr}_REJECTED`]: `${curr}_REJECTED`\n}), {});\n","import { useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport { loadOrgAdmin } from '../redux/user/actions';\n\nconst PermissionsChecker = ({ children }) => {\n    const intl = useIntl();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const title = intl.formatMessage({\n            id: 'sources.notOrgAdmTitle',\n            defaultMessage: 'Read access only'\n        });\n        const description = intl.formatMessage({\n            id: 'sources.notOrgAdmDesc',\n            defaultMessage: 'You have to be an organisation admin to get a write access to Sources'\n        });\n        dispatch(loadOrgAdmin(title, description));\n    }, []);\n\n    return children;\n};\n\nexport default PermissionsChecker;\n","import { ACTION_TYPES } from './actions-types';\nimport { addMessage } from '../sources/actions';\n\nexport const loadOrgAdmin = (title, description) => (dispatch) => {\n    dispatch({ type: ACTION_TYPES.SET_ORG_ADMIN_PENDING });\n\n    return insights.chrome.auth.getUser().then((user) => {\n        const isOrgAdmin = user.identity.user.is_org_admin;\n\n        dispatch({\n            type: ACTION_TYPES.SET_ORG_ADMIN_FULFILLED,\n            payload: isOrgAdmin\n        });\n\n        if (!isOrgAdmin) {\n            dispatch(addMessage(\n                title,\n                'info',\n                description\n            ));\n        }\n    }\n    ).catch(error => dispatch({\n        type: ACTION_TYPES.SET_ORG_ADMIN_REJECTED,\n        payload: { error: { detail: error.detail || error.data, title: 'Cannot get user\\'s credentials' } }\n    }));\n};\n","import React, { useEffect } from 'react';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { Main } from '@redhat-cloud-services/frontend-components';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/files/helpers';\n\nimport Routes from './Routes';\nimport './App.scss';\n\nimport ErrorBoundary from './components/ErrorBoundary';\nimport PermissionsChecker from './components/PermissionsChecker';\n\nconst App = (props) => {\n    useEffect(() => {\n        insights.chrome.init();\n        try {\n            insights.chrome.identifyApp('sources');\n        } catch (_exception) {\n            // eslint-disable-next-line no-console\n            console.warn('Failed to initialize chrome navigation.');\n        }\n    }, []);\n\n    return (\n        <Router basename={getBaseName(location.pathname)}>\n            <IntlProvider locale=\"en\">\n                <React.Fragment>\n                    <NotificationsPortal />\n                    <ErrorBoundary>\n                        <PermissionsChecker>\n                            <Main style={ { padding: 0 } } >\n                                <Routes childProps={props} />\n                            </Main>\n                        </PermissionsChecker>\n                    </ErrorBoundary>\n                </React.Fragment>\n            </IntlProvider>\n        </Router>\n    );\n};\n\nexport default App;\n","import {\n    ACTION_TYPES,\n    SORT_ENTITIES,\n    PAGE_AND_SIZE,\n    FILTER_SOURCES,\n    ADD_APP_TO_SOURCE,\n    UNDO_ADD_SOURCE,\n    CLEAR_ADD_SOURCE,\n    SET_COUNT,\n    ADD_HIDDEN_SOURCE,\n    CLEAR_FILTERS\n} from './actions-types';\n\nexport const defaultSourcesState = {\n    loaded: 0,\n    pageSize: 50,\n    pageNumber: 1,\n    entities: [],\n    numberOfEntities: 0,\n    appTypesLoaded: false,\n    sourceTypesLoaded: false,\n    addSourceInitialValues: {},\n    filterValue: {},\n    sortBy: 'created_at',\n    sortDirection: 'desc'\n};\n\nexport const entitiesPending = (state, { options }) => ({\n    ...state,\n    loaded: state.loaded + 1,\n    paginationClicked: false,\n    ...options\n});\n\nexport const entitiesLoaded = (state, { payload: rows, options }) => ({\n    ...state,\n    loaded: Math.max(state.loaded - 1, 0),\n    entities: rows,\n    ...options\n});\n\nexport const entitiesRejected = (state, { payload: { error } }) => ({\n    ...state,\n    fetchingError: error\n});\n\nexport const sourceTypesPending = (state) => ({\n    ...state,\n    sourceTypes: [],\n    sourceTypesLoaded: false\n});\n\nexport const sourceTypesLoaded = (state, { payload: sourceTypes }) => ({\n    ...state,\n    sourceTypes,\n    sourceTypesLoaded: true\n});\n\nexport const appTypesPending = (state) => ({\n    ...state,\n    appTypes: [],\n    appTypesLoaded: false\n});\n\nexport const appTypesLoaded = (state, { payload: appTypes }) => ({\n    ...state,\n    appTypes,\n    appTypesLoaded: true\n});\n\nexport const sortEntities = (state, { payload: { column, direction } }) => ({\n    ...state,\n    sortBy: column,\n    sortDirection: direction\n});\n\nexport const setPageAndSize = (state, { payload: { page, size } }) => ({\n    ...state,\n    pageSize: size,\n    pageNumber: page\n});\n\nexport const filterSources = (state, { payload: { value } }) =>({\n    ...state,\n    filterValue: {\n        ...state.filterValue,\n        ...value\n    },\n    pageNumber: 1\n});\n\nexport const sourceEditRemovePending = (state, { meta }) => ({\n    ...state,\n    entities: state.entities.map(entity => entity.id === meta.sourceId ? { ...entity, isDeleting: true } : entity)\n});\n\nexport const sourceEditRemoveFulfilled = (state, { meta }) => ({\n    ...state,\n    entities: state.entities.map(entity => entity.id === meta.sourceId ? undefined : entity).filter(x => x)\n});\n\nexport const sourceEditRemoveRejected = (state, { meta }) => ({\n    ...state,\n    entities: state.entities.map(entity => entity.id === meta.sourceId ? { ...entity, isDeleting: undefined } : entity)\n});\n\nexport const appRemovingPending = (state, { meta }) => ({\n    ...state,\n    entities: state.entities.map(entity => entity.id === meta.sourceId ?\n        {\n            ...entity,\n            applications: entity.applications.map((app) => app.id === meta.appId ? ({\n                ...app,\n                isDeleting: true\n            }) : app)\n        }\n        : entity)\n});\n\nexport const appRemovingFulfilled = (state, { meta }) => ({\n    ...state,\n    entities: state.entities.map(entity => entity.id === meta.sourceId ?\n        {\n            ...entity,\n            applications: entity.applications.filter((app) => app.id !== meta.appId)\n        }\n        : entity)\n});\n\nexport const appRemovingRejected = (state, { meta }) => ({\n    ...state,\n    entities: state.entities.map(entity => entity.id === meta.sourceId ?\n        {\n            ...entity,\n            applications: entity.applications.map((app) => app.id === meta.appId ? ({\n                ...app,\n                isDeleting: undefined\n            }) : app)\n        }\n        : entity)\n});\n\nexport const addAppToSource = (state, { payload: { sourceId, app } }) => ({\n    ...state,\n    entities: state.entities.map(entity => entity.id === sourceId ?\n        {\n            ...entity,\n            applications: [...entity.applications, app]\n        }\n        : entity)\n});\n\nexport const undoAddSource = (state, { payload: { values } }) => ({\n    ...state,\n    addSourceInitialValues: values\n});\n\nexport const clearAddSource = (state) => ({\n    ...state,\n    addSourceInitialValues: {}\n});\n\nexport const setCount = (state, { payload: { count } }) => ({\n    ...state,\n    numberOfEntities: count\n});\n\nexport const addHiddenSource = (state, { payload: { source } }) => ({\n    ...state,\n    entities: [\n        ...state.entities,\n        { ...source, hidden: true }\n    ]\n});\n\nexport const clearFilters = (state) =>({\n    ...state,\n    filterValue: {},\n    pageNumber: 1\n});\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n    [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n    [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: entitiesRejected,\n    [ACTION_TYPES.LOAD_SOURCE_TYPES_PENDING]: sourceTypesPending,\n    [ACTION_TYPES.LOAD_SOURCE_TYPES_FULFILLED]: sourceTypesLoaded,\n    [ACTION_TYPES.LOAD_APP_TYPES_PENDING]: appTypesPending,\n    [ACTION_TYPES.LOAD_APP_TYPES_FULFILLED]: appTypesLoaded,\n    [ACTION_TYPES.REMOVE_SOURCE_PENDING]: sourceEditRemovePending,\n    [ACTION_TYPES.REMOVE_SOURCE_FULFILLED]: sourceEditRemoveFulfilled,\n    [ACTION_TYPES.REMOVE_SOURCE_REJECTED]: sourceEditRemoveRejected,\n    [ACTION_TYPES.REMOVE_APPLICATION_PENDING]: appRemovingPending,\n    [ACTION_TYPES.REMOVE_APPLICATION_FULFILLED]: appRemovingFulfilled,\n    [ACTION_TYPES.REMOVE_APPLICATION_REJECTED]: appRemovingRejected,\n\n    [SORT_ENTITIES]: sortEntities,\n    [PAGE_AND_SIZE]: setPageAndSize,\n    [FILTER_SOURCES]: filterSources,\n    [ADD_APP_TO_SOURCE]: addAppToSource,\n    [UNDO_ADD_SOURCE]: undoAddSource,\n    [CLEAR_ADD_SOURCE]: clearAddSource,\n    [ADD_APP_TO_SOURCE]: addAppToSource,\n    [SET_COUNT]: setCount,\n    [ADD_HIDDEN_SOURCE]: addHiddenSource,\n    [CLEAR_FILTERS]: clearFilters\n};\n","import { ACTION_TYPES } from './actions-types';\n\nexport const defaultUserState = {\n    isOrgAdmin: undefined\n};\n\nexport const orgAdminPending = (state) => ({\n    ...state,\n    isOrgAdmin: undefined\n});\n\nexport const orgAdminLoaded = (state, { payload: isOrgAdmin }) => ({\n    ...state,\n    isOrgAdmin\n});\n\nexport const orgAdminRejected = (state) => ({\n    ...state,\n    isOrgAdmin: undefined\n});\n\nexport default {\n    [ACTION_TYPES.SET_ORG_ADMIN_PENDING]: orgAdminPending,\n    [ACTION_TYPES.SET_ORG_ADMIN_FULFILLED]: orgAdminLoaded,\n    [ACTION_TYPES.SET_ORG_ADMIN_REJECTED]: orgAdminRejected\n};\n","import ReducerRegistry, { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { notifications, notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise-middleware';\n\nimport SourcesReducer, { defaultSourcesState } from '../redux/sources/reducer';\nimport UserReducer, { defaultUserState } from '../redux/user/reducer';\n\nexport const getStore = (includeLogger) => {\n    const middlewares = [\n        thunk,\n        notificationsMiddleware({ errorTitleKey: 'error.title', errorDescriptionKey: 'error.detail' }),\n        promise\n    ];\n\n    if (includeLogger) {\n        middlewares.push(logger);\n    }\n\n    const registry = new ReducerRegistry({}, middlewares);\n\n    registry.register({ sources: applyReducerHash(SourcesReducer, defaultSourcesState) });\n    registry.register({ user: applyReducerHash(UserReducer, defaultUserState) });\n    registry.register({ notifications });\n\n    return registry.getStore();\n};\n\nexport const getDevStore = () => getStore(true);\nexport const getProdStore = () => getStore(false);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ProdEntry } from './entries';\n\nReactDOM.render(<ProdEntry />, document.getElementById('root'));\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { getDevStore, getProdStore } from './Utilities/store';\n\nexport const DevEntry = () => (<Provider store={getDevStore()}>\n    <App />\n</Provider>);\n\nexport const ProdEntry = () => (<Provider store={getProdStore()}>\n    <App />\n</Provider>);\n","import React from 'react';\nimport { Text, TextContent, TextVariants, Badge, Tooltip, Popover, Bullseye } from '@patternfly/react-core';\nimport { FormattedMessage } from 'react-intl';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { CheckCircleIcon, QuestionCircleIcon, ExclamationTriangleIcon, TimesCircleIcon } from '@patternfly/react-icons';\n\nexport const defaultPort = (scheme) => ({\n    http: '80',\n    https: '443'\n}[scheme]);\n\nexport const importsTexts = (value) => ({\n    cfme: <FormattedMessage\n        id=\"sources.cloudformImportTooltip\"\n        defaultMessage=\"This source can be managed from your connected CloudForms application.\"\n    />\n}[value.toLowerCase()]);\n\nexport const schemaToPort = (schema, port) => port && String(port) !== defaultPort(schema) ? `:${port}` : '';\n\nexport const endpointToUrl = (endpoint) => {\n    const onlyTrueEndpointValues = Object.keys(endpoint).reduce((acc, curr) => ({ ...acc, [curr]: endpoint[curr] || '' }), {});\n\n    const { scheme = '', host = '', path = '', port = '' } = onlyTrueEndpointValues;\n\n    const url = `${scheme}://${host}${schemaToPort(scheme, port)}${path}`;\n\n    if (url === '://') {\n        return;\n    }\n\n    return url;\n};\n\nexport const sourceIsOpenShift = (source, sourceTypes) => {\n    const type = sourceTypes.find((type) => type.id === source.source_type_id);\n    return type && type.name === 'openshift';\n};\n\nexport const formatURL = source => source.endpoints && source.endpoints[0] && endpointToUrl(source.endpoints[0]);\n\nexport const applicationFormatter = (apps, _item, { appTypes }) => {\n    const applications = apps.map((app) => {\n        const application = appTypes.find((type) => type.id === app.application_type_id);\n\n        if (application) {\n            return application.display_name;\n        }\n    });\n\n    const filteredApplications = applications.filter((app) => typeof app !== 'undefined');\n\n    return (\n        <TextContent>\n            {filteredApplications.length > 0 ? filteredApplications.sort((a, b) => a.localeCompare(b)).map((app, index) => (\n                <Text key={app} className=\"pf-u-mb-0-on-sm\">\n                    {app}\n                    {index < filteredApplications.length - 1 && <br key={index}/>}\n                </Text>\n            )) : '--'}\n        </TextContent>\n    );\n};\n\nexport const sourceTypeFormatter = (sourceType, _item, { sourceTypes }) => {\n    const type = sourceTypes.find((type) => type.id === sourceType);\n    return (type && type.product_name) || sourceType || '';\n};\n\nexport const dateFormatter = str => (\n    <Text\n        style={ { marginBottom: 0 } }\n        component={ TextVariants.p }\n        className='ins-c-sources__help-cursor'\n    >\n        <DateFormat type='relative' date={str} />\n    </Text>\n);\n\nexport const nameFormatter = (name, source, { sourceTypes }) => (\n    <TextContent>\n        {name}\n        <br key={`${source.id}-br`}/>\n        <Text key={source.id} component={ TextVariants.small }>\n            {sourceIsOpenShift(source, sourceTypes) && formatURL(source)}\n        </Text>\n    </TextContent>\n);\n\nexport const defaultFormatter = (name) => (value) => `undefined ${name} formatter of value: ${value}`;\n\nexport const importedFormatter = (value) => {\n    if (!value) {\n        return null;\n    }\n\n    const text = importsTexts(value);\n\n    if (text) {\n        return (<Tooltip content={text}>\n            <Badge isRead className='ins-c-sources__help-cursor'>\n                <FormattedMessage\n                    id=\"sources.imported\"\n                    defaultMessage=\"imported\"\n                />\n            </Badge>\n        </Tooltip>);\n    }\n\n    return (<Badge isRead>\n        <FormattedMessage\n            id=\"sources.imported\"\n            defaultMessage=\"imported\"\n        />\n    </Badge>);\n};\n\nexport const getStatusIcon = (status) => ({\n    unavailable: <TimesCircleIcon className=\"ins-c-sources__availability-not-ok\"/>,\n    available: <CheckCircleIcon className=\"ins-c-sources__availability-ok\"/>,\n    partially_available: <ExclamationTriangleIcon className=\"ins-c-sources__availability-partially\"/>\n}[status] || <QuestionCircleIcon className=\"ins-c-sources__availability-unknown\"/>);\n\nexport const getStatusText = (status) => ({\n    unavailable: <FormattedMessage\n        id=\"sources.unavailable\"\n        defaultMessage=\"Unavailable\"\n    />,\n    available: <FormattedMessage\n        id=\"sources.ok\"\n        defaultMessage=\"OK\"\n    />,\n    partially_available: <FormattedMessage\n        id=\"sources.partiallyAvailable\"\n        defaultMessage=\"Partially available\"\n    />\n}[status] || <FormattedMessage\n    id=\"sources.unknown\"\n    defaultMessage=\"Unknown\"\n/>);\n\nexport const formatAvailibilityErrors = (source, appTypes) => {\n    if (source.applications && source.applications.length > 0) {\n        if (!source.applications.some(({ availability_status }) => availability_status === 'unavailable')) {\n            return (<FormattedMessage\n                id=\"sources.unknownError\"\n                defaultMessage=\"Unknown error\"\n            />);\n        }\n\n        return source.applications.map(\n            ({ application_type_id, availability_status_error, availability_status }, index) => {\n                if (availability_status === 'unavailable') {\n                    const application = appTypes.find(({ id }) => id === application_type_id);\n                    const applicationName = application ? application.display_name : '';\n\n                    if (availability_status_error) {\n                        return `${availability_status_error} \\n ${applicationName ? `(${applicationName})` : ''}`;\n                    }\n\n                    return (<FormattedMessage\n                        key={availability_status_error || index}\n                        id=\"sources.unknownAppError\"\n                        defaultMessage=\"Unknown application error ({ appName }) \"\n                        values={{ appName: applicationName }}\n                    />);\n                }\n            }\n        );\n    }\n\n    return (<FormattedMessage\n        key=\"availability_status_error\"\n        id=\"sources.unknownAppError\"\n        defaultMessage=\"Unknown source error.\"\n    />);\n};\n\nexport const getStatusTooltipText = (status, source, appTypes) => ({\n    unavailable: <React.Fragment>\n        <FormattedMessage\n            id=\"sources.appStatusPartiallyOK\"\n            defaultMessage=\"We found these errors:\"\n        />\n        <br />\n        {formatAvailibilityErrors(source, appTypes)}\n    </React.Fragment>,\n    available: <FormattedMessage\n        id=\"sources.appStatusOK\"\n        defaultMessage=\"Everything works fine - all applications are connected.\"\n    />,\n    partially_available: <React.Fragment>\n        <FormattedMessage\n            id=\"sources.appStatusPartiallyOK\"\n            defaultMessage=\"We found these errors:\"\n        />\n        <br />\n        {formatAvailibilityErrors(source, appTypes)}\n    </React.Fragment>\n}[status] || <FormattedMessage\n    id=\"sources.appStatusUnknown\"\n    defaultMessage=\"Status has not been verified.\"\n/>);\n\nexport const availabilityFormatter = (status, source, { appTypes }) => {\n    const noApps = !source.applications || source.applications.length === 0;\n\n    const statusContent = noApps ? '--' : (<React.Fragment>\n        {getStatusIcon(status)}&nbsp;\n        {getStatusText(status)}\n    </React.Fragment>);\n\n    const tooltipText = noApps ? (<FormattedMessage\n        id=\"sources.noAppConnected\"\n        defaultMessage=\"No application connected.\"\n    />) : getStatusTooltipText(status, source, appTypes);\n\n    return (<TextContent className=\"clickable\">\n        <Text key={status} component={ TextVariants.p }>\n            <Popover\n                aria-label={`${status} popover`}\n                bodyContent={<h1>{tooltipText}</h1>}\n            >\n                <span>\n                    {statusContent}\n                </span>\n            </Popover>\n        </Text>\n    </TextContent>);\n};\n\nexport const sourceTypeIconFormatter = (sourceTypeId, _item, { sourceTypes }) => {\n    const sourceType = sourceTypes.find(({ id }) => id === sourceTypeId);\n\n    if (!sourceType || !sourceType.icon_url) {\n        return null;\n    }\n\n    return (<Bullseye>\n        <img src={sourceType.icon_url} alt={sourceType.product_name} className=\"ins-c-sources__icon\" />\n    </Bullseye>);\n};\n\nexport const formatters = (name) => ({\n    nameFormatter,\n    dateFormatter,\n    applicationFormatter,\n    sourceTypeFormatter,\n    importedFormatter,\n    availabilityFormatter,\n    sourceTypeIconFormatter\n}[name] || defaultFormatter(name));\n","export const COST_MANAGEMENT_API_BASE = `${process.env.BASE_PATH}/cost-management/v1`;\nexport const SOURCES_API_BASE = `${process.env.BASE_PATH}/sources/v1.0`;\n"],"sourceRoot":""}