{"version":3,"sources":["webpack:///./src/SmartComponents/ProviderPage/provider-page.scss","webpack:///./src/PresentationalComponents/DetailView/DetailView.js","webpack:///./src/SmartComponents/ProviderPage/provider-page.scss?a39d","webpack:///./src/PresentationalComponents/SourcesListView/SourcesListView.js","webpack:///./src/PresentationalComponents/SourcesListView/SourcesFilter.js","webpack:///./src/SmartComponents/ProviderPage/providerColumns.js","webpack:///./src/SmartComponents/ProviderPage/ProviderPage.js"],"names":["module","exports","__webpack_require__","push","i","DetailView","sourceId","this","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_8__","sm","md","lg","xl","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_9__","withLegend","identifier","concat","values","Component","propTypes","PropTypes","number","isRequired","content","options","hmr","transform","insertInto","undefined","update","locals","hot","accept","newContent","b","key","idx","Error","dispose","RowLoader","react_default","react_content_loader_es","extends_default","height","width","x","y","rx","ry","SourcesListView","_this","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","call","defineProperty_default","assertThisInitialized_default","loadEntities","_event","checked","selectEntity","direction","sortEntities","filteredColumns","value","setState","sortBy","index","_row","rowKey","expandEntity","isOpen","sourceIndexToId","entities","id","title","onClick","_ev","history","toConsumableArray_default","renderViewLinks","reduce","Object","keys","viewDefinitions","acc","viewName","displayName","_this$props","loaded","rowData","flatten","map","item","objectSpread_default","expanded","cells","col","Link","to","topology_icon","parent","colSpan","Table","aria-label","onCollapse","onSort","state","rows","headers","actions","renderActions","Header","Body","className","SourcesListView_RowLoader","filter","sourcesViewDefinition","columns","c","transforms","sortable","React","arrayOf","shape","string","func","any","numberOfEntities","bool","defaultProps","connect","_ref","_ref$providers","providers","dispatch","bindActionCreators","withRouter","SourcesFilter","filterValue","column","console","log","onFilter","insights_frontend_components","items","onButtonClick","onFilterButtonClick","providerColumns","ProviderPage","formState","createSource","then","replace","catch","error","debug","filterColumn","filterProviders","onPage","pageAndSize","itemsPerPage","count","filterColumns","Fragment","Modal","isLarge","location","pathname","onClose","goBack","SourcesFormRenderer","initialValues","schemaType","schema","uiSchema","showFormControls","onSubmit","submitProvider","type","Gallery","Card","CardHeader","CardBody","CardFooter","Button","variant","SourcesListView_SourcesFilter","PresentationalComponents_SourcesListView_SourcesListView","page","onSetPage","onPerPageSelect","numberOfItems","addProvider"],"mappings":"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","file":"js/ProviderPage.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Pie } from '@red-hat-insights/insights-frontend-components';\n\n// import { TagView } from '@manageiq/react-ui-components/dist/tagging-pf4';\n\nclass DetailView extends Component {\n    render() {\n        const { sourceId } = this.props;\n        return (\n            <Grid>\n                <GridItem sm={6} md={4} lg={4} xl={4}>\n                    <Pie withLegend identifier={`donut-${sourceId}`} values={[['Red Hat', 100], ['Google', 10]]}/>\n                </GridItem>\n                <GridItem sm={6} md={4} lg={4} xl={4}>\n                    <dl>\n                        <dt>IP Address</dt><dd>192.168.2.1</dd>\n                        <dt>Location</dt><dd>Brno</dd>\n                        <dt>Status</dt><dd>Ready for Fredie</dd>\n                        <dt>Licence</dt><dd>Apache Licence 2.0</dd>\n                    </dl>\n                </GridItem>\n                <GridItem sm={6} md={4} lg={4} xl={3}>\n                    { /*\n                    <TagView assignedTags={\n                        [\n                            { id: 11, description: 'Environment', values: [{ id: 1, description: 'Production' }] },\n                            { id: 12, description: 'Location', values: [{ id: 2, description: 'Brno' }] },\n                            { id: 13, description: 'Server Type', values: [\n                                { id: 2, description: 'Web' },\n                                { id: 3, description: 'PostgreSQL' }] }\n                        ]\n                    } />\n                    */ }\n                </GridItem>\n            </Grid>\n        );\n    }\n}\n\nDetailView.propTypes = {\n    sourceId: PropTypes.number.isRequired\n};\n\nexport default DetailView;\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./provider-page.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./provider-page.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./provider-page.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { TopologyIcon } from '@patternfly/react-icons';\nimport { Table, TableHeader, TableBody, sortable } from '@patternfly/react-table';\n\nimport flatten from 'lodash/flatten';\nimport filter from 'lodash/filter';\nimport reduce from 'lodash/reduce';\nimport ContentLoader from 'react-content-loader';\n\nimport { loadEntities, selectEntity, expandEntity, sortEntities } from '../../redux/actions/providers';\nimport DetailView from '../../PresentationalComponents/DetailView/DetailView';\n\nimport { sourcesViewDefinition } from '../../views/sourcesViewDefinition';\nimport { viewDefinitions } from '../../views/viewDefinitions';\n\nconst RowLoader = props => (\n    <ContentLoader\n        height={20}\n        width={480}\n        {...props}\n    >\n        <rect x=\"30\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"7\" />\n        <rect x=\"300\" y=\"0\" rx=\"3\" ry=\"3\" width=\"70\" height=\"7\" />\n        <rect x=\"385\" y=\"0\" rx=\"3\" ry=\"3\" width=\"95\" height=\"7\" />\n        <rect x=\"50\" y=\"12\" rx=\"3\" ry=\"3\" width=\"80\" height=\"7\" />\n        <rect x=\"150\" y=\"12\" rx=\"3\" ry=\"3\" width=\"200\" height=\"7\" />\n        <rect x=\"360\" y=\"12\" rx=\"3\" ry=\"3\" width=\"120\" height=\"7\" />\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"20\" height=\"20\" />\n    </ContentLoader>\n);\n\nclass SourcesListView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filteredColumns = filter(sourcesViewDefinition.columns, c => c.title);\n\n        this.headers = this.filteredColumns.map(col => ({\n            title: col.title,\n            transforms: [sortable]\n        })).concat('');\n\n        this.state = {\n            sortBy: {}\n        };\n    }\n\n    componentDidMount = () => this.props.loadEntities();\n\n    //onSelect = (_event, key, application) => {\n    //    console.log('onSelect', key, application);\n    //}\n\n    onItemSelect = (_event, key, checked) => this.props.selectEntity(key, checked);\n\n    onSort = (_event, key, direction) => {\n        // -1 for the expander column\n        this.props.sortEntities(this.filteredColumns[key - 1].value, direction);\n        this.setState({\n            sortBy: {\n                index: key,\n                direction\n            }\n        });\n    }\n\n    onExpandClick = (_event, _row, rowKey) => this.props.expandEntity(rowKey, true);\n\n    onCollapse = (_event, i, isOpen) =>\n        this.props.expandEntity(this.sourceIndexToId(i), isOpen);\n\n    sourceIndexToId = (i) => this.props.entities[i / 2].id;\n\n    renderActions = () => (\n        [\n            {\n                title: 'Show Details',\n                onClick: (_ev, i) => this.props.history.push(`/${this.sourceIndexToId(i)}`)\n            },\n            ...this.renderViewLinks()\n        ]\n    );\n\n    renderViewLinks = () =>\n        reduce(Object.keys(viewDefinitions), (acc, viewName) => (\n            acc.push(\n                {\n                    title: `Show ${viewDefinitions[viewName].displayName}`,\n                    onClick: (_ev, i) => this.props.history.push(`/${this.sourceIndexToId(i)}/${viewName}`)\n                }\n            ) && acc\n        ), []);\n\n    render = () => {\n        const { entities, loaded } = this.props;\n        const rowData = flatten(entities.map((item, index) => (\n            [\n                {\n                    ...item,\n                    isOpen: !!item.expanded,\n                    cells: this.filteredColumns.map(col => item[col.value] || '').concat({\n                        title: <Link key='bar' to={`/${item.id}/topology`}><TopologyIcon /></Link>\n                    })\n                },\n                {\n                    id: item.id + '_detail',\n                    parent: index,\n                    cells: [\n                        {\n                            title: item.expanded ? <DetailView sourceId={item.id}/> : 'collapsed content',\n                            colSpan: 6\n                        }\n                    ]\n                }\n            ]\n        )));\n        // console.log(rowData);\n\n        if (loaded) {\n            return (\n                <Table\n                    aria-label=\"List of Sources\"\n                    onCollapse={this.onCollapse}\n                    onSort={this.onSort}\n                    sortBy={this.state.sortBy}\n                    rows={rowData}\n                    cells={this.headers}\n                    actions={this.renderActions()}\n                >\n                    <TableHeader />\n                    <TableBody />\n                </Table>\n            );\n        }\n\n        return (\n            <table className=\"sources-placeholder-table pf-m-compact ins-entity-table\">\n                <tbody>\n                    <tr><td><RowLoader /></td></tr>\n                    <tr><td><RowLoader /></td></tr>\n                </tbody>\n            </table>\n        );\n    }\n};\n\nSourcesListView.propTypes = {\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        title: PropTypes.string\n    })).isRequired,\n\n    loadEntities: PropTypes.func.isRequired,\n    selectEntity: PropTypes.func.isRequired,\n    expandEntity: PropTypes.func.isRequired,\n    sortEntities: PropTypes.func.isRequired,\n\n    entities: PropTypes.arrayOf(PropTypes.any),\n    numberOfEntities: PropTypes.number.isRequired,\n    loaded: PropTypes.bool.isRequired,\n\n    history: PropTypes.any.isRequired\n};\n\nSourcesListView.defaultProps = {\n    entities: [],\n    numberOfEntities: 0,\n    loaded: false\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    loadEntities, selectEntity, expandEntity, sortEntities }, dispatch);\n\nconst mapStateToProps = ({ providers: { entities, numberOfEntities, loaded } }) => ({ entities, numberOfEntities, loaded });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SourcesListView));\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { SimpleTableFilter } from '@red-hat-insights/insights-frontend-components';\n\nclass SourcesFilter extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onFilterButtonClick = (filterValue, column) => {\n        console.log('filter click', column.value, filterValue);\n        this.props.onFilter(column.value, filterValue);\n    }\n\n    render = () =>\n        <SimpleTableFilter\n            options={{\n                title: 'Filter By',\n                items: this.props.columns\n            }}\n            onButtonClick={this.onFilterButtonClick}\n        />\n}\n\nSourcesFilter.propTypes = {\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        title: PropTypes.string\n    })).isRequired,\n    onFilter: PropTypes.func.isRequired\n};\n\nexport default SourcesFilter;\n","export const providerColumns = [\n    { title: 'Provider',     value: 'name' },\n    { title: 'Status',       value: null },\n    { title: 'Type',         value: 'type' },\n    { title: 'Last Updated', value: null }\n];\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Donut, PageHeader, PageHeaderTitle, Pagination, Section } from '@red-hat-insights/insights-frontend-components';\n\nimport './provider-page.scss';\nimport filter from 'lodash/filter';\nimport { addProvider, createSource, filterProviders } from '../../redux/actions/providers';\n\nimport { Button } from '@patternfly/react-core';\nimport { Card, CardHeader, CardBody, CardFooter, Gallery, Modal } from '@patternfly/react-core';\n\nimport SourcesListView from '../../PresentationalComponents/SourcesListView/SourcesListView';\nimport SourcesFilter from '../../PresentationalComponents/SourcesListView/SourcesFilter';\n\nimport { providerColumns } from '../../SmartComponents/ProviderPage/providerColumns';\n//import { wizardForm } from './providerForm';\nimport SourcesFormRenderer from '../../Utilities/SourcesFormRenderer';\n\nimport { pageAndSize } from '../../redux/actions/providers';\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\nclass ProviderPage extends Component {\n    static propTypes = {\n        addProvider: PropTypes.func.isRequired,\n        createSource: PropTypes.func.isRequired,\n        filterProviders: PropTypes.func.isRequired,\n        pageAndSize: PropTypes.func.isRequired,\n\n        numberOfEntities: PropTypes.number.isRequired,\n\n        location: PropTypes.any.isRequired,\n        history: PropTypes.any.isRequired\n    };\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            itemsPerPage: 10,\n            onPage: 1\n        };\n    }\n\n    submitProvider = (values, formState) => {\n        console.log('submitProvider', values, formState);\n        //this.props.addProvider(values);\n        this.props.createSource(values).then(() => {\n            //this.props.addAlert('Source added', 'success');\n            this.props.history.replace('/');\n        }).catch(error => {\n            console.debug('CATCH:'); console.debug(error);\n            //this.props.addAlert('Source adding failed', 'danger');\n            this.props.history.replace('/');\n        });\n    }\n\n    onFilter = (filterColumn, filterValue) => {\n        console.log('onFilter', filterColumn, filterValue);\n        this.props.filterProviders(filterColumn, filterValue);\n    }\n\n    onSetPage = (number) => {\n        this.setState({\n            onPage: number\n        });\n        this.props.pageAndSize(number, this.state.itemsPerPage);\n    }\n\n    onPerPageSelect = (count) => {\n        this.setState({\n            onPage: 1,\n            itemsPerPage: count\n        });\n        this.props.pageAndSize(1, count);\n    }\n\n    render = () => {\n        const filterColumns = filter(providerColumns, c => c.value);\n\n        const form = null; //wizardForm;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    className='add-source'\n                    isLarge title='Add New Provider'\n                    isOpen={this.props.location.pathname === '/new'}\n                    onClose={this.props.history.goBack}>\n\n                    <SourcesFormRenderer\n                        initialValues={form.initialValues}\n                        schemaType={form.schemaType}\n                        schema={form.schema}\n                        uiSchema={form.uiSchema}\n                        showFormControls={form.showFormControls}\n                        onSubmit={this.submitProvider}\n                    />\n                </Modal>\n                <PageHeader>\n                    <PageHeaderTitle title='Providers'/>\n                </PageHeader>\n                <Section type='content'>\n                    <Gallery>\n                        <Card>\n                            <CardHeader>Karta</CardHeader>\n                            <CardBody>\n                                <Donut withLegend identifier='orech' values={[['Red Hat', 100], ['Google', 10]]}/>\n                            </CardBody>\n                            <CardFooter>Footer</CardFooter>\n                        </Card>\n\n                        <Card>\n                            <CardBody>\n                                <p>5 Cloud</p>\n                                <p>2 Virtual Infrastructure</p>\n                                <p>1 Physical Infrastructure</p>\n                            </CardBody>\n                        </Card>\n\n                        <Card>\n                            <CardBody>\n                                <p>1 Network</p>\n                                <p>0 Storage</p>\n                                <p>0 Automation</p>\n                            </CardBody>\n                        </Card>\n\n                        <Card>\n                            <CardBody>\n                                <Section type='button-group'>\n                                    <Link to='/new'>\n                                        <Button variant='primary'> Add a New Source </Button>\n                                    </Link>\n                                </Section>\n                            </CardBody>\n                        </Card>\n                    </Gallery>\n\n                    <Card>\n                        <CardHeader>\n                            <SourcesFilter columns={filterColumns} onFilter={this.onFilter}/>\n                        </CardHeader>\n                        <CardBody>\n                            <SourcesListView columns={providerColumns}/>\n                        </CardBody>\n                        <CardFooter>\n                            <Pagination\n                                itemsPerPage={this.state.itemsPerPage}\n                                page={this.state.onPage}\n                                direction='up'\n                                onSetPage={this.onSetPage}\n                                onPerPageSelect={this.onPerPageSelect}\n                                numberOfItems={this.props.numberOfEntities || 0}\n                            />\n                        </CardFooter>\n                    </Card>\n                </Section>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ addProvider, createSource, filterProviders, pageAndSize }, dispatch);\n\nconst mapStateToProps = ({ providers: { numberOfEntities } }) => ({ numberOfEntities });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProviderPage));\n"],"sourceRoot":""}