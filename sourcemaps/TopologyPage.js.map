{"version":3,"sources":["webpack:///./src/redux/actions/topology.js","webpack:///./src/PresentationalComponents/TopologyView/NodeDetails.js","webpack:///./src/PresentationalComponents/TopologyView/TopologyView.js","webpack:///./src/SmartComponents/TopologyPage/TopologyPage.js"],"names":["loadTopology","type","LOAD_TOPOLOGY","payload","nodeClick","node","NODE_CLICK_TOPOLOGY","NodeDetails","props","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","undefined","react_default","a","createElement","Card","CardHeader","CardBody","id","title","Component","PropTypes","arrayOf","shape","string","isRequired","connect","_ref","topology","activeNode","TopologyView","_this","defineProperty_default","assertThisInitialized_default","console","log","nodes","length","Split","SplitItem","isMain","TopologyView_NodeDetails","any","edges","func","_ref$topology","_ref$topology$nodes","_ref$topology$edges","dispatch","bindActionCreators","TopologyPage","Fragment","insights_frontend_components","PresentationalComponents_TopologyView_TopologyView"],"mappings":"qRAEaA,EAAe,kBACxBC,KAAMC,IACNC,aAGSC,EAAY,SAACC,GAAD,OACrBJ,KAAMK,IACNH,SAAWE,sDCJTE,cAQF,SAAAA,EAAYC,GAAO,OAAAC,IAAAC,KAAAH,GAAAI,IAAAD,KAAAE,IAAAL,GAAAM,KAAAH,KACTF,0DAKN,YAAwBM,IAApBJ,KAAKF,MAAMH,KACPU,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAMH,EAAAC,EAAAC,cAACE,EAAA,EAAD,uBAGVJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,mBAAuBJ,EAAAC,EAAAC,cAAA,kBACvBF,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACIL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,gBAAWF,EAAAC,EAAAC,cAAA,UAAKP,KAAKF,MAAMH,KAAKgB,IAChCN,EAAAC,EAAAC,cAAA,mBAAcF,EAAAC,EAAAC,cAAA,UAAKP,KAAKF,MAAMH,KAAKiB,iBAvBjCC,iBAApBhB,eAEEF,KAAMmB,IAAUC,QAAQD,IAAUE,OAC9BL,GAAIG,IAAUG,OACdL,MAAOE,IAAUG,UACjBC,aA0BZ,IAEeC,oBAFS,SAAAC,GAAA,OAA2CzB,KAA3CyB,EAAGC,SAAYC,aAExBH,CAAyBtB,GC3BlC0B,cAQF,SAAAA,EAAYzB,GAAO,IAAA0B,EAAA,OAAAzB,IAAAC,KAAAuB,GACfC,EAAAvB,IAAAD,KAAAE,IAAAqB,GAAApB,KAAAH,KAAMF,IADS2B,IAAAC,QAAAF,IAAA,kBAID,SAAC7B,GACfgC,QAAQC,IAAI,kBAAmBjC,GAC/B6B,EAAK1B,MAAMJ,UAAUC,KANN8B,IAAAC,QAAAF,IAAA,oBASC,WAChBA,EAAK1B,MAAMR,iBAVImC,IAAAC,QAAAF,IAAA,SAaV,WAGL,OAAqB,IADHA,EAAK1B,MAAf+B,MACEC,OACCzB,EAAAC,EAAAC,cAAA,qBAIPF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACyB,EAAA,GAAUC,QAAM,IAOjB5B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACI3B,EAAAC,EAAAC,cAAC2B,EAAD,UA9BGV,qBARIX,iBAArBU,eAEEM,MAAOf,IAAUC,QAAQD,IAAUqB,KAAKjB,WACxCkB,MAAOtB,IAAUC,QAAQD,IAAUqB,KAAKjB,WACxC5B,aAAcwB,IAAUuB,KAAKnB,WAC7BxB,UAAWoB,IAAUuB,KAAKnB,aAwClC,IAGeC,oBAFS,SAAAC,GAAA,IAAAkB,EAAAlB,EAAGC,SAAHkB,EAAAD,EAAeT,aAAf,IAAAU,OAAAC,EAAAF,EAA2BF,MAA3B,OAAiDP,QAAOO,WAAxD,IAAAI,SADG,SAAAC,GAAQ,OAAIC,8BAAqBpD,eAAcI,aAAa+C,IAGxEtB,CAA6CI,WCvDtDoB,6MACO,kBACLtC,EAAAC,EAAAC,cAACF,EAAAC,EAAMsC,SAAP,KACIvC,EAAAC,EAAAC,cAACsC,EAAA,WAAD,KACIxC,EAAAC,EAAAC,cAACsC,EAAA,iBAAgBjC,MAAM,cAE3BP,EAAAC,EAAAC,cAACsC,EAAA,SAAQtD,KAAK,WACVc,EAAAC,EAAAC,cAACuC,EAAD,+BAPWjC,aAYZ8B","file":"js/TopologyPage.js","sourcesContent":["import { LOAD_TOPOLOGY, NODE_CLICK_TOPOLOGY } from '../action-types-topology';\n\nexport const loadTopology = () => ({\n    type: LOAD_TOPOLOGY,\n    payload: {}\n});\n\nexport const nodeClick = (node) => ({\n    type: NODE_CLICK_TOPOLOGY,\n    payload: { node }\n});\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, CardHeader, CardBody } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nclass NodeDetails extends Component {\n    static propTypes = {\n        node: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string\n        })).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        //{id: 3, title: \"Yang\", size: 24, fonticon: \"fa fa-cloud\", depth: 3}\n        if (this.props.node === undefined)\n        {return <Card><CardHeader>Select a node</CardHeader></Card>;}\n\n        return (\n            <Card>\n                <CardHeader>Details go <b>here</b></CardHeader>\n                <CardBody>\n                    <dl>\n                        <dt>ID</dt><dd>{this.props.node.id}</dd>\n                        <dt>Title</dt><dd>{this.props.node.title}</dd>\n                    </dl>\n                </CardBody>\n            </Card>\n        );\n    }\n}\n\nconst mapStateToProps = ({ topology: { activeNode: node } }) => ({ node });\n\nexport default connect(mapStateToProps)(NodeDetails);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// import { TopologyCanvas } from '@manageiq/react-ui-components/dist/topology';\n// import '@manageiq/react-ui-components/dist/topology.css';\nimport { Split, SplitItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport { loadTopology, nodeClick } from '../../redux/actions/topology';\nimport NodeDetails from './NodeDetails';\n\nclass TopologyView extends Component {\n    static propTypes = {\n        nodes: PropTypes.arrayOf(PropTypes.any).isRequired,\n        edges: PropTypes.arrayOf(PropTypes.any).isRequired,\n        loadTopology: PropTypes.func.isRequired,\n        nodeClick: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n    }\n\n    handleNodeClick = (node) => {\n        console.log('handleNodeClick', node);\n        this.props.nodeClick(node);\n    }\n\n    componentDidMount = () => {\n        this.props.loadTopology();\n    }\n\n    render = () => {\n        //const { nodes, edges } = this.props;\n        const { nodes } = this.props;\n        if (nodes.length === 0) {\n            return <h1>Loading</h1>;\n        }\n\n        return (\n            <Split>\n                <SplitItem isMain>\n                    { /*\n                    <TopologyCanvas nodes={nodes} edges={edges}\n                        handleNodeClick={this.handleNodeClick}\n                    />\n                    */ }\n                </SplitItem>\n                <SplitItem>\n                    <NodeDetails />\n                </SplitItem>\n            </Split>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ loadTopology, nodeClick }, dispatch);\nconst mapStateToProps = ({ topology: { nodes = [], edges = [] } }) => ({ nodes, edges });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopologyView);\n","import React, { Component } from 'react';\nimport TopologyView from '../../PresentationalComponents/TopologyView/TopologyView';\nimport { PageHeader, PageHeaderTitle, Section } from '@red-hat-insights/insights-frontend-components';\n\nclass TopologyPage extends Component {\n    render = () =>\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title='Topology'/>\n            </PageHeader>\n            <Section type='content'>\n                <TopologyView />\n            </Section>\n        </React.Fragment>\n}\n\nexport default TopologyPage;\n"],"sourceRoot":""}