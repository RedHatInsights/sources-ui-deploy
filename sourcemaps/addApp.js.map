{"version":3,"sources":["webpack:///./src/components/editField/EditField.js","webpack:///./src/Utilities/SourcesFormRenderer.js","webpack:///./src/components/ApplicationsList/ApplicationList.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/AddApplicationDescription.js","webpack:///./src/components/AddApplication/AuthTypeSetter.js","webpack:///./src/components/AddApplication/AddApplicationSchema.js","webpack:///./src/components/steps/LoadingStep.js","webpack:///./src/components/steps/ErroredStep.js","webpack:///./src/components/AddApplication/steps/ErroredStep.js","webpack:///./src/components/steps/FinishedStep.js","webpack:///./src/components/AddApplication/steps/FinishedStep.js","webpack:///./src/components/AddApplication/WizardBody.js","webpack:///./src/api/doAttachApp.js","webpack:///./src/components/AddApplication/AddApplication.js","webpack:///./src/components/AddApplication/onCancel.js"],"names":["EDIT_FIELD_NAME","EditField","isRequired","label","helperText","hideLabel","meta","input","type","setEdit","error","showError","touched","value","emptyText","name","includes","fieldId","isValid","helperTextInvalid","onClick","undefined","tabIndex","onKeyPress","e","charCode","preventDefault","className","propTypes","PropTypes","node","bool","string","object","FieldProvider","oneOfType","func","shape","any","EditFieldProvider","rest","props","SourcesFormRenderer","layoutMapper","formFieldsMapper","mapperExtension","ApplicationList","setApplicationToRemove","breakpoints","namePrefix","appTypes","useSelector","sources","source","useSource","sourceAppsNames","applications","map","application_type_id","appType","find","id","display_name","filter","app","isDeleting","dependent_applications","sort","a","b","localeCompare","key","md","component","TextVariants","p","style","marginBottom","remove","variant","ButtonVariant","link","isInline","defaultMessage","number","defaultProps","RemoveAppModal","onCancel","intl","useIntl","dispatch","useDispatch","dependentApps","appName","x","title","isOpen","isSmall","onClose","isFooterLeftAligned","actions","titleSuccess","formatMessage","titleError","removeApplication","gutter","size","isFilled","values","length","apps","arrayOf","AddApplicationDescription","useState","removingApp","sourceTypes","sourceType","source_type_id","Fragment","TextContent","Grid","Text","h4","product_name","AuthTypeSetter","formOptions","authenticationValues","modifiedValues","newAuthType","previousAuthType","checkAuthType","shallowEqual","useEffect","formValues","getState","application","get","supported_auth_type","change","hasAuthenticationAlready","authtype","authentication","newAuthenticationValues","merge","cloneDeep","innerSetter","NoAvailableApplicationDescription","ApplicationSummary","hasAlreadySupportedAuthType","authValues","sourceTypeName","fields","applicationTypes","hasAvailableApps","nextStep","authenticationFields","imported","appendEndpoint","schema","endpoint","hidden","hasEndpointStep","forEach","supported_source_types","doNotRequirePasswords","push","schemaBuilder","createSpecificAuthTypeSelection","auth","appAdditionalSteps","getAdditionalSteps","createAdditionalSteps","createEndpointStep","appId","applicationSelection","options","DefaultIcon","validate","validatorTypes","REQUIRED","Content","componentTypes","WIZARD","inModal","predictSteps","showTitles","crossroads","description","buttonLabels","submit","cancel","back","stepKey","hideField","LoadingStep","customText","Bullseye","EmptyState","EmptyStateVariant","full","Spinner","EmptyStateBody","EmptyStateSecondaryActions","Button","ErroredStep","onRetry","message","EmptyStateIcon","icon","TimesCircleIcon","color","Title","headingLevel","ErroredStepAttach","setState","goToSources","h6","state","FinishedStep","successfulMessage","secondaryActions","CheckCircleIcon","FinishedStepAttach","WizardBodyAttach","step","Wizard","steps","isFinishedStep","removeEmpty","obj","Object","keys","isEmpty","doAttachApp","formApi","authenticationInitialValues","initialValues","formState","allFormValues","selectedAuthId","authInitialValues","valuesWithoutAuth","newAddedValues","addedDiff","updatedValues","updatedDiff","newAddedAuthValues","updatedAuthValues","filteredValues","sourceId","endpointId","promises","getSourcesApi","updateSource","Promise","resolve","hasModifiedEndpoint","hasModifiedUrl","url","urlOrHost","scheme","host","port","path","endPointPort","parseInt","endpointData","isNaN","updateEndpoint","createEndpointData","default","source_id","createEndpoint","updateAuthentication","authenticationData","resource_id","resource_type","createAuthentication","doCreateApplication","all","authenticationDataOut","applicationDataOut","authenticationId","promisesSecondRound","authAppData","application_id","authentication_id","createAuthApp","credentials","billing_source","data","patchSource","handleError","selectedApp","saveSelectedApp","onSubmit","then","loadEntities","initialState","authenticationsValues","sourceAppsLength","reducer","payload","AddApplication","history","useHistory","loaded","useIsLoaded","sourceTypesLoaded","appTypesLoaded","undoValues","useReducer","removeAppAction","endpoints","listEndpointAuthentications","endpointToUrl","routes","WizardBody","shownStep","appIds","reduce","acc","filteredAppTypes","filterApps","availableAppTypes","hasDeletingApp","isDisabled","usersModifiedValues","createSchema","onSubmitFinal","finalValues","showFormControls","messageId","Date","now","addMessage","undo","UndoButtonAdd","replaceRouteId","sourceManageApps","clearAddSource","onCancelAddApplication","subscription","onStateUpdate","clearedValue"],"mappings":"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","file":"js/addApp.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PencilAltIcon from '@patternfly/react-icons/dist/js/icons/pencil-alt-icon';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\n\nexport const EDIT_FIELD_NAME = 'edit-field';\n\nconst EditField = ({ isRequired, label, helperText, hideLabel, meta, input, type, setEdit }) => {\n    const { error, touched } = meta;\n    const showError = touched && error;\n\n    let value = input.value;\n\n    if (typeof value === 'boolean') {\n        value = value ? 'True' : 'False';\n    }\n\n    const isPassword = type === 'password' || input.name.includes('password');\n    const emptyText = isPassword ? 'Click to edit' : 'Click to add';\n\n    return (\n        <FormGroup\n            isRequired={ isRequired }\n            label={ !hideLabel && label }\n            fieldId={ input.name }\n            isValid={ !showError }\n            helperText={ helperText }\n            helperTextInvalid={ error }\n            onClick={setEdit ? () => setEdit(input.name) : undefined}\n            tabIndex={0}\n            onKeyPress={(e) => {\n                if (e.charCode === 32 && setEdit) {\n                    e.preventDefault();\n                    setEdit(input.name);\n                }\n            }}\n        >\n            <div className={`pf-c-form__horizontal-group ins-c-sources__edit-field-group ${setEdit ? 'clickable' : ''}`}>\n                <TextContent className={`ins-c-sources__edit-field-group-text-content ${setEdit ? 'clickable' : ''}`}>\n                    <span className=\"ins-c-sources__edit-field-value pf-u-mr-sm\">\n                        {value ? value : setEdit ? emptyText : ''}\n                    </span>\n                    {setEdit && <PencilAltIcon />}\n                </TextContent>\n            </div>\n        </FormGroup>\n    );\n};\n\nEditField.propTypes = {\n    label: PropTypes.node,\n    isRequired: PropTypes.bool,\n    helperText: PropTypes.string,\n    meta: PropTypes.object.isRequired,\n    FieldProvider: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    input: PropTypes.shape({\n        value: PropTypes.any,\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    hideLabel: PropTypes.bool,\n    setEdit: PropTypes.func,\n    type: PropTypes.string\n};\n\nconst EditFieldProvider = ({ FieldProvider, ...rest }) =>\n    (\n        <FieldProvider { ...rest }>\n            { (props) =>  <EditField  { ...props }/> }\n        </FieldProvider>\n    );\n\nEditFieldProvider.propTypes = {\n    FieldProvider: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nexport default EditFieldProvider;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources';\n\nimport EditField from '../components/editField/EditField';\n\nconst SourcesFormRenderer = props => (\n    <FormRenderer\n        layoutMapper={layoutMapper}\n        formFieldsMapper={{\n            ...formFieldsMapper,\n            ...mapperExtension,\n            'edit-field': EditField\n        }}\n        {...props}\n    />\n);\n\nexport default SourcesFormRenderer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button, ButtonVariant } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\n\nimport { useSource } from '../../hooks/useSource';\n\nconst ApplicationList = ({ setApplicationToRemove, breakpoints, namePrefix }) => {\n    const appTypes = useSelector(({ sources }) => sources.appTypes);\n    const source = useSource();\n\n    const sourceAppsNames = source.applications\n    .map(({ application_type_id }) => {\n        const appType = appTypes.find(({ id }) => id === application_type_id);\n        return appType ? appType.display_name : undefined;\n    });\n\n    return source.applications\n    .filter((app) => !app.isDeleting)\n    .map((app) => {\n        const type = appTypes.find((appType) => appType.id === app.application_type_id);\n\n        if (type) {\n            return {\n                display_name: type.display_name,\n                id: app.id,\n                dependent_applications: type.dependent_applications\n            };\n        }\n    })\n    .sort((a, b) => a.display_name.localeCompare(b.display_name))\n    .map(({ display_name, id, dependent_applications }) => (\n        <TextContent key={id}>\n            <Grid>\n                <GridItem md={breakpoints.display_name || 4}>\n                    <Text component={TextVariants.p} style={{ marginBottom: 0 }}>\n                        { namePrefix }{ display_name }\n                    </Text>\n                </GridItem>\n                <GridItem md={breakpoints.remove || 8} className=\"ins-c-sources__remove-app\">\n                    <Button\n                        variant={ButtonVariant.link}\n                        isInline\n                        onClick={() => setApplicationToRemove({ id, display_name, dependent_applications, sourceAppsNames })}\n                    >\n                        <FormattedMessage\n                            id=\"sources.remove\"\n                            defaultMessage=\"Remove\"\n                        />\n                    </Button>\n                </GridItem>\n            </Grid>\n        </TextContent>\n    ));\n};\n\nApplicationList.propTypes = {\n    setApplicationToRemove: PropTypes.func.isRequired,\n    breakpoints: PropTypes.shape({\n        display_name: PropTypes.number,\n        remove: PropTypes.number\n    }),\n    namePrefix: PropTypes.node\n};\n\nApplicationList.defaultProps = {\n    breakpoints: {}\n};\n\nexport default ApplicationList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl, FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Split } from '@patternfly/react-core/dist/js/layouts/Split/Split';\nimport { SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/SplitItem';\nimport { Stack } from '@patternfly/react-core/dist/js/layouts/Stack/Stack';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { removeApplication } from '../../redux/sources/actions';\nimport { useSource } from '../../hooks/useSource';\n\nconst RemoveAppModal = ({ app, onCancel }) => {\n    const intl = useIntl();\n\n    const appTypes = useSelector(({ sources }) => sources.appTypes);\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    const dependentApps = app.dependent_applications.map(appName => {\n        const appType = appTypes.find(({ name }) => name === appName);\n\n        return appType ? app.sourceAppsNames.includes(appType.display_name) ? appType.display_name : undefined : undefined;\n    }).filter(x => x);\n\n    const onSubmit = () => {\n        const titleSuccess = intl.formatMessage({\n            id: 'sources.removeAppWarning',\n            defaultMessage: `{ name } was removed from this source.`\n        },\n        {\n            name: app.display_name\n        });\n        const titleError = intl.formatMessage({\n            id: 'sources.removeAppError',\n            defaultMessage: `Removing of { name } application from this source was unsuccessful.`\n        }, {\n            name: app.display_name\n        });\n        onCancel();\n        return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n    };\n\n    return (\n        <Modal\n            className=\"ins-c-sources__dialog--warning\"\n            title={`Remove ${app.display_name} application`}\n            isOpen={true}\n            isSmall\n            onClose={onCancel}\n            isFooterLeftAligned\n            actions={[\n                <Button\n                    id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={ onSubmit }\n                >\n                    <FormattedMessage\n                        id=\"sources.remove\"\n                        defaultMessage=\"Remove\"\n                    />\n                </Button>,\n                <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n                    <FormattedMessage\n                        id=\"sources.cancel\"\n                        defaultMessage=\"Cancel\"\n                    />\n                </Button>\n            ]}\n        >\n            <Split gutter=\"md\">\n                <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert ins-c-source__delete-icon\" /></SplitItem>\n                <SplitItem isFilled>\n                    <Stack gutter=\"md\">\n                        <TextContent>\n                            <Text component={TextVariants.p}>\n                                <FormattedMessage\n                                    id=\"sources.deleteAppWarning\"\n                                    defaultMessage={`Are you sure to remove { appName } from this source?`}\n                                    values={{\n                                        appName: app.display_name\n                                    }}\n                                />\n                            </Text>\n                            {dependentApps.length > 0 && <Text component={TextVariants.p}>\n                                <FormattedMessage\n                                    id=\"sources.deleteAppDetails\"\n                                    defaultMessage={`This change will affect these applications: { apps }.`}\n                                    values={{\n                                        apps: dependentApps\n                                    }}\n                                />\n                            </Text>}\n                        </TextContent>\n                    </Stack>\n                </SplitItem>\n            </Split>\n        </Modal>\n    );\n};\n\nRemoveAppModal.propTypes = {\n    app: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        display_name: PropTypes.string.isRequired,\n        dependent_applications: PropTypes.arrayOf(PropTypes.string),\n        sourceAppsNames: PropTypes.arrayOf(PropTypes.string)\n    }).isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default RemoveAppModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/index';\n\nimport RemoveAppModal from './RemoveAppModal';\nimport ApplicationList from '../ApplicationsList/ApplicationList';\nimport { useSource } from '../../hooks/useSource';\n\nconst AddApplicationDescription = () => {\n    const [removingApp, setApplicationToRemove] = useState({});\n\n    const sourceTypes = useSelector(({ sources }) => sources.sourceTypes);\n    const source = useSource();\n\n    const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n    const apps = source.applications.filter((app) => !app.isDeleting);\n\n    return (\n        <React.Fragment>\n            {removingApp.id && <RemoveAppModal\n                app={removingApp}\n                onCancel={() => setApplicationToRemove({})}\n            />}\n            <TextContent>\n                <Grid gutter=\"md\">\n                    <GridItem md={2}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.sourceName\"\n                                defaultMessage=\"Source name\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.type\"\n                                defaultMessage=\"Type\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={8}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.apps\"\n                                defaultMessage=\"Applications\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.p}>\n                            {source.name}\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.p}>\n                            { sourceType ? sourceType.product_name : <FormattedMessage\n                                id=\"sources.typeNotFound\"\n                                defaultMessage=\"Type not found\"\n                            />}\n                        </Text>\n                    </GridItem>\n                    <GridItem md={8}>\n                        {apps.length > 0 ? <ApplicationList setApplicationToRemove={setApplicationToRemove}/> : <FormattedMessage\n                            id=\"sources.noApps\"\n                            defaultMessage=\"No applications\"\n                        />}\n                    </GridItem>\n                </Grid>\n            </TextContent>\n        </React.Fragment>\n    );\n};\n\nexport default AddApplicationDescription;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { useSource } from '../../hooks/useSource';\nimport get from 'lodash/get';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nexport const checkAuthTypeMemo = () => {\n    let previousAuthType;\n\n    return (newAuthType) => {\n        if (previousAuthType === newAuthType) {\n            return false;\n        }\n\n        previousAuthType = newAuthType;\n        return true;\n    };\n};\n\nexport const innerSetter = ({\n    sourceTypes,\n    source,\n    appTypes,\n    formOptions,\n    checkAuthType,\n    authenticationValues,\n    modifiedValues\n}) => {\n    const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id);\n\n    const formValues = formOptions.getState();\n\n    const application = appTypes.find(\n        ({ id }) => id === get(formValues, 'values.application.application_type_id', undefined)\n    );\n    const supported_auth_type = get(application, `supported_authentication_types[${sourceType.name}][0]`, '');\n\n    if (checkAuthType(supported_auth_type)) {\n        formOptions.change('supported_auth_type', supported_auth_type);\n\n        const hasAuthenticationAlready = authenticationValues.find(({ authtype }) => authtype === supported_auth_type);\n\n        if (hasAuthenticationAlready) {\n            if (modifiedValues && modifiedValues.authentication) {\n                const newAuthenticationValues = merge(cloneDeep(hasAuthenticationAlready), modifiedValues.authentication);\n                formOptions.change('authentication', newAuthenticationValues);\n            } else {\n                formOptions.change('authentication', hasAuthenticationAlready);\n            }\n        } else {\n            if (modifiedValues && modifiedValues.authentication) {\n                formOptions.change('authentication', modifiedValues.authentication);\n            } else {\n                formOptions.change('authentication', undefined);\n            }\n        }\n    }\n};\n\nexport const AuthTypeSetter = ({ formOptions, authenticationValues, modifiedValues }) => {\n    const [checkAuthType] = useState(() => checkAuthTypeMemo());\n\n    const { appTypes, sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const source = useSource();\n\n    useEffect(() => {\n        innerSetter({ sourceTypes, checkAuthType, formOptions, authenticationValues, appTypes, source, modifiedValues });\n    });\n\n    return null;\n};\n\nAuthTypeSetter.propTypes = {\n    formOptions: PropTypes.shape({\n        getState: PropTypes.func.isRequired,\n        change: PropTypes.func.isRequired\n    }).isRequired,\n    authenticationValues: PropTypes.arrayOf(PropTypes.object),\n    modifiedValues: PropTypes.object\n};\n","import React from 'react';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { FormattedMessage } from 'react-intl';\nimport { schemaBuilder } from '@redhat-cloud-services/frontend-components-sources';\nimport get from 'lodash/get';\n\nimport AddApplicationDescription from './AddApplicationDescription';\nimport { AuthTypeSetter } from './AuthTypeSetter';\n\nexport const NoAvailableApplicationDescription = () => (<TextContent>\n    <Text component={ TextVariants.p }>\n        <FormattedMessage\n            id=\"sources.allApplicationsAssigned\"\n            defaultMessage=\"All available applications have already been added to this source\n        or there is no available application for this source type.\"\n        />\n    </Text>\n</TextContent>);\n\nexport const ApplicationSummary = () => (<TextContent>\n    <Text component={ TextVariants.p }>\n        <FormattedMessage\n            id=\"sources.reviewAddAppSummary\"\n            defaultMessage=\"Review the information below and click Add to add the application to your source.\n            Use the Back button to make changes.\"\n        />\n    </Text>\n</TextContent>);\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n    authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nconst fields = (applications = [], intl, sourceTypes, applicationTypes, authenticationValues, source, modifiedValues) => {\n    const hasAvailableApps = applications.length > 0;\n\n    let nextStep = hasAvailableApps ? 'summary' : undefined;\n    let authenticationFields = [];\n\n    if (!source.imported && hasAvailableApps) {\n        const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id);\n\n        const appendEndpoint = sourceType.schema.endpoint.hidden ? sourceType.schema.endpoint.fields : [];\n        const hasEndpointStep = appendEndpoint.length === 0;\n\n        applicationTypes.forEach(appType => {\n            if (appType.supported_source_types.includes(sourceType.name)) {\n                const doNotRequirePasswords = hasAlreadySupportedAuthType(authenticationValues, appType, sourceType.name);\n\n                authenticationFields.push(\n                    schemaBuilder.createSpecificAuthTypeSelection(\n                        sourceType,\n                        appType,\n                        appendEndpoint,\n                        false,\n                        doNotRequirePasswords\n                    )\n                );\n            }\n        });\n\n        sourceType.schema.authentication.forEach(auth => {\n            applicationTypes.forEach(appType => {\n                if (appType.supported_source_types.includes(sourceType.name)) {\n                    const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name);\n\n                    if (appAdditionalSteps.length > 0) {\n                        const doNotRequirePasswords = hasAlreadySupportedAuthType(authenticationValues, appType, sourceType.name);\n\n                        authenticationFields.push(\n                            ...schemaBuilder.createAdditionalSteps(\n                                appAdditionalSteps,\n                                sourceType.name,\n                                auth.type,\n                                hasEndpointStep,\n                                auth.fields,\n                                appType.name,\n                                doNotRequirePasswords\n                            )\n                        );\n                    }\n                }\n            });\n        });\n\n        if (hasEndpointStep) {\n            authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n        }\n\n        nextStep = ({ values: { application } }) => {\n            const app = application ? application : {};\n            const appId = app.application_type_id ? app.application_type_id : '';\n\n            return `${sourceType.name}-${appId}`;\n        };\n    }\n\n    const applicationSelection = hasAvailableApps ? {\n        component: 'card-select',\n        name: 'application.application_type_id',\n        options: applications,\n        label: intl.formatMessage({\n            id: 'sources.chooseAppToAdd',\n            defaultMessage: 'Choose an application to add'\n        }),\n        DefaultIcon: null,\n        isRequired: true,\n        validate: [{\n            type: validatorTypes.REQUIRED\n        }]\n    } : {\n        component: 'description',\n        name: 'description-no-options',\n        validate: [{\n            type: validatorTypes.REQUIRED\n        }],\n        Content: NoAvailableApplicationDescription\n    };\n\n    return ({\n        fields: [\n            {\n                component: componentTypes.WIZARD,\n                name: 'wizard',\n                title: intl.formatMessage({\n                    id: 'sources.manageApps',\n                    defaultMessage: 'Manage applications'\n                }),\n                inModal: true,\n                predictSteps: true,\n                showTitles: true,\n                crossroads: ['application.application_type_id'],\n                description: intl.formatMessage({\n                    id: 'sources.addAppDescription',\n                    defaultMessage: 'You are managing applications of this source.'\n                }),\n                buttonLabels: {\n                    submit: hasAvailableApps ? intl.formatMessage({\n                        id: 'sources.add',\n                        defaultMessage: 'Add'\n                    }) : intl.formatMessage({\n                        id: 'sources.close',\n                        defaultMessage: 'Close'\n                    }),\n                    cancel: intl.formatMessage({\n                        id: 'sources.cancel',\n                        defaultMessage: 'Cancel'\n                    }),\n                    back: intl.formatMessage({\n                        id: 'sources.back',\n                        defaultMessage: 'Back'\n                    })\n                },\n                fields: [\n                    {\n                        nextStep,\n                        title: intl.formatMessage({\n                            id: 'sources.selectApp',\n                            defaultMessage: 'Select application'\n                        }),\n                        stepKey: 1,\n                        name: 'selectAppStep',\n                        fields: [\n                            {\n                                component: 'description',\n                                name: 'description',\n                                Content: AddApplicationDescription\n                            },\n                            applicationSelection,\n                            {\n                                component: 'description',\n                                name: 'authtypesetter',\n                                Content: AuthTypeSetter,\n                                authenticationValues,\n                                hideField: true,\n                                modifiedValues\n                            }]\n                    }, {\n                        title: intl.formatMessage({\n                            id: 'sources.review',\n                            defaultMessage: 'Review'\n                        }),\n                        stepKey: 'summary',\n                        name: 'summary',\n                        fields: [{\n                            component: 'description',\n                            name: 'description-summary',\n                            Content: ApplicationSummary\n                        }, {\n                            component: 'summary',\n                            name: 'summary',\n                            sourceTypes,\n                            applicationTypes\n                        }]\n                    },\n                    ...authenticationFields\n                ]\n            }\n        ]\n    });\n};\n\nexport default fields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\n\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { FormattedMessage } from 'react-intl';\n\nconst LoadingStep = ({ onClose, customText }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <Spinner />\n            <EmptyStateBody>\n                { customText }\n            </EmptyStateBody>\n            { onClose &&\n        <EmptyStateSecondaryActions>\n            <Button variant=\"link\" onClick={ onClose }>\n                <FormattedMessage\n                    id=\"sources.cancel\"\n                    defaultMessage=\"Cancel\"\n                />\n            </Button>\n        </EmptyStateSecondaryActions> }\n        </EmptyState>\n    </Bullseye>\n);\n\nLoadingStep.propTypes = {\n    onClose: PropTypes.func,\n    customText: PropTypes.node\n};\n\nLoadingStep.defaultProps = {\n    customText: <FormattedMessage\n        id=\"sources.loading\"\n        defaultMessage=\"Loading, please wait.\"\n    />\n};\n\nexport default LoadingStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport TimesCircleIcon from '@patternfly/react-icons/dist/js/icons/times-circle-icon';\nimport { FormattedMessage } from 'react-intl';\n\nconst ErroredStep = ({ onClose, onRetry, message, title }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ TimesCircleIcon } color=\"var(--pf-global--danger-color--100)\" />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                { title }\n            </Title>\n            <EmptyStateBody>\n                { message }\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={ onClose }>\n                <FormattedMessage\n                    id=\"sources.backToSources\"\n                    defaultMessage=\"Back to Sources\"\n                />\n            </Button>\n            { onRetry && <EmptyStateSecondaryActions>\n                <Button variant=\"link\" onClick={ onRetry }>\n                    <FormattedMessage\n                        id=\"sources.retry\"\n                        defaultMessage=\"Retry\"\n                    />\n                </Button>\n            </EmptyStateSecondaryActions>}\n        </EmptyState>\n    </Bullseye>\n);\n\nErroredStep.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    message: PropTypes.node.isRequired,\n    title: PropTypes.node.isRequired,\n    onRetry: PropTypes.func\n};\n\nexport default ErroredStep;\n","import React from 'react';\nimport { FormattedMessage  } from 'react-intl';\nimport { PropTypes } from 'prop-types';\n\nimport ErroredStep from '../../steps/ErroredStep';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nconst ErroredStepAttach = ({ setState, goToSources, error }) => (<ErroredStep\n    onClose={goToSources}\n    message={\n        <React.Fragment>\n            <FormattedMessage\n                id=\"sources.successAddApp\"\n                defaultMessage=\"Your application has not been successfully added:\"\n            />\n            <br />\n            <TextContent>\n                <Text component={TextVariants.h6}>{ error }</Text>\n            </TextContent>\n        </React.Fragment>\n    }\n    title={<FormattedMessage\n        id=\"sources.configurationSuccessful\"\n        defaultMessage=\"Configuration unsuccessful\"\n    />}\n    onRetry={() => setState({ state: 'wizard' })}\n/>);\n\nErroredStepAttach.propTypes = {\n    setState: PropTypes.func.isRequired,\n    goToSources: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired\n};\n\nexport default ErroredStepAttach;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport { FormattedMessage } from 'react-intl';\n\nconst FinishedStep = ({ onClose, title, successfulMessage, secondaryActions }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ CheckCircleIcon } color=\"var(--pf-global--success-color--100)\" />\n            <Title headingLevel=\"h5\" size=\"lg\">\n                { title }\n            </Title>\n            <EmptyStateBody>\n                { successfulMessage }\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={ onClose }>\n                <FormattedMessage\n                    id=\"sources.backToSources\"\n                    defaultMessage=\"Back to Sources\"\n                />\n            </Button>\n            {  secondaryActions && <EmptyStateSecondaryActions>\n                { secondaryActions }\n            </EmptyStateSecondaryActions> }\n        </EmptyState>\n    </Bullseye>\n);\n\nFinishedStep.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    successfulMessage: PropTypes.node.isRequired,\n    title: PropTypes.node.isRequired,\n    secondaryActions: PropTypes.node\n};\n\nexport default FinishedStep;\n","import React from 'react';\nimport { FormattedMessage  } from 'react-intl';\nimport { PropTypes } from 'prop-types';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\n\nimport FinishedStep from '../../steps/FinishedStep';\n\nconst FinishedStepAttach = ({ setState, goToSources }) => (\n    <FinishedStep\n        onClose={goToSources}\n        successfulMessage={<FormattedMessage\n            id=\"sources.successAddApp\"\n            defaultMessage=\"Your application has been successfully added.\"\n        />}\n        title={<FormattedMessage\n            id=\"sources.configurationSuccessful\"\n            defaultMessage=\"Configuration successful\"\n        />}\n        secondaryActions={\n            <Button variant=\"link\" onClick={() => setState({ state: 'wizard' })}>\n                <FormattedMessage\n                    id=\"sources.continueManageApp\"\n                    defaultMessage=\"Continue managing applications\"\n                />\n            </Button>\n        }\n    />\n);\n\nFinishedStepAttach.propTypes = {\n    setState: PropTypes.func.isRequired,\n    goToSources: PropTypes.func.isRequired\n};\n\nexport default FinishedStepAttach;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core/dist/js/components/Wizard/Wizard';\n\nconst WizardBodyAttach = ({ step, goToSources }) => {\n    const intl = useIntl();\n\n    return (\n        <Wizard\n            isOpen={ true }\n            onClose={goToSources}\n            title={intl.formatMessage({\n                id: 'sources.manageApps',\n                defaultMessage: 'Manage applications'\n            })}\n            description={\n                intl.formatMessage({\n                    id: 'sources.addAppDescription',\n                    defaultMessage: 'You are managing applications of this source.'\n                })\n            }\n            steps={ [{\n                name: 'Finish',\n                component: step,\n                isFinishedStep: true\n            }] }\n        />\n    );\n};\n\nWizardBodyAttach.propTypes = {\n    step: PropTypes.node.isRequired,\n    goToSources: PropTypes.func.isRequired\n};\n\nexport default WizardBodyAttach;\n","import { addedDiff, updatedDiff } from 'deep-object-diff';\nimport { patchSource, handleError } from '@redhat-cloud-services/frontend-components-sources';\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { getSourcesApi, doCreateApplication } from './entities';\nimport { urlOrHost } from './doUpdateSource';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            if (isEmpty(obj[key])) {\n                delete obj[key];\n            } else {\n                removeEmpty(obj[key]);\n            }\n        } else if (typeof obj[key] === 'undefined') {\n            delete obj[key];\n        }\n    });\n    return obj;\n};\n\nexport const doAttachApp = async (values, formApi, authenticationInitialValues, initialValues) => {\n    const formState = formApi.getState();\n\n    const allFormValues = formState.values;\n\n    const selectedAuthId = allFormValues.authentication ? allFormValues.authentication.id : undefined;\n\n    const authInitialValues = selectedAuthId\n        ? authenticationInitialValues.find(({ id }) => id === selectedAuthId)\n        : undefined;\n\n    const { authentication, ...valuesWithoutAuth } = values;\n\n    const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n    const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n    const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n    const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n    const filteredValues = removeEmpty({\n        ...merge(cloneDeep(newAddedValues), updatedValues),\n        authentication: {\n            ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues)\n        }\n    });\n\n    try {\n        if (!allFormValues.source || !allFormValues.source.id) {\n            throw 'Missing source id';\n        }\n\n        const sourceId = allFormValues.source.id;\n        let endpointId = allFormValues.endpoint ? allFormValues.endpoint.id : undefined;\n\n        const promises = [];\n\n        if (filteredValues.source && !isEmpty(filteredValues.source)) {\n            promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n        const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n        if (hasModifiedEndpoint || hasModifiedUrl) {\n            const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n            const endPointPort = parseInt(port, 10);\n\n            const endpointData = removeEmpty({\n                ...filteredValues.endpoint,\n                scheme,\n                host,\n                port: isNaN(endPointPort) ? undefined : endPointPort,\n                path\n            });\n\n            if (endpointId) {\n                promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n            } else {\n                promises.push(Promise.resolve(undefined));\n\n                const createEndpointData = {\n                    ...endpointData,\n                    default: true,\n                    source_id: sourceId\n                };\n\n                const endpoint = await getSourcesApi().createEndpoint(createEndpointData);\n                endpointId = endpoint.id;\n            }\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        if (filteredValues.authentication && !isEmpty(filteredValues.authentication)) {\n            if (selectedAuthId) {\n                promises.push(getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication));\n            } else if (endpointId) {\n                const authenticationData = {\n                    ...filteredValues.authentication,\n                    resource_id: endpointId,\n                    resource_type: 'Endpoint'\n                };\n\n                promises.push(getSourcesApi().createAuthentication(authenticationData));\n            }\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        if (filteredValues.application && filteredValues.application.application_type_id) {\n            promises.push(doCreateApplication(sourceId, filteredValues.application.application_type_id));\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        const [_sourceDataOut, _endpointDataOut, authenticationDataOut, applicationDataOut] = await Promise.all(promises);\n\n        const authenticationId = selectedAuthId ? selectedAuthId : authenticationDataOut ? authenticationDataOut.id : undefined;\n\n        const promisesSecondRound = [];\n\n        if (applicationDataOut && applicationDataOut.id && authenticationId) {\n            const authAppData = {\n                application_id: applicationDataOut.id,\n                authentication_id: authenticationId\n            };\n\n            promisesSecondRound.push(getSourcesApi().createAuthApp(authAppData));\n        }\n\n        const isAttachingCostManagement = filteredValues.credentials || filteredValues.billing_source;\n        if (isAttachingCostManagement) {\n            const { credentials, billing_source } = filteredValues;\n            let data = {};\n            data = credentials ? { authentication: { credentials } } : {};\n            data = billing_source ? { ...data, billing_source } : data;\n            promisesSecondRound.push(patchSource({ id: sourceId, ...data }));\n        }\n\n        await Promise.all(promisesSecondRound);\n    } catch (error) {\n        const errorMessage = await handleError(error);\n        throw errorMessage;\n    }\n};\n","import React, { useReducer, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { filterApps } from '@redhat-cloud-services/frontend-components-sources';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../Utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport LoadingStep from '../steps/LoadingStep';\nimport ErroredStep from './steps/ErroredStep';\nimport FinishedStep from './steps/FinishedStep';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../SourcesSimpleView/formatters';\nimport { routes } from '../../Routes';\n\nimport { doAttachApp } from '../../api/doAttachApp';\nimport { onCancelAddApplication } from './onCancel';\n\nlet selectedApp = undefined; // this has to be not-state value, because it shouldn't re-render the component when changes\nconst saveSelectedApp = ({ values: { application } }) => selectedApp = application;\n\nexport const onSubmit = (values, formApi, authenticationInitialValues, dispatch, setState, initialValues) => {\n    setState({ state: 'submitting' });\n\n    return doAttachApp(values, formApi, authenticationInitialValues, initialValues)\n    .then(async () => {\n        await dispatch(loadEntities());\n        selectedApp = undefined;\n        return setState({ state: 'finished' });\n    })\n    .catch(error => setState({\n        state: 'errored',\n        error,\n        values\n    }));\n};\n\nconst initialState = {\n    state: 'loading',\n    error: '',\n    values: {},\n    authenticationsValues: [],\n    sourceAppsLength: 0,\n    initialValues: {}\n};\n\nconst reducer = (state, payload) => ({ ...state, ...payload });\n\nconst AddApplication = () => {\n    const intl = useIntl();\n    const history = useHistory();\n\n    const loaded = useIsLoaded();\n\n    const {\n        appTypes,\n        sourceTypesLoaded,\n        appTypesLoaded,\n        sourceTypes,\n        undoValues\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        selectedApp = undefined;\n    }, []);\n\n    useEffect(() => {\n        if (source) {\n            // When app is only removed, there is no need to reload values\n            const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n            setState({ sourceAppsLength: source.applications.length });\n\n            if (!removeAppAction) {\n                if (source.endpoints && source.endpoints[0]) {\n                    getSourcesApi()\n                    .listEndpointAuthentications(source.endpoints[0].id)\n                    .then(({ data }) => setState({\n                        authenticationsValues: data,\n                        initialValues: {\n                            source,\n                            endpoint: source.endpoints[0],\n                            url: endpointToUrl(source.endpoints[0]),\n                            application: selectedApp,\n                            values: {}\n                        }\n                    }))\n                    .then(() => {\n                        if (state.state === 'loading') {\n                            setState({\n                                state: 'wizard'\n                            });\n                        }\n                    });\n                } else {\n                    setState({\n                        initialValues: { source, application: selectedApp },\n                        values: {}\n                    });\n                    if (state.state === 'loading') {\n                        setState({\n                            state: 'wizard'\n                        });\n                    }\n                }\n            }\n        }\n    }, [source]);\n\n    const goToSources = () => history.push(routes.sources.path);\n\n    if (!appTypesLoaded || !sourceTypesLoaded || !loaded) {\n        return  (\n            <WizardBody\n                goToSources={goToSources}\n                step={<LoadingStep />}\n            />\n        );\n    }\n\n    if (state.state === 'loading' || state.state === 'submitting') {\n        return  (\n            <WizardBody\n                goToSources={goToSources}\n                step={<LoadingStep />}\n            />\n        );\n    }\n\n    if (state.state !== 'wizard') {\n        const shownStep = state.state === 'finished' ? (<FinishedStep setState={setState} goToSources={goToSources}/>) :\n            (<ErroredStep setState={setState} goToSources={goToSources} error={state.error}/>);\n\n        return (\n            <WizardBody goToSources={goToSources} step={shownStep} />\n        );\n    }\n\n    const appIds = source.applications.filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n    const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n    const sourceTypeName = sourceType && sourceType.name;\n    const filteredAppTypes = appTypes.filter((type) =>\n        !appIds.includes(type.id) && type.supported_source_types.includes(sourceTypeName)\n    ).filter(filterApps);\n\n    const availableAppTypes = filteredAppTypes.map((type) => {\n        const hasDeletingApp = source.applications.find(app => app.application_type_id === type.id);\n        const label = `${type.display_name} ${hasDeletingApp ? `(${intl.formatMessage({\n            id: 'sources.currentlyRemoving',\n            defaultMessage: 'Currently removing'\n        })})` : ''}`;\n\n        return ({ value: type.id, label, isDisabled: hasDeletingApp ? true : false });\n    });\n\n    const usersModifiedValues = merge(cloneDeep(undoValues), state.values);\n\n    const schema = createSchema(\n        availableAppTypes,\n        intl,\n        sourceTypes,\n        appTypes,\n        state.authenticationsValues,\n        source,\n        usersModifiedValues\n    );\n\n    const onSubmitWrapper = (values, formApi) => onSubmit(\n        values,\n        formApi,\n        state.authenticationsValues,\n        dispatch,\n        setState,\n        state.initialValues\n    );\n\n    const hasAvailableApps = filteredAppTypes.length > 0;\n    const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n    const onCancel = (values) => onCancelAddApplication({ values, dispatch, intl, sourceId: source.id, history });\n\n    const finalValues = merge(cloneDeep(state.initialValues), usersModifiedValues);\n\n    return (\n        <SourcesFormRenderer\n            schema={schema}\n            showFormControls={false}\n            onSubmit={onSubmitFinal}\n            onCancel={onCancel}\n            initialValues={finalValues}\n            subscription={{ values: true }}\n            onStateUpdate={saveSelectedApp}\n            clearedValue={null}\n        />\n    );\n};\n\nexport default AddApplication;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport {\n    clearAddSource,\n    addMessage\n} from '../../redux/sources/actions';\nimport UndoButtonAdd from '../../components/UndoButton/UndoButtonAdd';\nimport { routes, replaceRouteId } from '../../Routes';\n\nexport const onCancelAddApplication = ({ values, dispatch, history, intl, sourceId }) => {\n    if (values && values.application) {\n        const messageId = Date.now();\n        dispatch(addMessage(\n            intl.formatMessage({\n                id: 'sources.addApplicationCanceled',\n                defaultMessage: 'Adding an application was cancelled'\n            }),\n            'success',\n            <FormattedMessage\n                id=\"sources.undoMistake\"\n                defaultMessage={ `{undo} if this was a mistake.` }\n                values={ { undo: <UndoButtonAdd\n                    messageId={messageId}\n                    values={values}\n                    path={replaceRouteId(routes.sourceManageApps.path, sourceId)}\n                /> } }\n            />,\n            messageId\n        ));\n    }\n\n    dispatch(clearAddSource());\n    history.push(routes.sources.path);\n};\n"],"sourceRoot":""}