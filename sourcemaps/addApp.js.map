{"version":3,"sources":["webpack:///./src/components/EditField/EditField.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./src/components/ApplicationsList/ApplicationList.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/AddApplicationDescription.js","webpack:///./src/components/AddApplication/AuthTypeSetter.js","webpack:///./src/components/AddApplication/AuthTypeCleaner.js","webpack:///./src/components/AddApplication/AddApplicationSchema.js","webpack:///./src/components/AddApplication/steps/LoadingStep.js","webpack:///./src/components/AddApplication/steps/ErroredStep.js","webpack:///./src/components/AddApplication/steps/FinishedStep.js","webpack:///./src/components/AddApplication/WizardBody.js","webpack:///./src/components/AddApplication/steps/createProgressTextsApp.js","webpack:///./src/api/doAttachApp.js","webpack:///./src/components/AddApplication/reducer.js","webpack:///./src/components/AddApplication/AddApplication.js"],"names":["EDIT_FIELD_NAME","EditField","props","useFieldApi","isRequired","label","helperText","hideLabel","meta","input","type","setEdit","error","showError","touched","value","emptyText","name","includes","fieldId","isValid","helperTextInvalid","onClick","undefined","tabIndex","onKeyPress","e","charCode","preventDefault","className","propTypes","PropTypes","node","bool","func","string","SourcesFormRenderer","FormTemplate","componentMapper","mapperExtension","componentTypes","SWITCH","validatorMapper","validatorTypes","REQUIRED","PATTERN","MIN_LENGTH","URL","ApplicationList","setApplicationToRemove","breakpoints","namePrefix","appTypes","useSelector","sources","source","useSource","sourceAppsNames","applications","map","application_type_id","appType","find","id","display_name","filter","app","isDeleting","dependent_applications","sort","a","b","localeCompare","key","md","component","TextVariants","p","style","marginBottom","remove","variant","ButtonVariant","link","isInline","defaultMessage","shape","number","defaultProps","RemoveAppModal","onCancel","intl","useIntl","dispatch","useDispatch","dependentApps","appName","x","title","isOpen","isSmall","onClose","isFooterLeftAligned","actions","titleSuccess","formatMessage","titleError","removeApplication","gutter","size","isFilled","values","length","apps","arrayOf","AddApplicationDescription","useState","removingApp","sourceTypes","sourceType","source_type_id","Fragment","TextContent","Grid","Text","h4","product_name","AuthTypeSetter","authenticationValues","modifiedValues","formOptions","useFormApi","selectedAuthentication","getState","initialValue","setInitialValue","useEffect","authentication","newAuthenticationValues","merge","cloneDeep","change","innerSetter","object","AuthTypeCleaner","selectedAppId","get","batch","NoAvailableApplicationDescription","ApplicationSummary","SelectAuthenticationDescription","applicationTypeName","authenticationTypeName","hasAlreadySupportedAuthType","authValues","sourceTypeName","authtype","generateAuthSelectionOptions","applicationTypes","supportedAuthTypeName","supportedAuthType","authentications","includeUsername","username","includeAppName","selectAuthenticationStep","fields","Content","hideField","forEach","push","SUB_FORM","condition","when","is","RADIO","validate","options","nextStep","application","appId","container","hasAvailableApps","authenticationFields","imported","appendEndpoint","schema","endpoint","hidden","hasEndpointStep","supported_source_types","schemaBuilder","createSpecificAuthTypeSelection","auth","appAdditionalSteps","getAdditionalSteps","createAdditionalSteps","createEndpointStep","applicationSelection","DefaultIcon","selectionSteps","WIZARD","inModal","predictSteps","showTitles","crossroads","description","buttonLabels","submit","cancel","back","LoadingStep","customText","progressStep","progressTexts","Bullseye","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","Spinner","color","EmptyStateBody","Progress","min","max","valueText","EmptyStateSecondaryActions","Button","ErroredStepAttach","onReset","goToSources","TimesCircleIcon","Title","headingLevel","h6","FinishedStepAttach","CheckCircleIcon","WizardBodyAttach","step","Wizard","steps","isFinishedStep","createProgressTextsApp","filteredValues","allFormValues","progressText","isEmpty","removeEmpty","obj","Object","keys","doAttachApp","formApi","authenticationInitialValues","initialValues","setState","formState","selectedAuthId","authInitialValues","valuesWithoutAuth","newAddedValues","addedDiff","updatedValues","updatedDiff","newAddedAuthValues","updatedAuthValues","sourceId","endpointId","promises","getSourcesApi","updateSource","Promise","resolve","hasModifiedEndpoint","hasModifiedUrl","url","urlOrHost","scheme","host","port","path","endPointPort","parseInt","endpointData","isNaN","updateEndpoint","createEndpointData","default","source_id","createEndpoint","updateAuthentication","authenticationData","resource_id","resource_type","createAuthentication","doCreateApplication","all","authenticationDataOut","applicationDataOut","authenticationId","promisesSecondRound","authAppData","application_id","authentication_id","createAuthApp","credentials","billing_source","data","patchSource","handleError","initialState","state","authenticationsValues","sourceAppsLength","isCancelling","reducer","selectedApp","saveSelectedApp","onSubmit","then","checkSourceStatus","loadEntities","FormTemplateWrapper","showFormControls","AddApplication","history","useHistory","loaded","useIsLoaded","shallowEqual","sourceTypesLoaded","appTypesLoaded","useReducer","useRef","document","createElement","removeAppAction","endpoints","listEndpointAuthentications","endpointToUrl","routes","WizardBody","shownStep","FinishedStep","ErroredStep","appIds","reduce","acc","filteredAppTypes","filterApps","availableAppTypes","hasDeletingApp","isDisabled","createSchema","current","onSubmitFinal","finalValues","onStay","onExit","subscription","debug","clearedValue"],"mappings":"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","file":"js/addApp.8cf07a880be33efdce25.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PencilAltIcon from '@patternfly/react-icons/dist/js/icons/pencil-alt-icon';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nexport const EDIT_FIELD_NAME = 'edit-field';\n\nconst EditField = (props) => {\n    const { isRequired, label, helperText, hideLabel, meta, input, type, setEdit } = useFieldApi(props);\n\n    const { error, touched } = meta;\n    const showError = touched && error;\n\n    let value = input.value;\n\n    if (typeof value === 'boolean') {\n        value = value ? 'True' : 'False';\n    }\n\n    const isPassword = type === 'password' || input.name.includes('password');\n    const emptyText = isPassword ? 'Click to edit' : 'Click to add';\n\n    return (\n        <FormGroup\n            isRequired={ isRequired }\n            label={ !hideLabel && label }\n            fieldId={ input.name }\n            isValid={ !showError }\n            helperText={ helperText }\n            helperTextInvalid={ error }\n            onClick={setEdit ? () => setEdit(input.name) : undefined}\n            tabIndex={0}\n            onKeyPress={(e) => {\n                if (e.charCode === 32 && setEdit) {\n                    e.preventDefault();\n                    setEdit(input.name);\n                }\n            }}\n        >\n            <div className={`pf-c-form__horizontal-group ins-c-sources__edit-field-group ${setEdit ? 'clickable' : ''}`}>\n                <TextContent className={`ins-c-sources__edit-field-group-text-content ${setEdit ? 'clickable' : ''}`}>\n                    <span className=\"ins-c-sources__edit-field-value pf-u-mr-sm\">\n                        {value ? value : setEdit ? emptyText : ''}\n                    </span>\n                    {setEdit && <PencilAltIcon />}\n                </TextContent>\n            </div>\n        </FormGroup>\n    );\n};\n\nEditField.propTypes = {\n    label: PropTypes.node,\n    isRequired: PropTypes.bool,\n    helperText: PropTypes.node,\n    hideLabel: PropTypes.bool,\n    setEdit: PropTypes.func,\n    type: PropTypes.string\n};\n\nexport default EditField;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources';\n\nimport EditField from '../components/EditField/EditField';\n\nconst SourcesFormRenderer = props => (\n    <FormRenderer\n        FormTemplate={FormTemplate}\n        componentMapper={{\n            ...componentMapper,\n            ...mapperExtension,\n            'edit-field': EditField,\n            'switch-field': componentMapper[componentTypes.SWITCH]\n        }}\n        validatorMapper={{\n            'required-validator': validatorMapper[validatorTypes.REQUIRED],\n            'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n            'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n            'url-validator': validatorMapper[validatorTypes.URL]\n        }}\n        {...props}\n    />\n);\n\nexport default SourcesFormRenderer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button, ButtonVariant } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\n\nimport { useSource } from '../../hooks/useSource';\n\nconst ApplicationList = ({ setApplicationToRemove, breakpoints, namePrefix }) => {\n    const appTypes = useSelector(({ sources }) => sources.appTypes);\n    const source = useSource();\n\n    const sourceAppsNames = source.applications\n    .map(({ application_type_id }) => {\n        const appType = appTypes.find(({ id }) => id === application_type_id);\n        return appType ? appType.display_name : undefined;\n    });\n\n    return source.applications\n    .filter((app) => !app.isDeleting)\n    .map((app) => {\n        const type = appTypes.find((appType) => appType.id === app.application_type_id);\n\n        if (type) {\n            return {\n                display_name: type.display_name,\n                id: app.id,\n                dependent_applications: type.dependent_applications\n            };\n        }\n    })\n    .sort((a, b) => a.display_name.localeCompare(b.display_name))\n    .map(({ display_name, id, dependent_applications }) => (\n        <TextContent key={id}>\n            <Grid>\n                <GridItem md={breakpoints.display_name || 4}>\n                    <Text component={TextVariants.p} style={{ marginBottom: 0 }}>\n                        { namePrefix }{ display_name }\n                    </Text>\n                </GridItem>\n                <GridItem md={breakpoints.remove || 8} className=\"ins-c-sources__remove-app\">\n                    <Button\n                        variant={ButtonVariant.link}\n                        isInline\n                        onClick={() => setApplicationToRemove({ id, display_name, dependent_applications, sourceAppsNames })}\n                    >\n                        <FormattedMessage\n                            id=\"sources.remove\"\n                            defaultMessage=\"Remove\"\n                        />\n                    </Button>\n                </GridItem>\n            </Grid>\n        </TextContent>\n    ));\n};\n\nApplicationList.propTypes = {\n    setApplicationToRemove: PropTypes.func.isRequired,\n    breakpoints: PropTypes.shape({\n        display_name: PropTypes.number,\n        remove: PropTypes.number\n    }),\n    namePrefix: PropTypes.node\n};\n\nApplicationList.defaultProps = {\n    breakpoints: {}\n};\n\nexport default ApplicationList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl, FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Split } from '@patternfly/react-core/dist/js/layouts/Split/Split';\nimport { SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/SplitItem';\nimport { Stack } from '@patternfly/react-core/dist/js/layouts/Stack/Stack';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { removeApplication } from '../../redux/sources/actions';\nimport { useSource } from '../../hooks/useSource';\n\nconst RemoveAppModal = ({ app, onCancel }) => {\n    const intl = useIntl();\n\n    const appTypes = useSelector(({ sources }) => sources.appTypes);\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    const dependentApps = app.dependent_applications.map(appName => {\n        const appType = appTypes.find(({ name }) => name === appName);\n\n        return appType ? app.sourceAppsNames.includes(appType.display_name) ? appType.display_name : undefined : undefined;\n    }).filter(x => x);\n\n    const onSubmit = () => {\n        const titleSuccess = intl.formatMessage({\n            id: 'sources.removeAppWarning',\n            defaultMessage: `{ name } was removed from this source.`\n        },\n        {\n            name: app.display_name\n        });\n        const titleError = intl.formatMessage({\n            id: 'sources.removeAppError',\n            defaultMessage: `Removing of { name } application from this source was unsuccessful.`\n        }, {\n            name: app.display_name\n        });\n        onCancel();\n        return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n    };\n\n    return (\n        <Modal\n            className=\"ins-c-sources__dialog--warning\"\n            title={`Remove ${app.display_name} application`}\n            isOpen={true}\n            isSmall\n            onClose={onCancel}\n            isFooterLeftAligned\n            actions={[\n                <Button\n                    id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={ onSubmit }\n                >\n                    <FormattedMessage\n                        id=\"sources.remove\"\n                        defaultMessage=\"Remove\"\n                    />\n                </Button>,\n                <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n                    <FormattedMessage\n                        id=\"sources.cancel\"\n                        defaultMessage=\"Cancel\"\n                    />\n                </Button>\n            ]}\n        >\n            <Split gutter=\"md\">\n                <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert ins-c-source__delete-icon\" /></SplitItem>\n                <SplitItem isFilled>\n                    <Stack gutter=\"md\">\n                        <TextContent>\n                            <Text component={TextVariants.p}>\n                                <FormattedMessage\n                                    id=\"sources.deleteAppWarning\"\n                                    defaultMessage={`Are you sure to remove { appName } from this source?`}\n                                    values={{\n                                        appName: app.display_name\n                                    }}\n                                />\n                            </Text>\n                            {dependentApps.length > 0 && <Text component={TextVariants.p}>\n                                <FormattedMessage\n                                    id=\"sources.deleteAppDetails\"\n                                    defaultMessage={`This change will affect these applications: { apps }.`}\n                                    values={{\n                                        apps: dependentApps\n                                    }}\n                                />\n                            </Text>}\n                        </TextContent>\n                    </Stack>\n                </SplitItem>\n            </Split>\n        </Modal>\n    );\n};\n\nRemoveAppModal.propTypes = {\n    app: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        display_name: PropTypes.string.isRequired,\n        dependent_applications: PropTypes.arrayOf(PropTypes.string),\n        sourceAppsNames: PropTypes.arrayOf(PropTypes.string)\n    }).isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default RemoveAppModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/index';\n\nimport RemoveAppModal from './RemoveAppModal';\nimport ApplicationList from '../ApplicationsList/ApplicationList';\nimport { useSource } from '../../hooks/useSource';\n\nconst AddApplicationDescription = () => {\n    const [removingApp, setApplicationToRemove] = useState({});\n\n    const sourceTypes = useSelector(({ sources }) => sources.sourceTypes);\n    const source = useSource();\n\n    const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n    const apps = source.applications.filter((app) => !app.isDeleting);\n\n    return (\n        <React.Fragment>\n            {removingApp.id && <RemoveAppModal\n                app={removingApp}\n                onCancel={() => setApplicationToRemove({})}\n            />}\n            <TextContent>\n                <Grid gutter=\"md\">\n                    <GridItem md={2}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.sourceName\"\n                                defaultMessage=\"Source name\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.type\"\n                                defaultMessage=\"Type\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={8}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.apps\"\n                                defaultMessage=\"Applications\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.p}>\n                            {source.name}\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.p}>\n                            { sourceType ? sourceType.product_name : <FormattedMessage\n                                id=\"sources.typeNotFound\"\n                                defaultMessage=\"Type not found\"\n                            />}\n                        </Text>\n                    </GridItem>\n                    <GridItem md={8}>\n                        {apps.length > 0 ? <ApplicationList setApplicationToRemove={setApplicationToRemove}/> : <FormattedMessage\n                            id=\"sources.noApps\"\n                            defaultMessage=\"No applications\"\n                        />}\n                    </GridItem>\n                </Grid>\n            </TextContent>\n        </React.Fragment>\n    );\n};\n\nexport default AddApplicationDescription;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const innerSetter = ({\n    formOptions,\n    modifiedValues,\n    authenticationValues,\n    selectedAuthentication\n}) => {\n    if (selectedAuthentication !== 'new') {\n        const authentication = authenticationValues.find(({ id }) => id === selectedAuthentication);\n\n        if (modifiedValues && modifiedValues.authentication) {\n            const newAuthenticationValues = merge(cloneDeep(authentication), modifiedValues.authentication);\n            formOptions.change('authentication', newAuthenticationValues);\n        } else {\n            formOptions.change('authentication', authentication);\n        }\n    } else {\n        if (modifiedValues && modifiedValues.authentication) {\n            formOptions.change('authentication', modifiedValues.authentication);\n        } else {\n            formOptions.change('authentication', undefined);\n        }\n    }\n};\n\nexport const AuthTypeSetter = ({ authenticationValues, modifiedValues }) => {\n    const formOptions = useFormApi();\n\n    const selectedAuthentication = formOptions.getState().values.selectedAuthentication;\n\n    const [initialValue, setInitialValue] = useState(selectedAuthentication);\n\n    useEffect(() => {\n        if (initialValue !== selectedAuthentication) {\n            innerSetter({ formOptions, authenticationValues, modifiedValues, selectedAuthentication });\n            setInitialValue(undefined);\n        }\n    }, [selectedAuthentication]);\n\n    return null;\n};\n\nAuthTypeSetter.propTypes = {\n    authenticationValues: PropTypes.arrayOf(PropTypes.object),\n    modifiedValues: PropTypes.object\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const AuthTypeCleaner = ({ modifiedValues }) => {\n    const formOptions = useFormApi();\n\n    const selectedAppId = get(formOptions.getState().values, 'application.application_type_id', '');\n\n    const [initialValue, setInitialValue] = useState(selectedAppId);\n\n    useEffect(() => {\n        if (initialValue !== selectedAppId) {\n            const values = modifiedValues && modifiedValues.authentication ? modifiedValues.authentication : undefined;\n            formOptions.batch(() => {\n                formOptions.change('authentication', values);\n                formOptions.change('selectedAuthentication', undefined);\n            });\n            setInitialValue(undefined);\n        }\n    }, [selectedAppId]);\n\n    return null;\n};\n\nAuthTypeCleaner.propTypes = {\n    modifiedValues: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { FormattedMessage } from 'react-intl';\nimport { schemaBuilder } from '@redhat-cloud-services/frontend-components-sources';\nimport get from 'lodash/get';\n\nimport AddApplicationDescription from './AddApplicationDescription';\nimport { AuthTypeSetter } from './AuthTypeSetter';\nimport { AuthTypeCleaner } from './AuthTypeCleaner';\n\nexport const NoAvailableApplicationDescription = () => (<TextContent>\n    <Text component={ TextVariants.p }>\n        <FormattedMessage\n            id=\"sources.allApplicationsAssigned\"\n            defaultMessage=\"All available applications have already been added to this source\n        or there is no available application for this source type.\"\n        />\n    </Text>\n</TextContent>);\n\nexport const ApplicationSummary = () => (<TextContent>\n    <Text component={ TextVariants.p }>\n        <FormattedMessage\n            id=\"sources.reviewAddAppSummary\"\n            defaultMessage=\"Review the information below and click Add to add the application to your source.\n            Use the Back button to make changes.\"\n        />\n    </Text>\n</TextContent>);\n\nexport const SelectAuthenticationDescription = ({ applicationTypeName, authenticationTypeName }) => (\n    <TextContent>\n        <Text component={ TextVariants.p }>\n            <FormattedMessage\n                id=\"sources.selectAuthenticationDescription\"\n                defaultMessage=\"Selected application { applicationTypeName } supports { authenticationTypeName } authentication\n                type. You can use already defined authentication values or define new.\"\n                values={{ applicationTypeName, authenticationTypeName }}\n            />\n        </Text>\n    </TextContent>\n);\n\nSelectAuthenticationDescription.propTypes = {\n    applicationTypeName: PropTypes.string,\n    authenticationTypeName: PropTypes.string\n};\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n    authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nconst generateAuthSelectionOptions = ({\n    source, authenticationValues, applicationTypes, supportedAuthTypeName, supportedAuthType\n}) => authenticationValues.filter(({ authtype }) => authtype === supportedAuthType).map((values) => {\n    const app = source.applications.find(({ authentications }) => authentications.find(({ id }) => id === values.id));\n\n    const appType = app && app.application_type_id ? applicationTypes.find(({ id }) => id === app.application_type_id) : '';\n\n    const includeUsername = values.username ? `-${values.username}` : '';\n    const includeAppName = appType ? `-${appType.display_name}` : `-unused-${values.id}`;\n    const label = `${supportedAuthTypeName}${includeUsername}${includeAppName}`;\n\n    return {\n        label,\n        value: values.id,\n    };\n});\n\nexport const selectAuthenticationStep = ({\n    intl, source, authenticationValues, sourceType, applicationTypes, modifiedValues\n}) => {\n    const nextStep = ({ values: { application } }) => {\n        const app = application ? application : {};\n        const appId = app.application_type_id ? app.application_type_id : '';\n\n        return `${sourceType.name}-${appId}`;\n    };\n\n    const fields = [{\n        component: 'description',\n        name: 'authtypesetter',\n        Content: AuthTypeSetter,\n        authenticationValues,\n        hideField: true,\n        modifiedValues\n    }];\n\n    applicationTypes.forEach((app) => {\n        const supportedAuthType = get(app, `supported_authentication_types[${sourceType.name}][0]`, '');\n\n        if (supportedAuthType && hasAlreadySupportedAuthType(authenticationValues, app, sourceType.name)) {\n            const supportedAuthTypeName =\n                get(sourceType, `schema.authentication`, {}).find(({ type }) => type === supportedAuthType).name;\n\n            fields.push({\n                component: componentTypes.SUB_FORM,\n                name: `${app.name}-subform`,\n                condition: {\n                    when: 'application.application_type_id',\n                    is: app.id\n                },\n                fields: [\n                    {\n                        name: `${app.name}-select-authentication-summary`,\n                        component: 'description',\n                        Content: SelectAuthenticationDescription,\n                        applicationTypeName: app.display_name,\n                        authenticationTypeName: supportedAuthTypeName,\n                    },\n                    {\n                        component: componentTypes.RADIO,\n                        name: 'selectedAuthentication',\n                        label: intl.formatMessage({\n                            id: 'sources.selectAuthenticationTitle',\n                            defaultMessage: 'Select authentication'\n                        }),\n                        isRequired: true,\n                        validate: [{ type: validatorTypes.REQUIRED }],\n                        options: [\n                            {\n                                label: intl.formatMessage({\n                                    id: 'sources.selectAuthenticationradioLabel',\n                                    defaultMessage: 'Define new { supportedAuthTypeName }'\n                                }, { supportedAuthTypeName }),\n                                value: 'new'\n                            },\n                            ...generateAuthSelectionOptions(\n                                { authenticationValues, source, applicationTypes, supportedAuthTypeName, supportedAuthType }\n                            )\n                        ]\n                    },\n                ]\n            });\n        }\n    });\n\n    return ({\n        name: 'selectAuthentication',\n        title: intl.formatMessage({\n            id: 'sources.selectAuthenticationTitle',\n            defaultMessage: 'Select authentication'\n        }),\n        fields,\n        nextStep\n    });\n};\n\nconst fields = (\n    applications = [], intl, sourceTypes, applicationTypes, authenticationValues, source, modifiedValues, container\n) => {\n    const hasAvailableApps = applications.length > 0;\n\n    let nextStep = hasAvailableApps ? 'summary' : undefined;\n    let authenticationFields = [];\n    const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id);\n\n    if (!source.imported && hasAvailableApps) {\n        const appendEndpoint = sourceType.schema.endpoint.hidden ? sourceType.schema.endpoint.fields : [];\n        const hasEndpointStep = appendEndpoint.length === 0;\n\n        applicationTypes.forEach(appType => {\n            if (appType.supported_source_types.includes(sourceType.name)) {\n                authenticationFields.push(\n                    schemaBuilder.createSpecificAuthTypeSelection(\n                        sourceType,\n                        appType,\n                        appendEndpoint,\n                        false,\n                    )\n                );\n            }\n        });\n\n        sourceType.schema.authentication.forEach(auth => {\n            applicationTypes.forEach(appType => {\n                if (appType.supported_source_types.includes(sourceType.name)) {\n                    const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name);\n\n                    if (appAdditionalSteps.length > 0) {\n                        authenticationFields.push(\n                            ...schemaBuilder.createAdditionalSteps(\n                                appAdditionalSteps,\n                                sourceType.name,\n                                auth.type,\n                                hasEndpointStep,\n                                auth.fields,\n                                appType.name,\n                            )\n                        );\n                    }\n                }\n            });\n        });\n\n        if (hasEndpointStep) {\n            authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n        }\n\n        nextStep = ({ values: { application } }) => {\n            if (application) {\n                if (\n                    hasAlreadySupportedAuthType(\n                        authenticationValues,\n                        applicationTypes.find(({ id }) => id === application.application_type_id),\n                        sourceType.name\n                    )\n                ) {\n                    return 'selectAuthentication';\n                }\n\n                return `${sourceType.name}-${application && application.application_type_id}`;\n            }\n        };\n    }\n\n    const applicationSelection = hasAvailableApps ? {\n        component: 'card-select',\n        name: 'application.application_type_id',\n        options: applications,\n        label: intl.formatMessage({\n            id: 'sources.chooseAppToAdd',\n            defaultMessage: 'Choose an application to add'\n        }),\n        DefaultIcon: null,\n        isRequired: true,\n        validate: [{\n            type: validatorTypes.REQUIRED\n        }]\n    } : {\n        component: 'description',\n        name: 'description-no-options',\n        validate: [{\n            type: validatorTypes.REQUIRED\n        }],\n        Content: NoAvailableApplicationDescription\n    };\n\n    const selectionSteps = [];\n\n    if (!source.imported && hasAvailableApps) {\n        selectionSteps.push(\n            selectAuthenticationStep({ intl, source, authenticationValues, sourceType, applicationTypes, modifiedValues })\n        );\n    }\n\n    return ({\n        fields: [\n            {\n                component: componentTypes.WIZARD,\n                name: 'wizard',\n                title: intl.formatMessage({\n                    id: 'sources.manageApps',\n                    defaultMessage: 'Manage applications'\n                }),\n                inModal: true,\n                container,\n                predictSteps: true,\n                showTitles: true,\n                crossroads: ['application.application_type_id', 'selectedAuthentication'],\n                description: intl.formatMessage({\n                    id: 'sources.addAppDescription',\n                    defaultMessage: 'You are managing applications of this source.'\n                }),\n                buttonLabels: {\n                    submit: hasAvailableApps ? intl.formatMessage({\n                        id: 'sources.add',\n                        defaultMessage: 'Add'\n                    }) : intl.formatMessage({\n                        id: 'sources.close',\n                        defaultMessage: 'Close'\n                    }),\n                    cancel: intl.formatMessage({\n                        id: 'sources.cancel',\n                        defaultMessage: 'Cancel'\n                    }),\n                    back: intl.formatMessage({\n                        id: 'sources.back',\n                        defaultMessage: 'Back'\n                    })\n                },\n                fields: [\n                    {\n                        nextStep,\n                        title: intl.formatMessage({\n                            id: 'sources.selectApp',\n                            defaultMessage: 'Select application'\n                        }),\n                        name: 'selectAppStep',\n                        fields: [\n                            {\n                                component: 'description',\n                                name: 'description',\n                                Content: AddApplicationDescription\n                            },\n                            applicationSelection,\n                            {\n                                component: 'description',\n                                name: 'authtypesetter',\n                                Content: AuthTypeCleaner,\n                                hideField: true,\n                                modifiedValues\n                            }\n                        ]\n                    }, {\n                        title: intl.formatMessage({\n                            id: 'sources.review',\n                            defaultMessage: 'Review'\n                        }),\n                        name: 'summary',\n                        fields: [{\n                            component: 'description',\n                            name: 'description-summary',\n                            Content: ApplicationSummary\n                        }, {\n                            component: 'summary',\n                            name: 'summary',\n                            sourceTypes,\n                            applicationTypes\n                        }]\n                    },\n                    ...selectionSteps,\n                    ...authenticationFields\n                ]\n            }\n        ]\n    });\n};\n\nexport default fields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { Progress } from '@patternfly/react-core/dist/js/components/Progress/Progress';\n\nimport { FormattedMessage } from 'react-intl';\n\nconst LoadingStep = ({ onClose, customText, progressStep, progressTexts }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full } className=\"ins-c-sources__empty-state\">\n            <EmptyStateIcon icon={ Spinner } color=\"var(--pf-global--success-color--100)\" className=\"pf-u-mb-0\"/>\n            <EmptyStateBody>\n                {progressTexts ?\n                    <Progress\n                        value={progressStep}\n                        min={0}\n                        max={progressTexts.length - 1}\n                        title=\" \"\n                        label={progressTexts[progressStep]}\n                        valueText={progressTexts[progressStep]}\n                        className=\"pf-u-mb-0 ins-c-sources__progress\"\n                    />\n                    : customText\n                }\n            </EmptyStateBody>\n            { onClose &&\n        <EmptyStateSecondaryActions className=\"pf-u-mt-xl\">\n            <Button variant=\"link\" onClick={ onClose }>\n                <FormattedMessage\n                    id=\"sources.cancel\"\n                    defaultMessage=\"Cancel\"\n                />\n            </Button>\n        </EmptyStateSecondaryActions> }\n        </EmptyState>\n    </Bullseye>\n);\n\nLoadingStep.propTypes = {\n    onClose: PropTypes.func,\n    customText: PropTypes.node,\n    progressStep: PropTypes.number,\n    progressTexts: PropTypes.arrayOf(PropTypes.string)\n};\n\nLoadingStep.defaultProps = {\n    customText: <FormattedMessage\n        id=\"sources.loading\"\n        defaultMessage=\"Loading, please wait.\"\n    />\n};\n\nexport default LoadingStep;\n","import React from 'react';\nimport { FormattedMessage  } from 'react-intl';\nimport { PropTypes } from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Progress } from '@patternfly/react-core/dist/js/components/Progress/Progress';\n\nimport TimesCircleIcon from '@patternfly/react-icons/dist/js/icons/times-circle-icon';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nconst ErroredStepAttach = ({ onReset, goToSources, error, progressStep, progressTexts }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full } className=\"ins-c-sources__empty-state\">\n            <EmptyStateIcon icon={ TimesCircleIcon } color=\"var(--pf-global--danger-color--100)\" className=\"pf-u-mb-0\"/>\n            <Title headingLevel=\"h5\" size=\"lg\" className=\"pf-u-mt-xl\">\n                <FormattedMessage\n                    id=\"sources.configurationSuccessful\"\n                    defaultMessage=\"Configuration unsuccessful\"\n                />\n            </Title>\n            <EmptyStateBody>\n                <Progress\n                    className=\"pf-u-mb-md ins-c-sources__progress\"\n                    value={progressStep}\n                    min={0}\n                    title=\" \"\n                    max={progressTexts.length - 1}\n                    label={progressTexts[progressStep]}\n                    valueText={progressTexts[progressStep]}\n                    variant='danger'\n                />\n                <React.Fragment>\n                    <FormattedMessage\n                        id=\"sources.successAddApp\"\n                        defaultMessage=\"Your application has not been successfully added:\"\n                    />\n                    <br />\n                    <TextContent>\n                        <Text component={TextVariants.h6}>{ error }</Text>\n                    </TextContent>\n                </React.Fragment>\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={ goToSources }>\n                <FormattedMessage\n                    id=\"sources.backToSources\"\n                    defaultMessage=\"Back to Sources\"\n                />\n            </Button>\n            <EmptyStateSecondaryActions>\n                <Button variant=\"link\" onClick={ onReset }>\n                    <FormattedMessage\n                        id=\"sources.retry\"\n                        defaultMessage=\"Retry\"\n                    />\n                </Button>\n            </EmptyStateSecondaryActions>\n        </EmptyState>\n    </Bullseye>\n);\n\nErroredStepAttach.propTypes = {\n    onReset: PropTypes.func.isRequired,\n    goToSources: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired,\n    progressStep: PropTypes.number.isRequired,\n    progressTexts: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default ErroredStepAttach;\n","import React from 'react';\nimport { FormattedMessage  } from 'react-intl';\nimport { PropTypes } from 'prop-types';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Progress } from '@patternfly/react-core/dist/js/components/Progress/Progress';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\n\nconst FinishedStepAttach = ({ goToSources, onReset, progressStep, progressTexts }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full } className=\"ins-c-sources__empty-state\">\n            <EmptyStateIcon icon={ CheckCircleIcon } color=\"var(--pf-global--success-color--200)\" className=\"pf-u-mb-0\"/>\n            <Title headingLevel=\"h5\" size=\"lg\" className=\"pf-u-mt-xl\">\n                <FormattedMessage\n                    id=\"sources.configurationSuccessful\"\n                    defaultMessage=\"Configuration successful\"\n                />\n            </Title>\n            <EmptyStateBody>\n                <Progress\n                    className=\"pf-u-mb-md ins-c-sources__progress ins-c-sources__progress-success\"\n                    value={progressStep}\n                    min={0}\n                    title=\" \"\n                    max={progressTexts.length - 1}\n                    label={progressTexts[progressStep]}\n                    valueText={progressTexts[progressStep]}\n                    variant='success'\n                />\n                <FormattedMessage\n                    id=\"sources.successAddApp\"\n                    defaultMessage=\"Your application has been successfully added.\"\n                />\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={ goToSources } className=\"pf-u-mt-xl\">\n                <FormattedMessage\n                    id=\"sources.backToSources\"\n                    defaultMessage=\"Back to Sources\"\n                />\n            </Button>\n            <EmptyStateSecondaryActions>\n                <Button variant=\"link\" onClick={onReset}>\n                    <FormattedMessage\n                        id=\"sources.continueManageApp\"\n                        defaultMessage=\"Continue managing applications\"\n                    />\n                </Button>\n            </EmptyStateSecondaryActions>\n        </EmptyState>\n    </Bullseye>\n);\n\nFinishedStepAttach.propTypes = {\n    onReset: PropTypes.func.isRequired,\n    goToSources: PropTypes.func.isRequired,\n    progressStep: PropTypes.number.isRequired,\n    progressTexts: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default FinishedStepAttach;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core/dist/js/components/Wizard/Wizard';\n\nconst WizardBodyAttach = ({ step, goToSources }) => {\n    const intl = useIntl();\n\n    return (\n        <Wizard\n            isOpen={ true }\n            onClose={goToSources}\n            title={intl.formatMessage({\n                id: 'sources.manageApps',\n                defaultMessage: 'Manage applications'\n            })}\n            description={\n                intl.formatMessage({\n                    id: 'sources.addAppDescription',\n                    defaultMessage: 'You are managing applications of this source.'\n                })\n            }\n            steps={ [{\n                name: 'Finish',\n                component: step,\n                isFinishedStep: true\n            }] }\n        />\n    );\n};\n\nWizardBodyAttach.propTypes = {\n    step: PropTypes.node.isRequired,\n    goToSources: PropTypes.func.isRequired\n};\n\nexport default WizardBodyAttach;\n","import isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\n\nconst createProgressTextsApp = (\n    filteredValues, allFormValues, intl\n) => {\n    let progressText = [];\n    let step = 0;\n\n    if (filteredValues.endpoint && !isEmpty(filteredValues.endpoint) && !get(allFormValues, 'endpoint.id', false)) {\n        progressText.push(intl.formatMessage({\n            id: 'sources.authProgressEndpoint',\n            defaultMessage: 'Step { step }: creating endpoint'\n        }, { step: ++step }));\n    }\n\n    progressText.push(intl.formatMessage({\n        id: 'sources.authProgressValues',\n        defaultMessage: 'Step { step }: updating values and creating application'\n    }, { step: ++step }));\n\n    progressText.push(intl.formatMessage({\n        id: 'sources.authConnectingApplication',\n        defaultMessage: 'Step { step }: connecting application and authentication'\n    }, { step: ++step }));\n\n    progressText.push(intl.formatMessage({\n        id: 'sources.authReloadData',\n        defaultMessage: 'Step { step }: reloading data'\n    }, { step: ++step }));\n\n    progressText.push(intl.formatMessage({\n        id: 'sources.authCompleted',\n        defaultMessage: 'Completed'\n    }));\n\n    return progressText;\n};\n\nexport default createProgressTextsApp;\n\n","import { addedDiff, updatedDiff } from 'deep-object-diff';\nimport { patchSource, handleError } from '@redhat-cloud-services/frontend-components-sources';\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { getSourcesApi, doCreateApplication } from './entities';\nimport { urlOrHost } from './doUpdateSource';\nimport createProgressTextsApp from '../components/AddApplication/steps/createProgressTextsApp';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            if (isEmpty(obj[key])) {\n                delete obj[key];\n            } else {\n                removeEmpty(obj[key]);\n            }\n        } else if (typeof obj[key] === 'undefined') {\n            delete obj[key];\n        }\n    });\n    return obj;\n};\n\nexport const doAttachApp = async (\n    values, formApi, authenticationInitialValues, initialValues, setState = () => {}, intl = () => {}\n) => {\n    const formState = formApi.getState();\n\n    const allFormValues = formState.values;\n\n    const selectedAuthId = allFormValues.authentication ? allFormValues.authentication.id : undefined;\n\n    const authInitialValues = selectedAuthId\n        ? authenticationInitialValues.find(({ id }) => id === selectedAuthId)\n        : undefined;\n\n    const { authentication, ...valuesWithoutAuth } = values;\n\n    const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n    const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n    const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n    const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n    const filteredValues = removeEmpty({\n        ...merge(cloneDeep(newAddedValues), updatedValues),\n        authentication: {\n            ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues)\n        }\n    });\n\n    setState({ type: 'setProgressTexts', progressTexts: createProgressTextsApp(filteredValues, allFormValues, intl) });\n\n    try {\n        if (!allFormValues.source || !allFormValues.source.id) {\n            throw 'Missing source id';\n        }\n\n        const sourceId = allFormValues.source.id;\n        let endpointId = allFormValues.endpoint ? allFormValues.endpoint.id : undefined;\n\n        const promises = [];\n\n        if (filteredValues.source && !isEmpty(filteredValues.source)) {\n            promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n        const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n        if (hasModifiedEndpoint || hasModifiedUrl) {\n            const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n            const endPointPort = parseInt(port, 10);\n\n            const endpointData = removeEmpty({\n                ...filteredValues.endpoint,\n                scheme,\n                host,\n                port: isNaN(endPointPort) ? undefined : endPointPort,\n                path\n            });\n\n            if (endpointId) {\n                promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n            } else {\n                promises.push(Promise.resolve(undefined));\n\n                const createEndpointData = {\n                    ...endpointData,\n                    default: true,\n                    source_id: sourceId\n                };\n\n                const endpoint = await getSourcesApi().createEndpoint(createEndpointData);\n                setState({ type: 'increaseProgressStep' });\n                endpointId = endpoint.id;\n            }\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        if (filteredValues.authentication && !isEmpty(filteredValues.authentication)) {\n            if (selectedAuthId) {\n                promises.push(getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication));\n            } else if (endpointId) {\n                const authenticationData = {\n                    ...filteredValues.authentication,\n                    resource_id: endpointId,\n                    resource_type: 'Endpoint'\n                };\n\n                promises.push(getSourcesApi().createAuthentication(authenticationData));\n            }\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        if (filteredValues.application && filteredValues.application.application_type_id) {\n            promises.push(doCreateApplication(sourceId, filteredValues.application.application_type_id));\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        const [_sourceDataOut, _endpointDataOut, authenticationDataOut, applicationDataOut] = await Promise.all(promises);\n        setState({ type: 'increaseProgressStep' });\n\n        const authenticationId = selectedAuthId ? selectedAuthId : authenticationDataOut ? authenticationDataOut.id : undefined;\n\n        const promisesSecondRound = [];\n\n        if (applicationDataOut && applicationDataOut.id && authenticationId) {\n            const authAppData = {\n                application_id: applicationDataOut.id,\n                authentication_id: authenticationId\n            };\n\n            promisesSecondRound.push(getSourcesApi().createAuthApp(authAppData));\n        }\n\n        const isAttachingCostManagement = filteredValues.credentials || filteredValues.billing_source;\n        if (isAttachingCostManagement) {\n            const { credentials, billing_source } = filteredValues;\n            let data = {};\n            data = credentials ? { authentication: { credentials } } : {};\n            data = billing_source ? { ...data, billing_source } : data;\n            promisesSecondRound.push(patchSource({ id: sourceId, ...data }));\n        }\n\n        await Promise.all(promisesSecondRound);\n        setState({ type: 'increaseProgressStep' });\n    } catch (error) {\n        const errorMessage = await handleError(error);\n        throw errorMessage;\n    }\n};\n","export const initialState = {\n    state: 'loading',\n    error: '',\n    values: {},\n    authenticationsValues: [],\n    sourceAppsLength: 0,\n    initialValues: {},\n    progressStep: 0,\n    progressTexts: [],\n    isCancelling: false,\n};\n\nconst reducer = (state, { type, length, authenticationsValues, initialValues, error, values, progressTexts }) => {\n    switch (type) {\n        case 'setSourceAppslength':\n            return {\n                ...state,\n                sourceAppsLength: length\n            };\n        case 'loadAuthentications':\n            return {\n                ...state,\n                authenticationsValues,\n                initialValues,\n                values: {},\n                state: state.state === 'loading' ? 'wizard' : state.state\n            };\n        case 'loadWithoutAuthentications':\n            return {\n                ...state,\n                initialValues,\n                values: {},\n                state: state.state === 'loading' ? 'wizard' : state.state\n            };\n        case 'reset':\n            return {\n                ...state,\n                state: 'wizard'\n            };\n        case 'submit':\n            return {\n                ...state,\n                state: 'submitting',\n                progressStep: 0,\n                progressTexts: ['Preparing']\n            };\n        case 'finish':\n            return {\n                ...state,\n                state: 'finished',\n                progressStep: ++state.progressStep\n            };\n        case 'error':\n            return {\n                ...state,\n                state: 'errored',\n                error,\n                values\n            };\n        case 'setProgressTexts':\n            return {\n                ...state,\n                progressTexts\n            };\n        case 'increaseProgressStep':\n            return {\n                ...state,\n                progressStep: ++state.progressStep\n            };\n        case 'toggleCancelling':\n            return {\n                ...state,\n                isCancelling: !state.isCancelling,\n                ...(values && { values })\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React, { useReducer, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { filterApps, CloseModal } from '@redhat-cloud-services/frontend-components-sources';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport LoadingStep from './steps/LoadingStep';\nimport ErroredStep from './steps/ErroredStep';\nimport FinishedStep from './steps/FinishedStep';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../SourcesTable/formatters';\nimport { routes } from '../../Routes';\n\nimport { doAttachApp } from '../../api/doAttachApp';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nimport reducer, { initialState } from './reducer';\n\nlet selectedApp = undefined; // this has to be not-state value, because it shouldn't re-render the component when changes\nconst saveSelectedApp = ({ values: { application } }) => selectedApp = application;\n\nexport const onSubmit = (values, formApi, authenticationInitialValues, dispatch, setState, initialValues, intl) => {\n    setState({ type: 'submit' });\n\n    return doAttachApp(values, formApi, authenticationInitialValues, initialValues, setState, intl)\n    .then(async () => {\n        checkSourceStatus(initialValues.source.id);\n        await dispatch(loadEntities());\n        selectedApp = undefined;\n        return setState({ type: 'finish' });\n    })\n    .catch(error => setState({\n        type: 'error',\n        error,\n        values\n    }));\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst AddApplication = () => {\n    const intl = useIntl();\n    const history = useHistory();\n\n    const loaded = useIsLoaded();\n\n    const {\n        appTypes,\n        sourceTypesLoaded,\n        appTypesLoaded,\n        sourceTypes,\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useReducer(reducer, initialState);\n\n    const container = useRef(document.createElement('div'));\n\n    useEffect(() => {\n        selectedApp = undefined;\n    }, []);\n\n    useEffect(() => {\n        if (source) {\n            // When app is only removed, there is no need to reload values\n            const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n            setState({ type: 'setSourceAppslength', length: source.applications.length });\n\n            if (!removeAppAction) {\n                if (source.endpoints && source.endpoints[0]) {\n                    getSourcesApi()\n                    .listEndpointAuthentications(source.endpoints[0].id)\n                    .then(({ data }) => setState({\n                        type: 'loadAuthentications',\n                        authenticationsValues: data,\n                        initialValues: {\n                            source,\n                            endpoint: source.endpoints[0],\n                            url: endpointToUrl(source.endpoints[0]),\n                            application: selectedApp,\n                        },\n                        values: {}\n                    }));\n                } else {\n                    setState({\n                        type: 'loadWithoutAuthentications',\n                        initialValues: { source, application: selectedApp },\n                        values: {}\n                    });\n                }\n            }\n        }\n    }, [source]);\n\n    const goToSources = () => history.push(routes.sources.path);\n\n    if ((!appTypesLoaded || !sourceTypesLoaded || !loaded || state.state === 'loading') && state.state !== 'submitting') {\n        return  (\n            <WizardBody\n                goToSources={goToSources}\n                step={<LoadingStep />}\n            />\n        );\n    }\n\n    if (state.state === 'submitting') {\n        return  (\n            <WizardBody\n                goToSources={goToSources}\n                step={<LoadingStep\n                    progressStep={state.progressStep}\n                    progressTexts={state.progressTexts}\n                />}\n            />\n        );\n    }\n\n    const onReset = () => setState({ type: 'reset' });\n\n    if (state.state !== 'wizard') {\n        const shownStep = state.state === 'finished' ? (<FinishedStep\n            onReset={onReset}\n            goToSources={goToSources}\n            progressStep={state.progressStep}\n            progressTexts={state.progressTexts}\n        />) :\n            (<ErroredStep\n                onReset={onReset}\n                goToSources={goToSources}\n                error={state.error}\n                progressStep={state.progressStep}\n                progressTexts={state.progressTexts}\n            />);\n\n        return (\n            <WizardBody goToSources={goToSources} step={shownStep} />\n        );\n    }\n\n    const appIds = source.applications.filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n    const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n    const sourceTypeName = sourceType && sourceType.name;\n    const filteredAppTypes = appTypes.filter((type) =>\n        !appIds.includes(type.id) && type.supported_source_types.includes(sourceTypeName)\n    ).filter(filterApps);\n\n    const availableAppTypes = filteredAppTypes.map((type) => {\n        const hasDeletingApp = source.applications.find(app => app.application_type_id === type.id);\n        const label = `${type.display_name} ${hasDeletingApp ? `(${intl.formatMessage({\n            id: 'sources.currentlyRemoving',\n            defaultMessage: 'Currently removing'\n        })})` : ''}`;\n\n        return ({ value: type.id, label, isDisabled: hasDeletingApp ? true : false });\n    });\n\n    const schema = createSchema(\n        availableAppTypes,\n        intl,\n        sourceTypes,\n        appTypes,\n        state.authenticationsValues,\n        source,\n        state.values,\n        container.current\n    );\n\n    const onSubmitWrapper = (values, formApi) => onSubmit(\n        values,\n        formApi,\n        state.authenticationsValues,\n        dispatch,\n        setState,\n        state.initialValues,\n        intl\n    );\n\n    const hasAvailableApps = filteredAppTypes.length > 0;\n    const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n    const finalValues = merge(cloneDeep(state.initialValues), state.values);\n\n    const onStay = () => {\n        container.current.hidden = false;\n        setState({ type: 'toggleCancelling' });\n    };\n\n    const cancelBeforeExit = (values) => {\n        if (values?.application) {\n            container.current.hidden = true;\n            setState({ type: 'toggleCancelling', values }); }\n        else {\n            goToSources();\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <CloseModal\n                title={\n                    intl.formatMessage({\n                        id: 'sources.manageAppsCloseModalTitle', defaultMessage: 'Exit application adding?'\n                    })\n                }\n                isOpen={state.isCancelling}\n                onStay={onStay}\n                onExit={goToSources}\n            />\n            <SourcesFormRenderer\n                schema={schema}\n                showFormControls={false}\n                onSubmit={onSubmitFinal}\n                onCancel={cancelBeforeExit}\n                initialValues={finalValues}\n                subscription={{ values: true }}\n                debug={saveSelectedApp}\n                clearedValue={null}\n                FormTemplate={FormTemplateWrapper}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default AddApplication;\n"],"sourceRoot":""}