{"version":3,"sources":["webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/api/checkSourceStatus.js","webpack:///./src/components/Authentication.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/ApplicationSelect.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./src/api/doUpdateSource.js","webpack:///./src/api/patchCmValues.js","webpack:///./src/components/AddApplication/AuthTypeCleaner.js","webpack:///./src/components/AddApplication/AddApplicationDescription.js","webpack:///./src/components/AddApplication/schema/authenticationSelectionStep.js","webpack:///./src/components/AddApplication/schema/generateFirstAuthStep.js","webpack:///./src/components/AddApplication/AuthTypeSetter.js","webpack:///./src/components/AddApplication/schema/selectAuthenticationStep.js","webpack:///./src/components/AddApplication/AddApplicationSchema.js","webpack:///./src/components/AddApplication/WizardBody.js","webpack:///./src/api/doAttachApp.js","webpack:///./src/components/AddApplication/reducer.js","webpack:///./src/components/AddApplication/AddApplication.js"],"names":["removeAppSubmit","app","intl","onCancel","dispatch","source","titleSuccess","formatMessage","id","defaultMessage","name","display_name","titleError","removeApplication","checkSourceStatus","getSourcesApi","checkAvailabilitySource","Authentication","rest","formOptions","useFormApi","values","getState","match","isEditing","authentication","isModified","get","useState","edited","setEdited","firstClick","useRef","mounted","useEffect","current","pristine","doNotRequirePassword","validate","filter","type","validatorTypes","REQUIRED","componentProps","resolveProps","validated","FormGroup","helperText","label","onFocus","isRequired","TextInput","aria-label","value","autoFocus","RemoveAppModal","container","useIntl","appTypes","useSelector","sources","useSource","useDispatch","hidden","dependentApps","dependent_applications","map","appName","appType","find","sourceAppsNames","includes","x","Modal","className","isOpen","onClose","variant","header","Title","headingLevel","size","actions","key","onClick","TextContent","Text","component","TextVariants","p","length","apps","propTypes","PropTypes","shape","string","arrayOf","func","instanceOf","Element","RemoveRadio","option","setApplicationToRemove","Button","htmlFor","application_type_id","ApplicationSelect","props","useFieldApi","options","input","onChange","removingApp","applications","isCurrentlyRemoving","isDeleting","appIds","reduce","acc","Radio","isChecked","isDisabled","SourcesFormRenderer","FormTemplate","componentMapper","mapperExtension","urlOrHost","formData","url","scheme","host","port","path","u","URL","protocol","replace","hostname","defaultPort","pathname","error","parseUrl","endpoint","doUpdateSource","data","promises","push","updateSource","endPointPort","parseInt","endpointData","isNaN","undefined","updateEndpoint","endpoints","authentications","Object","keys","forEach","idWithoutPrefix","updateAuthentication","billing_source","credentials","cmDataOut","axiosInstance","patch","COST_MANAGEMENT_API_BASE","Promise","all","AuthTypeCleaner","selectedAppId","initialValue","setInitialValue","batch","change","AddApplicationDescription","sourceTypes","sourceType","source_type_id","applicationsPart","Fragment","h4","product_name","authenticationSelectionStep","authenticationValues","title","fields","componentTypes","RADIO","supported_authentication_types","schema","authtype","nextStep","application","auth","generateFirstAuthStep","endpointFields","schemaBuilder","additionalStepName","skipEndpoint","customSteps","additionalIncludesStepKeys","stepProps","firstAdditonalStep","additionalFields","AuthTypeSetter","selectedAuthentication","startsWith","innerSetter","object","SelectAuthenticationDescription","applicationTypeName","authenticationTypeName","generateAuthSelectionOptions","applicationTypes","supportedAuthTypeName","supportedAuthType","includeUsername","username","includeAppName","selectAuthenticationStep","Content","hideField","ifAppSupported","supported_source_types","isAppAvailable","supportedAuthTypes","SUB_FORM","condition","and","when","is","appId","ApplicationSummary","hasAlreadySupportedAuthType","authValues","sourceTypeName","hasMultipleAuthenticationTypes","hasAvailableApps","authenticationFields","imported","appendEndpoint","hasEndpointStep","appAdditionalSteps","authType","applicationSelection","selectionSteps","WIZARD","inModal","showTitles","crossroads","description","buttonLabels","submit","cancel","back","WizardBodyAttach","step","goToSources","Wizard","steps","isFinishedStep","node","removeEmpty","obj","isEmpty","doAttachApp","formApi","authenticationInitialValues","initialValues","a","formState","allFormValues","selectedAuthId","authInitialValues","valuesWithoutAuth","newAddedValues","addedDiff","updatedValues","updatedDiff","newAddedAuthValues","updatedAuthValues","filteredValues","merge","cloneDeep","sourceId","endpointId","resolve","hasModifiedEndpoint","hasModifiedUrl","createEndpointData","default","source_id","createEndpoint","doCreateApplication","endpointDataOut","applicationDataOut","authenticationDataOut","authenticationData","resource_id","resource_type","createAuthentication","authenticationId","promisesSecondRound","authAppData","application_id","authentication_id","createAuthApp","patchSource","timeout","timeoutedApps","checkAppAvailability","console","deleteApplication","handleError","initialState","state","authenticationsValues","sourceAppsLength","isCancelling","reducer","selectedApp","saveSelectedApp","onSubmit","setState","then","loadEntities","FormTemplateWrapper","showFormControls","AddApplication","history","useHistory","loaded","useIsLoaded","shallowEqual","sourceTypesLoaded","appTypesLoaded","useReducer","document","createElement","removeAppAction","listEndpointAuthentications","endpointToUrl","routes","WizardBody","customText","cancelTitle","onSubmitWrapper","onReset","shownStep","onRetry","returnButtonTitle","primaryAction","secondaryActions","target","href","rel","availability_status","hideSourcesButton","successfulMessage","message","availability_status_error","Component","to","replaceRouteId","sourcesEdit","filteredAppTypes","filterApps","createSchema","onSubmitFinal","onStay","onExit","subscription","debug","clearedValue"],"mappings":"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","file":"js/addApp.274ebca0d83949637878.js","sourcesContent":["import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import { getSourcesApi } from './entities';\n\nexport const checkSourceStatus = (id) =>\n  getSourcesApi()\n    .checkAvailabilitySource(id)\n    .catch(() => {});\n","import React, { useState, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\n\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nconst Authentication = (rest) => {\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  const [authenticationId] = rest?.name?.match(/\\d+/) || [];\n  const isEditing = authenticationId || values.authentication?.id;\n\n  // If there is any value, the field is modified (password is always empty on start)\n  let isModified = get(values, rest.name);\n\n  const [edited, setEdited] = useState(!isEditing || isModified);\n  const firstClick = useRef(true);\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      // reset on restart\n      if (!firstClick.current && formOptions.getState().pristine) {\n        setEdited(false);\n        firstClick.current = true;\n      }\n\n      if (edited) {\n        firstClick.current = false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(isEditing\n      ? {\n          validate: doNotRequirePassword,\n          resolveProps: validated,\n        }\n      : {}),\n  };\n\n  if (!edited && isEditing) {\n    return (\n      <FormGroup helperText={componentProps.helperText} label={componentProps.label} onFocus={() => setEdited(true)} isRequired>\n        <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" />\n      </FormGroup>\n    );\n  }\n\n  return <TextField {...componentProps} autoFocus={true} />;\n};\n\nexport default Authentication;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\n\nconst RemoveAppModal = ({ app, onCancel, container }) => {\n  const intl = useIntl();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  useEffect(() => {\n    if (container) {\n      container.hidden = true;\n    }\n  }, []);\n\n  const dependentApps = app.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return app.sourceAppsNames.includes(appType?.display_name) && appType?.display_name;\n    })\n    .filter((x) => x);\n\n  return (\n    <Modal\n      className=\"ins-c-sources__dialog--warning\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> }\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps }\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveAppModal.propTypes = {\n  app: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    display_name: PropTypes.string.isRequired,\n    dependent_applications: PropTypes.arrayOf(PropTypes.string),\n    sourceAppsNames: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired,\n  container: PropTypes.instanceOf(Element),\n};\n\nexport default RemoveAppModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Radio } from '@patternfly/react-core/dist/js/components/Radio/Radio';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport RemoveAppModal from './RemoveAppModal';\n\nconst RemoveRadio = ({ option, setApplicationToRemove, sourceAppsNames, app, appType }) => {\n  const intl = useIntl();\n\n  const onClick = () =>\n    setApplicationToRemove({\n      id: app?.id,\n      display_name: appType?.display_name,\n      dependent_applications: appType?.dependent_applications,\n      sourceAppsNames,\n    });\n\n  return (\n    <div className=\"pf-c-radio pf-u-mb-md\">\n      <Button\n        id={`remove-app-${option.value}`}\n        variant=\"plain\"\n        aria-label={intl.formatMessage(\n          {\n            id: 'source.removeAppAria',\n            defaultMessage: 'Remove application {app} from this source',\n          },\n          { app: option.label }\n        )}\n        className=\"pf-u-p-0\"\n        onClick={onClick}\n      >\n        <TrashIcon variant=\"small\" />\n      </Button>\n      <label className=\"pf-c-radio__label\" htmlFor={`remove-app-${option.value}`}>\n        {option.label}\n      </label>\n    </div>\n  );\n};\n\nRemoveRadio.propTypes = {\n  option: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  }),\n  setApplicationToRemove: PropTypes.func.isRequired,\n  sourceAppsNames: PropTypes.arrayOf(PropTypes.string),\n  appType: PropTypes.shape({\n    display_name: PropTypes.string.isRequired,\n    dependent_applications: PropTypes.arrayOf(PropTypes.string),\n  }),\n  app: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    application_type_id: PropTypes.string.isRequired,\n  }),\n};\n\nconst ApplicationSelect = (props) => {\n  const {\n    options,\n    input: { onChange, value, name },\n    container,\n  } = useFieldApi(props);\n\n  const [removingApp, setApplicationToRemove] = useState({});\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const source = useSource();\n\n  const sourceAppsNames = source.applications.map(\n    ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name\n  );\n\n  const appType = (value) => appTypes?.find((appType) => appType.id === value);\n  const app = (value) => source.applications.find((app) => app.application_type_id === value);\n\n  const isCurrentlyRemoving = (value) => app(value)?.isDeleting;\n\n  const appIds = source.applications\n    .filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n  return (\n    <div>\n      {removingApp.id && (\n        <RemoveAppModal\n          app={removingApp}\n          onCancel={() => {\n            if (container) {\n              container.hidden = false;\n            }\n\n            return setApplicationToRemove({});\n          }}\n          container={container}\n        />\n      )}\n      {options.map((option) =>\n        !appIds.includes(option.value) ? (\n          <Radio\n            className=\"pf-u-mb-md\"\n            key={option.value}\n            onChange={() => onChange(option.value)}\n            label={option.label}\n            id={`${name}-${option.value}`}\n            name={name}\n            isChecked={value === option.value}\n            isDisabled={isCurrentlyRemoving(option.value)}\n          />\n        ) : (\n          <RemoveRadio\n            key={option.value}\n            option={option}\n            setApplicationToRemove={setApplicationToRemove}\n            sourceAppsNames={sourceAppsNames}\n            app={app(option.value)}\n            appType={appType(option.value)}\n          />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ApplicationSelect;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources/cjs/sourceFormRenderer';\n\nimport Authentication from '../components/Authentication';\n\nimport ApplicationSelect from '../components/AddApplication/ApplicationSelect';\n\nconst SourcesFormRenderer = (props) => (\n  <FormRenderer\n    FormTemplate={FormTemplate}\n    componentMapper={{\n      ...componentMapper,\n      ...mapperExtension,\n      authentication: Authentication,\n      'application-select': ApplicationSelect,\n    }}\n    {...props}\n  />\n);\n\nexport default SourcesFormRenderer;\n","import { defaultPort } from '../components/SourcesTable/formatters';\nimport { getSourcesApi } from './entities';\nimport { patchCmValues } from './patchCmValues';\n\nexport const parseUrl = (url) => {\n  if (url === null) {\n    return {\n      scheme: null,\n      host: null,\n      port: null,\n      path: null,\n    };\n  }\n\n  if (!url) {\n    return {};\n  }\n\n  try {\n    const u = new URL(url);\n    const scheme = u.protocol.replace(/:$/, '');\n\n    return {\n      scheme,\n      host: u.hostname,\n      port: u.port === '' ? defaultPort(scheme) : u.port,\n      path: u.pathname,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const urlOrHost = (formData) =>\n  formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData) => {\n  const promises = [];\n\n  if (formData.source) {\n    promises.push(getSourcesApi().updateSource(source.source.id, formData.source));\n  }\n\n  if (formData.endpoint || formData.url || formData.url === null) {\n    const { scheme, host, port, path } = urlOrHost(formData);\n    const endPointPort = port === null ? null : parseInt(port, 10);\n\n    const endpointData = {\n      scheme,\n      host,\n      path,\n      port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n      ...formData.endpoint,\n    };\n\n    promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData));\n  }\n\n  if (formData.authentications) {\n    Object.keys(formData.authentications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]));\n    });\n  }\n\n  if (formData.billing_source || formData.credentials) {\n    let cmDataOut = {};\n\n    if (formData.credentials) {\n      cmDataOut = {\n        authentication: {\n          credentials: formData.credentials,\n        },\n      };\n    }\n\n    if (formData.billing_source) {\n      cmDataOut = {\n        ...cmDataOut,\n        billing_source: formData.billing_source,\n      };\n    }\n\n    promises.push(patchCmValues(source.source.id, cmDataOut));\n  }\n\n  return Promise.all(promises);\n};\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const patchCmValues = (id, data) => axiosInstance.patch(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`, data);\n","import { useState, useEffect } from 'react';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const AuthTypeCleaner = () => {\n  const formOptions = useFormApi();\n\n  const selectedAppId = get(formOptions.getState().values, 'application.application_type_id', '');\n\n  const [initialValue, setInitialValue] = useState(selectedAppId);\n\n  useEffect(() => {\n    if (initialValue !== selectedAppId) {\n      formOptions.batch(() => {\n        formOptions.change('authentication', undefined);\n        formOptions.change('selectedAuthentication', undefined);\n      });\n      setInitialValue(undefined);\n    }\n  }, [selectedAppId]);\n\n  return null;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { useSource } from '../../hooks/useSource';\n\nconst AddApplicationDescription = () => {\n  const intl = useIntl();\n\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes);\n  const source = useSource();\n\n  const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n  const apps = source.applications.filter((app) => !app.isDeleting);\n\n  const appIds = source.applications\n    .filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n  const applicationsPart =\n    apps.filter(({ id }) => !appIds.includes(id)).length > 0 ? (\n      <React.Fragment>\n        <Text component={TextVariants.h4} id=\"add-application-header\">\n          {intl.formatMessage({\n            id: 'sources.apps',\n            defaultMessage: 'Applications',\n          })}\n        </Text>\n        <Text component={TextVariants.p} id=\"add-application-description\">\n          {intl.formatMessage({\n            id: 'sources.addAppMultipleAppDesc',\n            defaultMessage: 'Select a radio button to add an application. Click trash icon to remove an application.',\n          })}\n        </Text>\n      </React.Fragment>\n    ) : (\n      <React.Fragment>\n        <Text component={TextVariants.h4} id=\"add-application-header\">\n          {intl.formatMessage({\n            id: 'sources.addApp',\n            defaultMessage: 'Add an application',\n          })}\n        </Text>\n        <Text component={TextVariants.p} id=\"add-application-description\">\n          {intl.formatMessage({\n            id: 'sources.addAppNoAppsDesc',\n            defaultMessage:\n              'There are currently no applications connected to this source. Select from available applications below.',\n          })}\n        </Text>\n      </React.Fragment>\n    );\n\n  return (\n    <React.Fragment>\n      <TextContent>\n        <Text component={TextVariants.h4}>\n          {intl.formatMessage({\n            id: 'sources.type',\n            defaultMessage: 'Source type',\n          })}\n        </Text>\n        <Text component={TextVariants.p} id=\"add-application-desc-type\">\n          {sourceType\n            ? sourceType.product_name\n            : intl.formatMessage({\n                id: 'sources.typeNotFound',\n                defaultMessage: 'Type not found',\n              })}\n        </Text>\n        {applicationsPart}\n      </TextContent>\n    </React.Fragment>\n  );\n};\n\nexport default AddApplicationDescription;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nconst authenticationSelectionStep = (sourceType, appType, intl, authenticationValues) => {\n  const nextStep = ({ values: { application, authtype } }) => {\n    if (authtype) {\n      const hasSupportedAuthType = authenticationValues.find((auth) => auth.authtype === authtype);\n\n      if (hasSupportedAuthType) {\n        return 'selectAuthentication';\n      }\n\n      return `${sourceType.name}-${application && application.application_type_id}-${authtype}`;\n    }\n  };\n\n  return {\n    name: `selectAuthType-${appType.id}`,\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication type',\n    }),\n    fields: [\n      {\n        component: componentTypes.RADIO,\n        name: 'authtype',\n        options: appType.supported_authentication_types[sourceType.name].map((type) => ({\n          value: type,\n          label: sourceType.schema.authentication.find((authtype) => authtype.type === type)?.name || 'Unknown type',\n        })),\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n      },\n    ],\n    nextStep,\n  };\n};\n\nexport default authenticationSelectionStep;\n","import * as schemaBuilder from '@redhat-cloud-services/frontend-components-sources/cjs/schemaBuilder';\n\nconst generateFirstAuthStep = (type, appType, endpointFields, authtype, intl) => {\n  let fields = [...endpointFields];\n\n  if (schemaBuilder.shouldUseAppAuth(type.name, authtype, appType.name)) {\n    fields = [];\n  }\n\n  const auth = type.schema.authentication.find(({ type }) => type === authtype);\n\n  const additionalStepName = `${type.name}-${authtype}-${appType.name}-additional-step`;\n\n  const skipEndpoint = schemaBuilder.shouldSkipEndpoint(type.name, authtype, appType.name);\n  const customSteps = schemaBuilder.hasCustomSteps(type.name, authtype, appType.name);\n\n  let nextStep;\n\n  if (schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name).length > 0) {\n    nextStep = additionalStepName;\n  } else if (endpointFields.length === 0 && !skipEndpoint) {\n    nextStep = `${type.name}-endpoint`;\n  } else {\n    nextStep = 'summary';\n  }\n\n  const additionalIncludesStepKeys = schemaBuilder.getAdditionalStepKeys(type.name, authtype, appType.name);\n  const hasCustomStep = schemaBuilder.shouldSkipSelection(type.name, authtype, appType.name);\n\n  let stepProps = {};\n\n  if (hasCustomStep) {\n    const firstAdditonalStep = schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name).find(({ name }) => !name);\n    const additionalFields = schemaBuilder.getAdditionalStepFields(auth.fields, additionalStepName);\n\n    if (firstAdditonalStep.nextStep) {\n      nextStep = firstAdditonalStep.nextStep;\n    } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n      nextStep = `${type.name}-endpoint`;\n    } else {\n      nextStep = 'summary';\n    }\n\n    stepProps = {\n      ...firstAdditonalStep,\n      fields: [\n        ...fields,\n        ...schemaBuilder.injectAuthFieldsInfo(\n          [...firstAdditonalStep.fields, ...additionalFields],\n          type.name,\n          authtype,\n          appType.name\n        ),\n      ],\n    };\n  }\n\n  return {\n    name: `${type.name}-${appType.id}-${authtype}`,\n    title: intl.formatMessage({\n      id: 'sources.configureCredentials',\n      defaultMessage: 'Configure credentials',\n    }),\n    fields: [\n      ...fields,\n      ...schemaBuilder.getAdditionalAuthFields(type.name, authtype, appType.name),\n      ...schemaBuilder.injectAuthFieldsInfo(\n        schemaBuilder.getNoStepsFields(auth.fields, additionalIncludesStepKeys),\n        type.name,\n        authtype,\n        appType.name\n      ),\n    ],\n    nextStep,\n    ...stepProps,\n  };\n};\n\nexport default generateFirstAuthStep;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const innerSetter = ({ formOptions, authenticationValues, selectedAuthentication }) => {\n  if (!selectedAuthentication.startsWith('new-')) {\n    const authentication = authenticationValues.find(({ id }) => id === selectedAuthentication);\n\n    formOptions.change('authentication', authentication);\n  } else {\n    const authtype = selectedAuthentication.replace('new-', '');\n\n    formOptions.change('authentication', { authtype });\n  }\n};\n\nexport const AuthTypeSetter = ({ authenticationValues }) => {\n  const formOptions = useFormApi();\n\n  const selectedAuthentication = formOptions.getState().values.selectedAuthentication;\n\n  const [initialValue, setInitialValue] = useState(selectedAuthentication);\n\n  useEffect(() => {\n    if (initialValue !== selectedAuthentication) {\n      innerSetter({\n        formOptions,\n        authenticationValues,\n        selectedAuthentication,\n      });\n      setInitialValue(undefined);\n    }\n  }, [selectedAuthentication]);\n\n  return null;\n};\n\nAuthTypeSetter.propTypes = {\n  authenticationValues: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { useIntl } from 'react-intl';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { AuthTypeSetter } from '../AuthTypeSetter';\n\nexport const SelectAuthenticationDescription = ({ applicationTypeName, authenticationTypeName }) => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'sources.selectAuthenticationDescription',\n            defaultMessage:\n              'Selected application { applicationTypeName } supports { authenticationTypeName } authentication type. You can use already defined authentication values or define new.',\n          },\n          { applicationTypeName, authenticationTypeName }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nSelectAuthenticationDescription.propTypes = {\n  applicationTypeName: PropTypes.string,\n  authenticationTypeName: PropTypes.string,\n};\n\nexport const generateAuthSelectionOptions = ({\n  source,\n  authenticationValues,\n  applicationTypes,\n  supportedAuthTypeName,\n  supportedAuthType,\n}) =>\n  authenticationValues\n    .filter(({ authtype }) => authtype === supportedAuthType)\n    .map((values) => {\n      const app = source.applications.find(({ authentications }) => authentications.find(({ id }) => id === values.id));\n\n      const appType = app && app.application_type_id ? applicationTypes.find(({ id }) => id === app.application_type_id) : '';\n\n      const includeUsername = values.username ? `-${values.username}` : '';\n      const includeAppName = appType ? `-${appType.display_name}` : `-unused-${values.id}`;\n      const label = `${supportedAuthTypeName}${includeUsername}${includeAppName}`;\n\n      return {\n        label,\n        value: values.id,\n      };\n    });\n\nconst selectAuthenticationStep = ({ intl, source, authenticationValues, sourceType, applicationTypes }) => {\n  const nextStep = ({ values: { application, authtype, authentication } }) => {\n    const app = application ? application : {};\n    const appId = app.application_type_id ? app.application_type_id : '';\n\n    return `${sourceType.name}-${appId}-${authtype || authentication?.authtype}`;\n  };\n\n  const fields = [\n    {\n      component: 'description',\n      name: 'authtypesetter',\n      Content: AuthTypeSetter,\n      authenticationValues,\n      hideField: true,\n    },\n  ];\n\n  applicationTypes.forEach((app) => {\n    const ifAppSupported = app.supported_source_types.includes(sourceType.name);\n    const isAppAvailable = !source.applications?.find(({ application_type_id }) => application_type_id === app.id);\n\n    if (ifAppSupported && isAppAvailable) {\n      const supportedAuthTypes = get(app, `supported_authentication_types[${sourceType.name}]`, []);\n\n      supportedAuthTypes.forEach((supportedAuthType) => {\n        const hasAvailableAuthentications = authenticationValues.find(({ authtype }) => authtype === supportedAuthType);\n\n        if (hasAvailableAuthentications) {\n          const supportedAuthTypeName = get(sourceType, `schema.authentication`, {}).find(\n            ({ type }) => type === supportedAuthType\n          ).name;\n\n          fields.push({\n            component: componentTypes.SUB_FORM,\n            name: `${app.name}-subform`,\n            condition: {\n              and: [\n                {\n                  when: 'application.application_type_id',\n                  is: app.id,\n                },\n                ...(supportedAuthTypes.length > 1\n                  ? [\n                      {\n                        when: 'authtype',\n                        is: supportedAuthType,\n                      },\n                    ]\n                  : []),\n              ],\n            },\n            fields: [\n              {\n                name: `${app.name}-select-authentication-summary`,\n                component: 'description',\n                Content: SelectAuthenticationDescription,\n                applicationTypeName: app.display_name,\n                authenticationTypeName: supportedAuthTypeName,\n              },\n              {\n                component: componentTypes.RADIO,\n                name: 'selectedAuthentication',\n                label: intl.formatMessage({\n                  id: 'sources.selectAuthenticationTitle',\n                  defaultMessage: 'Select authentication',\n                }),\n                isRequired: true,\n                validate: [{ type: validatorTypes.REQUIRED }],\n                options: [\n                  {\n                    label: intl.formatMessage(\n                      {\n                        id: 'sources.selectAuthenticationradioLabel',\n                        defaultMessage: 'Define new { supportedAuthTypeName }',\n                      },\n                      { supportedAuthTypeName }\n                    ),\n                    value: `new-${supportedAuthType}`,\n                  },\n                  ...generateAuthSelectionOptions({\n                    authenticationValues,\n                    source,\n                    applicationTypes,\n                    supportedAuthTypeName,\n                    supportedAuthType,\n                  }),\n                ],\n              },\n            ],\n          });\n        }\n      });\n    }\n  });\n\n  return {\n    name: 'selectAuthentication',\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication',\n    }),\n    fields,\n    nextStep,\n  };\n};\n\nexport default selectAuthenticationStep;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { useIntl } from 'react-intl';\nimport * as schemaBuilder from '@redhat-cloud-services/frontend-components-sources/cjs/schemaBuilder';\nimport get from 'lodash/get';\n\nimport { AuthTypeCleaner } from './AuthTypeCleaner';\nimport AddApplicationDescription from './AddApplicationDescription';\nimport authenticationSelectionStep from './schema/authenticationSelectionStep';\nimport generateFirstAuthStep from './schema/generateFirstAuthStep';\nimport selectAuthenticationStep from './schema/selectAuthenticationStep';\n\nexport const ApplicationSummary = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'sources.reviewAddAppSummary',\n          defaultMessage:\n            'Review the information below and click Add to add the application to your source. Use the Back button to make changes.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n  authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nexport const hasMultipleAuthenticationTypes = (app, sourceType) =>\n  app.supported_source_types.includes(sourceType.name) && app.supported_authentication_types[sourceType.name]?.length > 1;\n\nconst fields = (applications = [], intl, sourceTypes, applicationTypes, authenticationValues, source, container) => {\n  const hasAvailableApps = applications.length > 0;\n\n  let nextStep = hasAvailableApps ? 'summary' : undefined;\n  let authenticationFields = [];\n  const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id);\n\n  if (!source.imported && hasAvailableApps) {\n    const appendEndpoint = sourceType.schema.endpoint.hidden ? sourceType.schema.endpoint.fields : [];\n    const hasEndpointStep = appendEndpoint.length === 0;\n\n    applicationTypes.forEach((appType) => {\n      if (appType.supported_source_types.includes(sourceType.name)) {\n        appType.supported_authentication_types[sourceType.name].forEach((authtype) => {\n          authenticationFields.push(generateFirstAuthStep(sourceType, appType, appendEndpoint, authtype, intl));\n        });\n      }\n    });\n\n    sourceType.schema.authentication.forEach((auth) => {\n      applicationTypes.forEach((appType) => {\n        if (appType.supported_source_types.includes(sourceType.name)) {\n          const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name);\n\n          if (appAdditionalSteps.length > 0) {\n            authenticationFields.push(\n              ...schemaBuilder.createAdditionalSteps(\n                appAdditionalSteps,\n                sourceType.name,\n                auth.type,\n                hasEndpointStep,\n                auth.fields,\n                appType.name\n              )\n            );\n          }\n        }\n      });\n    });\n\n    if (hasEndpointStep) {\n      authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n    }\n\n    nextStep = ({ values: { application } }) => {\n      if (application) {\n        const appType = applicationTypes.find(({ id }) => id === application.application_type_id);\n\n        const hasMultipleAuthTypes = appType?.supported_authentication_types[sourceType.name]?.length > 1;\n\n        if (hasMultipleAuthTypes) {\n          return `selectAuthType-${application.application_type_id}`;\n        }\n\n        if (\n          hasAlreadySupportedAuthType(\n            authenticationValues,\n            applicationTypes.find(({ id }) => id === application.application_type_id),\n            sourceType.name\n          )\n        ) {\n          return 'selectAuthentication';\n        }\n\n        const authType = appType?.supported_authentication_types[sourceType.name][0];\n\n        return `${sourceType.name}-${application && application.application_type_id}-${authType}`;\n      }\n    };\n  }\n\n  const applicationSelection = {\n    component: 'application-select',\n    name: 'application.application_type_id',\n    options: applications,\n    container,\n    validate: [\n      {\n        type: validatorTypes.REQUIRED,\n      },\n    ],\n  };\n\n  const selectionSteps = applicationTypes\n    .filter((app) => hasMultipleAuthenticationTypes(app, sourceType))\n    .map((app) => authenticationSelectionStep(sourceType, app, intl, authenticationValues));\n\n  if (!source.imported && hasAvailableApps) {\n    selectionSteps.push(\n      selectAuthenticationStep({\n        intl,\n        source,\n        authenticationValues,\n        sourceType,\n        applicationTypes,\n      })\n    );\n  }\n\n  return {\n    fields: [\n      {\n        component: componentTypes.WIZARD,\n        name: 'wizard',\n        title: intl.formatMessage({\n          id: 'sources.manageApps',\n          defaultMessage: 'Manage applications',\n        }),\n        inModal: true,\n        container,\n        showTitles: true,\n        crossroads: ['application.application_type_id', 'selectedAuthentication', 'authtype'],\n        description: intl.formatMessage(\n          {\n            id: 'sources.addAppDescription',\n            defaultMessage: 'Add or remove applications from {name}.',\n          },\n          { name: source.name }\n        ),\n        buttonLabels: {\n          submit: intl.formatMessage({\n            id: 'sources.add',\n            defaultMessage: 'Add',\n          }),\n          cancel: intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          }),\n          back: intl.formatMessage({\n            id: 'sources.back',\n            defaultMessage: 'Back',\n          }),\n        },\n        fields: [\n          {\n            nextStep,\n            title: intl.formatMessage({\n              id: 'sources.selectApp',\n              defaultMessage: 'Add / remove applications',\n            }),\n            name: 'selectAppStep',\n            fields: [\n              {\n                component: 'description',\n                name: 'description',\n                Content: AddApplicationDescription,\n                container,\n              },\n              applicationSelection,\n              {\n                component: 'description',\n                name: 'authtypesetter',\n                Content: AuthTypeCleaner,\n                hideField: true,\n              },\n            ],\n          },\n          {\n            title: intl.formatMessage({\n              id: 'sources.reviewDetails',\n              defaultMessage: 'Review details',\n            }),\n            name: 'summary',\n            fields: [\n              {\n                component: 'description',\n                name: 'description-summary',\n                Content: ApplicationSummary,\n              },\n              {\n                component: 'summary',\n                name: 'summary',\n                sourceTypes,\n                applicationTypes,\n              },\n            ],\n          },\n          ...selectionSteps,\n          ...authenticationFields,\n        ],\n      },\n    ],\n  };\n};\n\nexport default fields;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core/dist/js/components/Wizard/Wizard';\n\nconst WizardBodyAttach = ({ step, goToSources, name }) => {\n  const intl = useIntl();\n\n  return (\n    <Wizard\n      isOpen={true}\n      onClose={goToSources}\n      title={intl.formatMessage({\n        id: 'sources.manageApps',\n        defaultMessage: 'Manage applications',\n      })}\n      description={intl.formatMessage(\n        {\n          id: 'sources.addAppDescription',\n          defaultMessage: 'Add or remove applications from {name}.',\n        },\n        { name }\n      )}\n      steps={[\n        {\n          name: 'Finish',\n          component: step,\n          isFinishedStep: true,\n        },\n      ]}\n    />\n  );\n};\n\nWizardBodyAttach.propTypes = {\n  step: PropTypes.node.isRequired,\n  goToSources: PropTypes.func.isRequired,\n  name: PropTypes.string,\n};\n\nexport default WizardBodyAttach;\n","import { addedDiff, updatedDiff } from 'deep-object-diff';\nimport { patchSource } from '@redhat-cloud-services/frontend-components-sources/cjs/costManagementAuthentication';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources/cjs/handleError';\nimport { checkAppAvailability } from '@redhat-cloud-services/frontend-components-sources/cjs/getApplicationStatus';\nimport { timeoutedApps } from '@redhat-cloud-services/frontend-components-sources/cjs/constants';\n\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { getSourcesApi, doCreateApplication } from './entities';\nimport { urlOrHost } from './doUpdateSource';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    if (obj[key] && typeof obj[key] === 'object') {\n      if (isEmpty(obj[key])) {\n        delete obj[key];\n      } else {\n        removeEmpty(obj[key]);\n      }\n    } else if (typeof obj[key] === 'undefined') {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\n\nexport const doAttachApp = async (values, formApi, authenticationInitialValues, initialValues, appTypes = []) => {\n  let appId;\n\n  const formState = formApi.getState();\n\n  const allFormValues = formState.values;\n\n  const selectedAuthId = allFormValues.authentication?.id;\n\n  const authInitialValues = selectedAuthId && authenticationInitialValues.find(({ id }) => id === selectedAuthId);\n\n  const { authentication, ...valuesWithoutAuth } = values;\n\n  const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n  const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n  const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n  const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n  const filteredValues = removeEmpty({\n    ...merge(cloneDeep(newAddedValues), updatedValues),\n    authentication: {\n      ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues),\n    },\n  });\n\n  try {\n    if (!allFormValues?.source?.id) {\n      throw 'Missing source id';\n    }\n\n    const sourceId = allFormValues.source.id;\n    let endpointId = allFormValues?.endpoint?.id;\n\n    const promises = [];\n\n    if (filteredValues.source && !isEmpty(filteredValues.source)) {\n      promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n    const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n    if (hasModifiedEndpoint || hasModifiedUrl) {\n      const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n      const endPointPort = parseInt(port, 10);\n\n      const endpointData = removeEmpty({\n        ...filteredValues.endpoint,\n        scheme,\n        host,\n        port: isNaN(endPointPort) ? undefined : endPointPort,\n        path,\n      });\n\n      if (endpointId) {\n        promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n      } else {\n        const createEndpointData = {\n          ...endpointData,\n          default: true,\n          source_id: sourceId,\n        };\n\n        promises.push(getSourcesApi().createEndpoint(createEndpointData));\n      }\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    if (filteredValues.application?.application_type_id) {\n      promises.push(doCreateApplication(sourceId, filteredValues.application.application_type_id));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const [_sourceDataOut, endpointDataOut, applicationDataOut] = await Promise.all(promises);\n\n    let authenticationDataOut;\n\n    if (filteredValues.authentication && !isEmpty(filteredValues.authentication)) {\n      if (selectedAuthId) {\n        authenticationDataOut = await getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication);\n      } else {\n        const authenticationData = {\n          ...filteredValues.authentication,\n          resource_id: endpointDataOut?.id || applicationDataOut?.id,\n          resource_type: endpointDataOut?.id ? 'Endpoint' : 'Application',\n        };\n\n        authenticationDataOut = await getSourcesApi().createAuthentication(authenticationData);\n      }\n    }\n\n    appId = applicationDataOut?.id;\n\n    const authenticationId = selectedAuthId || authenticationDataOut?.id;\n\n    const promisesSecondRound = [];\n\n    if (applicationDataOut?.id && authenticationId) {\n      const authAppData = {\n        application_id: applicationDataOut.id,\n        authentication_id: authenticationId,\n      };\n\n      promisesSecondRound.push(getSourcesApi().createAuthApp(authAppData));\n    }\n\n    const isAttachingCostManagement = filteredValues.credentials || filteredValues.billing_source;\n    if (isAttachingCostManagement) {\n      const { credentials, billing_source } = filteredValues;\n      let data = {};\n      data = credentials ? { authentication: { credentials } } : {};\n      data = billing_source ? { ...data, billing_source } : data;\n      promisesSecondRound.push(patchSource({ id: sourceId, ...data }));\n    }\n\n    await Promise.all(promisesSecondRound);\n\n    if (applicationDataOut) {\n      const timeout = timeoutedApps(appTypes).includes(applicationDataOut.application_type_id) ? 10000 : 0;\n      return await checkAppAvailability(applicationDataOut.id, timeout);\n    }\n\n    return {};\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    if (appId) {\n      await getSourcesApi().deleteApplication(appId);\n    }\n\n    const errorMessage = await handleError(error);\n    throw errorMessage;\n  }\n};\n","export const initialState = {\n  state: 'loading',\n  error: '',\n  values: {},\n  authenticationsValues: [],\n  sourceAppsLength: 0,\n  initialValues: {},\n  isCancelling: false,\n};\n\nconst reducer = (state, { type, length, authenticationsValues, initialValues, error, values, data, formApi }) => {\n  switch (type) {\n    case 'setSourceAppslength':\n      return {\n        ...state,\n        sourceAppsLength: length,\n      };\n    case 'loadAuthentications':\n      return {\n        ...state,\n        authenticationsValues,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'loadWithoutAuthentications':\n      return {\n        ...state,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'reset':\n      return {\n        ...state,\n        state: 'wizard',\n      };\n    case 'submit':\n      return {\n        ...state,\n        values,\n        formApi,\n        state: 'submitting',\n      };\n    case 'finish':\n      return {\n        ...state,\n        state: 'finished',\n        data,\n      };\n    case 'error':\n      return {\n        ...state,\n        state: 'errored',\n        error,\n      };\n    case 'toggleCancelling':\n      return {\n        ...state,\n        isCancelling: !state.isCancelling,\n        ...(values && { values }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useReducer, useEffect, useRef } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport filterApps from '@redhat-cloud-services/frontend-components-sources/cjs/filterApps';\nimport CloseModal from '@redhat-cloud-services/frontend-components-sources/cjs/CloseModal';\nimport LoadingStep from '@redhat-cloud-services/frontend-components-sources/cjs/LoadingStep';\nimport ErroredStep from '@redhat-cloud-services/frontend-components-sources/cjs/ErroredStep';\nimport FinishedStep from '@redhat-cloud-services/frontend-components-sources/cjs/FinishedStep';\nimport TimeoutStep from '@redhat-cloud-services/frontend-components-sources/cjs/TimeoutStep';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../SourcesTable/formatters';\nimport { routes, replaceRouteId } from '../../Routes';\n\nimport { doAttachApp } from '../../api/doAttachApp';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nimport reducer, { initialState } from './reducer';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text';\n\nimport removeAppSubmit from './removeAppSubmit';\n\nlet selectedApp = undefined; // this has to be not-state value, because it shouldn't re-render the component when changes\nconst saveSelectedApp = ({ values: { application } }) => (selectedApp = application);\n\nexport const onSubmit = (values, formApi, authenticationInitialValues, dispatch, setState, initialValues, appTypes) => {\n  setState({ type: 'submit', values, formApi });\n\n  return doAttachApp(values, formApi, authenticationInitialValues, initialValues, appTypes)\n    .then(async (data) => {\n      checkSourceStatus(initialValues.source.id);\n      await dispatch(loadEntities());\n      selectedApp = undefined;\n      return setState({ type: 'finish', data });\n    })\n    .catch((error) =>\n      setState({\n        type: 'error',\n        error,\n      })\n    );\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst AddApplication = () => {\n  const intl = useIntl();\n  const history = useHistory();\n\n  const loaded = useIsLoaded();\n\n  const { appTypes, sourceTypesLoaded, appTypesLoaded, sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const [state, setState] = useReducer(reducer, initialState);\n\n  const container = useRef(document.createElement('div'));\n\n  const removeApp = () => {\n    setState({ type: 'reset' });\n\n    return removeAppSubmit(\n      {\n        id: state.data?.id,\n        display_name: appTypes.find(({ id }) => id === state.data?.application_type_id)?.display_name,\n      },\n      intl,\n      undefined,\n      dispatch,\n      source\n    );\n  };\n\n  useEffect(() => {\n    selectedApp = undefined;\n  }, []);\n\n  useEffect(() => {\n    if (source) {\n      // When app is only removed, there is no need to reload values\n      const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n      setState({\n        type: 'setSourceAppslength',\n        length: source.applications.length,\n      });\n\n      if (!removeAppAction) {\n        if (source.endpoints && source.endpoints[0]) {\n          getSourcesApi()\n            .listEndpointAuthentications(source.endpoints[0].id)\n            .then(({ data }) =>\n              setState({\n                type: 'loadAuthentications',\n                authenticationsValues: data,\n                initialValues: {\n                  source,\n                  endpoint: source.endpoints[0],\n                  url: endpointToUrl(source.endpoints[0]),\n                  application: selectedApp,\n                },\n                values: {},\n              })\n            );\n        } else {\n          setState({\n            type: 'loadWithoutAuthentications',\n            initialValues: { source, application: selectedApp },\n            values: {},\n          });\n        }\n      }\n    }\n  }, [source]);\n\n  const goToSources = () => history.push(routes.sources.path);\n\n  if ((!appTypesLoaded || !sourceTypesLoaded || !loaded || state.state === 'loading') && state.state !== 'submitting') {\n    return (\n      <WizardBody\n        goToSources={goToSources}\n        step={\n          <LoadingStep\n            customText={intl.formatMessage({\n              id: 'sources.loading',\n              defaultMessage: 'Loading, please wait.',\n            })}\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n          />\n        }\n      />\n    );\n  }\n\n  const onSubmitWrapper = (values, formApi) =>\n    onSubmit(values, formApi, state.authenticationsValues, dispatch, setState, state.initialValues, appTypes);\n\n  if (state.state === 'submitting') {\n    return (\n      <WizardBody\n        name={source.name}\n        goToSources={goToSources}\n        step={\n          <LoadingStep\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n            customText={intl.formatMessage({\n              id: 'wizard.loadingText defaultMessage=Validating source credentials',\n              defaultMessage: 'Validating source credentials',\n            })}\n          />\n        }\n      />\n    );\n  }\n\n  const onReset = () => setState({ type: 'reset' });\n\n  if (state.state !== 'wizard') {\n    let shownStep;\n\n    if (state.state !== 'finished') {\n      shownStep = (\n        <ErroredStep\n          onRetry={onReset}\n          onClose={goToSources}\n          returnButtonTitle={intl.formatMessage({\n            id: 'sources.retry',\n            defaultMessage: 'Retry',\n          })}\n          primaryAction={() => onSubmitWrapper(state.values, state.formApi)}\n          secondaryActions={\n            <Text\n              component=\"a\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage({\n                id: 'wizard.openTicket',\n                defaultMessage: 'Open a support case',\n              })}\n            </Text>\n          }\n        />\n      );\n    } else {\n      switch (state.data.availability_status) {\n        case 'available':\n          shownStep = (\n            <FinishedStep\n              title={intl.formatMessage({\n                id: 'sources.configurationSuccessful',\n                defaultMessage: 'Configuration successful',\n              })}\n              hideSourcesButton={true}\n              onReset={onReset}\n              onClose={goToSources}\n              secondaryActions={\n                <Button variant=\"link\" onClick={onReset}>\n                  {intl.formatMessage({\n                    id: 'sources.continueManageApp',\n                    defaultMessage: 'Continue managing applications',\n                  })}\n                </Button>\n              }\n              returnButtonTitle={intl.formatMessage({\n                id: 'sources.backToSources',\n                defaultMessage: 'Back to Sources',\n              })}\n              successfulMessage={intl.formatMessage({\n                id: 'sources.successAddApp',\n                defaultMessage: 'Your application was successfully added.',\n              })}\n            />\n          );\n          break;\n        case 'unavailable':\n          shownStep = (\n            <ErroredStep\n              onRetry={onReset}\n              onClose={goToSources}\n              message={\n                state.data.availability_status_error ||\n                intl.formatMessage({\n                  id: 'wizard.unknownError',\n                  defaultMessage: 'Unknown error',\n                })\n              }\n              title={intl.formatMessage({\n                id: 'sources.configurationSuccessful',\n                defaultMessage: 'Configuration unsuccessful',\n              })}\n              secondaryActions={\n                <Button variant=\"link\" onClick={removeApp}>\n                  {intl.formatMessage({\n                    id: 'wizard.removeApp',\n                    defaultMessage: 'Remove application',\n                  })}\n                </Button>\n              }\n              Component={() => (\n                <Link to={replaceRouteId(routes.sourcesEdit.path, source.id)}>\n                  <Button variant=\"primary\" className=\"pf-u-mt-xl\">\n                    {intl.formatMessage({\n                      id: 'wizard.editSource',\n                      defaultMessage: 'Edit source',\n                    })}\n                  </Button>\n                </Link>\n              )}\n            />\n          );\n          break;\n        default:\n          shownStep = (\n            <TimeoutStep\n              returnButtonTitle={intl.formatMessage({\n                id: 'sources.backToSources',\n                defaultMessage: 'Back to Sources',\n              })}\n              onClose={goToSources}\n              secondaryActions={\n                <Button variant=\"link\" onClick={onReset}>\n                  {intl.formatMessage({\n                    id: 'sources.continueManageApp',\n                    defaultMessage: 'Continue managing applications',\n                  })}\n                </Button>\n              }\n            />\n          );\n      }\n    }\n\n    return <WizardBody name={source.name} goToSources={goToSources} step={shownStep} />;\n  }\n\n  const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n  const sourceTypeName = sourceType && sourceType.name;\n  const filteredAppTypes = appTypes\n    .filter((type) => type.supported_source_types.includes(sourceTypeName))\n    .filter(filterApps)\n    .map((type) => ({\n      value: type.id,\n      label: type.display_name,\n    }));\n\n  const schema = createSchema(\n    filteredAppTypes,\n    intl,\n    sourceTypes,\n    appTypes,\n    state.authenticationsValues,\n    source,\n    container.current\n  );\n\n  const hasAvailableApps = filteredAppTypes.length > 0;\n  const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n  const onStay = () => {\n    container.current.hidden = false;\n    setState({ type: 'toggleCancelling' });\n  };\n\n  const cancelBeforeExit = (values) => {\n    if (values?.application) {\n      container.current.hidden = true;\n      setState({ type: 'toggleCancelling', values });\n    } else {\n      goToSources();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CloseModal\n        title={intl.formatMessage({\n          id: 'sources.manageAppsCloseModalTitle',\n          defaultMessage: 'Exit application adding?',\n        })}\n        isOpen={state.isCancelling}\n        onStay={onStay}\n        onExit={goToSources}\n      />\n      <SourcesFormRenderer\n        schema={schema}\n        showFormControls={false}\n        onSubmit={onSubmitFinal}\n        onCancel={cancelBeforeExit}\n        initialValues={state.initialValues}\n        subscription={{ values: true }}\n        debug={saveSelectedApp}\n        clearedValue={null}\n        FormTemplate={FormTemplateWrapper}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddApplication;\n"],"sourceRoot":""}