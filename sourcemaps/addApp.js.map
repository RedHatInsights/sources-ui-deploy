{"version":3,"sources":["webpack:///./src/components/EditField/EditField.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/ApplicationsList/ApplicationList.js","webpack:///./src/components/AddApplication/AddApplicationDescription.js","webpack:///./src/components/AddApplication/AuthTypeSetter.js","webpack:///./src/components/AddApplication/AuthTypeCleaner.js","webpack:///./src/components/AddApplication/AddApplicationSchema.js","webpack:///./src/components/AddApplication/steps/LoadingStep.js","webpack:///./src/components/AddApplication/steps/ErroredStep.js","webpack:///./src/components/AddApplication/steps/FinishedStep.js","webpack:///./src/components/AddApplication/WizardBody.js","webpack:///./src/components/AddApplication/steps/createProgressTextsApp.js","webpack:///./src/api/doAttachApp.js","webpack:///./src/components/AddApplication/reducer.js","webpack:///./src/components/AddApplication/AddApplication.js"],"names":["EDIT_FIELD_NAME","EditField","props","useFieldApi","isRequired","label","helperText","hideLabel","meta","input","type","setEdit","error","showError","touched","value","emptyText","name","includes","fieldId","isValid","helperTextInvalid","onClick","undefined","tabIndex","onKeyPress","e","charCode","preventDefault","className","propTypes","PropTypes","node","bool","func","string","SourcesFormRenderer","FormTemplate","componentMapper","mapperExtension","componentTypes","SWITCH","validatorMapper","validatorTypes","REQUIRED","PATTERN","MIN_LENGTH","URL","RemoveAppModal","app","onCancel","intl","useIntl","appTypes","useSelector","sources","source","useSource","dispatch","useDispatch","dependentApps","dependent_applications","map","appName","appType","find","sourceAppsNames","display_name","filter","x","Modal","isOpen","onClose","isFooterLeftAligned","isSmall","title","formatMessage","id","defaultMessage","header","Title","size","actions","Button","key","variant","titleSuccess","titleError","removeApplication","TextContent","Text","component","TextVariants","p","values","length","apps","shape","arrayOf","ApplicationList","setApplicationToRemove","breakpoints","namePrefix","applications","application_type_id","isDeleting","sort","a","b","localeCompare","GridItem","md","style","marginBottom","remove","ButtonVariant","link","isInline","number","defaultProps","AddApplicationDescription","useState","removingApp","sourceTypes","sourceType","source_type_id","Fragment","Grid","gutter","h4","product_name","AuthTypeSetter","authenticationValues","modifiedValues","formOptions","useFormApi","selectedAuthentication","getState","initialValue","setInitialValue","useEffect","authentication","newAuthenticationValues","merge","cloneDeep","change","innerSetter","object","AuthTypeCleaner","selectedAppId","get","batch","NoAvailableApplicationDescription","ApplicationSummary","SelectAuthenticationDescription","applicationTypeName","authenticationTypeName","hasAlreadySupportedAuthType","authValues","sourceTypeName","authtype","generateAuthSelectionOptions","applicationTypes","supportedAuthTypeName","supportedAuthType","authentications","includeUsername","username","includeAppName","selectAuthenticationStep","fields","Content","hideField","forEach","push","SUB_FORM","condition","when","is","RADIO","validate","options","nextStep","application","appId","container","hasAvailableApps","authenticationFields","imported","appendEndpoint","schema","endpoint","hidden","hasEndpointStep","supported_source_types","schemaBuilder","createSpecificAuthTypeSelection","auth","appAdditionalSteps","getAdditionalSteps","createAdditionalSteps","createEndpointStep","applicationSelection","DefaultIcon","selectionSteps","WIZARD","inModal","predictSteps","showTitles","crossroads","description","buttonLabels","submit","cancel","back","LoadingStep","customText","progressStep","progressTexts","Bullseye","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","Spinner","color","EmptyStateBody","Progress","min","max","valueText","EmptyStateSecondaryActions","ErroredStepAttach","onReset","goToSources","TimesCircleIcon","headingLevel","h6","FinishedStepAttach","CheckCircleIcon","WizardBodyAttach","step","Wizard","steps","isFinishedStep","createProgressTextsApp","filteredValues","allFormValues","progressText","isEmpty","removeEmpty","obj","Object","keys","doAttachApp","formApi","authenticationInitialValues","initialValues","setState","formState","selectedAuthId","authInitialValues","valuesWithoutAuth","newAddedValues","addedDiff","updatedValues","updatedDiff","newAddedAuthValues","updatedAuthValues","sourceId","endpointId","promises","getSourcesApi","updateSource","Promise","resolve","hasModifiedEndpoint","hasModifiedUrl","url","urlOrHost","scheme","host","port","path","endPointPort","parseInt","endpointData","isNaN","updateEndpoint","createEndpointData","default","source_id","createEndpoint","updateAuthentication","authenticationData","resource_id","resource_type","createAuthentication","doCreateApplication","all","authenticationDataOut","applicationDataOut","authenticationId","promisesSecondRound","authAppData","application_id","authentication_id","createAuthApp","credentials","billing_source","data","patchSource","handleError","initialState","state","authenticationsValues","sourceAppsLength","isCancelling","reducer","selectedApp","saveSelectedApp","onSubmit","then","checkSourceStatus","loadEntities","FormTemplateWrapper","showFormControls","AddApplication","history","useHistory","loaded","useIsLoaded","shallowEqual","sourceTypesLoaded","appTypesLoaded","useReducer","useRef","document","createElement","removeAppAction","endpoints","listEndpointAuthentications","endpointToUrl","routes","WizardBody","shownStep","FinishedStep","ErroredStep","appIds","reduce","acc","filteredAppTypes","filterApps","availableAppTypes","hasDeletingApp","isDisabled","createSchema","current","onSubmitFinal","finalValues","onStay","onExit","subscription","debug","clearedValue"],"mappings":"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","file":"js/addApp.c8f64c6a38f7fcc0f4b5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PencilAltIcon from '@patternfly/react-icons/dist/js/icons/pencil-alt-icon';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nexport const EDIT_FIELD_NAME = 'edit-field';\n\nconst EditField = (props) => {\n    const { isRequired, label, helperText, hideLabel, meta, input, type, setEdit } = useFieldApi(props);\n\n    const { error, touched } = meta;\n    const showError = touched && error;\n\n    let value = input.value;\n\n    if (typeof value === 'boolean') {\n        value = value ? 'True' : 'False';\n    }\n\n    const isPassword = type === 'password' || input.name.includes('password');\n    const emptyText = isPassword ? 'Click to edit' : 'Click to add';\n\n    return (\n        <FormGroup\n            isRequired={ isRequired }\n            label={ !hideLabel && label }\n            fieldId={ input.name }\n            isValid={ !showError }\n            helperText={ helperText }\n            helperTextInvalid={ error }\n            onClick={setEdit ? () => setEdit(input.name) : undefined}\n            tabIndex={0}\n            onKeyPress={(e) => {\n                if (e.charCode === 32 && setEdit) {\n                    e.preventDefault();\n                    setEdit(input.name);\n                }\n            }}\n        >\n            <div className={`pf-c-form__horizontal-group ins-c-sources__edit-field-group ${setEdit ? 'clickable' : ''}`}>\n                <TextContent className={`ins-c-sources__edit-field-group-text-content ${setEdit ? 'clickable' : ''}`}>\n                    <span className=\"ins-c-sources__edit-field-value pf-u-mr-sm\">\n                        {value ? value : setEdit ? emptyText : ''}\n                    </span>\n                    {setEdit && <PencilAltIcon />}\n                </TextContent>\n            </div>\n        </FormGroup>\n    );\n};\n\nEditField.propTypes = {\n    label: PropTypes.node,\n    isRequired: PropTypes.bool,\n    helperText: PropTypes.node,\n    hideLabel: PropTypes.bool,\n    setEdit: PropTypes.func,\n    type: PropTypes.string\n};\n\nexport default EditField;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources';\n\nimport EditField from '../components/EditField/EditField';\n\nconst SourcesFormRenderer = props => (\n    <FormRenderer\n        FormTemplate={FormTemplate}\n        componentMapper={{\n            ...componentMapper,\n            ...mapperExtension,\n            'edit-field': EditField,\n            'switch-field': componentMapper[componentTypes.SWITCH]\n        }}\n        validatorMapper={{\n            'required-validator': validatorMapper[validatorTypes.REQUIRED],\n            'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n            'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n            'url-validator': validatorMapper[validatorTypes.URL]\n        }}\n        {...props}\n    />\n);\n\nexport default SourcesFormRenderer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl, FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { removeApplication } from '../../redux/sources/actions';\nimport { useSource } from '../../hooks/useSource';\n\nconst RemoveAppModal = ({ app, onCancel }) => {\n    const intl = useIntl();\n\n    const appTypes = useSelector(({ sources }) => sources.appTypes);\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    const dependentApps = app.dependent_applications.map(appName => {\n        const appType = appTypes.find(({ name }) => name === appName);\n\n        return appType ? app.sourceAppsNames.includes(appType.display_name) ? appType.display_name : undefined : undefined;\n    }).filter(x => x);\n\n    const onSubmit = () => {\n        const titleSuccess = intl.formatMessage({\n            id: 'sources.removeAppWarning',\n            defaultMessage: `{ name } was removed from this source.`\n        },\n        {\n            name: app.display_name\n        });\n        const titleError = intl.formatMessage({\n            id: 'sources.removeAppError',\n            defaultMessage: `Removing of { name } application from this source was unsuccessful.`\n        }, {\n            name: app.display_name\n        });\n        onCancel();\n        return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n    };\n\n    return (\n        <Modal\n            className=\"ins-c-sources__dialog--warning\"\n            isOpen={true}\n            onClose={onCancel}\n            isFooterLeftAligned\n            isSmall\n            title={\n                intl.formatMessage({\n                    id: 'sources.deleteAppTitle',\n                    defaultMessage: 'Remove application?',\n                })\n            }\n            header={\n                <Title size=\"2xl\">\n                    <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n                    {intl.formatMessage({\n                        id: 'sources.deleteAppTitle',\n                        defaultMessage: 'Remove application?',\n                    })}\n                </Title>\n            }\n            actions={[\n                <Button\n                    id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={ onSubmit }\n                >\n                    <FormattedMessage\n                        id=\"sources.remove\"\n                        defaultMessage=\"Remove application\"\n                    />\n                </Button>,\n                <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={ onCancel }>\n                    <FormattedMessage\n                        id=\"sources.cancel\"\n                        defaultMessage=\"Cancel\"\n                    />\n                </Button>\n            ]}\n        >\n            <TextContent>\n                <Text component={TextVariants.p}>\n                    <FormattedMessage\n                        id=\"sources.deleteAppWarning\"\n                        defaultMessage={`Are you sure to remove { appName } from this source?`}\n                        values={{\n                            appName: <b>{app.display_name}</b>\n                        }}\n                    />\n                </Text>\n                {dependentApps.length > 0 && <Text component={TextVariants.p}>\n                    <FormattedMessage\n                        id=\"sources.deleteAppDetails\"\n                        defaultMessage={`This change will affect these applications: { apps }.`}\n                        values={{\n                            apps: dependentApps\n                        }}\n                    />\n                </Text>}\n            </TextContent>\n        </Modal>\n    );\n};\n\nRemoveAppModal.propTypes = {\n    app: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        display_name: PropTypes.string.isRequired,\n        dependent_applications: PropTypes.arrayOf(PropTypes.string),\n        sourceAppsNames: PropTypes.arrayOf(PropTypes.string)\n    }).isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default RemoveAppModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button, ButtonVariant } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\n\nimport { useSource } from '../../hooks/useSource';\n\nconst ApplicationList = ({ setApplicationToRemove, breakpoints, namePrefix }) => {\n    const appTypes = useSelector(({ sources }) => sources.appTypes);\n    const source = useSource();\n\n    const sourceAppsNames = source.applications\n    .map(({ application_type_id }) => {\n        const appType = appTypes.find(({ id }) => id === application_type_id);\n        return appType ? appType.display_name : undefined;\n    });\n\n    return source.applications\n    .filter((app) => !app.isDeleting)\n    .map((app) => {\n        const type = appTypes.find((appType) => appType.id === app.application_type_id);\n\n        if (type) {\n            return {\n                display_name: type.display_name,\n                id: app.id,\n                dependent_applications: type.dependent_applications\n            };\n        }\n    })\n    .sort((a, b) => a.display_name.localeCompare(b.display_name))\n    .map(({ display_name, id, dependent_applications }) => (\n        <TextContent key={id}>\n            <Grid>\n                <GridItem md={breakpoints.display_name || 4}>\n                    <Text component={TextVariants.p} style={{ marginBottom: 0 }}>\n                        { namePrefix }{ display_name }\n                    </Text>\n                </GridItem>\n                <GridItem md={breakpoints.remove || 8} className=\"ins-c-sources__remove-app\">\n                    <Button\n                        variant={ButtonVariant.link}\n                        isInline\n                        onClick={() => setApplicationToRemove({ id, display_name, dependent_applications, sourceAppsNames })}\n                    >\n                        <FormattedMessage\n                            id=\"sources.remove\"\n                            defaultMessage=\"Remove\"\n                        />\n                    </Button>\n                </GridItem>\n            </Grid>\n        </TextContent>\n    ));\n};\n\nApplicationList.propTypes = {\n    setApplicationToRemove: PropTypes.func.isRequired,\n    breakpoints: PropTypes.shape({\n        display_name: PropTypes.number,\n        remove: PropTypes.number\n    }),\n    namePrefix: PropTypes.node\n};\n\nApplicationList.defaultProps = {\n    breakpoints: {}\n};\n\nexport default ApplicationList;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/index';\n\nimport RemoveAppModal from './RemoveAppModal';\nimport ApplicationList from '../ApplicationsList/ApplicationList';\nimport { useSource } from '../../hooks/useSource';\n\nconst AddApplicationDescription = () => {\n    const [removingApp, setApplicationToRemove] = useState({});\n\n    const sourceTypes = useSelector(({ sources }) => sources.sourceTypes);\n    const source = useSource();\n\n    const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n    const apps = source.applications.filter((app) => !app.isDeleting);\n\n    return (\n        <React.Fragment>\n            {removingApp.id && <RemoveAppModal\n                app={removingApp}\n                onCancel={() => setApplicationToRemove({})}\n            />}\n            <TextContent>\n                <Grid gutter=\"md\">\n                    <GridItem md={2}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.sourceName\"\n                                defaultMessage=\"Source name\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.type\"\n                                defaultMessage=\"Type\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={8}>\n                        <Text component={TextVariants.h4}>\n                            <FormattedMessage\n                                id=\"sources.apps\"\n                                defaultMessage=\"Applications\"\n                            />\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.p}>\n                            {source.name}\n                        </Text>\n                    </GridItem>\n                    <GridItem md={2}>\n                        <Text component={TextVariants.p}>\n                            { sourceType ? sourceType.product_name : <FormattedMessage\n                                id=\"sources.typeNotFound\"\n                                defaultMessage=\"Type not found\"\n                            />}\n                        </Text>\n                    </GridItem>\n                    <GridItem md={8}>\n                        {apps.length > 0 ? <ApplicationList setApplicationToRemove={setApplicationToRemove}/> : <FormattedMessage\n                            id=\"sources.noApps\"\n                            defaultMessage=\"No applications\"\n                        />}\n                    </GridItem>\n                </Grid>\n            </TextContent>\n        </React.Fragment>\n    );\n};\n\nexport default AddApplicationDescription;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const innerSetter = ({\n    formOptions,\n    modifiedValues,\n    authenticationValues,\n    selectedAuthentication\n}) => {\n    if (selectedAuthentication !== 'new') {\n        const authentication = authenticationValues.find(({ id }) => id === selectedAuthentication);\n\n        if (modifiedValues && modifiedValues.authentication) {\n            const newAuthenticationValues = merge(cloneDeep(authentication), modifiedValues.authentication);\n            formOptions.change('authentication', newAuthenticationValues);\n        } else {\n            formOptions.change('authentication', authentication);\n        }\n    } else {\n        if (modifiedValues && modifiedValues.authentication) {\n            formOptions.change('authentication', modifiedValues.authentication);\n        } else {\n            formOptions.change('authentication', undefined);\n        }\n    }\n};\n\nexport const AuthTypeSetter = ({ authenticationValues, modifiedValues }) => {\n    const formOptions = useFormApi();\n\n    const selectedAuthentication = formOptions.getState().values.selectedAuthentication;\n\n    const [initialValue, setInitialValue] = useState(selectedAuthentication);\n\n    useEffect(() => {\n        if (initialValue !== selectedAuthentication) {\n            innerSetter({ formOptions, authenticationValues, modifiedValues, selectedAuthentication });\n            setInitialValue(undefined);\n        }\n    }, [selectedAuthentication]);\n\n    return null;\n};\n\nAuthTypeSetter.propTypes = {\n    authenticationValues: PropTypes.arrayOf(PropTypes.object),\n    modifiedValues: PropTypes.object\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const AuthTypeCleaner = ({ modifiedValues }) => {\n    const formOptions = useFormApi();\n\n    const selectedAppId = get(formOptions.getState().values, 'application.application_type_id', '');\n\n    const [initialValue, setInitialValue] = useState(selectedAppId);\n\n    useEffect(() => {\n        if (initialValue !== selectedAppId) {\n            const values = modifiedValues && modifiedValues.authentication ? modifiedValues.authentication : undefined;\n            formOptions.batch(() => {\n                formOptions.change('authentication', values);\n                formOptions.change('selectedAuthentication', undefined);\n            });\n            setInitialValue(undefined);\n        }\n    }, [selectedAppId]);\n\n    return null;\n};\n\nAuthTypeCleaner.propTypes = {\n    modifiedValues: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { FormattedMessage } from 'react-intl';\nimport { schemaBuilder } from '@redhat-cloud-services/frontend-components-sources';\nimport get from 'lodash/get';\n\nimport AddApplicationDescription from './AddApplicationDescription';\nimport { AuthTypeSetter } from './AuthTypeSetter';\nimport { AuthTypeCleaner } from './AuthTypeCleaner';\n\nexport const NoAvailableApplicationDescription = () => (<TextContent>\n    <Text component={ TextVariants.p }>\n        <FormattedMessage\n            id=\"sources.allApplicationsAssigned\"\n            defaultMessage=\"All available applications have already been added to this source\n        or there is no available application for this source type.\"\n        />\n    </Text>\n</TextContent>);\n\nexport const ApplicationSummary = () => (<TextContent>\n    <Text component={ TextVariants.p }>\n        <FormattedMessage\n            id=\"sources.reviewAddAppSummary\"\n            defaultMessage=\"Review the information below and click Add to add the application to your source.\n            Use the Back button to make changes.\"\n        />\n    </Text>\n</TextContent>);\n\nexport const SelectAuthenticationDescription = ({ applicationTypeName, authenticationTypeName }) => (\n    <TextContent>\n        <Text component={ TextVariants.p }>\n            <FormattedMessage\n                id=\"sources.selectAuthenticationDescription\"\n                defaultMessage=\"Selected application { applicationTypeName } supports { authenticationTypeName } authentication\n                type. You can use already defined authentication values or define new.\"\n                values={{ applicationTypeName, authenticationTypeName }}\n            />\n        </Text>\n    </TextContent>\n);\n\nSelectAuthenticationDescription.propTypes = {\n    applicationTypeName: PropTypes.string,\n    authenticationTypeName: PropTypes.string\n};\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n    authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nconst generateAuthSelectionOptions = ({\n    source, authenticationValues, applicationTypes, supportedAuthTypeName, supportedAuthType\n}) => authenticationValues.filter(({ authtype }) => authtype === supportedAuthType).map((values) => {\n    const app = source.applications.find(({ authentications }) => authentications.find(({ id }) => id === values.id));\n\n    const appType = app && app.application_type_id ? applicationTypes.find(({ id }) => id === app.application_type_id) : '';\n\n    const includeUsername = values.username ? `-${values.username}` : '';\n    const includeAppName = appType ? `-${appType.display_name}` : `-unused-${values.id}`;\n    const label = `${supportedAuthTypeName}${includeUsername}${includeAppName}`;\n\n    return {\n        label,\n        value: values.id,\n    };\n});\n\nexport const selectAuthenticationStep = ({\n    intl, source, authenticationValues, sourceType, applicationTypes, modifiedValues\n}) => {\n    const nextStep = ({ values: { application } }) => {\n        const app = application ? application : {};\n        const appId = app.application_type_id ? app.application_type_id : '';\n\n        return `${sourceType.name}-${appId}`;\n    };\n\n    const fields = [{\n        component: 'description',\n        name: 'authtypesetter',\n        Content: AuthTypeSetter,\n        authenticationValues,\n        hideField: true,\n        modifiedValues\n    }];\n\n    applicationTypes.forEach((app) => {\n        const supportedAuthType = get(app, `supported_authentication_types[${sourceType.name}][0]`, '');\n\n        if (supportedAuthType && hasAlreadySupportedAuthType(authenticationValues, app, sourceType.name)) {\n            const supportedAuthTypeName =\n                get(sourceType, `schema.authentication`, {}).find(({ type }) => type === supportedAuthType).name;\n\n            fields.push({\n                component: componentTypes.SUB_FORM,\n                name: `${app.name}-subform`,\n                condition: {\n                    when: 'application.application_type_id',\n                    is: app.id\n                },\n                fields: [\n                    {\n                        name: `${app.name}-select-authentication-summary`,\n                        component: 'description',\n                        Content: SelectAuthenticationDescription,\n                        applicationTypeName: app.display_name,\n                        authenticationTypeName: supportedAuthTypeName,\n                    },\n                    {\n                        component: componentTypes.RADIO,\n                        name: 'selectedAuthentication',\n                        label: intl.formatMessage({\n                            id: 'sources.selectAuthenticationTitle',\n                            defaultMessage: 'Select authentication'\n                        }),\n                        isRequired: true,\n                        validate: [{ type: validatorTypes.REQUIRED }],\n                        options: [\n                            {\n                                label: intl.formatMessage({\n                                    id: 'sources.selectAuthenticationradioLabel',\n                                    defaultMessage: 'Define new { supportedAuthTypeName }'\n                                }, { supportedAuthTypeName }),\n                                value: 'new'\n                            },\n                            ...generateAuthSelectionOptions(\n                                { authenticationValues, source, applicationTypes, supportedAuthTypeName, supportedAuthType }\n                            )\n                        ]\n                    },\n                ]\n            });\n        }\n    });\n\n    return ({\n        name: 'selectAuthentication',\n        title: intl.formatMessage({\n            id: 'sources.selectAuthenticationTitle',\n            defaultMessage: 'Select authentication'\n        }),\n        fields,\n        nextStep\n    });\n};\n\nconst fields = (\n    applications = [], intl, sourceTypes, applicationTypes, authenticationValues, source, modifiedValues, container\n) => {\n    const hasAvailableApps = applications.length > 0;\n\n    let nextStep = hasAvailableApps ? 'summary' : undefined;\n    let authenticationFields = [];\n    const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id);\n\n    if (!source.imported && hasAvailableApps) {\n        const appendEndpoint = sourceType.schema.endpoint.hidden ? sourceType.schema.endpoint.fields : [];\n        const hasEndpointStep = appendEndpoint.length === 0;\n\n        applicationTypes.forEach(appType => {\n            if (appType.supported_source_types.includes(sourceType.name)) {\n                authenticationFields.push(\n                    schemaBuilder.createSpecificAuthTypeSelection(\n                        sourceType,\n                        appType,\n                        appendEndpoint,\n                        false,\n                    )\n                );\n            }\n        });\n\n        sourceType.schema.authentication.forEach(auth => {\n            applicationTypes.forEach(appType => {\n                if (appType.supported_source_types.includes(sourceType.name)) {\n                    const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name);\n\n                    if (appAdditionalSteps.length > 0) {\n                        authenticationFields.push(\n                            ...schemaBuilder.createAdditionalSteps(\n                                appAdditionalSteps,\n                                sourceType.name,\n                                auth.type,\n                                hasEndpointStep,\n                                auth.fields,\n                                appType.name,\n                            )\n                        );\n                    }\n                }\n            });\n        });\n\n        if (hasEndpointStep) {\n            authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n        }\n\n        nextStep = ({ values: { application } }) => {\n            if (application) {\n                if (\n                    hasAlreadySupportedAuthType(\n                        authenticationValues,\n                        applicationTypes.find(({ id }) => id === application.application_type_id),\n                        sourceType.name\n                    )\n                ) {\n                    return 'selectAuthentication';\n                }\n\n                return `${sourceType.name}-${application && application.application_type_id}`;\n            }\n        };\n    }\n\n    const applicationSelection = hasAvailableApps ? {\n        component: 'card-select',\n        name: 'application.application_type_id',\n        options: applications,\n        label: intl.formatMessage({\n            id: 'sources.chooseAppToAdd',\n            defaultMessage: 'Choose an application to add'\n        }),\n        DefaultIcon: null,\n        isRequired: true,\n        validate: [{\n            type: validatorTypes.REQUIRED\n        }]\n    } : {\n        component: 'description',\n        name: 'description-no-options',\n        validate: [{\n            type: validatorTypes.REQUIRED\n        }],\n        Content: NoAvailableApplicationDescription\n    };\n\n    const selectionSteps = [];\n\n    if (!source.imported && hasAvailableApps) {\n        selectionSteps.push(\n            selectAuthenticationStep({ intl, source, authenticationValues, sourceType, applicationTypes, modifiedValues })\n        );\n    }\n\n    return ({\n        fields: [\n            {\n                component: componentTypes.WIZARD,\n                name: 'wizard',\n                title: intl.formatMessage({\n                    id: 'sources.manageApps',\n                    defaultMessage: 'Manage applications'\n                }),\n                inModal: true,\n                container,\n                predictSteps: true,\n                showTitles: true,\n                crossroads: ['application.application_type_id', 'selectedAuthentication'],\n                description: intl.formatMessage({\n                    id: 'sources.addAppDescription',\n                    defaultMessage: 'You are managing applications of this source.'\n                }),\n                buttonLabels: {\n                    submit: hasAvailableApps ? intl.formatMessage({\n                        id: 'sources.add',\n                        defaultMessage: 'Add'\n                    }) : intl.formatMessage({\n                        id: 'sources.close',\n                        defaultMessage: 'Close'\n                    }),\n                    cancel: intl.formatMessage({\n                        id: 'sources.cancel',\n                        defaultMessage: 'Cancel'\n                    }),\n                    back: intl.formatMessage({\n                        id: 'sources.back',\n                        defaultMessage: 'Back'\n                    })\n                },\n                fields: [\n                    {\n                        nextStep,\n                        title: intl.formatMessage({\n                            id: 'sources.selectApp',\n                            defaultMessage: 'Select application'\n                        }),\n                        name: 'selectAppStep',\n                        fields: [\n                            {\n                                component: 'description',\n                                name: 'description',\n                                Content: AddApplicationDescription\n                            },\n                            applicationSelection,\n                            {\n                                component: 'description',\n                                name: 'authtypesetter',\n                                Content: AuthTypeCleaner,\n                                hideField: true,\n                                modifiedValues\n                            }\n                        ]\n                    }, {\n                        title: intl.formatMessage({\n                            id: 'sources.review',\n                            defaultMessage: 'Review'\n                        }),\n                        name: 'summary',\n                        fields: [{\n                            component: 'description',\n                            name: 'description-summary',\n                            Content: ApplicationSummary\n                        }, {\n                            component: 'summary',\n                            name: 'summary',\n                            sourceTypes,\n                            applicationTypes\n                        }]\n                    },\n                    ...selectionSteps,\n                    ...authenticationFields\n                ]\n            }\n        ]\n    });\n};\n\nexport default fields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { Progress } from '@patternfly/react-core/dist/js/components/Progress/Progress';\n\nimport { FormattedMessage } from 'react-intl';\n\nconst LoadingStep = ({ onClose, customText, progressStep, progressTexts }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full } className=\"ins-c-sources__empty-state\">\n            <EmptyStateIcon icon={ Spinner } color=\"var(--pf-global--success-color--100)\" className=\"pf-u-mb-0\"/>\n            <EmptyStateBody>\n                {progressTexts ?\n                    <Progress\n                        value={progressStep}\n                        min={0}\n                        max={progressTexts.length - 1}\n                        title=\" \"\n                        label={progressTexts[progressStep]}\n                        valueText={progressTexts[progressStep]}\n                        className=\"pf-u-mb-0 ins-c-sources__progress\"\n                    />\n                    : customText\n                }\n            </EmptyStateBody>\n            { onClose &&\n        <EmptyStateSecondaryActions className=\"pf-u-mt-xl\">\n            <Button variant=\"link\" onClick={ onClose }>\n                <FormattedMessage\n                    id=\"sources.cancel\"\n                    defaultMessage=\"Cancel\"\n                />\n            </Button>\n        </EmptyStateSecondaryActions> }\n        </EmptyState>\n    </Bullseye>\n);\n\nLoadingStep.propTypes = {\n    onClose: PropTypes.func,\n    customText: PropTypes.node,\n    progressStep: PropTypes.number,\n    progressTexts: PropTypes.arrayOf(PropTypes.string)\n};\n\nLoadingStep.defaultProps = {\n    customText: <FormattedMessage\n        id=\"sources.loading\"\n        defaultMessage=\"Loading, please wait.\"\n    />\n};\n\nexport default LoadingStep;\n","import React from 'react';\nimport { FormattedMessage  } from 'react-intl';\nimport { PropTypes } from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Progress } from '@patternfly/react-core/dist/js/components/Progress/Progress';\n\nimport TimesCircleIcon from '@patternfly/react-icons/dist/js/icons/times-circle-icon';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nconst ErroredStepAttach = ({ onReset, goToSources, error, progressStep, progressTexts }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full } className=\"ins-c-sources__empty-state\">\n            <EmptyStateIcon icon={ TimesCircleIcon } color=\"var(--pf-global--danger-color--100)\" className=\"pf-u-mb-0\"/>\n            <Title headingLevel=\"h5\" size=\"lg\" className=\"pf-u-mt-xl\">\n                <FormattedMessage\n                    id=\"sources.configurationSuccessful\"\n                    defaultMessage=\"Configuration unsuccessful\"\n                />\n            </Title>\n            <EmptyStateBody>\n                <Progress\n                    className=\"pf-u-mb-md ins-c-sources__progress\"\n                    value={progressStep}\n                    min={0}\n                    title=\" \"\n                    max={progressTexts.length - 1}\n                    label={progressTexts[progressStep]}\n                    valueText={progressTexts[progressStep]}\n                    variant='danger'\n                />\n                <React.Fragment>\n                    <FormattedMessage\n                        id=\"sources.successAddApp\"\n                        defaultMessage=\"Your application has not been successfully added:\"\n                    />\n                    <br />\n                    <TextContent>\n                        <Text component={TextVariants.h6}>{ error }</Text>\n                    </TextContent>\n                </React.Fragment>\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={ goToSources }>\n                <FormattedMessage\n                    id=\"sources.backToSources\"\n                    defaultMessage=\"Back to Sources\"\n                />\n            </Button>\n            <EmptyStateSecondaryActions>\n                <Button variant=\"link\" onClick={ onReset }>\n                    <FormattedMessage\n                        id=\"sources.retry\"\n                        defaultMessage=\"Retry\"\n                    />\n                </Button>\n            </EmptyStateSecondaryActions>\n        </EmptyState>\n    </Bullseye>\n);\n\nErroredStepAttach.propTypes = {\n    onReset: PropTypes.func.isRequired,\n    goToSources: PropTypes.func.isRequired,\n    error: PropTypes.string.isRequired,\n    progressStep: PropTypes.number.isRequired,\n    progressTexts: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default ErroredStepAttach;\n","import React from 'react';\nimport { FormattedMessage  } from 'react-intl';\nimport { PropTypes } from 'prop-types';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { EmptyStateSecondaryActions } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateSecondaryActions';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Progress } from '@patternfly/react-core/dist/js/components/Progress/Progress';\n\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\n\nconst FinishedStepAttach = ({ goToSources, onReset, progressStep, progressTexts }) => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full } className=\"ins-c-sources__empty-state\">\n            <EmptyStateIcon icon={ CheckCircleIcon } color=\"var(--pf-global--success-color--200)\" className=\"pf-u-mb-0\"/>\n            <Title headingLevel=\"h5\" size=\"lg\" className=\"pf-u-mt-xl\">\n                <FormattedMessage\n                    id=\"sources.configurationSuccessful\"\n                    defaultMessage=\"Configuration successful\"\n                />\n            </Title>\n            <EmptyStateBody>\n                <Progress\n                    className=\"pf-u-mb-md ins-c-sources__progress ins-c-sources__progress-success\"\n                    value={progressStep}\n                    min={0}\n                    title=\" \"\n                    max={progressTexts.length - 1}\n                    label={progressTexts[progressStep]}\n                    valueText={progressTexts[progressStep]}\n                    variant='success'\n                />\n                <FormattedMessage\n                    id=\"sources.successAddApp\"\n                    defaultMessage=\"Your application has been successfully added.\"\n                />\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={ goToSources } className=\"pf-u-mt-xl\">\n                <FormattedMessage\n                    id=\"sources.backToSources\"\n                    defaultMessage=\"Back to Sources\"\n                />\n            </Button>\n            <EmptyStateSecondaryActions>\n                <Button variant=\"link\" onClick={onReset}>\n                    <FormattedMessage\n                        id=\"sources.continueManageApp\"\n                        defaultMessage=\"Continue managing applications\"\n                    />\n                </Button>\n            </EmptyStateSecondaryActions>\n        </EmptyState>\n    </Bullseye>\n);\n\nFinishedStepAttach.propTypes = {\n    onReset: PropTypes.func.isRequired,\n    goToSources: PropTypes.func.isRequired,\n    progressStep: PropTypes.number.isRequired,\n    progressTexts: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default FinishedStepAttach;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Wizard } from '@patternfly/react-core/dist/js/components/Wizard/Wizard';\n\nconst WizardBodyAttach = ({ step, goToSources }) => {\n    const intl = useIntl();\n\n    return (\n        <Wizard\n            isOpen={ true }\n            onClose={goToSources}\n            title={intl.formatMessage({\n                id: 'sources.manageApps',\n                defaultMessage: 'Manage applications'\n            })}\n            description={\n                intl.formatMessage({\n                    id: 'sources.addAppDescription',\n                    defaultMessage: 'You are managing applications of this source.'\n                })\n            }\n            steps={ [{\n                name: 'Finish',\n                component: step,\n                isFinishedStep: true\n            }] }\n        />\n    );\n};\n\nWizardBodyAttach.propTypes = {\n    step: PropTypes.node.isRequired,\n    goToSources: PropTypes.func.isRequired\n};\n\nexport default WizardBodyAttach;\n","import isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\n\nconst createProgressTextsApp = (\n    filteredValues, allFormValues, intl\n) => {\n    let progressText = [];\n    let step = 0;\n\n    if (filteredValues.endpoint && !isEmpty(filteredValues.endpoint) && !get(allFormValues, 'endpoint.id', false)) {\n        progressText.push(intl.formatMessage({\n            id: 'sources.authProgressEndpoint',\n            defaultMessage: 'Step { step }: creating endpoint'\n        }, { step: ++step }));\n    }\n\n    progressText.push(intl.formatMessage({\n        id: 'sources.authProgressValues',\n        defaultMessage: 'Step { step }: updating values and creating application'\n    }, { step: ++step }));\n\n    progressText.push(intl.formatMessage({\n        id: 'sources.authConnectingApplication',\n        defaultMessage: 'Step { step }: connecting application and authentication'\n    }, { step: ++step }));\n\n    progressText.push(intl.formatMessage({\n        id: 'sources.authReloadData',\n        defaultMessage: 'Step { step }: reloading data'\n    }, { step: ++step }));\n\n    progressText.push(intl.formatMessage({\n        id: 'sources.authCompleted',\n        defaultMessage: 'Completed'\n    }));\n\n    return progressText;\n};\n\nexport default createProgressTextsApp;\n\n","import { addedDiff, updatedDiff } from 'deep-object-diff';\nimport { patchSource, handleError } from '@redhat-cloud-services/frontend-components-sources';\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { getSourcesApi, doCreateApplication } from './entities';\nimport { urlOrHost } from './doUpdateSource';\nimport createProgressTextsApp from '../components/AddApplication/steps/createProgressTextsApp';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n    Object.keys(obj).forEach(key => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            if (isEmpty(obj[key])) {\n                delete obj[key];\n            } else {\n                removeEmpty(obj[key]);\n            }\n        } else if (typeof obj[key] === 'undefined') {\n            delete obj[key];\n        }\n    });\n    return obj;\n};\n\nexport const doAttachApp = async (\n    values, formApi, authenticationInitialValues, initialValues, setState = () => {}, intl = () => {}\n) => {\n    const formState = formApi.getState();\n\n    const allFormValues = formState.values;\n\n    const selectedAuthId = allFormValues.authentication ? allFormValues.authentication.id : undefined;\n\n    const authInitialValues = selectedAuthId\n        ? authenticationInitialValues.find(({ id }) => id === selectedAuthId)\n        : undefined;\n\n    const { authentication, ...valuesWithoutAuth } = values;\n\n    const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n    const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n    const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n    const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n    const filteredValues = removeEmpty({\n        ...merge(cloneDeep(newAddedValues), updatedValues),\n        authentication: {\n            ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues)\n        }\n    });\n\n    setState({ type: 'setProgressTexts', progressTexts: createProgressTextsApp(filteredValues, allFormValues, intl) });\n\n    try {\n        if (!allFormValues.source || !allFormValues.source.id) {\n            throw 'Missing source id';\n        }\n\n        const sourceId = allFormValues.source.id;\n        let endpointId = allFormValues.endpoint ? allFormValues.endpoint.id : undefined;\n\n        const promises = [];\n\n        if (filteredValues.source && !isEmpty(filteredValues.source)) {\n            promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n        const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n        if (hasModifiedEndpoint || hasModifiedUrl) {\n            const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n            const endPointPort = parseInt(port, 10);\n\n            const endpointData = removeEmpty({\n                ...filteredValues.endpoint,\n                scheme,\n                host,\n                port: isNaN(endPointPort) ? undefined : endPointPort,\n                path\n            });\n\n            if (endpointId) {\n                promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n            } else {\n                promises.push(Promise.resolve(undefined));\n\n                const createEndpointData = {\n                    ...endpointData,\n                    default: true,\n                    source_id: sourceId\n                };\n\n                const endpoint = await getSourcesApi().createEndpoint(createEndpointData);\n                setState({ type: 'increaseProgressStep' });\n                endpointId = endpoint.id;\n            }\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        if (filteredValues.authentication && !isEmpty(filteredValues.authentication)) {\n            if (selectedAuthId) {\n                promises.push(getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication));\n            } else if (endpointId) {\n                const authenticationData = {\n                    ...filteredValues.authentication,\n                    resource_id: endpointId,\n                    resource_type: 'Endpoint'\n                };\n\n                promises.push(getSourcesApi().createAuthentication(authenticationData));\n            }\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        if (filteredValues.application && filteredValues.application.application_type_id) {\n            promises.push(doCreateApplication(sourceId, filteredValues.application.application_type_id));\n        } else {\n            promises.push(Promise.resolve(undefined));\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        const [_sourceDataOut, _endpointDataOut, authenticationDataOut, applicationDataOut] = await Promise.all(promises);\n        setState({ type: 'increaseProgressStep' });\n\n        const authenticationId = selectedAuthId ? selectedAuthId : authenticationDataOut ? authenticationDataOut.id : undefined;\n\n        const promisesSecondRound = [];\n\n        if (applicationDataOut && applicationDataOut.id && authenticationId) {\n            const authAppData = {\n                application_id: applicationDataOut.id,\n                authentication_id: authenticationId\n            };\n\n            promisesSecondRound.push(getSourcesApi().createAuthApp(authAppData));\n        }\n\n        const isAttachingCostManagement = filteredValues.credentials || filteredValues.billing_source;\n        if (isAttachingCostManagement) {\n            const { credentials, billing_source } = filteredValues;\n            let data = {};\n            data = credentials ? { authentication: { credentials } } : {};\n            data = billing_source ? { ...data, billing_source } : data;\n            promisesSecondRound.push(patchSource({ id: sourceId, ...data }));\n        }\n\n        await Promise.all(promisesSecondRound);\n        setState({ type: 'increaseProgressStep' });\n    } catch (error) {\n        const errorMessage = await handleError(error);\n        throw errorMessage;\n    }\n};\n","export const initialState = {\n    state: 'loading',\n    error: '',\n    values: {},\n    authenticationsValues: [],\n    sourceAppsLength: 0,\n    initialValues: {},\n    progressStep: 0,\n    progressTexts: [],\n    isCancelling: false,\n};\n\nconst reducer = (state, { type, length, authenticationsValues, initialValues, error, values, progressTexts }) => {\n    switch (type) {\n        case 'setSourceAppslength':\n            return {\n                ...state,\n                sourceAppsLength: length\n            };\n        case 'loadAuthentications':\n            return {\n                ...state,\n                authenticationsValues,\n                initialValues,\n                values: {},\n                state: state.state === 'loading' ? 'wizard' : state.state\n            };\n        case 'loadWithoutAuthentications':\n            return {\n                ...state,\n                initialValues,\n                values: {},\n                state: state.state === 'loading' ? 'wizard' : state.state\n            };\n        case 'reset':\n            return {\n                ...state,\n                state: 'wizard'\n            };\n        case 'submit':\n            return {\n                ...state,\n                state: 'submitting',\n                progressStep: 0,\n                progressTexts: ['Preparing']\n            };\n        case 'finish':\n            return {\n                ...state,\n                state: 'finished',\n                progressStep: ++state.progressStep\n            };\n        case 'error':\n            return {\n                ...state,\n                state: 'errored',\n                error,\n                values\n            };\n        case 'setProgressTexts':\n            return {\n                ...state,\n                progressTexts\n            };\n        case 'increaseProgressStep':\n            return {\n                ...state,\n                progressStep: ++state.progressStep\n            };\n        case 'toggleCancelling':\n            return {\n                ...state,\n                isCancelling: !state.isCancelling,\n                ...(values && { values })\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React, { useReducer, useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { filterApps, CloseModal } from '@redhat-cloud-services/frontend-components-sources';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport LoadingStep from './steps/LoadingStep';\nimport ErroredStep from './steps/ErroredStep';\nimport FinishedStep from './steps/FinishedStep';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../SourcesTable/formatters';\nimport { routes } from '../../Routes';\n\nimport { doAttachApp } from '../../api/doAttachApp';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nimport reducer, { initialState } from './reducer';\n\nlet selectedApp = undefined; // this has to be not-state value, because it shouldn't re-render the component when changes\nconst saveSelectedApp = ({ values: { application } }) => selectedApp = application;\n\nexport const onSubmit = (values, formApi, authenticationInitialValues, dispatch, setState, initialValues, intl) => {\n    setState({ type: 'submit' });\n\n    return doAttachApp(values, formApi, authenticationInitialValues, initialValues, setState, intl)\n    .then(async () => {\n        checkSourceStatus(initialValues.source.id);\n        await dispatch(loadEntities());\n        selectedApp = undefined;\n        return setState({ type: 'finish' });\n    })\n    .catch(error => setState({\n        type: 'error',\n        error,\n        values\n    }));\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst AddApplication = () => {\n    const intl = useIntl();\n    const history = useHistory();\n\n    const loaded = useIsLoaded();\n\n    const {\n        appTypes,\n        sourceTypesLoaded,\n        appTypesLoaded,\n        sourceTypes,\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useReducer(reducer, initialState);\n\n    const container = useRef(document.createElement('div'));\n\n    useEffect(() => {\n        selectedApp = undefined;\n    }, []);\n\n    useEffect(() => {\n        if (source) {\n            // When app is only removed, there is no need to reload values\n            const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n            setState({ type: 'setSourceAppslength', length: source.applications.length });\n\n            if (!removeAppAction) {\n                if (source.endpoints && source.endpoints[0]) {\n                    getSourcesApi()\n                    .listEndpointAuthentications(source.endpoints[0].id)\n                    .then(({ data }) => setState({\n                        type: 'loadAuthentications',\n                        authenticationsValues: data,\n                        initialValues: {\n                            source,\n                            endpoint: source.endpoints[0],\n                            url: endpointToUrl(source.endpoints[0]),\n                            application: selectedApp,\n                        },\n                        values: {}\n                    }));\n                } else {\n                    setState({\n                        type: 'loadWithoutAuthentications',\n                        initialValues: { source, application: selectedApp },\n                        values: {}\n                    });\n                }\n            }\n        }\n    }, [source]);\n\n    const goToSources = () => history.push(routes.sources.path);\n\n    if ((!appTypesLoaded || !sourceTypesLoaded || !loaded || state.state === 'loading') && state.state !== 'submitting') {\n        return  (\n            <WizardBody\n                goToSources={goToSources}\n                step={<LoadingStep />}\n            />\n        );\n    }\n\n    if (state.state === 'submitting') {\n        return  (\n            <WizardBody\n                goToSources={goToSources}\n                step={<LoadingStep\n                    progressStep={state.progressStep}\n                    progressTexts={state.progressTexts}\n                />}\n            />\n        );\n    }\n\n    const onReset = () => setState({ type: 'reset' });\n\n    if (state.state !== 'wizard') {\n        const shownStep = state.state === 'finished' ? (<FinishedStep\n            onReset={onReset}\n            goToSources={goToSources}\n            progressStep={state.progressStep}\n            progressTexts={state.progressTexts}\n        />) :\n            (<ErroredStep\n                onReset={onReset}\n                goToSources={goToSources}\n                error={state.error}\n                progressStep={state.progressStep}\n                progressTexts={state.progressTexts}\n            />);\n\n        return (\n            <WizardBody goToSources={goToSources} step={shownStep} />\n        );\n    }\n\n    const appIds = source.applications.filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n    const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n    const sourceTypeName = sourceType && sourceType.name;\n    const filteredAppTypes = appTypes.filter((type) =>\n        !appIds.includes(type.id) && type.supported_source_types.includes(sourceTypeName)\n    ).filter(filterApps);\n\n    const availableAppTypes = filteredAppTypes.map((type) => {\n        const hasDeletingApp = source.applications.find(app => app.application_type_id === type.id);\n        const label = `${type.display_name} ${hasDeletingApp ? `(${intl.formatMessage({\n            id: 'sources.currentlyRemoving',\n            defaultMessage: 'Currently removing'\n        })})` : ''}`;\n\n        return ({ value: type.id, label, isDisabled: hasDeletingApp ? true : false });\n    });\n\n    const schema = createSchema(\n        availableAppTypes,\n        intl,\n        sourceTypes,\n        appTypes,\n        state.authenticationsValues,\n        source,\n        state.values,\n        container.current\n    );\n\n    const onSubmitWrapper = (values, formApi) => onSubmit(\n        values,\n        formApi,\n        state.authenticationsValues,\n        dispatch,\n        setState,\n        state.initialValues,\n        intl\n    );\n\n    const hasAvailableApps = filteredAppTypes.length > 0;\n    const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n    const finalValues = merge(cloneDeep(state.initialValues), state.values);\n\n    const onStay = () => {\n        container.current.hidden = false;\n        setState({ type: 'toggleCancelling' });\n    };\n\n    const cancelBeforeExit = (values) => {\n        if (values?.application) {\n            container.current.hidden = true;\n            setState({ type: 'toggleCancelling', values }); }\n        else {\n            goToSources();\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <CloseModal\n                title={\n                    intl.formatMessage({\n                        id: 'sources.manageAppsCloseModalTitle', defaultMessage: 'Exit application adding?'\n                    })\n                }\n                isOpen={state.isCancelling}\n                onStay={onStay}\n                onExit={goToSources}\n            />\n            <SourcesFormRenderer\n                schema={schema}\n                showFormControls={false}\n                onSubmit={onSubmitFinal}\n                onCancel={cancelBeforeExit}\n                initialValues={finalValues}\n                subscription={{ values: true }}\n                debug={saveSelectedApp}\n                clearedValue={null}\n                FormTemplate={FormTemplateWrapper}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default AddApplication;\n"],"sourceRoot":""}