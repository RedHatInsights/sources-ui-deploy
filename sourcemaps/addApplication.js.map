{"version":3,"sources":["webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/components/AddApplication/schema/authenticationSelectionStep.js","webpack:///./src/components/AddApplication/schema/generateFirstAuthStep.js","webpack:///./src/components/AddApplication/AuthTypeSetter.js","webpack:///./src/components/AddApplication/schema/selectAuthenticationStep.js","webpack:///./src/components/AddApplication/AddApplicationSchema.js","webpack:///./src/components/AddApplication/WizardBody.js","webpack:///./src/api/doAttachApp.js","webpack:///./src/components/AddApplication/reducer.js","webpack:///./src/components/AddApplication/AddApplication.js"],"names":["removeAppSubmit","app","intl","onCancel","dispatch","source","titleSuccess","formatMessage","id","defaultMessage","name","display_name","titleError","removeApplication","authenticationSelectionStep","sourceType","appType","authenticationValues","title","fields","component","componentTypes","RADIO","options","supported_authentication_types","map","type","value","label","schema","authentication","find","authtype","isRequired","validate","validatorTypes","REQUIRED","nextStep","values","application","auth","application_type_id","generateFirstAuthStep","endpointFields","schemaBuilder","additionalStepName","skipEndpoint","customSteps","length","additionalIncludesStepKeys","stepProps","firstAdditonalStep","additionalFields","AuthTypeSetter","formOptions","useFormApi","selectedAuthentication","getState","useState","initialValue","setInitialValue","useEffect","startsWith","replace","change","innerSetter","undefined","propTypes","PropTypes","arrayOf","object","SelectAuthenticationDescription","applicationTypeName","authenticationTypeName","useIntl","TextContent","Text","TextVariants","p","string","generateAuthSelectionOptions","supportedAuthTypeName","supportedAuthType","applicationTypes","filter","includeUsername","username","applications","authentications","includeAppName","selectAuthenticationStep","Content","hideField","ifAppSupported","supported_source_types","includes","isAppAvailable","get","forEach","push","SUB_FORM","ApplicationSummary","container","description","firstStep","hasMultipleAuthTypes","hasAlreadyType","authenticationFields","imported","appendEndpoint","endpoint","hidden","hasEndpointStep","appAdditionalSteps","authValues","sourceTypeName","hasAlreadySupportedAuthType","appTypeSetter","TEXT_FIELD","WIZARD","inModal","showTitles","crossroads","buttonLabels","submit","cancel","back","sourceTypes","splice","WizardBodyAttach","step","goToSources","Wizard","isOpen","onClose","steps","isFinishedStep","node","func","removeEmpty","obj","Object","keys","key","isEmpty","doAttachApp","formApi","authenticationInitialValues","initialValues","a","appTypes","formState","allFormValues","selectedAuthId","authInitialValues","valuesWithoutAuth","newAddedValues","addedDiff","updatedValues","updatedDiff","newAddedAuthValues","updatedAuthValues","filteredValues","merge","cloneDeep","startDate","Date","sourceId","endpointId","promises","getSourcesApi","updateSource","Promise","resolve","hasModifiedEndpoint","hasModifiedUrl","url","urlOrHost","scheme","host","port","path","endPointPort","parseInt","endpointData","isNaN","updateEndpoint","createEndpointData","default","source_id","createEndpoint","doCreateApplication","all","endpointDataOut","applicationDataOut","updateAuthentication","authenticationDataOut","authenticationData","resource_id","resource_type","createAuthentication","appId","authenticationId","promisesSecondRound","authAppData","application_id","authentication_id","createAuthApp","credentials","billing_source","data","patchSource","checkAppAvailability","timeout","timeoutedApps","console","error","deleteApplication","handleError","initialState","state","authenticationsValues","sourceAppsLength","isCancelling","reducer","onSubmit","setState","setSelectedApp","then","checkSourceStatus","loadEntities","FormTemplateWrapper","props","showFormControls","AddApplication","history","useHistory","selectedApp","useRef","saveSelectedApp","current","app_type_id","useParams","loaded","useIsLoaded","useSelector","sources","shallowEqual","sourceTypesLoaded","appTypesLoaded","useSource","useDispatch","useReducer","document","createElement","applicationType","removeAppAction","endpoints","listEndpointAuthentications","endpointToUrl","replaceRouteId","routes","sourcesDetail","appName","WizardBody","customText","cancelTitle","onSubmitWrapper","onReset","shownStep","onRetry","returnButtonTitle","primaryAction","secondaryActions","target","href","rel","computeSourceStatus","hideSourcesButton","successfulMessage","message","availability_status_error","Button","variant","onClick","Component","to","className","source_type_id","filteredAppTypes","filterApps","createSchema","onSubmitFinal","Fragment","onStay","onExit","SourcesFormRenderer","newValues","diff","subscription","debug","clearedValue","FormTemplate"],"mappings":"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","file":"js/addApplication.16e13a8dfd17dcd81ab6.js","sourcesContent":["import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nconst authenticationSelectionStep = (sourceType, appType, intl, authenticationValues) => {\n  const nextStep = ({ values: { application, authtype } }) => {\n    if (authtype) {\n      const hasSupportedAuthType = authenticationValues.find((auth) => auth.authtype === authtype);\n\n      if (hasSupportedAuthType) {\n        return 'selectAuthentication';\n      }\n\n      return `${sourceType.name}-${application && application.application_type_id}-${authtype}`;\n    }\n  };\n\n  return {\n    name: `selectAuthType-${appType.id}`,\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication type',\n    }),\n    fields: [\n      {\n        component: componentTypes.RADIO,\n        name: 'authtype',\n        options: appType.supported_authentication_types[sourceType.name].map((type) => ({\n          value: type,\n          label: sourceType.schema.authentication.find((authtype) => authtype.type === type)?.name || 'Unknown type',\n        })),\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n      },\n    ],\n    nextStep,\n  };\n};\n\nexport default authenticationSelectionStep;\n","import * as schemaBuilder from '@redhat-cloud-services/frontend-components-sources/cjs/schemaBuilder';\n\nconst generateFirstAuthStep = (type, appType, endpointFields, authtype, intl) => {\n  let fields = [...endpointFields];\n\n  if (schemaBuilder.shouldUseAppAuth(type.name, authtype, appType.name)) {\n    fields = [];\n  }\n\n  const auth = type.schema.authentication.find(({ type }) => type === authtype);\n\n  const additionalStepName = `${type.name}-${authtype}-${appType.name}-additional-step`;\n\n  const skipEndpoint = schemaBuilder.shouldSkipEndpoint(type.name, authtype, appType.name);\n  const customSteps = schemaBuilder.hasCustomSteps(type.name, authtype, appType.name);\n\n  let nextStep;\n\n  if (schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name).length > 0) {\n    nextStep = additionalStepName;\n  } else if (endpointFields.length === 0 && !skipEndpoint) {\n    nextStep = `${type.name}-endpoint`;\n  } else {\n    nextStep = 'summary';\n  }\n\n  const additionalIncludesStepKeys = schemaBuilder.getAdditionalStepKeys(type.name, authtype, appType.name);\n  const hasCustomStep = schemaBuilder.shouldSkipSelection(type.name, authtype, appType.name);\n\n  let stepProps = {};\n\n  if (hasCustomStep) {\n    const firstAdditonalStep = schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name).find(({ name }) => !name);\n    const additionalFields = schemaBuilder.getAdditionalStepFields(auth.fields, additionalStepName);\n\n    if (firstAdditonalStep.nextStep) {\n      nextStep = firstAdditonalStep.nextStep;\n    } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n      nextStep = `${type.name}-endpoint`;\n    } else {\n      nextStep = 'summary';\n    }\n\n    stepProps = {\n      ...firstAdditonalStep,\n      fields: [\n        ...fields,\n        ...schemaBuilder.injectAuthFieldsInfo(\n          [...firstAdditonalStep.fields, ...additionalFields],\n          type.name,\n          authtype,\n          appType.name\n        ),\n      ],\n    };\n  }\n\n  return {\n    name: `${type.name}-${appType.id}-${authtype}`,\n    title: intl.formatMessage({\n      id: 'sources.configureCredentials',\n      defaultMessage: 'Configure credentials',\n    }),\n    fields: [\n      ...fields,\n      ...schemaBuilder.getAdditionalAuthFields(type.name, authtype, appType.name),\n      ...schemaBuilder.injectAuthFieldsInfo(\n        schemaBuilder.getNoStepsFields(auth.fields, additionalIncludesStepKeys),\n        type.name,\n        authtype,\n        appType.name\n      ),\n    ],\n    nextStep,\n    ...stepProps,\n  };\n};\n\nexport default generateFirstAuthStep;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const innerSetter = ({ formOptions, authenticationValues, selectedAuthentication }) => {\n  if (!selectedAuthentication.startsWith('new-')) {\n    const authentication = authenticationValues.find(({ id }) => id === selectedAuthentication);\n\n    formOptions.change('authentication', authentication);\n  } else {\n    const authtype = selectedAuthentication.replace('new-', '');\n\n    formOptions.change('authentication', { authtype });\n  }\n};\n\nexport const AuthTypeSetter = ({ authenticationValues }) => {\n  const formOptions = useFormApi();\n\n  const selectedAuthentication = formOptions.getState().values.selectedAuthentication;\n\n  const [initialValue, setInitialValue] = useState(selectedAuthentication);\n\n  useEffect(() => {\n    if (initialValue !== selectedAuthentication) {\n      innerSetter({\n        formOptions,\n        authenticationValues,\n        selectedAuthentication,\n      });\n      setInitialValue(undefined);\n    }\n  }, [selectedAuthentication]);\n\n  return null;\n};\n\nAuthTypeSetter.propTypes = {\n  authenticationValues: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { useIntl } from 'react-intl';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { AuthTypeSetter } from '../AuthTypeSetter';\n\nexport const SelectAuthenticationDescription = ({ applicationTypeName, authenticationTypeName }) => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'sources.selectAuthenticationDescription',\n            defaultMessage:\n              'Selected application { applicationTypeName } supports { authenticationTypeName } authentication type. You can use already defined authentication values or define new.',\n          },\n          { applicationTypeName, authenticationTypeName }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nSelectAuthenticationDescription.propTypes = {\n  applicationTypeName: PropTypes.string,\n  authenticationTypeName: PropTypes.string,\n};\n\nexport const generateAuthSelectionOptions = ({\n  authenticationValues,\n  supportedAuthTypeName,\n  supportedAuthType,\n  applicationTypes,\n  source,\n}) =>\n  authenticationValues\n    .filter(({ authtype }) => authtype === supportedAuthType)\n    .map((values) => {\n      const includeUsername = values.username ? `-${values.username}` : '';\n\n      const app = source.applications.find(({ authentications }) => authentications.find(({ id }) => id === values.id));\n      const appType = app && app.application_type_id ? applicationTypes.find(({ id }) => id === app.application_type_id) : '';\n      const includeAppName = appType ? `-${appType.display_name}` : `-unused-${values.id}`;\n      const label = `${supportedAuthTypeName}${includeUsername}${includeAppName}`;\n\n      return {\n        label,\n        value: values.id,\n      };\n    });\n\nconst selectAuthenticationStep = ({ intl, source, authenticationValues, sourceType, app, applicationTypes }) => {\n  const nextStep = ({ values: { authtype, authentication } }) =>\n    `${sourceType.name}-${app.id}-${authtype || authentication?.authtype}`;\n\n  const fields = [\n    {\n      component: 'description',\n      name: 'authtypesetter',\n      Content: AuthTypeSetter,\n      authenticationValues,\n      hideField: true,\n    },\n  ];\n\n  const ifAppSupported = app.supported_source_types.includes(sourceType.name);\n  const isAppAvailable = !source.applications?.find(({ application_type_id }) => application_type_id === app.id);\n\n  if (ifAppSupported && isAppAvailable) {\n    const supportedAuthTypes = get(app, `supported_authentication_types[${sourceType.name}]`, []);\n\n    supportedAuthTypes.forEach((supportedAuthType) => {\n      const hasAvailableAuthentications = authenticationValues.find(({ authtype }) => authtype === supportedAuthType);\n\n      if (hasAvailableAuthentications) {\n        const supportedAuthTypeName = get(sourceType, `schema.authentication`, {}).find(({ type }) => type === supportedAuthType)\n          .name;\n\n        fields.push({\n          component: componentTypes.SUB_FORM,\n          name: `${app.name}-subform`,\n          fields: [\n            {\n              name: `${app.name}-select-authentication-summary`,\n              component: 'description',\n              Content: SelectAuthenticationDescription,\n              applicationTypeName: app.display_name,\n              authenticationTypeName: supportedAuthTypeName,\n            },\n            {\n              component: componentTypes.RADIO,\n              name: 'selectedAuthentication',\n              label: intl.formatMessage({\n                id: 'sources.selectAuthenticationTitle',\n                defaultMessage: 'Select authentication',\n              }),\n              isRequired: true,\n              validate: [{ type: validatorTypes.REQUIRED }],\n              options: [\n                {\n                  label: intl.formatMessage(\n                    {\n                      id: 'sources.selectAuthenticationradioLabel',\n                      defaultMessage: 'Define new { supportedAuthTypeName }',\n                    },\n                    { supportedAuthTypeName }\n                  ),\n                  value: `new-${supportedAuthType}`,\n                },\n                ...generateAuthSelectionOptions({\n                  authenticationValues,\n                  supportedAuthTypeName,\n                  supportedAuthType,\n                  applicationTypes,\n                  source,\n                }),\n              ],\n            },\n          ],\n        });\n      }\n    });\n  }\n\n  return {\n    name: 'selectAuthentication',\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication',\n    }),\n    fields,\n    nextStep,\n  };\n};\n\nexport default selectAuthenticationStep;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { useIntl } from 'react-intl';\nimport * as schemaBuilder from '@redhat-cloud-services/frontend-components-sources/cjs/schemaBuilder';\nimport get from 'lodash/get';\n\nimport authenticationSelectionStep from './schema/authenticationSelectionStep';\nimport generateFirstAuthStep from './schema/generateFirstAuthStep';\nimport selectAuthenticationStep from './schema/selectAuthenticationStep';\n\nexport const ApplicationSummary = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'sources.reviewAddAppSummary',\n          defaultMessage:\n            'Review the information below and click Add to add the application to your source. Use the Back button to make changes.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n  authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nconst fields = (intl, sourceType, appType, authenticationValues, source, container, title, description, applicationTypes) => {\n  let authenticationFields = [];\n  let firstStep;\n  let hasMultipleAuthTypes;\n  let hasAlreadyType;\n\n  if (!source.imported) {\n    const appendEndpoint = sourceType.schema.endpoint.hidden ? sourceType.schema.endpoint.fields : [];\n    const hasEndpointStep = appendEndpoint.length === 0;\n\n    if (appType.supported_source_types.includes(sourceType.name)) {\n      appType.supported_authentication_types[sourceType.name].forEach((authtype) => {\n        authenticationFields.push(generateFirstAuthStep(sourceType, appType, appendEndpoint, authtype, intl));\n      });\n    }\n\n    sourceType.schema.authentication.forEach((auth) => {\n      if (appType.supported_source_types.includes(sourceType.name)) {\n        const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name);\n\n        if (appAdditionalSteps.length > 0) {\n          authenticationFields.push(\n            ...schemaBuilder.createAdditionalSteps(\n              appAdditionalSteps,\n              sourceType.name,\n              auth.type,\n              hasEndpointStep,\n              auth.fields,\n              appType.name\n            )\n          );\n        }\n      }\n    });\n\n    if (hasEndpointStep) {\n      authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n    }\n\n    firstStep = authenticationFields[0];\n\n    hasMultipleAuthTypes = appType?.supported_authentication_types[sourceType.name]?.length > 1;\n\n    if (hasMultipleAuthTypes) {\n      firstStep = authenticationSelectionStep(sourceType, appType, intl, authenticationValues);\n    }\n\n    hasAlreadyType = hasAlreadySupportedAuthType(authenticationValues, appType, sourceType.name);\n\n    if (hasAlreadyType) {\n      firstStep = selectAuthenticationStep({\n        intl,\n        source,\n        authenticationValues,\n        sourceType,\n        app: appType,\n        applicationTypes,\n      });\n    }\n  }\n\n  const appTypeSetter = {\n    component: componentTypes.TEXT_FIELD,\n    name: 'application.application_type_id',\n    hideField: true,\n    initialValue: appType.id,\n  };\n\n  return {\n    fields: [\n      {\n        component: componentTypes.WIZARD,\n        name: 'wizard',\n        title,\n        inModal: true,\n        container,\n        showTitles: true,\n        crossroads: ['selectedAuthentication', 'authtype'],\n        description,\n        buttonLabels: {\n          submit: intl.formatMessage({\n            id: 'sources.add',\n            defaultMessage: 'Add',\n          }),\n          cancel: intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          }),\n          back: intl.formatMessage({\n            id: 'sources.back',\n            defaultMessage: 'Back',\n          }),\n        },\n        fields: [\n          ...(source.imported\n            ? []\n            : [\n                {\n                  ...firstStep,\n                  fields: [...firstStep.fields, appTypeSetter],\n                },\n              ]),\n          {\n            title: intl.formatMessage({\n              id: 'sources.reviewDetails',\n              defaultMessage: 'Review details',\n            }),\n            name: 'summary',\n            fields: [\n              {\n                component: 'description',\n                name: 'description-summary',\n                Content: ApplicationSummary,\n              },\n              {\n                component: 'summary',\n                name: 'summary',\n                sourceTypes: [sourceType],\n                applicationTypes: [appType],\n              },\n              ...(source.imported ? [appTypeSetter] : []),\n            ],\n          },\n          ...(hasAlreadyType || hasMultipleAuthTypes ? authenticationFields : authenticationFields.splice(1)),\n        ],\n      },\n    ],\n  };\n};\n\nexport default fields;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Wizard } from '@patternfly/react-core/dist/js/components/Wizard/Wizard';\n\nconst WizardBodyAttach = ({ step, goToSources, title, description }) => (\n  <Wizard\n    isOpen={true}\n    onClose={goToSources}\n    title={title}\n    description={description}\n    steps={[\n      {\n        name: 'Finish',\n        component: step,\n        isFinishedStep: true,\n      },\n    ]}\n  />\n);\n\nWizardBodyAttach.propTypes = {\n  step: PropTypes.node.isRequired,\n  goToSources: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default WizardBodyAttach;\n","import { addedDiff, updatedDiff } from 'deep-object-diff';\nimport { patchSource } from '@redhat-cloud-services/frontend-components-sources/cjs/costManagementAuthentication';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources/cjs/handleError';\nimport { checkAppAvailability } from '@redhat-cloud-services/frontend-components-sources/cjs/getApplicationStatus';\nimport { timeoutedApps } from '@redhat-cloud-services/frontend-components-sources/cjs/constants';\n\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { getSourcesApi, doCreateApplication } from './entities';\nimport { urlOrHost } from './doUpdateSource';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    if (obj[key] && typeof obj[key] === 'object') {\n      if (isEmpty(obj[key])) {\n        delete obj[key];\n      } else {\n        removeEmpty(obj[key]);\n      }\n    } else if (typeof obj[key] === 'undefined') {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\n\nexport const doAttachApp = async (values, formApi, authenticationInitialValues, initialValues, appTypes = []) => {\n  let appId;\n\n  const formState = formApi.getState();\n\n  const allFormValues = formState.values;\n\n  const selectedAuthId = allFormValues.authentication?.id;\n\n  const authInitialValues = selectedAuthId && authenticationInitialValues.find(({ id }) => id === selectedAuthId);\n\n  const { authentication, ...valuesWithoutAuth } = values;\n\n  const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n  const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n  const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n  const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n  const filteredValues = removeEmpty({\n    ...merge(cloneDeep(newAddedValues), updatedValues),\n    authentication: {\n      ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues),\n    },\n  });\n\n  try {\n    if (!allFormValues?.source?.id) {\n      throw 'Missing source id';\n    }\n\n    const startDate = new Date();\n    const sourceId = allFormValues.source.id;\n    let endpointId = allFormValues?.endpoint?.id;\n\n    const promises = [];\n\n    if (filteredValues.source && !isEmpty(filteredValues.source)) {\n      promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n    const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n    if (hasModifiedEndpoint || hasModifiedUrl) {\n      const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n      const endPointPort = parseInt(port, 10);\n\n      const endpointData = removeEmpty({\n        ...filteredValues.endpoint,\n        scheme,\n        host,\n        port: isNaN(endPointPort) ? undefined : endPointPort,\n        path,\n      });\n\n      if (endpointId) {\n        promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n      } else {\n        const createEndpointData = {\n          ...endpointData,\n          default: true,\n          source_id: sourceId,\n        };\n\n        promises.push(getSourcesApi().createEndpoint(createEndpointData));\n      }\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    if (filteredValues.application?.application_type_id) {\n      promises.push(doCreateApplication(sourceId, filteredValues.application.application_type_id));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const [_sourceDataOut, endpointDataOut, applicationDataOut] = await Promise.all(promises);\n\n    let authenticationDataOut;\n\n    if (filteredValues.authentication && !isEmpty(filteredValues.authentication)) {\n      if (selectedAuthId) {\n        authenticationDataOut = await getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication);\n      } else {\n        const authenticationData = {\n          ...filteredValues.authentication,\n          resource_id: endpointDataOut?.id || applicationDataOut?.id,\n          resource_type: endpointDataOut?.id ? 'Endpoint' : 'Application',\n        };\n\n        authenticationDataOut = await getSourcesApi().createAuthentication(authenticationData);\n      }\n    }\n\n    appId = applicationDataOut?.id;\n\n    const authenticationId = selectedAuthId || authenticationDataOut?.id;\n\n    const promisesSecondRound = [];\n\n    if (applicationDataOut?.id && authenticationId) {\n      const authAppData = {\n        application_id: applicationDataOut.id,\n        authentication_id: authenticationId,\n      };\n\n      promisesSecondRound.push(getSourcesApi().createAuthApp(authAppData));\n    }\n\n    const isAttachingCostManagement = filteredValues.credentials || filteredValues.billing_source;\n    if (isAttachingCostManagement) {\n      const { credentials, billing_source } = filteredValues;\n      let data = {};\n      data = credentials ? { authentication: { credentials } } : {};\n      data = billing_source ? { ...data, billing_source } : data;\n      promisesSecondRound.push(patchSource({ id: sourceId, ...data }));\n    }\n\n    await Promise.all(promisesSecondRound);\n\n    let endpoint;\n    if (endpointId) {\n      endpoint = await checkAppAvailability(endpointId, undefined, undefined, 'getEndpoint', startDate);\n    }\n\n    if (applicationDataOut) {\n      const timeout = timeoutedApps(appTypes).includes(applicationDataOut.application_type_id) ? 10000 : 0;\n      const app = await checkAppAvailability(applicationDataOut.id, timeout);\n\n      return { id: app.id, applications: [app], ...(endpoint && { endpoint: [endpoint] }) };\n    }\n\n    return {};\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    if (appId) {\n      await getSourcesApi().deleteApplication(appId);\n    }\n\n    const errorMessage = await handleError(error);\n    throw errorMessage;\n  }\n};\n","export const initialState = {\n  state: 'loading',\n  error: '',\n  values: {},\n  authenticationsValues: [],\n  sourceAppsLength: 0,\n  initialValues: {},\n  isCancelling: false,\n};\n\nconst reducer = (state, { type, length, authenticationsValues, initialValues, error, values, data, formApi }) => {\n  switch (type) {\n    case 'setSourceAppslength':\n      return {\n        ...state,\n        sourceAppsLength: length,\n      };\n    case 'loadAuthentications':\n      return {\n        ...state,\n        authenticationsValues,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'loadWithoutAuthentications':\n      return {\n        ...state,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'reset':\n      return {\n        ...state,\n        state: 'wizard',\n      };\n    case 'submit':\n      return {\n        ...state,\n        values,\n        formApi,\n        state: 'submitting',\n      };\n    case 'finish':\n      return {\n        ...state,\n        state: 'finished',\n        data,\n      };\n    case 'error':\n      return {\n        ...state,\n        state: 'errored',\n        error,\n      };\n    case 'toggleCancelling':\n      return {\n        ...state,\n        isCancelling: !state.isCancelling,\n        ...(values && { values }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useReducer, useEffect, useRef } from 'react';\nimport { useHistory, Link, useParams, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport isEmpty from 'lodash/isEmpty';\n\nimport filterApps from '@redhat-cloud-services/frontend-components-sources/cjs/filterApps';\nimport CloseModal from '@redhat-cloud-services/frontend-components-sources/cjs/CloseModal';\nimport LoadingStep from '@redhat-cloud-services/frontend-components-sources/cjs/LoadingStep';\nimport ErroredStep from '@redhat-cloud-services/frontend-components-sources/cjs/ErroredStep';\nimport FinishedStep from '@redhat-cloud-services/frontend-components-sources/cjs/FinishedStep';\nimport TimeoutStep from '@redhat-cloud-services/frontend-components-sources/cjs/TimeoutStep';\nimport computeSourceStatus from '@redhat-cloud-services/frontend-components-sources/cjs/computeSourceStatus';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../../views/formatters';\nimport { routes, replaceRouteId } from '../../Routes';\n\nimport { doAttachApp } from '../../api/doAttachApp';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nimport reducer, { initialState } from './reducer';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { diff } from 'deep-object-diff';\n\nexport const onSubmit = (\n  values,\n  formApi,\n  authenticationInitialValues,\n  dispatch,\n  setState,\n  initialValues,\n  appTypes,\n  setSelectedApp\n) => {\n  setState({ type: 'submit', values, formApi });\n\n  return doAttachApp(values, formApi, authenticationInitialValues, initialValues, appTypes)\n    .then(async (data) => {\n      checkSourceStatus(initialValues.source.id);\n      await dispatch(loadEntities());\n      setSelectedApp({ values: { application: null } });\n      return setState({ type: 'finish', data });\n    })\n    .catch((error) =>\n      setState({\n        type: 'error',\n        error,\n      })\n    );\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst AddApplication = () => {\n  const intl = useIntl();\n  const history = useHistory();\n  const selectedApp = useRef();\n  const saveSelectedApp = ({ values: { application } }) => (selectedApp.current = application);\n  const { app_type_id } = useParams();\n\n  const loaded = useIsLoaded();\n\n  const { appTypes, sourceTypesLoaded, appTypesLoaded, sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const [state, setState] = useReducer(reducer, initialState);\n\n  const container = useRef(document.createElement('div'));\n\n  const applicationType = appTypes.find(({ id }) => id === app_type_id);\n\n  const removeApp = () => {\n    setState({ type: 'reset' });\n\n    return removeAppSubmit(\n      {\n        id: state.data?.id,\n        display_name: appTypes.find(({ id }) => id === state.data?.application_type_id)?.display_name,\n      },\n      intl,\n      undefined,\n      dispatch,\n      source\n    );\n  };\n\n  useEffect(() => {\n    if (source) {\n      // When app is only removed, there is no need to reload values\n      const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n      setState({\n        type: 'setSourceAppslength',\n        length: source.applications.length,\n      });\n\n      if (!removeAppAction) {\n        if (source.endpoints && source.endpoints[0]) {\n          getSourcesApi()\n            .listEndpointAuthentications(source.endpoints[0].id)\n            .then(({ data }) =>\n              setState({\n                type: 'loadAuthentications',\n                authenticationsValues: data,\n                initialValues: {\n                  source,\n                  endpoint: source.endpoints[0],\n                  url: endpointToUrl(source.endpoints[0]),\n                  application: selectedApp.current,\n                },\n                values: {},\n              })\n            );\n        } else {\n          setState({\n            type: 'loadWithoutAuthentications',\n            initialValues: { source, application: selectedApp.current },\n            values: {},\n          });\n        }\n      }\n    }\n  }, [source]);\n\n  const goToSources = () => history.push(replaceRouteId(routes.sourcesDetail.path, source.id));\n\n  const title = intl.formatMessage(\n    {\n      id: 'sources.addApplicationNameTitle',\n      defaultMessage: 'Connect {appName}',\n    },\n    {\n      appName: applicationType?.display_name || 'application',\n    }\n  );\n  const description = intl.formatMessage(\n    {\n      id: 'sources.addApplicationNameDescription',\n      defaultMessage: 'Configure {appName} for this source.',\n    },\n    {\n      appName: applicationType?.display_name || 'application',\n    }\n  );\n\n  if ((!appTypesLoaded || !sourceTypesLoaded || !loaded || state.state === 'loading') && state.state !== 'submitting') {\n    return (\n      <WizardBody\n        goToSources={goToSources}\n        title={title}\n        description={description}\n        step={\n          <LoadingStep\n            customText={intl.formatMessage({\n              id: 'sources.loading',\n              defaultMessage: 'Loading, please wait.',\n            })}\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n          />\n        }\n      />\n    );\n  }\n\n  const onSubmitWrapper = (values, formApi) =>\n    onSubmit(values, formApi, state.authenticationsValues, dispatch, setState, state.initialValues, appTypes, saveSelectedApp);\n\n  if (state.state === 'submitting') {\n    return (\n      <WizardBody\n        title={title}\n        description={description}\n        goToSources={goToSources}\n        step={\n          <LoadingStep\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n            customText={intl.formatMessage({\n              id: 'wizard.loadingText defaultMessage=Validating source credentials',\n              defaultMessage: 'Validating source credentials',\n            })}\n          />\n        }\n      />\n    );\n  }\n\n  const onReset = () => setState({ type: 'reset' });\n\n  if (state.state !== 'wizard') {\n    let shownStep;\n\n    if (state.state !== 'finished') {\n      shownStep = (\n        <ErroredStep\n          onRetry={onReset}\n          onClose={goToSources}\n          returnButtonTitle={intl.formatMessage({\n            id: 'sources.retry',\n            defaultMessage: 'Retry',\n          })}\n          primaryAction={() => onSubmitWrapper(state.values, state.formApi)}\n          secondaryActions={\n            <Text\n              component=\"a\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage({\n                id: 'wizard.openTicket',\n                defaultMessage: 'Open a support case',\n              })}\n            </Text>\n          }\n        />\n      );\n    } else {\n      switch (computeSourceStatus(state.data)) {\n        default:\n          shownStep = (\n            <FinishedStep\n              title={intl.formatMessage({\n                id: 'sources.configurationSuccessful',\n                defaultMessage: 'Configuration successful',\n              })}\n              hideSourcesButton={true}\n              onClose={goToSources}\n              returnButtonTitle={intl.formatMessage({\n                id: 'sources.exit',\n                defaultMessage: 'Exit',\n              })}\n              successfulMessage={intl.formatMessage({\n                id: 'sources.successAddApp',\n                defaultMessage: 'Your application was successfully added.',\n              })}\n            />\n          );\n          break;\n        case 'unavailable':\n          shownStep = (\n            <ErroredStep\n              onRetry={onReset}\n              onClose={goToSources}\n              message={\n                state.data.applications?.[0]?.availability_status_error ||\n                state.data.endpoint?.[0]?.availability_status_error ||\n                intl.formatMessage({\n                  id: 'wizard.unknownError',\n                  defaultMessage: 'Unknown error',\n                })\n              }\n              title={intl.formatMessage({\n                id: 'sources.configurationSuccessful',\n                defaultMessage: 'Configuration unsuccessful',\n              })}\n              secondaryActions={\n                <Button variant=\"link\" onClick={removeApp}>\n                  {intl.formatMessage({\n                    id: 'wizard.removeApp',\n                    defaultMessage: 'Remove application',\n                  })}\n                </Button>\n              }\n              Component={() => (\n                <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>\n                  <Button variant=\"primary\" className=\"pf-u-mt-xl\">\n                    {intl.formatMessage({\n                      id: 'wizard.editSource',\n                      defaultMessage: 'Edit source',\n                    })}\n                  </Button>\n                </Link>\n              )}\n            />\n          );\n          break;\n        case 'timeout':\n          shownStep = (\n            <TimeoutStep\n              returnButtonTitle={intl.formatMessage({\n                id: 'sources.exit',\n                defaultMessage: 'Exit',\n              })}\n              onClose={goToSources}\n            />\n          );\n          break;\n      }\n    }\n\n    return <WizardBody title={title} description={description} goToSources={goToSources} step={shownStep} />;\n  }\n\n  const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n  const sourceTypeName = sourceType && sourceType.name;\n  const filteredAppTypes = appTypes\n    .filter((type) => type.supported_source_types.includes(sourceTypeName))\n    .filter(filterApps)\n    .map((type) => ({\n      value: type.id,\n      label: type.display_name,\n    }));\n\n  if (\n    !applicationType ||\n    source.applications.find(({ application_type_id }) => application_type_id === app_type_id) ||\n    !applicationType.supported_source_types.includes(sourceType.name)\n  ) {\n    return <Redirect to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const schema = createSchema(\n    intl,\n    sourceType,\n    applicationType,\n    state.authenticationsValues,\n    source,\n    container.current,\n    title,\n    description,\n    appTypes\n  );\n\n  const hasAvailableApps = filteredAppTypes.length > 0;\n  const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n  const onStay = () => {\n    container.current.hidden = false;\n    setState({ type: 'toggleCancelling' });\n  };\n\n  const cancelBeforeExit = (values) => {\n    // eslint-disable-next-line no-unused-vars\n    const { application: _a, ...initialValues } = state.initialValues;\n    // eslint-disable-next-line no-unused-vars\n    const { application: _a1, ...newValues } = values;\n\n    const isChanged = !isEmpty(diff(initialValues, newValues));\n\n    if (isChanged) {\n      container.current.hidden = true;\n      setState({ type: 'toggleCancelling', values });\n    } else {\n      goToSources();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CloseModal\n        title={intl.formatMessage({\n          id: 'sources.manageAppsCloseModalTitle',\n          defaultMessage: 'Exit application adding?',\n        })}\n        isOpen={state.isCancelling}\n        onStay={onStay}\n        onExit={goToSources}\n      />\n      <SourcesFormRenderer\n        schema={schema}\n        showFormControls={false}\n        onSubmit={onSubmitFinal}\n        onCancel={cancelBeforeExit}\n        initialValues={state.initialValues}\n        subscription={{ values: true }}\n        debug={saveSelectedApp}\n        clearedValue={null}\n        FormTemplate={FormTemplateWrapper}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddApplication;\n"],"sourceRoot":""}