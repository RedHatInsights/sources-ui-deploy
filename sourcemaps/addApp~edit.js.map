{"version":3,"sources":["webpack:///./src/api/doUpdateSource.js","webpack:///./src/api/patchCmValues.js","webpack:///./src/components/Authentication.js","webpack:///./src/utilities/SourcesFormRenderer.js"],"names":["parseUrl","url","scheme","host","port","path","u","URL","protocol","replace","hostname","defaultPort","pathname","error","urlOrHost","formData","endpoint","doUpdateSource","source","promises","push","getSourcesApi","updateSource","id","endPointPort","parseInt","endpointData","isNaN","undefined","updateEndpoint","endpoints","authentications","Object","keys","forEach","key","idWithoutPrefix","updateAuthentication","billing_source","credentials","cmDataOut","authentication","patchCmValues","Promise","all","data","axiosInstance","patch","COST_MANAGEMENT_API_BASE","Authentication","rest","formOptions","useFormApi","values","getState","name","match","authenticationId","isEditing","isModified","get","useState","edited","setEdited","firstClick","useRef","mounted","useEffect","current","pristine","doNotRequirePassword","validate","filter","type","validatorTypes","REQUIRED","componentProps","resolveProps","validated","helperText","label","SourcesFormRenderer","props","FormTemplate","componentMapper","mapperExtension","componentTypes","SWITCH","validatorMapper","PATTERN","MIN_LENGTH"],"mappings":"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","file":"js/addApp~edit.73a2eccfbc5d25dc637b.js","sourcesContent":["import { defaultPort } from '../components/SourcesTable/formatters';\nimport { getSourcesApi } from './entities';\nimport { patchCmValues } from './patchCmValues';\n\nexport const parseUrl = url => {\n    if (url === null) {\n        return {\n            scheme: null,\n            host: null,\n            port: null,\n            path: null\n        };\n    }\n\n    if (!url) {\n        return ({});\n    }\n\n    try {\n        const u = new URL(url);\n        const scheme =  u.protocol.replace(/:$/, '');\n\n        return {\n            scheme,\n            host: u.hostname,\n            port: u.port === '' ? defaultPort(scheme) : u.port,\n            path: u.pathname\n        };\n    } catch (error) {\n        return ({});\n    }\n};\n\nexport const urlOrHost = formData =>\n    formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData) => {\n    const promises = [];\n\n    if (formData.source) {\n        promises.push(getSourcesApi().updateSource(source.source.id, formData.source));\n    }\n\n    if (formData.endpoint || formData.url || formData.url === null) {\n        const { scheme, host, port, path } = urlOrHost(formData);\n        const endPointPort = port === null ? null : parseInt(port, 10);\n\n        const endpointData = {\n            scheme,\n            host,\n            path,\n            port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n            ...formData.endpoint\n        };\n\n        promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData));\n    }\n\n    if (formData.authentications) {\n        Object.keys(formData.authentications).forEach((key) => {\n            const idWithoutPrefix = key.replace('a', '');\n\n            promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]));\n        });\n    }\n\n    if (formData.billing_source || formData.credentials) {\n        let cmDataOut = {};\n\n        if (formData.credentials) {\n            cmDataOut = {\n                authentication: {\n                    credentials: formData.credentials\n                }\n            };\n        }\n\n        if (formData.billing_source) {\n            cmDataOut = {\n                ...cmDataOut,\n                billing_source: formData.billing_source\n            };\n        }\n\n        promises.push(patchCmValues(source.source.id, cmDataOut));\n    }\n\n    return Promise.all(promises);\n};\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const patchCmValues = (id, data) => axiosInstance.patch(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`, data);\n","import React, { useState, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\n\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nconst Authentication = (rest) => {\n    const formOptions = useFormApi();\n    const values = formOptions.getState().values;\n\n    const [authenticationId] = rest?.name?.match(/\\d+/) || [];\n    const isEditing = authenticationId || values.authentication?.id;\n\n    // If there is any value, the field is modified (password is always empty on start)\n    let isModified = get(values, rest.name);\n\n    const [edited, setEdited] = useState(!isEditing || isModified);\n    const firstClick = useRef(true);\n    const mounted = useRef(false);\n\n    useEffect(() => {\n        if (mounted.current) {\n            // reset on restart\n            if (\n                !firstClick.current && formOptions.getState().pristine\n            ) {\n                setEdited(false);\n                firstClick.current = true;\n            }\n\n            if (edited) {\n                firstClick.current = false;\n            }\n        }\n    });\n\n    useEffect(() => {\n        mounted.current = true;\n    }, []);\n\n    const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n    const componentProps = {\n        ...rest,\n        ...(isEditing ? {\n            validate: doNotRequirePassword,\n            resolveProps: validated,\n        } : {})\n    };\n\n    if (!edited) {\n        return (<FormGroup\n            helperText={componentProps.helperText}\n            label={componentProps.label}\n            onFocus={() => setEdited(true)}\n            isRequired\n        >\n            <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" />\n        </FormGroup>);\n    }\n\n    return (\n        <TextField { ...componentProps } autoFocus={true}/>\n    );\n};\n\nexport default Authentication;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources/cjs/sourceFormRenderer';\n\nimport Authentication from '../components/Authentication';\n\nconst SourcesFormRenderer = props => (\n    <FormRenderer\n        FormTemplate={FormTemplate}\n        componentMapper={{\n            ...componentMapper,\n            ...mapperExtension,\n            authentication: Authentication,\n            'switch-field': componentMapper[componentTypes.SWITCH]\n        }}\n        validatorMapper={{\n            'required-validator': validatorMapper[validatorTypes.REQUIRED],\n            'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n            'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n            'url-validator': validatorMapper[validatorTypes.URL]\n        }}\n        {...props}\n    />\n);\n\nexport default SourcesFormRenderer;\n"],"sourceRoot":""}