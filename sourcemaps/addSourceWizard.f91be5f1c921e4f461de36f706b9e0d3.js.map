{"version":3,"file":"js/addSourceWizard.6a82c8ba7bb876b3a32d.js","mappings":"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","sources":["webpack:///./src/components/FormComponents/Authentication.js","webpack:///./src/components/addSourceWizard/SourceAddModal.js","webpack:///./src/components/addSourceWizard/EditLink.js","webpack:///./src/components/addSourceWizard/FinalWizard.js","webpack:///./src/api/createSuperSource.js","webpack:///./src/api/createSource.js","webpack:///./src/components/addSourceWizard/index.js","webpack:///./src/utilities/filterTypes.js","webpack:///./src/utilities/isSuperKey.js"],"sourcesContent":["import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { useIntl } from 'react-intl';\n\nconst Authentication = (rest) => {\n  const intl = useIntl();\n  const formOptions = useFormApi();\n\n  const { authentication } = formOptions.getState().values;\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(authentication && authentication.id\n      ? {\n          isRequired: false,\n          helperText: intl.formatMessage(\n            {\n              id: 'wizard.changeAuthHelper',\n              defaultMessage: 'Changing this resets your current {label}.',\n            },\n            { label: rest.label }\n          ),\n          validate: doNotRequirePassword,\n        }\n      : {}),\n  };\n\n  const Component = componentMapper[componentTypes.TEXT_FIELD];\n\n  return <Component {...componentProps} />;\n};\n\nexport default Authentication;\n","import React, { useEffect, useReducer, useRef } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\n\nimport { Wizard } from '@patternfly/react-core';\n\nimport createSchema from './SourceAddSchema';\nimport { doLoadApplicationTypes, doLoadSourceTypes } from '../../api/wizardHelpers';\nimport { wizardDescription, wizardTitle } from './stringConstants';\nimport filterApps, { filterVendorAppTypes } from '../../utilities/filterApps';\nimport filterTypes, { filterVendorTypes } from '../../utilities/filterTypes';\nimport Authentication from '../FormComponents/Authentication';\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport LoadingStep from '../steps/LoadingStep';\nimport { useFlag } from '@unleash/proxy-client-react';\n\nconst initialValues = {\n  schema: {},\n  sourceTypes: [],\n  isLoading: true,\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst SourceAddModal = ({\n  sourceTypes,\n  applicationTypes,\n  disableAppSelection,\n  isCancelling,\n  onCancel,\n  values,\n  onSubmit,\n  selectedType,\n  initialWizardState,\n  activeCategory,\n}) => {\n  const enableLighthouse = useFlag('sources.wizard.lighthouse');\n\n  const reducer = (\n    state,\n    {\n      type,\n      sourceTypes,\n      applicationTypes,\n      container,\n      disableAppSelection,\n      intl,\n      selectedType,\n      initialWizardState,\n      activeCategory,\n      hcsEnrolled,\n    }\n  ) => {\n    switch (type) {\n      case 'loaded':\n        return {\n          ...state,\n          schema: createSchema(\n            sourceTypes.filter(filterTypes).filter(filterVendorTypes(activeCategory)),\n            applicationTypes.filter(filterApps).filter(filterVendorAppTypes(sourceTypes, activeCategory)),\n            disableAppSelection,\n            container,\n            intl,\n            selectedType,\n            initialWizardState,\n            activeCategory,\n            enableLighthouse,\n            hcsEnrolled\n          ),\n          isLoading: false,\n          sourceTypes,\n          applicationTypes,\n          hcsEnrolled,\n        };\n    }\n  };\n\n  const [{ schema, sourceTypes: stateSourceTypes, applicationTypes: stateApplicationTypes, isLoading }, dispatch] = useReducer(\n    reducer,\n    initialValues\n  );\n  const hcsEnrolled = useSelector(({ sources }) => sources.hcsEnrolled, shallowEqual);\n  const isMounted = useRef(false);\n  const container = useRef(document.createElement('div'));\n  const intl = useIntl();\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    const promises = [];\n    if (!sourceTypes) {\n      promises.push(doLoadSourceTypes());\n    }\n\n    if (!applicationTypes) {\n      promises.push(doLoadApplicationTypes());\n    }\n\n    Promise.all(promises).then((data) => {\n      const sourceTypesOut = data.find((types) => Object.prototype.hasOwnProperty.call(types, 'sourceTypes'));\n      const applicationTypesOut = data.find((types) => Object.prototype.hasOwnProperty.call(types, 'applicationTypes'));\n\n      if (isMounted.current) {\n        dispatch({\n          type: 'loaded',\n          sourceTypes: sourceTypes || sourceTypesOut.sourceTypes,\n          applicationTypes: applicationTypes || applicationTypesOut.applicationTypes,\n          hcsEnrolled,\n          disableAppSelection,\n          container: container.current,\n          intl,\n          selectedType,\n          initialWizardState,\n          activeCategory,\n        });\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    container.current.style.opacity = isCancelling ? 0 : 1;\n  }, [isCancelling]);\n\n  if (isLoading) {\n    return (\n      <Wizard\n        className=\"sources\"\n        isOpen={true}\n        onClose={onCancel}\n        title={wizardTitle(activeCategory)}\n        description={wizardDescription(activeCategory)}\n        steps={[\n          {\n            name: 'Loading',\n            component: <LoadingStep onClose={() => onCancel()} />,\n            isFinishedStep: true,\n          },\n        ]}\n      />\n    );\n  }\n\n  return (\n    <SourcesFormRenderer\n      initialValues={{\n        ...values,\n        ...(selectedType && { source_type: selectedType }),\n      }}\n      schema={schema}\n      onSubmit={(values, _formApi, wizardState) =>\n        onSubmit(values, stateSourceTypes, wizardState, stateApplicationTypes, hcsEnrolled)\n      }\n      onCancel={onCancel}\n      FormTemplate={FormTemplateWrapper}\n      subscription={{ values: true }}\n      componentMapper={{\n        authentication: Authentication,\n      }}\n    />\n  );\n};\n\nSourceAddModal.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  sourceTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      product_name: PropTypes.string.isRequired,\n      schema: PropTypes.shape({\n        authentication: PropTypes.array,\n        endpoint: PropTypes.object,\n      }),\n    })\n  ),\n  applicationTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      display_name: PropTypes.string.isRequired,\n    })\n  ),\n  values: PropTypes.object,\n  disableAppSelection: PropTypes.bool,\n  isCancelling: PropTypes.bool,\n  selectedType: PropTypes.string,\n  initialWizardState: PropTypes.object,\n  activeCategory: PropTypes.string,\n};\n\nSourceAddModal.defaultProps = {\n  values: {},\n  disableAppSelection: false,\n};\n\nexport default SourceAddModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport computeSourcesUrl from '../../utilities/computeSourcesUrl';\nimport AppLink from '../AppLink';\n\nconst EditLink = ({ id }) => {\n  const intl = useIntl();\n  const message = intl.formatMessage({ id: 'wizard.editSource', defaultMessage: 'Edit source' });\n  const { getApp, isBeta } = useChrome();\n\n  if (getApp() === 'sources') {\n    return (\n      <AppLink to={`/detail/${id}`}>\n        <Button variant=\"primary\" className=\"pf-u-mt-xl\">\n          {message}\n        </Button>\n      </AppLink>\n    );\n  }\n\n  return (\n    <Button\n      variant=\"primary\"\n      className=\"pf-u-mt-xl\"\n      component=\"a\"\n      target=\"_blank\"\n      href={`${computeSourcesUrl(isBeta())}/detail/${id}`}\n      rel=\"noopener noreferrer\"\n    >\n      {message}\n    </Button>\n  );\n};\n\nEditLink.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default EditLink;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { Button, Modal, Text, TextContent, Wizard } from '@patternfly/react-core';\n\nimport { wizardDescription, wizardTitle } from './stringConstants';\nimport { getSourcesApi } from '../../api/entities';\nimport computeSourceStatus from '../../utilities/computeSourceStatus';\nimport EditLink from './EditLink';\nimport computeSourceError from '../../utilities/computeSourceError';\n\nimport FinishedStep from '../steps/FinishedStep';\nimport LoadingStep from '../steps/LoadingStep';\nimport ErroredStep from '../steps/ErroredStep';\nimport TimeoutStep from '../steps/TimeoutStep';\nimport AmazonFinishedStep from '../steps/AmazonFinishedStep';\nimport { COST_MANAGEMENT_APP_ID, HCS_APP_NAME } from '../../utilities/constants';\n\nconst FinalWizard = ({\n  afterSubmit,\n  afterError,\n  isFinished,\n  isErrored,\n  successfulMessage,\n  hideSourcesButton,\n  returnButtonTitle,\n  reset,\n  createdSource = {},\n  tryAgain,\n  afterSuccess,\n  sourceTypes,\n  activeCategory,\n}) => {\n  const [isDeletingSource, setIsDeleting] = useState();\n  const [isAfterDeletion, setDeleted] = useState();\n  const isStorageOnly = createdSource.applications?.some((app) => app?.extra?.storage_only);\n  const isCostManagement = createdSource.applications?.some((app) => app?.application_type_id === COST_MANAGEMENT_APP_ID);\n  const isHcs = createdSource.applications?.some((app) => app?.extra?.hcs);\n\n  const intl = useIntl();\n\n  const removeSource = () => {\n    setIsDeleting(true);\n\n    return getSourcesApi()\n      .deleteSource(createdSource.id)\n      .then(() => {\n        afterSuccess && afterSuccess();\n        setDeleted(true);\n      })\n      .catch(() => setIsDeleting(false));\n  };\n\n  const addAnotherSourceButton = (\n    <Button variant=\"link\" onClick={reset}>\n      {intl.formatMessage({\n        id: 'wizard.addAnotherSource',\n        defaultMessage: 'Add another source',\n      })}\n    </Button>\n  );\n\n  let step;\n  if (isAfterDeletion) {\n    step = (\n      <FinishedStep\n        onClose={afterSubmit}\n        title={intl.formatMessage({ id: 'wizard.removeSourceSuccessTitle', defaultMessage: 'Removing successful' })}\n        successfulMessage={intl.formatMessage({\n          id: 'wizard.removeSourceSuccessDescription',\n          defaultMessage: 'Source was successfully removed.',\n        })}\n        hideSourcesButton={hideSourcesButton}\n        returnButtonTitle={returnButtonTitle}\n        secondaryActions={addAnotherSourceButton}\n      />\n    );\n  } else if (isDeletingSource) {\n    step = (\n      <LoadingStep\n        customText={intl.formatMessage({\n          id: 'wizard.removingSource',\n          defaultMessage: 'Removing source',\n        })}\n      />\n    );\n  } else if (isFinished) {\n    switch (computeSourceStatus(createdSource)) {\n      case 'unavailable':\n        step = (\n          <ErroredStep\n            onClose={afterSubmit}\n            secondaryActions={\n              <Button variant=\"link\" onClick={removeSource}>\n                {intl.formatMessage({ id: 'wizard.removeSource', defaultMessage: 'Remove source' })}\n              </Button>\n            }\n            Component={() => <EditLink id={createdSource.id} />}\n            message={computeSourceError(createdSource, intl)}\n            title={intl.formatMessage({ id: 'wizard.configurationUnsuccessful', defaultMessage: 'Configuration unsuccessful' })}\n          />\n        );\n        break;\n      case 'timeout':\n        step = (\n          <TimeoutStep\n            onClose={afterSubmit}\n            returnButtonTitle={returnButtonTitle}\n            secondaryActions={addAnotherSourceButton}\n            {...(isCostManagement &&\n              isStorageOnly && {\n                uuid: createdSource?.uid,\n              })}\n          />\n        );\n        break;\n      default:\n        if (createdSource.source_type_id === sourceTypes.find(({ name }) => name === 'amazon')?.id) {\n          step = <AmazonFinishedStep onClose={afterSubmit} />;\n        } else {\n          step = (\n            <FinishedStep\n              onClose={afterSubmit}\n              successfulMessage={\n                isCostManagement && isStorageOnly\n                  ? `You have chosen to manually customize the cost data set sent to ${\n                      isHcs ? HCS_APP_NAME : 'Cost Management'\n                    }, you will still need to perform additional steps to complete the process.`\n                  : successfulMessage\n              }\n              {...(isCostManagement &&\n                isStorageOnly && {\n                  title: <FormattedMessage id=\"wizard.waitTheresMore\" defaultMessage=\"Success, but wait there's more!\" />,\n                  uuid: createdSource?.uid,\n                })}\n              hideSourcesButton={hideSourcesButton}\n              returnButtonTitle={returnButtonTitle}\n              secondaryActions={addAnotherSourceButton}\n            />\n          );\n        }\n\n        break;\n    }\n  } else if (isErrored) {\n    step = (\n      <ErroredStep\n        onClose={afterError}\n        primaryAction={tryAgain}\n        secondaryActions={\n          <Text\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n            rel=\"noopener noreferrer\"\n          >\n            {intl.formatMessage({ id: 'wizard.openTicket', defaultMessage: 'Open a support case' })}\n          </Text>\n        }\n        returnButtonTitle={intl.formatMessage({\n          id: 'wizard.retryText',\n          defaultMessage: 'Retry',\n        })}\n      />\n    );\n  } else {\n    step = (\n      <LoadingStep\n        customText={intl.formatMessage({\n          id: 'wizard.loadingText',\n          defaultMessage: 'Validating credentials',\n        })}\n        description={\n          <TextContent>\n            <Text className=\"pf-u-mb-md\">\n              {intl.formatMessage({\n                id: 'wizard.loadingDescription-a',\n                defaultMessage:\n                  // eslint-disable-next-line max-len\n                  \"This might take some time. You'll receive a notification if you are still in the Sources application when the process completes. Otherwise, you can check the status in the main sources table at any time.\",\n              })}\n            </Text>\n            <Text>\n              {intl.formatMessage({\n                id: 'wizard.loadingDescription-b',\n                defaultMessage: 'In the meantime, you can close this window while the validation process continues.',\n              })}\n            </Text>\n          </TextContent>\n        }\n        onClose={afterError}\n        cancelTitle={intl.formatMessage({ id: 'wizard.close', defaultMessage: 'Close' })}\n      />\n    );\n  }\n\n  const appendTo = React.useMemo(() => document.querySelector('.pf-c-page.chr-c-page'), []);\n\n  return (\n    <Modal isOpen width=\"58%\" hasNoBodyWrapper appendTo={appendTo} showClose={false}>\n      <Wizard\n        className=\"sources\"\n        onClose={isFinished ? afterSubmit : afterError}\n        title={wizardTitle(activeCategory)}\n        description={wizardDescription(activeCategory)}\n        steps={[\n          {\n            name: 'Finish',\n            component: step,\n            isFinishedStep: true,\n          },\n        ]}\n      />\n    </Modal>\n  );\n};\n\nFinalWizard.propTypes = {\n  afterSubmit: PropTypes.func.isRequired,\n  afterError: PropTypes.func.isRequired,\n  isFinished: PropTypes.bool.isRequired,\n  isErrored: PropTypes.bool.isRequired,\n  successfulMessage: PropTypes.node.isRequired,\n  hideSourcesButton: PropTypes.bool,\n  returnButtonTitle: PropTypes.node.isRequired,\n  errorMessage: PropTypes.node,\n  reset: PropTypes.func,\n  createdSource: PropTypes.object,\n  tryAgain: PropTypes.func,\n  afterSuccess: PropTypes.func,\n  sourceTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n  activeCategory: PropTypes.string,\n};\n\nexport default FinalWizard;\n","import { getSourcesApi } from './entities';\nimport { checkAppAvailability } from './getApplicationStatus';\nimport handleError from './handleError';\n\nconst createSuperSource = async (formData) => {\n  try {\n    const startDate = new Date();\n\n    const sourceData = await getSourcesApi().bulkCreate({\n      sources: [{ ...formData.source, source_type_name: formData.source_type }],\n      authentications: [{ ...formData.authentication, resource_name: formData.source.name, resource_type: 'source' }],\n      applications: formData.applications.map((appId) => ({\n        application_type_id: appId,\n        source_name: formData.source.name,\n      })),\n    });\n\n    const authenticationDataOut = await checkAppAvailability(\n      sourceData.authentications[0].id,\n      undefined,\n      undefined,\n      'showAuthentication',\n      startDate\n    );\n\n    return {\n      ...sourceData,\n      ...sourceData.sources[0],\n      authentications: [authenticationDataOut],\n    };\n  } catch (error) {\n    const errorMessage = await handleError(error);\n    throw errorMessage;\n  }\n};\n\nexport default createSuperSource;\n","import { handleError } from './handleError';\n\nimport { getSourcesApi } from './entities';\nimport { checkAppAvailability } from './getApplicationStatus';\nimport checkSourceStatus from './checkSourceStatus';\nimport { NO_APPLICATION_VALUE } from '../components/addSourceWizard/stringConstants';\nimport emptyAuthType from '../components/addSourceWizard/emptyAuthType';\n\nexport const parseUrl = (url) => {\n  if (!url) {\n    return {};\n  }\n\n  try {\n    const u = new URL(url);\n    return {\n      scheme: u.protocol.replace(/:$/, ''),\n      host: u.hostname,\n      port: u.port,\n      path: u.pathname,\n    };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(error);\n    return {};\n  }\n};\n\nexport const urlOrHost = (formData) => (formData.url ? parseUrl(formData.url) : formData);\n\nexport const handleErrorWrapper = (sourceId) => async (error) => await handleError(error, sourceId);\n\nexport const doCreateSource = async (formData, timetoutedApps = [], applicationTypes) => {\n  let source;\n  try {\n    const payload = {\n      sources: [{ ...formData.source, source_type_name: formData.source_type }],\n      endpoints: [],\n      authentications: [],\n      applications: [],\n    };\n\n    const hasEndpoint = formData.url || formData.endpoint;\n    if (hasEndpoint) {\n      const { scheme, host, port, path } = urlOrHost(formData);\n\n      const endPointPort = parseInt(port, 10);\n\n      payload.endpoints.push({\n        ...formData.endpoint,\n        default: true,\n        source_name: formData.source.name,\n        scheme,\n        host,\n        port: isNaN(endPointPort) ? undefined : endPointPort,\n        path,\n      });\n    }\n\n    const hasApplication =\n      formData.application?.application_type_id && formData.application?.application_type_id !== NO_APPLICATION_VALUE;\n\n    if (hasApplication) {\n      payload.applications.push({\n        ...formData.application,\n        source_name: formData.source.name,\n      });\n    }\n\n    if (formData.authentication && formData.authentication.authtype !== emptyAuthType.type) {\n      payload.authentications.push({\n        ...formData.authentication,\n        resource_type: hasEndpoint ? 'endpoint' : hasApplication ? 'application' : 'source',\n        resource_name: formData.source.name,\n        ...(hasApplication && {\n          resource_name: applicationTypes?.find(({ id }) => id === formData.application.application_type_id)?.name,\n        }),\n        ...(hasEndpoint && { resource_name: urlOrHost(formData).host }),\n      });\n    }\n\n    const dataOut = await getSourcesApi().bulkCreate(payload);\n\n    source = dataOut.sources?.[0];\n    let app = dataOut.applications?.[0];\n    let endpoint = dataOut.endpoints?.[0];\n    let auth = dataOut.authentications?.[0];\n\n    if (hasEndpoint && hasApplication) {\n      await getSourcesApi().createAuthApp({\n        application_id: app.id,\n        authentication_id: auth.id,\n      });\n    }\n\n    await checkSourceStatus(source.id);\n\n    if (app) {\n      const timeout = timetoutedApps.includes(app.application_type_id) ? 10000 : 0;\n      app = await checkAppAvailability(app.id, timeout);\n    }\n\n    if (endpoint) {\n      endpoint = await checkAppAvailability(endpoint.id, undefined, undefined, 'getEndpoint');\n    }\n\n    return {\n      ...source,\n      endpoint: [endpoint].filter(Boolean),\n      applications: [app].filter(Boolean),\n    };\n  } catch (error) {\n    const errorMessage = await handleError(error, source ? source.id : undefined);\n    throw errorMessage;\n  }\n};\n","import React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core';\n\nimport Form from './SourceAddModal';\nimport FinalWizard from './FinalWizard';\n\nimport { wizardTitle } from './stringConstants';\n\nimport isSuperKey from '../../utilities/isSuperKey';\nimport { CLOUD_VENDOR, REDHAT_VENDOR, timeoutedApps } from '../../utilities/constants';\nimport createSuperSource from '../../api/createSuperSource';\nimport { doCreateSource } from '../../api/createSource';\nimport CloseModal from '../CloseModal';\n\nconst prepareInitialValues = (initialValues, activeCategory) => ({\n  isSubmitted: false,\n  isFinished: false,\n  isErrored: false,\n  isCancelling: false,\n  values: initialValues,\n  createdSource: {},\n  error: undefined,\n  activeCategory,\n});\n\nconst reducer = (state, { type, values, data, error, initialValues, sourceTypes, applicationTypes }) => {\n  switch (type) {\n    case 'reset':\n      return prepareInitialValues(initialValues, state.activeCategory);\n    case 'prepareSubmitState':\n      return {\n        ...state,\n        isFinished: false,\n        isErrored: false,\n        error: undefined,\n        isSubmitted: true,\n        values,\n        sourceTypes,\n        applicationTypes,\n      };\n    case 'setSubmitted':\n      return { ...state, isFinished: true, createdSource: data };\n    case 'setErrored':\n      return { ...state, isErrored: true, error: error.toString() };\n    case 'onStay':\n      return { ...state, isCancelling: false };\n    case 'showCancelModal':\n      return { ...state, isCancelling: true, values };\n  }\n};\n\nconst AddSourceWizard = ({\n  successfulMessage,\n  isOpen,\n  sourceTypes,\n  applicationTypes,\n  disableAppSelection,\n  hideSourcesButton,\n  returnButtonTitle,\n  initialValues,\n  onClose,\n  afterSuccess,\n  selectedType,\n  initialWizardState,\n  submitCallback,\n  activeCategory: propsActiveCategory,\n}) => {\n  const [{ isErrored, isFinished, isSubmitted, values, error, isCancelling, createdSource, activeCategory, ...state }, dispatch] =\n    useReducer(reducer, prepareInitialValues(initialValues, propsActiveCategory));\n\n  const onSubmit = (formValues, sourceTypes, wizardState, applicationTypes, hcsEnrolled) => {\n    dispatch({ type: 'prepareSubmitState', values: formValues, sourceTypes, applicationTypes });\n\n    const fn = isSuperKey(formValues.source) ? createSuperSource : doCreateSource;\n    const submitValues = {\n      ...formValues,\n      application: { ...formValues.application, extra: { ...(formValues.application?.extra || {}), hcs: !!hcsEnrolled } },\n    };\n\n    return fn(submitValues, timeoutedApps(applicationTypes), applicationTypes)\n      .then((data) => {\n        afterSuccess && afterSuccess(data);\n        submitCallback && submitCallback({ isSubmitted: true, createdSource: data, sourceTypes });\n        dispatch({ type: 'setSubmitted', data });\n      })\n      .catch((error) => {\n        submitCallback && submitCallback({ isErrored: true, error, values: formValues, sourceTypes, wizardState });\n        dispatch({ type: 'setErrored', error });\n      });\n  };\n\n  const reset = () => dispatch({ type: 'reset', initialValues });\n\n  const afterSubmit = () => {\n    onClose(undefined, createdSource);\n    reset();\n  };\n\n  const onCancelBeforeExit = (values) => (isEmpty(values) ? onClose({}) : dispatch({ type: 'showCancelModal', values }));\n\n  const onExit = () => onClose(values);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  if (!isSubmitted) {\n    return (\n      <React.Fragment>\n        {isCancelling && <CloseModal onExit={onExit} onStay={() => dispatch({ type: 'onStay' })} />}\n        <Form\n          isCancelling={isCancelling}\n          values={values}\n          onSubmit={onSubmit}\n          onCancel={onCancelBeforeExit}\n          sourceTypes={sourceTypes}\n          applicationTypes={applicationTypes}\n          disableAppSelection={disableAppSelection}\n          selectedType={selectedType}\n          initialWizardState={initialWizardState}\n          activeCategory={activeCategory}\n        />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <FinalWizard\n      afterSubmit={afterSubmit}\n      afterError={() => onClose({})}\n      isFinished={isFinished}\n      isErrored={isErrored}\n      successfulMessage={successfulMessage}\n      hideSourcesButton={hideSourcesButton}\n      returnButtonTitle={returnButtonTitle}\n      errorMessage={error}\n      reset={reset}\n      createdSource={createdSource}\n      tryAgain={() => onSubmit(values, state.sourceTypes, undefined, state.applicationTypes)}\n      afterSuccess={afterSuccess}\n      sourceTypes={state.sourceTypes}\n      activeCategory={activeCategory}\n    />\n  );\n};\n\nAddSourceWizard.propTypes = {\n  afterSuccess: PropTypes.func,\n  sourceTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      product_name: PropTypes.string.isRequired,\n      schema: PropTypes.shape({\n        authentication: PropTypes.array,\n        endpoint: PropTypes.object,\n      }),\n    })\n  ),\n  applicationTypes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      display_name: PropTypes.string.isRequired,\n    })\n  ),\n  onClose: PropTypes.func.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  successfulMessage: PropTypes.node,\n  initialValues: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOf([PropTypes.string, PropTypes.array, PropTypes.number, PropTypes.bool]),\n  }),\n  disableAppSelection: PropTypes.bool,\n  hideSourcesButton: PropTypes.bool,\n  returnButtonTitle: PropTypes.node,\n  selectedType: PropTypes.string,\n  initialWizardState: PropTypes.object,\n  submitCallback: PropTypes.func,\n  activeCategory: PropTypes.oneOf([REDHAT_VENDOR, CLOUD_VENDOR]),\n};\n\nAddSourceWizard.defaultProps = {\n  successfulMessage: <FormattedMessage id=\"wizard.successfulMessage\" defaultMessage=\"Your source was successfully added.\" />,\n  initialValues: {},\n  returnButtonTitle: <FormattedMessage id=\"wizard.goBackToSources\" defaultMessage=\"Go back to Sources\" />,\n};\n\nexport const AddSourceButton = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Button variant=\"primary\" onClick={() => setIsOpen(true)}>\n        {wizardTitle()}\n      </Button>\n      <AddSourceWizard isOpen={isOpen} onClose={() => setIsOpen(false)} {...props} />\n    </React.Fragment>\n  );\n};\n\nexport default AddSourceWizard;\n","import { ANSIBLE_TOWER_NAME, SATELLITE_NAME } from './constants';\n\nconst filterTypes = (type) => type.schema;\n\nconst hiddenTypes = [SATELLITE_NAME, ANSIBLE_TOWER_NAME];\n\nexport const filterVendorTypes =\n  (activeCategory, showHidden) =>\n  ({ category, name }) => {\n    if (showHidden) {\n      return category === activeCategory;\n    } else {\n      return category === activeCategory && !hiddenTypes.includes(name);\n    }\n  };\n\nexport default filterTypes;\n","import { ACCOUNT_AUTHORIZATION } from '../components/constants';\n\nconst isSuperKey = (source) => source?.app_creation_workflow === ACCOUNT_AUTHORIZATION;\n\nexport default isSuperKey;\n"],"names":["rest","intl","useIntl","authentication","useFormApi","getState","values","doNotRequirePassword","validate","filter","type","validatorTypes","REQUIRED","componentProps","id","isRequired","helperText","formatMessage","defaultMessage","label","Component","componentMapper","componentTypes","TEXT_FIELD","initialValues","schema","sourceTypes","isLoading","FormTemplateWrapper","props","showFormControls","SourceAddModal","applicationTypes","disableAppSelection","isCancelling","onCancel","onSubmit","selectedType","initialWizardState","activeCategory","enableLighthouse","useFlag","useReducer","state","container","hcsEnrolled","createSchema","filterTypes","filterVendorTypes","filterApps","filterVendorAppTypes","stateSourceTypes","stateApplicationTypes","dispatch","useSelector","sources","shallowEqual","isMounted","useRef","document","createElement","useEffect","current","promises","push","doLoadSourceTypes","doLoadApplicationTypes","Promise","all","then","data","sourceTypesOut","find","types","Object","prototype","hasOwnProperty","call","applicationTypesOut","style","opacity","Wizard","className","isOpen","onClose","title","wizardTitle","description","wizardDescription","steps","name","component","LoadingStep","isFinishedStep","SourcesFormRenderer","source_type","_formApi","wizardState","FormTemplate","subscription","Authentication","propTypes","PropTypes","product_name","endpoint","display_name","defaultProps","EditLink","message","useChrome","getApp","isBeta","AppLink","to","Button","variant","target","href","computeSourcesUrl","rel","FinalWizard","step","afterSubmit","afterError","isFinished","isErrored","successfulMessage","hideSourcesButton","returnButtonTitle","reset","createdSource","tryAgain","afterSuccess","useState","isDeletingSource","setIsDeleting","isAfterDeletion","setDeleted","isStorageOnly","applications","some","app","extra","storage_only","isCostManagement","application_type_id","COST_MANAGEMENT_APP_ID","isHcs","hcs","addAnotherSourceButton","onClick","FinishedStep","secondaryActions","customText","computeSourceStatus","ErroredStep","getSourcesApi","deleteSource","computeSourceError","TimeoutStep","uuid","uid","source_type_id","AmazonFinishedStep","HCS_APP_NAME","primaryAction","Text","TextContent","cancelTitle","appendTo","React","querySelector","Modal","width","hasNoBodyWrapper","showClose","errorMessage","formData","startDate","Date","bulkCreate","source","source_type_name","authentications","resource_name","resource_type","map","appId","source_name","sourceData","checkAppAvailability","undefined","authenticationDataOut","handleError","urlOrHost","url","u","URL","scheme","protocol","replace","host","hostname","port","path","pathname","error","console","log","parseUrl","doCreateSource","timetoutedApps","payload","endpoints","hasEndpoint","endPointPort","parseInt","default","isNaN","hasApplication","application","NO_APPLICATION_VALUE","authtype","emptyAuthType","dataOut","auth","createAuthApp","application_id","authentication_id","checkSourceStatus","timeout","includes","Boolean","prepareInitialValues","isSubmitted","reducer","toString","AddSourceWizard","submitCallback","propsActiveCategory","formValues","isSuperKey","createSuperSource","timeoutedApps","CloseModal","onExit","onStay","isEmpty","REDHAT_VENDOR","CLOUD_VENDOR","AddSourceButton","setIsOpen","hiddenTypes","SATELLITE_NAME","ANSIBLE_TOWER_NAME","showHidden","category","app_creation_workflow","ACCOUNT_AUTHORIZATION"],"sourceRoot":""}