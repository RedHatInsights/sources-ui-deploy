{"version":3,"sources":["webpack:///./src/components/CredentialsForm/ModalFormTemplate.js","webpack:///./src/components/CredentialsForm/CredentialsForm.js"],"names":["CustomFormWrapper","props","Form","id","CustomButtons","intl","useIntl","onCancel","useFormApi","subscription","submitting","pristine","invalid","validating","className","ActionGroup","Button","variant","form","type","isDisabled","formatMessage","defaultMessage","onClick","ModalFormTemplate","ModalProps","Modal","footer","showFormControls","FormWrapper","propTypes","PropTypes","initialState","loading","initialValues","reducer","state","values","authentication","source","useSource","history","useHistory","reduxDispatch","useDispatch","sourceTypes","useSelector","sources","shallowEqual","sourceTypeName","find","source_type_id","name","useReducer","dispatch","goBackToDetail","push","replaceRouteId","routes","title","description","useEffect","getSourcesApi","listSourceAuthentications","then","data","authhype","schema","is_superkey","authtype","isOpen","onClose","Bullseye","Spinner","SourcesFormRenderer","clearedValue","fields","generateSuperKeyFields","onSubmit","tenant","source_id","resource_id","updateAuthentication","addMessage","FormTemplate"],"mappings":"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","file":"js/credentialsForm.bd59360e865da5dc9dad.js","sourcesContent":["import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nimport { Modal, ActionGroup, Button, Form } from '@patternfly/react-core';\n\nconst CustomFormWrapper = (props) => <Form {...props} id=\"modal-form\" />;\n\nconst CustomButtons = () => {\n  const intl = useIntl();\n  const { onCancel } = useFormApi();\n\n  return (\n    <FormSpy\n      subscription={{\n        submitting: true,\n        pristine: true,\n        invalid: true,\n        validating: true,\n      }}\n    >\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-c-form\">\n          <ActionGroup className=\"pf-u-mt-0\">\n            <Button\n              variant=\"primary\"\n              form=\"modal-form\"\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {intl.formatMessage({\n                id: 'sources.submit',\n                defaultMessage: 'Submit',\n              })}\n            </Button>\n            <Button variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {intl.formatMessage({\n                id: 'sources.cancel',\n                defaultMessage: 'Cancel',\n              })}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nconst ModalFormTemplate = ({ ModalProps, ...props }) => (\n  <Modal {...ModalProps} footer={<CustomButtons />}>\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ModalFormTemplate;\n","import React, { useEffect, useReducer } from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { Modal, Spinner, Bullseye } from '@patternfly/react-core';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport { replaceRouteId, routes } from '../../Routes';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport ModalFormTemplate from './ModalFormTemplate';\nimport { getSourcesApi } from '../../api/entities';\nimport { addMessage } from '../../redux/sources/actions';\nimport generateSuperKeyFields from '../../components/addSourceWizard/superKey/generateSuperKeyFields';\n\nconst initialState = {\n  loading: true,\n  initialValues: {},\n};\n\nconst reducer = (state, { type, values }) => {\n  switch (type) {\n    case 'loaded':\n      return {\n        ...state,\n        loading: false,\n        initialValues: {\n          authentication: values,\n        },\n      };\n  }\n};\n\nconst CredentialsForm = () => {\n  const source = useSource();\n  const history = useHistory();\n  const intl = useIntl();\n  const reduxDispatch = useDispatch();\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes, shallowEqual);\n  const sourceTypeName = sourceTypes.find(({ id }) => id === source.source_type_id).name;\n\n  const [{ loading, initialValues }, dispatch] = useReducer(reducer, initialState);\n\n  const goBackToDetail = () => history.push(replaceRouteId(routes.sourcesDetail.path, source.id));\n\n  const title = intl.formatMessage({ id: 'editCredentials.title', defaultMessage: 'Edit account authorization credentials' });\n  const description = intl.formatMessage({\n    id: 'editCredentials.description',\n    defaultMessage:\n      'Use the fields below to reset your account authorization credentials. It may take some time to validate new information.',\n  });\n\n  useEffect(() => {\n    getSourcesApi()\n      .listSourceAuthentications(source.id)\n      .then(({ data }) => {\n        const authhype = sourceTypes\n          .find(({ name }) => name === sourceTypeName)\n          ?.schema.authentication.find(({ is_superkey }) => is_superkey);\n\n        const values = data.find(({ authtype }) => authtype === authhype.type);\n\n        dispatch({ type: 'loaded', values });\n      });\n  }, []);\n\n  if (loading) {\n    return (\n      <Modal title={title} variant=\"small\" isOpen onClose={goBackToDetail}>\n        <Bullseye className=\"pf-u-m-2xl\">\n          <Spinner />\n        </Bullseye>\n      </Modal>\n    );\n  }\n\n  return (\n    <SourcesFormRenderer\n      clearedValue={null}\n      schema={{\n        fields: [generateSuperKeyFields(sourceTypes, sourceTypeName)],\n      }}\n      // eslint-disable-next-line no-unused-vars\n      onSubmit={async ({ authentication: { tenant, source_id, id, authtype, resource_id, ...values } }) => {\n        goBackToDetail();\n\n        try {\n          await getSourcesApi().updateAuthentication(id, values);\n\n          reduxDispatch(\n            addMessage({\n              title: intl.formatMessage({ id: 'editCredentials.alert.title', defaultMessage: 'New credentials saved' }),\n              description: intl.formatMessage({\n                id: 'editCredentials.alert.description',\n                defaultMessage: 'It may take some time to validate your new credentials. Check this page for status updates.',\n              }),\n              variant: 'info',\n            })\n          );\n        } catch (error) {\n          reduxDispatch(\n            addMessage({\n              title: intl.formatMessage({\n                id: 'editCredentials.alert.warning.title',\n                defaultMessage: 'Error updating credentials',\n              }),\n              description: intl.formatMessage({\n                id: 'editCredentials.alert.warning.description',\n                defaultMessage:\n                  'There was a problem while trying to update credentials. Please try again. If the error persists, open a support case.',\n              }),\n              variant: 'danger',\n            })\n          );\n        }\n      }}\n      initialValues={initialValues}\n      FormTemplate={(props) => (\n        <ModalFormTemplate\n          {...props}\n          ModalProps={{\n            isOpen: true,\n            onClose: goBackToDetail,\n            variant: 'small',\n            title,\n            description,\n          }}\n        />\n      )}\n      onCancel={goBackToDetail}\n    />\n  );\n};\n\nexport default CredentialsForm;\n"],"sourceRoot":""}