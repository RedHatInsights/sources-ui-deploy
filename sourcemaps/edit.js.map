{"version":3,"sources":["webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/components/Authentication.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/ApplicationSelect.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./src/api/doUpdateSource.js","webpack:///./src/api/patchCmValues.js","webpack:///./src/api/doLoadSourceForEdit.js","webpack:///./src/api/getCmValues.js","webpack:///./src/components/SourceEditForm/Header.js","webpack:///./src/components/SourceEditForm/helpers.js","webpack:///./src/components/SourceEditForm/onSubmit.js","webpack:///./src/components/SourceEditForm/parser/AdditionalInfoBar.js","webpack:///./src/components/SourceEditForm/parser/EditAlert.js","webpack:///./src/components/SourceEditForm/parser/genericInfo.js","webpack:///./src/components/SourceEditForm/parser/endpoint.js","webpack:///./src/components/SourceEditForm/parser/AuthenticationId.js","webpack:///./src/components/SourceEditForm/sourceEditContext.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuthPlaceholder.js","webpack:///./src/components/SourceEditForm/parser/GridLayout.js","webpack:///./src/components/SourceEditForm/parser/authentication.js","webpack:///./src/components/SourceEditForm/parser/application.js","webpack:///./src/components/SourceEditForm/parser/titleField.js","webpack:///./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack:///./src/components/SourceEditForm/reducer.js","webpack:///./src/components/ModalFormTemplate.js","webpack:///./src/components/SourceEditForm/WrapperModal.js","webpack:///./src/components/SourceEditForm/SubmittingModal.js","webpack:///./src/components/SourceEditForm/TimeoutedModal.js","webpack:///./src/components/SourceEditForm/ErroredModal.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuth.js","webpack:///./src/components/SourceEditForm/SourceEditModal.js","webpack:///./src/components/SourceEditForm/importedRedirect.js"],"names":["removeAppSubmit","app","intl","onCancel","dispatch","source","titleSuccess","formatMessage","id","defaultMessage","name","display_name","titleError","removeApplication","Authentication","rest","formOptions","useFormApi","values","getState","match","isEditing","authentication","isModified","get","useState","edited","setEdited","firstClick","useRef","mounted","useEffect","current","pristine","doNotRequirePassword","validate","filter","type","validatorTypes","REQUIRED","componentProps","resolveProps","validated","FormGroup","helperText","label","onFocus","isRequired","TextInput","aria-label","value","autoFocus","RemoveAppModal","container","useIntl","appTypes","useSelector","sources","useSource","useDispatch","hidden","dependentApps","dependent_applications","map","appName","appType","find","sourceAppsNames","includes","x","Modal","className","isOpen","onClose","variant","header","Title","headingLevel","size","actions","key","onClick","TextContent","Text","component","TextVariants","p","length","apps","propTypes","PropTypes","shape","string","arrayOf","func","instanceOf","Element","RemoveRadio","option","setApplicationToRemove","Button","htmlFor","application_type_id","ApplicationSelect","props","useFieldApi","options","input","onChange","removingApp","applications","isCurrentlyRemoving","isDeleting","appIds","reduce","acc","Radio","isChecked","isDisabled","SourcesFormRenderer","FormTemplate","componentMapper","mapperExtension","urlOrHost","formData","url","scheme","host","port","path","u","URL","protocol","replace","hostname","defaultPort","pathname","error","parseUrl","endpoint","doUpdateSource","data","promises","push","getSourcesApi","updateSource","endPointPort","parseInt","endpointData","isNaN","undefined","updateEndpoint","endpoints","authentications","Object","keys","forEach","idWithoutPrefix","updateAuthentication","billing_source","credentials","cmDataOut","axiosInstance","patch","COST_MANAGEMENT_API_BASE","Promise","all","doLoadSourceForEdit","hasCostManagement","showSource","listSourceEndpoints","doLoadApplicationsForEdit","then","a","sourceData","costManagement","basicValues","addToApp","appAuthenticationIds","auth","showAuthentication","appAuths","index","listEndpointAuthentications","Header","Grid","GridItem","xs","node","selectOnlyEditedValues","editing","filteredValues","set","prepareInitialValues","sourceTypeName","auhenticationsFinal","mergeAuths","curr","endpointToUrl","source_type","onSubmit","setState","checkSourceStatus","loadEntities","checkAppAvailability","statusResults","unavailableApp","availability_status","UNAVAILABLE","message","title","description","availability_status_error","some","AdditionalInfoBar","sourceType","hasGutter","md","h4","product_name","join","EditAlert","Alert","isInline","genericInfo","sourceId","Content","condition","when","isNotEmpty","componentTypes","TEXT_FIELD","asyncValidatorDebounced","endpointFields","schema","modifiedFields","fields","field","hardcodedSchemas","getEnhancedEndpointField","subForm","SUB_FORM","validation","isEmpty","AuthenticationId","sourceEditContext","createContext","RemoveAuthPlaceholder","Bullseye","Spinner","small","GridLayout","renderForm","useContext","Flex","removingAuth","array","getLastPartOfName","fieldName","split","pop","getAdditionalFields","stepKey","modifyAuthSchemas","editedName","startsWith","createAuthFieldName","finalField","authenticationFields","schemaAuth","authtype","additionalStepKeys","getAdditionalAuthStepsKeys","additionalStepsFields","getAdditionalAuthSteps","step","flatMap","enhancedFields","getEnhancedAuthField","specialModifierAWS","APP_NAMES","createOneAppFields","appendClusterIdentifier","unusedAuthsWarning","PLAIN_TEXT","applicationsFields","authenticationTypesFormGroups","appsLength","authenticationsInputs","auths","Boolean","unusedAuthentications","TABS","isBox","TitleAndDescription","titleField","hideField","parseSourceToSchema","initialState","loading","initialValues","isSubmitting","initialLoad","submitError","isTimeouted","reducer","state","authId","isAuthRemoving","CustomFormWrapper","Form","CustomButtons","onReset","subscription","submitting","invalid","validating","ActionGroup","form","ModalFormTemplate","ModalProps","footer","showFormControls","FormWrapper","object","FakeFooter","history","useHistory","routes","WrapperModal","children","sourceRedux","SubmittingModal","customText","TimeoutedModal","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","WrenchIcon","color","newLine","ErroredModal","onRetry","secondaryActions","target","href","rel","returnButtonTitle","RemoveAuth","doDeleteAuthentication","addMessage","handleError","SourceEditModal","useReducer","isLoaded","useIsLoaded","shallowEqual","sourceTypes","sourceTypesLoaded","appTypesLoaded","imported","redirectWhenImported","source_type_id","isLoading","returnToSources","Provider","formApi","dirtyFields","clearedValue"],"mappings":"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","file":"js/edit.923b375bd35a13616bda.js","sourcesContent":["import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import React, { useState, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\n\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nconst Authentication = (rest) => {\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  const [authenticationId] = rest?.name?.match(/\\d+/) || [];\n  const isEditing = authenticationId || values.authentication?.id;\n\n  // If there is any value, the field is modified (password is always empty on start)\n  let isModified = get(values, rest.name);\n\n  const [edited, setEdited] = useState(!isEditing || isModified);\n  const firstClick = useRef(true);\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      // reset on restart\n      if (!firstClick.current && formOptions.getState().pristine) {\n        setEdited(false);\n        firstClick.current = true;\n      }\n\n      if (edited) {\n        firstClick.current = false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(isEditing\n      ? {\n          validate: doNotRequirePassword,\n          resolveProps: validated,\n        }\n      : {}),\n  };\n\n  if (!edited && isEditing) {\n    return (\n      <FormGroup helperText={componentProps.helperText} label={componentProps.label} onFocus={() => setEdited(true)} isRequired>\n        <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" />\n      </FormGroup>\n    );\n  }\n\n  return <TextField {...componentProps} autoFocus={true} />;\n};\n\nexport default Authentication;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\n\nconst RemoveAppModal = ({ app, onCancel, container }) => {\n  const intl = useIntl();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  useEffect(() => {\n    if (container) {\n      container.hidden = true;\n    }\n  }, []);\n\n  const dependentApps = app.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return app.sourceAppsNames.includes(appType?.display_name) && appType?.display_name;\n    })\n    .filter((x) => x);\n\n  return (\n    <Modal\n      className=\"ins-c-sources__dialog--warning\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> }\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps }\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveAppModal.propTypes = {\n  app: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    display_name: PropTypes.string.isRequired,\n    dependent_applications: PropTypes.arrayOf(PropTypes.string),\n    sourceAppsNames: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired,\n  container: PropTypes.instanceOf(Element),\n};\n\nexport default RemoveAppModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Radio } from '@patternfly/react-core/dist/js/components/Radio/Radio';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport RemoveAppModal from './RemoveAppModal';\n\nconst RemoveRadio = ({ option, setApplicationToRemove, sourceAppsNames, app, appType }) => {\n  const intl = useIntl();\n\n  const onClick = () =>\n    setApplicationToRemove({\n      id: app?.id,\n      display_name: appType?.display_name,\n      dependent_applications: appType?.dependent_applications,\n      sourceAppsNames,\n    });\n\n  return (\n    <div className=\"pf-c-radio pf-u-mb-md\">\n      <Button\n        id={`remove-app-${option.value}`}\n        variant=\"plain\"\n        aria-label={intl.formatMessage(\n          {\n            id: 'source.removeAppAria',\n            defaultMessage: 'Remove application {app} from this source',\n          },\n          { app: option.label }\n        )}\n        className=\"pf-u-p-0\"\n        onClick={onClick}\n      >\n        <TrashIcon variant=\"small\" />\n      </Button>\n      <label className=\"pf-c-radio__label\" htmlFor={`remove-app-${option.value}`}>\n        {option.label}\n      </label>\n    </div>\n  );\n};\n\nRemoveRadio.propTypes = {\n  option: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  }),\n  setApplicationToRemove: PropTypes.func.isRequired,\n  sourceAppsNames: PropTypes.arrayOf(PropTypes.string),\n  appType: PropTypes.shape({\n    display_name: PropTypes.string.isRequired,\n    dependent_applications: PropTypes.arrayOf(PropTypes.string),\n  }),\n  app: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    application_type_id: PropTypes.string.isRequired,\n  }),\n};\n\nconst ApplicationSelect = (props) => {\n  const {\n    options,\n    input: { onChange, value, name },\n    container,\n  } = useFieldApi(props);\n\n  const [removingApp, setApplicationToRemove] = useState({});\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const source = useSource();\n\n  const sourceAppsNames = source.applications.map(\n    ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name\n  );\n\n  const appType = (value) => appTypes?.find((appType) => appType.id === value);\n  const app = (value) => source.applications.find((app) => app.application_type_id === value);\n\n  const isCurrentlyRemoving = (value) => app(value)?.isDeleting;\n\n  const appIds = source.applications\n    .filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n  return (\n    <div>\n      {removingApp.id && (\n        <RemoveAppModal\n          app={removingApp}\n          onCancel={() => {\n            if (container) {\n              container.hidden = false;\n            }\n\n            return setApplicationToRemove({});\n          }}\n          container={container}\n        />\n      )}\n      {options.map((option) =>\n        !appIds.includes(option.value) ? (\n          <Radio\n            className=\"pf-u-mb-md\"\n            key={option.value}\n            onChange={() => onChange(option.value)}\n            label={option.label}\n            id={`${name}-${option.value}`}\n            name={name}\n            isChecked={value === option.value}\n            isDisabled={isCurrentlyRemoving(option.value)}\n          />\n        ) : (\n          <RemoveRadio\n            key={option.value}\n            option={option}\n            setApplicationToRemove={setApplicationToRemove}\n            sourceAppsNames={sourceAppsNames}\n            app={app(option.value)}\n            appType={appType(option.value)}\n          />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ApplicationSelect;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources/cjs/sourceFormRenderer';\n\nimport Authentication from '../components/Authentication';\n\nimport ApplicationSelect from '../components/AddApplication/ApplicationSelect';\n\nconst SourcesFormRenderer = (props) => (\n  <FormRenderer\n    FormTemplate={FormTemplate}\n    componentMapper={{\n      ...componentMapper,\n      ...mapperExtension,\n      authentication: Authentication,\n      'application-select': ApplicationSelect,\n    }}\n    {...props}\n  />\n);\n\nexport default SourcesFormRenderer;\n","import { defaultPort } from '../components/SourcesTable/formatters';\nimport { getSourcesApi } from './entities';\nimport { patchCmValues } from './patchCmValues';\n\nexport const parseUrl = (url) => {\n  if (url === null) {\n    return {\n      scheme: null,\n      host: null,\n      port: null,\n      path: null,\n    };\n  }\n\n  if (!url) {\n    return {};\n  }\n\n  try {\n    const u = new URL(url);\n    const scheme = u.protocol.replace(/:$/, '');\n\n    return {\n      scheme,\n      host: u.hostname,\n      port: u.port === '' ? defaultPort(scheme) : u.port,\n      path: u.pathname,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const urlOrHost = (formData) =>\n  formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData) => {\n  const promises = [];\n\n  if (formData.source) {\n    promises.push(getSourcesApi().updateSource(source.source.id, formData.source));\n  }\n\n  if (formData.endpoint || formData.url || formData.url === null) {\n    const { scheme, host, port, path } = urlOrHost(formData);\n    const endPointPort = port === null ? null : parseInt(port, 10);\n\n    const endpointData = {\n      scheme,\n      host,\n      path,\n      port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n      ...formData.endpoint,\n    };\n\n    promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData));\n  }\n\n  if (formData.authentications) {\n    Object.keys(formData.authentications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]));\n    });\n  }\n\n  if (formData.billing_source || formData.credentials) {\n    let cmDataOut = {};\n\n    if (formData.credentials) {\n      cmDataOut = {\n        authentication: {\n          credentials: formData.credentials,\n        },\n      };\n    }\n\n    if (formData.billing_source) {\n      cmDataOut = {\n        ...cmDataOut,\n        billing_source: formData.billing_source,\n      };\n    }\n\n    promises.push(patchCmValues(source.source.id, cmDataOut));\n  }\n\n  return Promise.all(promises);\n};\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const patchCmValues = (id, data) => axiosInstance.patch(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`, data);\n","import { getSourcesApi, doLoadApplicationsForEdit } from './entities';\nimport { getCmValues } from './getCmValues';\n\nexport const doLoadSourceForEdit = (source, hasCostManagement) =>\n  Promise.all([\n    getSourcesApi().showSource(source.id),\n    getSourcesApi().listSourceEndpoints(source.id),\n    doLoadApplicationsForEdit(source.id),\n    hasCostManagement && getCmValues(source.id).catch(() => undefined),\n  ]).then(async ([sourceData, endpoints, applications, costManagement]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    const apps = applications?.sources[0]?.applications || [];\n\n    let basicValues = {\n      source: {\n        ...source,\n        ...sourceData,\n      },\n      applications: apps,\n    };\n\n    if (costManagement) {\n      basicValues = {\n        ...basicValues,\n        billing_source: costManagement.billing_source,\n        credentials: costManagement.authentication.credentials,\n      };\n    }\n\n    const promises = [];\n    let appAuths;\n    const addToApp = [];\n    const appAuthenticationIds = [];\n\n    apps.forEach((app) => {\n      app?.authentications?.forEach((auth) => {\n        if (auth?.id) {\n          promises.push(getSourcesApi().showAuthentication(auth.id));\n          addToApp.push(app.id);\n          appAuthenticationIds.push(auth.id);\n        }\n      });\n    });\n\n    if (promises.length > 0) {\n      appAuths = await Promise.all(promises);\n\n      addToApp.forEach((id, index) => {\n        basicValues.applications.find((app) => app.id === id).authentications.push(appAuths[index]);\n      });\n    }\n\n    if (!endpoint) {\n      return basicValues;\n    }\n\n    return getSourcesApi()\n      .listEndpointAuthentications(endpoint.id)\n      .then((authentications) => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data.filter(({ id }) => !appAuthenticationIds.includes(id)),\n      }));\n  });\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const getCmValues = (id) => axiosInstance.get(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst Header = ({ name }) => {\n  const intl = useIntl();\n\n  return (\n    <Grid>\n      <GridItem xs={12}>\n        <Title headingLevel=\"h1\" size=\"3xl\">\n          {intl.formatMessage({\n            id: 'sources.editSource',\n            defaultMessage: 'Edit source',\n          })}\n        </Title>\n      </GridItem>\n      {name && (\n        <GridItem xs={12}>\n          {intl.formatMessage(\n            {\n              id: 'sources.editSourceDescription',\n              defaultMessage: 'Use the form fields below to make desired changes to source {name}.',\n            },\n            { name: <b key=\"b\">{name}</b> }\n          )}\n        </GridItem>\n      )}\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  name: PropTypes.node,\n};\n\nexport default Header;\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl } from '../SourcesTable/formatters';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n  const filteredValues = {};\n\n  Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n      set(filteredValues, key, get(values, key));\n    });\n\n  return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, applications, ...rest }, sourceTypeName) => {\n  const auhenticationsFinal = {};\n\n  const mergeAuths = [\n    ...(authentications || []),\n    ...(applications?.reduce((acc, curr) => [...acc, ...curr.authentications], []) || []),\n  ];\n\n  if (mergeAuths.length > 0) {\n    mergeAuths.forEach((auth) => {\n      auhenticationsFinal[`a${auth.id}`] = auth;\n    });\n  }\n\n  let endpoint;\n  let url;\n\n  if (endpoints && endpoints.length > 0) {\n    endpoint = endpoints[0];\n  }\n\n  if (endpoint) {\n    url = endpoint.scheme || endpoint.host || endpoint.path || endpoint.port ? endpointToUrl(endpoint) : undefined;\n  }\n\n  return {\n    source_type: sourceTypeName,\n    endpoint,\n    authentications: auhenticationsFinal,\n    url,\n    ...rest,\n  };\n};\n","import { checkAppAvailability } from '@redhat-cloud-services/frontend-components-sources/cjs/getApplicationStatus';\n\nimport { selectOnlyEditedValues } from './helpers';\nimport { loadEntities } from '../../redux/sources/actions';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport { doUpdateSource } from '../../api/doUpdateSource';\n\nimport { UNAVAILABLE } from '../SourcesTable/formatters';\n\nexport const onSubmit = async (values, editing, dispatch, source, intl, setState) => {\n  setState({ type: 'submit', values, editing });\n\n  try {\n    await doUpdateSource(source, selectOnlyEditedValues(values, editing));\n  } catch {\n    setState({ type: 'submitFailed' });\n\n    return;\n  }\n\n  checkSourceStatus(source.source.id);\n  dispatch(loadEntities());\n\n  let message;\n\n  const sourceData = await doLoadSourceForEdit({ id: source.source.id });\n\n  const promises = source.applications?.map(({ id }) => checkAppAvailability(id)) || [];\n\n  let statusResults;\n  if (promises.length > 0) {\n    try {\n      statusResults = await Promise.all(promises);\n    } catch (error) {\n      setState({ type: 'submitFailed' });\n\n      return;\n    }\n\n    const unavailableApp = statusResults.find(({ availability_status }) => availability_status === UNAVAILABLE);\n\n    if (unavailableApp) {\n      message = {\n        title: intl.formatMessage({\n          id: 'wizard.failEditToastTitle',\n          defaultMessage: 'Edit source failed',\n        }),\n        description: unavailableApp.availability_status_error,\n        variant: 'danger',\n      };\n\n      setState({ type: 'submitFinished', source: sourceData, message });\n\n      return;\n    }\n\n    const anyTimetouted = statusResults.some(({ availability_status }) => !availability_status);\n\n    if (anyTimetouted) {\n      setState({ type: 'submitTimetouted' });\n\n      return;\n    }\n  }\n\n  message = {\n    title: intl.formatMessage(\n      {\n        id: 'wizard.successEditToastTitle',\n        defaultMessage: 'Source ‘{name}’ was edited successfully.',\n      },\n      { name: source.source.name }\n    ),\n    variant: 'success',\n  };\n\n  setState({ type: 'submitFinished', source: sourceData, message });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/index';\n\nconst AdditionalInfoBar = ({ sourceType, applications }) => {\n  const intl = useIntl();\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n\n  const sourceAppsNames = applications?.map(\n    ({ application_type_id }) => appTypes?.find(({ id }) => id === application_type_id)?.display_name\n  );\n\n  return (\n    <TextContent>\n      <Grid hasGutter>\n        <GridItem md={2}>\n          <Text component={TextVariants.h4}>\n            {intl.formatMessage({\n              id: 'sources.sourceType',\n              defaultMessage: 'Source type',\n            })}\n          </Text>\n          <Text component={TextVariants.p} id=\"source-edit-type\">\n            {sourceType.product_name}\n          </Text>\n        </GridItem>\n        <GridItem md={8}>\n          <Text component={TextVariants.h4}>\n            {intl.formatMessage({\n              id: 'sources.apps',\n              defaultMessage: 'Applications',\n            })}\n          </Text>\n          <Text component={TextVariants.p} id=\"source-edit-apps\">\n            {sourceAppsNames.length > 0\n              ? sourceAppsNames.join(', ')\n              : intl.formatMessage({\n                  id: 'sources.none',\n                  defaultMessage: 'None',\n                })}\n          </Text>\n        </GridItem>\n      </Grid>\n    </TextContent>\n  );\n};\n\nAdditionalInfoBar.propTypes = {\n  sourceType: PropTypes.shape({\n    product_name: PropTypes.string.isRequired,\n  }),\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      application_type_id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default AdditionalInfoBar;\n","import React from 'react';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport { Alert } from '@patternfly/react-core/dist/js/components/Alert/Alert';\n\nconst EditAlert = () => {\n  const formOptions = useFormApi();\n\n  const { message } = formOptions.getState().values;\n\n  return (\n    <Alert variant={message?.variant} isInline title={message?.title}>\n      {message?.description}\n    </Alert>\n  );\n};\n\nexport default EditAlert;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport { asyncValidatorDebounced } from '@redhat-cloud-services/frontend-components-sources/cjs/SourceAddSchema';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nimport AdditionalInfoBar from './AdditionalInfoBar';\nimport EditAlert from './EditAlert';\n\nexport const genericInfo = (sourceId, intl, sourceType, applications) => [\n  {\n    name: 'alert',\n    component: 'description',\n    Content: EditAlert,\n    condition: {\n      when: 'message',\n      isNotEmpty: true,\n    },\n  },\n  {\n    name: 'source.name',\n    label: intl.formatMessage({\n      id: 'sources.sourceName',\n      defaultMessage: 'Source name',\n    }),\n    component: componentTypes.TEXT_FIELD,\n    validate: [(value) => asyncValidatorDebounced(value, sourceId, intl), { type: validatorTypes.REQUIRED }],\n    isRequired: true,\n    resolveProps: validated,\n  },\n  {\n    name: 'additional_info',\n    Content: AdditionalInfoBar,\n    component: 'description',\n    sourceType,\n    applications,\n  },\n];\n","import get from 'lodash/get';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport hardcodedSchemas from '@redhat-cloud-services/frontend-components-sources/cjs/hardcodedSchemas';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nexport const getEnhancedEndpointField = (sourceType, name) => get(hardcodedSchemas, [sourceType, 'endpoint', name], {});\n\nexport const endpointFields = (sourceType) => {\n  if (!sourceType.schema || !sourceType.schema.endpoint || sourceType.schema.endpoint.hidden) {\n    return undefined;\n  }\n\n  const schemaAuth = sourceType.schema.endpoint;\n\n  const enhancedFields = schemaAuth.fields.map((field) => ({\n    ...field,\n    ...getEnhancedEndpointField(sourceType.name, field.name),\n  }));\n\n  const modifiedFields = enhancedFields;\n\n  const subForm = {\n    component: componentTypes.SUB_FORM,\n    name: 'endpoint',\n  };\n\n  if (sourceType.name === 'ansible-tower') {\n    const url = modifiedFields.find(({ name }) => name === 'url');\n\n    return {\n      ...subForm,\n      fields: [\n        {\n          component: componentTypes.SUB_FORM,\n          name: 'receptor_node_group',\n          condition: {\n            when: 'endpoint.receptor_node',\n            isNotEmpty: true,\n          },\n          fields: [\n            {\n              ...url,\n              isRequired: false,\n              validate: url?.validate?.filter((validation) => validation.type !== validatorTypes.REQUIRED),\n            },\n          ],\n        },\n        {\n          component: componentTypes.SUB_FORM,\n          name: 'hostname_group',\n          condition: {\n            when: 'endpoint.receptor_node',\n            isEmpty: true,\n          },\n          fields: modifiedFields,\n        },\n      ],\n    };\n  }\n\n  return {\n    ...subForm,\n    fields: modifiedFields,\n  };\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nconst AuthenticationId = ({ id }) => {\n  const intl = useIntl();\n\n  return (\n    <FormGroup\n      label={intl.formatMessage({\n        id: 'sources.authId',\n        defaultMessage: 'Authentication ID',\n      })}\n    >\n      <TextContent>\n        <Text variant=\"p\">{id}</Text>\n      </TextContent>\n    </FormGroup>\n  );\n};\n\nAuthenticationId.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default AuthenticationId;\n","import { createContext } from 'react';\n\nconst sourceEditContext = createContext();\n\nexport default sourceEditContext;\n","import React from 'react';\n\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\n\nimport { useIntl } from 'react-intl';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nconst RemoveAuthPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <Grid>\n      <GridItem xs={12}>\n        <Bullseye>\n          <Spinner size=\"lg\" />\n        </Bullseye>\n      </GridItem>\n      <GridItem xs={12}>\n        <Bullseye>\n          <TextContent>\n            <Text component={TextVariants.small} className=\"pf-u-mt-md\">\n              {intl.formatMessage({\n                id: 'sources.removingAuthMessage',\n                defaultMessage: 'This authentication is being removed...',\n              })}\n            </Text>\n          </TextContent>\n        </Bullseye>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default RemoveAuthPlaceholder;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/js/layouts/Flex';\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport AuthenticationId from './AuthenticationId';\nimport sourceEditContext from '../sourceEditContext';\nimport RemoveAuthPlaceholder from './RemoveAuthPlaceholder';\n\nconst GridLayout = ({ id, fields }) => {\n  const intl = useIntl();\n  const { renderForm } = useFormApi();\n  const { setState, source } = useContext(sourceEditContext);\n\n  const setAuthRemoving = () =>\n    setState({\n      type: 'setAuthRemoving',\n      removingAuth: id,\n    });\n\n  const isDeleting = source?.authentications?.find((auth) => auth.id === id)?.isDeleting;\n\n  if (isDeleting) {\n    return <RemoveAuthPlaceholder />;\n  }\n\n  return (\n    <Grid>\n      <GridItem md={2}>\n        <Flex>\n          <FlexItem className=\"pf-u-mr-0\">\n            <Button\n              variant=\"plain\"\n              aria-label={intl.formatMessage(\n                {\n                  id: 'sources.removeAuthAriaLabel',\n                  defaultMessage: 'Remove authentication with id {id}',\n                },\n                { id }\n              )}\n              onClick={setAuthRemoving}\n            >\n              <TrashIcon />\n            </Button>\n          </FlexItem>\n          <Flex>\n            <AuthenticationId id={id} />\n          </Flex>\n        </Flex>\n      </GridItem>\n      <GridItem md={10}>{renderForm(fields)}</GridItem>\n    </Grid>\n  );\n};\n\nGridLayout.propTypes = {\n  id: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired,\n};\n\nexport default GridLayout;\n","import get from 'lodash/get';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport hardcodedSchemas from '@redhat-cloud-services/frontend-components-sources/cjs/hardcodedSchemas';\nimport GridLayout from './GridLayout';\n\nexport const createAuthFieldName = (fieldName, id) => `authentications.a${id}.${fieldName.replace('authentication.', '')}`;\n\nexport const getLastPartOfName = (fieldName) => fieldName.split('.').pop();\n\nexport const removeRequiredValidator = (validate = []) =>\n  validate.filter((validation) => validation.type !== validatorTypes.REQUIRED && validation.type !== 'required-validator');\n\nexport const getEnhancedAuthField = (sourceType, authtype, name, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, name], {});\n\nexport const getAdditionalAuthSteps = (sourceType, authtype, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, 'additionalSteps'], []);\n\nexport const getAdditionalAuthStepsKeys = (sourceType, authtype, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, 'includeStepKeyFields'], []);\n\nexport const getAdditionalFields = (auth, stepKey) => auth?.fields?.filter((field) => field.stepKey === stepKey) || [];\n\nexport const modifyAuthSchemas = (fields, id) =>\n  fields.map((field) => {\n    const editedName = field.name.startsWith('authentication') ? createAuthFieldName(field.name, id) : field.name;\n\n    const finalField = {\n      ...field,\n      name: editedName,\n    };\n\n    const isPassword = getLastPartOfName(finalField.name) === 'password';\n\n    if (isPassword) {\n      finalField.component = 'authentication';\n    }\n\n    return finalField;\n  });\n\nconst specialModifierAWS = (field, authtype) => {\n  if (getLastPartOfName(field.name) !== 'password') {\n    return field;\n  }\n\n  if (authtype === 'arn') {\n    return {\n      ...field,\n      label: 'Cost Management ARN',\n    };\n  }\n\n  if (authtype === 'cloud-meter-arn') {\n    return {\n      ...field,\n      label: 'Subscription Watch ARN',\n    };\n  }\n\n  return field;\n};\n\nexport const authenticationFields = (authentications, sourceType, appName) => {\n  if (!authentications || authentications.length === 0 || !sourceType.schema || !sourceType.schema.authentication) {\n    return [];\n  }\n\n  return authentications.map((auth) => {\n    const schemaAuth = sourceType?.schema?.authentication?.find(({ type }) => type === auth.authtype);\n\n    if (!schemaAuth) {\n      return [];\n    }\n\n    const additionalStepKeys = getAdditionalAuthStepsKeys(sourceType.name, auth.authtype, appName);\n    const additionalStepsFields = getAdditionalAuthSteps(sourceType.name, auth.authtype, appName)\n      ?.map((step) => ({\n        ...step,\n        fields: [...step.fields, ...getAdditionalFields(schemaAuth, step.name)],\n      }))\n      .map(({ fields }) => fields.map(({ name }) => name))\n      .flatMap((x) => x);\n\n    let enhancedFields = schemaAuth.fields\n      .filter(\n        (field) =>\n          additionalStepsFields.includes(field.name) ||\n          !field.stepKey ||\n          (field.stepKey && additionalStepKeys.includes(field.stepKey))\n      )\n      .map((field) => ({\n        ...field,\n        ...getEnhancedAuthField(sourceType.name, auth.authtype, field.name, appName),\n      }));\n\n    if (!appName && sourceType.name === 'amazon') {\n      enhancedFields = enhancedFields.map((field) => specialModifierAWS(field, auth.authtype));\n    }\n\n    if (!appName) {\n      return [\n        {\n          name: `authentication-${auth.id}`,\n          component: 'description',\n          id: auth.id,\n          Content: GridLayout,\n          fields: modifyAuthSchemas(enhancedFields, auth.id),\n        },\n      ];\n    }\n\n    return modifyAuthSchemas(enhancedFields, auth.id);\n  });\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport { FormattedMessage } from 'react-intl';\nimport { authenticationFields } from './authentication';\n\nexport const APP_NAMES = {\n  COST_MANAGAMENT: '/insights/platform/cost-management',\n};\n\nexport const appendClusterIdentifier = (sourceType) =>\n  sourceType.name === 'openshift'\n    ? [\n        {\n          name: 'source.source_ref',\n          label: <FormattedMessage id=\"sources.clusterIdentifier\" defaultMessage=\"Cluster identifier\" />,\n          isRequired: true,\n          validate: [{ type: validatorTypes.REQUIRED }],\n          component: componentTypes.TEXT_FIELD,\n        },\n      ]\n    : [];\n\nconst createOneAppFields = (appType, sourceType, app) => [\n  ...authenticationFields(\n    app.authentications?.filter((auth) => Object.keys(auth).length > 1),\n    sourceType,\n    appType?.name\n  ),\n  ...(appType?.name === APP_NAMES.COST_MANAGAMENT ? appendClusterIdentifier(sourceType) : []),\n];\n\nconst unusedAuthsWarning = (length) => ({\n  component: componentTypes.PLAIN_TEXT,\n  name: 'unused-auth-warning',\n  label: (\n    <FormattedMessage\n      id=\"sources.authNotUsed\"\n      defaultMessage=\"The following {length, plural, one {authentication is not} other {authentications are not}} used by any application.\"\n      values={{ length }}\n    />\n  ),\n});\n\nconst unusedAuthentications = (authentications, sourceType, appsLength) => {\n  if (!authentications || authentications.length === 0) {\n    return [];\n  }\n\n  let authenticationsInputs = sourceType?.schema?.authentication\n    ?.reduce((acc, { type }) => {\n      const auths = authentications.filter(({ authtype }) => type === authtype);\n\n      if (auths?.length > 0) {\n        return [...acc, ...authenticationFields(auths, sourceType)];\n      }\n\n      return acc;\n    }, [])\n    ?.filter(Boolean);\n\n  const transformToTabs = appsLength !== 0;\n\n  if (transformToTabs) {\n    authenticationsInputs = [\n      {\n        fields: [unusedAuthsWarning(authenticationsInputs.length), ...authenticationsInputs],\n        title: sourceType.product_name,\n        name: 'unused-auths-tab',\n      },\n    ];\n  } else {\n    authenticationsInputs = [\n      {\n        fields: [unusedAuthsWarning(authenticationsInputs.length), ...authenticationsInputs],\n        component: componentTypes.SUB_FORM,\n        name: 'unused-auths-group',\n      },\n    ];\n  }\n\n  return authenticationsInputs;\n};\n\nexport const applicationsFields = (applications, sourceType, appTypes, authentications) => {\n  const authenticationTypesFormGroups = unusedAuthentications(authentications, sourceType, applications?.length);\n\n  if (!applications || applications.length === 0) {\n    return authenticationTypesFormGroups;\n  } else if (applications.length === 1 && authenticationTypesFormGroups.length === 0) {\n    const appType = appTypes.find(({ id }) => id === applications[0].application_type_id);\n\n    return createOneAppFields(appType, sourceType, applications[0]);\n  } else {\n    return [\n      {\n        component: componentTypes.TABS,\n        name: 'app-tabs',\n        isBox: true,\n        fields: [\n          ...applications.map((app) => {\n            const appType = appTypes.find(({ id }) => id === app.application_type_id);\n\n            return {\n              name: appType?.id,\n              title: appType?.display_name,\n              fields: createOneAppFields(appType, sourceType, app),\n            };\n          }),\n          ...authenticationTypesFormGroups,\n        ],\n      },\n    ];\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nexport const TitleAndDescription = ({ title, description }) => (\n  <TextContent>\n    <Title headingLevel=\"h2\" className=\"pf-u-mb-0\">\n      {title}\n    </Title>\n    {description && <Text variant=\"p\">{description}</Text>}\n  </TextContent>\n);\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.node.isRequired,\n  description: PropTypes.node,\n};\n\nconst titleField = (applications, sourceType, appTypes, intl, authentications) => {\n  let title;\n  let description;\n\n  if (applications.length === 0) {\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleNoApp',\n        defaultMessage: '{type} credentials',\n      },\n      { type: sourceType?.product_name }\n    );\n  } else if (applications.length === 1) {\n    const app = appTypes.find(({ id }) => id === applications[0].application_type_id);\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleOneApp',\n        defaultMessage: '{type} & {app} credentials',\n      },\n      { type: sourceType?.product_name, app: app?.display_name }\n    );\n  } else {\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleMoreApps',\n        defaultMessage: '{type} & application credentials',\n      },\n      { type: sourceType?.product_name }\n    );\n    description = intl.formatMessage({\n      id: 'source.editDescriptionMoreApps',\n      defaultMessage: 'Use the tabs below to view and edit credentials for connected applications.',\n    });\n  }\n\n  return {\n    component: 'description',\n    name: 'edit-title',\n    Content: TitleAndDescription,\n    title,\n    description,\n    hideField: applications?.length === 0 && authentications?.length === 0,\n  };\n};\n\nexport default titleField;\n","import { genericInfo } from './genericInfo';\nimport { endpointFields } from './endpoint';\nimport { applicationsFields } from './application';\nimport titleField from './titleField';\n\nexport const parseSourceToSchema = (source, sourceType, appTypes, intl) => ({\n  fields: [\n    ...genericInfo(source.source.id, intl, sourceType, source.applications),\n    titleField(source.applications, sourceType, appTypes, intl, source.authentications),\n    ...applicationsFields(source.applications, sourceType, appTypes, source.authentications),\n    source.endpoints && source.endpoints.length > 0 ? endpointFields(sourceType) : false,\n  ].filter(Boolean),\n});\n","import { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { prepareInitialValues } from './helpers';\n\nexport const initialState = {\n  loading: true,\n  source: undefined,\n  initialValues: {},\n  sourceType: undefined,\n  schema: undefined,\n  isSubmitting: false,\n  initialLoad: true,\n  submitError: false,\n  isTimeouted: false,\n};\n\nconst reducer = (state, { type, source, sourceType, appTypes, intl, message, values, editing, removingAuth, authId }) => {\n  switch (type) {\n    case 'createForm':\n      return {\n        ...state,\n        sourceType,\n        initialValues: prepareInitialValues(state.source, sourceType.product_name),\n        schema: parseSourceToSchema(state.source, sourceType, appTypes, intl),\n        loading: false,\n      };\n    case 'setSource':\n      return {\n        ...state,\n        source,\n        initialLoad: false,\n      };\n    case 'submit':\n      return {\n        ...state,\n        isSubmitting: true,\n        submitError: false,\n        values,\n        editing,\n      };\n    case 'submitFinished':\n      return {\n        ...state,\n        isSubmitting: false,\n        source,\n        message,\n      };\n    case 'submitFailed':\n      return {\n        ...state,\n        isSubmitting: false,\n        submitError: true,\n      };\n    case 'submitTimetouted':\n      return {\n        ...state,\n        isSubmitting: false,\n        isTimeouted: true,\n      };\n    case 'removeAuthPending':\n      return {\n        ...state,\n        isAuthRemoving: null,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.map((auth) =>\n            auth.id === authId\n              ? {\n                  ...auth,\n                  isDeleting: true,\n                }\n              : auth\n          ),\n        },\n      };\n    case 'removeAuthRejected':\n      return {\n        ...state,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.map((auth) =>\n            auth.id === authId\n              ? {\n                  ...auth,\n                  isDeleting: false,\n                }\n              : auth\n          ),\n        },\n      };\n    case 'removeAuthFulfill':\n      return {\n        ...state,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.filter((auth) => auth.id !== authId),\n        },\n      };\n    case 'setAuthRemoving':\n      return {\n        ...state,\n        isAuthRemoving: removingAuth,\n      };\n    case 'closeAuthRemoving':\n      return {\n        ...state,\n        isAuthRemoving: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/dist/cjs/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\nconst CustomFormWrapper = (props) => <Form {...props} id=\"modal-form\" />;\n\nconst CustomButtons = () => {\n  const intl = useIntl();\n  const { onReset, onCancel } = useFormApi();\n\n  return (\n    <FormSpy\n      subscription={{\n        submitting: true,\n        pristine: true,\n        invalid: true,\n        validating: true,\n      }}\n    >\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-c-form\">\n          <ActionGroup className=\"pf-u-mt-0\">\n            <Button\n              variant=\"primary\"\n              form=\"modal-form\"\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {intl.formatMessage({\n                id: 'sources.save',\n                defaultMessage: 'Save',\n              })}\n            </Button>\n            <Button variant=\"secondary\" isDisabled={pristine} onClick={onReset} id=\"reset-modal\">\n              {intl.formatMessage({\n                id: 'sources.reset',\n                defaultMessage: 'Reset',\n              })}\n            </Button>\n            <Button variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {intl.formatMessage({\n                id: 'sources.cancel',\n                defaultMessage: 'Cancel',\n              })}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nconst ModalFormTemplate = ({ ModalProps, ...props }) => (\n  <Modal {...ModalProps} footer={<CustomButtons />}>\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { useSource } from '../../hooks/useSource';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\n\nimport { routes } from '../../Routes';\nimport Header from './Header';\n\nexport const FakeFooter = () => {\n  const intl = useIntl();\n  const history = useHistory();\n\n  return (\n    <div className=\"pf-c-form\">\n      <ActionGroup className=\"pf-u-mt-0\">\n        <Button variant=\"primary\" isDisabled>\n          {intl.formatMessage({\n            id: 'sources.save',\n            defaultMessage: 'Save',\n          })}\n        </Button>\n        <Button variant=\"secondary\" isDisabled>\n          {intl.formatMessage({\n            id: 'sources.reset',\n            defaultMessage: 'Reset',\n          })}\n        </Button>\n        <Button variant=\"link\" onClick={() => history.push(routes.sources.path)}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>\n      </ActionGroup>\n    </div>\n  );\n};\n\nconst WrapperModal = ({ children }) => {\n  const history = useHistory();\n  const sourceRedux = useSource();\n  const intl = useIntl();\n\n  return (\n    <Modal\n      aria-label={intl.formatMessage({\n        id: 'sources.editSource',\n        defaultMessage: 'Edit source.',\n      })}\n      header={<Header name={sourceRedux.name} />}\n      variant=\"large\"\n      isOpen={true}\n      onClose={() => history.push(routes.sources.path)}\n      footer={<FakeFooter />}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nWrapperModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default WrapperModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport LoadingStep from '@redhat-cloud-services/frontend-components-sources/cjs/LoadingStep';\n\nimport WrapperModal from './WrapperModal';\n\nconst SubmittingModal = () => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <LoadingStep\n        customText={intl.formatMessage({\n          id: 'sources.editSubmittingTitle',\n          defaultMessage: 'Validating edited source credentials',\n        })}\n      />\n    </WrapperModal>\n  );\n};\n\nexport default SubmittingModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Title } from '@patternfly/react-core/dist/js/components/Title';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { EmptyState, EmptyStateVariant, EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\n\nimport WrenchIcon from '@patternfly/react-icons/dist/js/icons/wrench-icon';\n\nimport WrapperModal from './WrapperModal';\n\nconst TimeoutedModal = () => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <Bullseye>\n        <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n          <EmptyStateIcon icon={WrenchIcon} color=\"var(--pf-global--Color--200)\" className=\"pf-u-mb-0\" />\n          <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n            {intl.formatMessage({\n              id: 'sources.editTimetoutedTitle',\n              defaultMessage: 'Edit source not yet complete',\n            })}\n          </Title>\n          <EmptyStateBody>\n            {intl.formatMessage(\n              {\n                id: 'sources.editTimetoutedDescription',\n                defaultMessage:\n                  'We are still working to confirm your updated credentials and app settings.{newLine}To track progress, check the Status column in the Sources table.',\n              },\n              { newLine: <br key=\"br\" /> }\n            )}\n          </EmptyStateBody>\n        </EmptyState>\n      </Bullseye>\n    </WrapperModal>\n  );\n};\n\nexport default TimeoutedModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport ErroredStep from '@redhat-cloud-services/frontend-components-sources/cjs/ErroredStep';\n\nimport WrapperModal from './WrapperModal';\n\nconst ErroredModal = ({ onRetry }) => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <ErroredStep\n        onClose={onRetry}\n        customText={intl.formatMessage({\n          id: 'sources.editErrorDescription',\n          defaultMessage:\n            'There was a problem while trying to edit your source. Please try again. If the error persists, open a support case.',\n        })}\n        secondaryActions={\n          <Text\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n            rel=\"noopener noreferrer\"\n          >\n            {intl.formatMessage({\n              id: 'sources.openTicket',\n              defaultMessage: 'Open a support case',\n            })}\n          </Text>\n        }\n        returnButtonTitle={intl.formatMessage({\n          id: 'sources.retryText',\n          defaultMessage: 'Retry',\n        })}\n      />\n    </WrapperModal>\n  );\n};\n\nErroredModal.propTypes = {\n  onRetry: PropTypes.func.isRequired,\n};\n\nexport default ErroredModal;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport sourceEditContext from '../sourceEditContext';\nimport { addMessage } from '../../../redux/sources/actions';\nimport { doDeleteAuthentication } from '../../../api/entities';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources/cjs/handleError';\n\nconst RemoveAuth = ({ authId }) => {\n  const { setState, source, sourceType } = useContext(sourceEditContext);\n\n  const schemaAuth = sourceType?.schema?.authentication?.find(\n    ({ type }) => type === source?.authentications?.find((auth) => auth?.id === authId)?.authtype\n  );\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const onClose = () => setState({ type: 'closeAuthRemoving' });\n\n  const onRemove = () => {\n    setState({ type: 'removeAuthPending', authId });\n    onClose();\n    return doDeleteAuthentication(authId)\n      .then(() => {\n        setState({ type: 'removeAuthFulfill', authId });\n        dispatch(\n          addMessage(\n            intl.formatMessage({\n              id: 'sources.authRemoveFullfil',\n              defaultMessage: 'Authentication was deleted successfully.',\n            }),\n            'success'\n          )\n        );\n      })\n      .catch((error) => {\n        setState({ type: 'removeAuthRejected', authId });\n        dispatch(\n          addMessage(\n            intl.formatMessage({\n              id: 'sources.authRemoveRejected',\n              defaultMessage: 'Authentication was not deleted successfully.',\n            }),\n            'danger',\n            handleError(error)\n          )\n        );\n      });\n  };\n\n  return (\n    <Modal\n      isOpen\n      className=\"ins-c-sources__dialog--warning\"\n      onClose={onClose}\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onRemove}>\n          {intl.formatMessage({\n            id: 'sources.deleteConfirm',\n            defaultMessage: 'Remove authentication',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onClose}>\n          {intl.formatMessage({\n            id: 'sources.deleteCancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAuthTitle',\n        defaultMessage: 'Remove authentication?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove authentication?',\n          })}\n        </Title>\n      }\n    >\n      <TextContent>\n        <Text variant={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.removeAuthWarning',\n              defaultMessage: 'This action will permanently remove {auth} from this source.',\n            },\n            { auth: <b key=\"b\">{schemaAuth?.name}</b> }\n          )}\n        </Text>\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveAuth.propTypes = {\n  authId: PropTypes.string.isRequired,\n};\n\nexport default RemoveAuth;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport Header from './Header';\nimport { onSubmit } from './onSubmit';\n\nimport { redirectWhenImported } from './importedRedirect';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport reducer, { initialState } from './reducer';\nimport sourceEditContext from './sourceEditContext';\nimport ModalFormTemplate from '../ModalFormTemplate';\nimport SubmittingModal from './SubmittingModal';\nimport TimeoutedModal from './TimeoutedModal';\nimport ErroredModal from './ErroredModal';\nimport RemoveAuth from './parser/RemoveAuth';\nimport { APP_NAMES } from './parser/application';\n\nconst SourceEditModal = () => {\n  const [state, setState] = useReducer(reducer, initialState);\n  const history = useHistory();\n  const sourceRedux = useSource();\n  const isLoaded = useIsLoaded();\n\n  const {\n    loading,\n    editing,\n    source,\n    initialValues,\n    schema,\n    isSubmitting,\n    initialLoad,\n    message,\n    submitError,\n    isTimeouted,\n    values,\n    sourceType,\n    isAuthRemoving,\n  } = state;\n\n  const intl = useIntl();\n\n  const { sourceTypes, appTypes, sourceTypesLoaded, appTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (sourceRedux && initialLoad && appTypesLoaded) {\n      const hasCostManagement = sourceRedux.applications\n        .map(({ application_type_id }) => application_type_id)\n        .includes(appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT)?.id);\n\n      doLoadSourceForEdit(sourceRedux, hasCostManagement).then((source) => {\n        if (source.source.imported) {\n          redirectWhenImported(dispatch, intl, history, source.source.name);\n        }\n\n        setState({ type: 'setSource', source });\n      });\n    }\n  }, [sourceRedux, isLoaded, appTypesLoaded]);\n\n  useEffect(() => {\n    if (source && appTypesLoaded && sourceTypesLoaded) {\n      const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n      setState({ type: 'createForm', sourceType, source, appTypes, intl });\n    }\n  }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n  const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n  const returnToSources = () => history.push(routes.sources.path);\n\n  if (isTimeouted) {\n    return <TimeoutedModal />;\n  }\n\n  if (submitError) {\n    return <ErroredModal onRetry={() => onSubmit(values, editing, dispatch, source, intl, setState)} />;\n  }\n\n  if (isSubmitting) {\n    return <SubmittingModal />;\n  }\n\n  if (isLoading) {\n    return (\n      <Modal\n        aria-label={intl.formatMessage({\n          id: 'sources.editSource',\n          defaultMessage: 'Edit source.',\n        })}\n        header={<Header />}\n        isOpen\n        variant=\"large\"\n        onClose={returnToSources}\n      >\n        <div className=\"ins-c-sources__dialog--spinnerContainer\">\n          <Spinner />\n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <sourceEditContext.Provider value={{ setState, source, sourceType }}>\n      {isAuthRemoving && <RemoveAuth authId={isAuthRemoving} />}\n      <SourcesFormRenderer\n        onCancel={returnToSources}\n        schema={schema}\n        onSubmit={(values, formApi) => onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, setState)}\n        FormTemplate={(props) => (\n          <ModalFormTemplate\n            ModalProps={{\n              ['aria-label']: intl.formatMessage({\n                id: 'sources.editSource',\n                defaultMessage: 'Edit source.',\n              }),\n              header: <Header name={source.source.name} />,\n              variant: 'large',\n              isOpen: !isAuthRemoving,\n              onClose: returnToSources,\n            }}\n            {...props}\n          />\n        )}\n        clearedValue={null}\n        initialValues={{\n          ...initialValues,\n          message,\n        }}\n      />\n    </sourceEditContext.Provider>\n  );\n};\n\nexport default SourceEditModal;\n","import { routes } from '../../Routes';\nimport { addMessage } from '../../redux/sources/actions';\n\nexport const redirectWhenImported = (dispatch, intl, history, name) => {\n  dispatch(\n    addMessage(\n      intl.formatMessage(\n        {\n          id: 'sources.importSourceCannotEdited',\n          defaultMessage: 'Source { name } is imported.',\n        },\n        { name }\n      ),\n      'danger',\n      intl.formatMessage({\n        id: 'sources.importedSourcesCannotEdited',\n        defaultMessage: 'Imported sources cannot be edited.',\n      })\n    )\n  );\n  history.push(routes.sources.path);\n};\n"],"sourceRoot":""}