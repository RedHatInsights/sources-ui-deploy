{"version":3,"sources":["webpack:///./src/api/doLoadSourceForEdit.js","webpack:///./src/api/getCmValues.js","webpack:///./src/components/SourceEditForm/Header.js","webpack:///./src/components/SourceEditForm/helpers.js","webpack:///./src/components/SourceEditForm/onSubmit.js","webpack:///./src/components/SourceEditForm/parser/AdditionalInfoBar.js","webpack:///./src/components/SourceEditForm/parser/EditAlert.js","webpack:///./src/components/SourceEditForm/parser/genericInfo.js","webpack:///./src/components/SourceEditForm/parser/endpoint.js","webpack:///./src/components/SourceEditForm/parser/AuthenticationId.js","webpack:///./src/components/SourceEditForm/sourceEditContext.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuthPlaceholder.js","webpack:///./src/components/SourceEditForm/parser/GridLayout.js","webpack:///./src/components/SourceEditForm/parser/authentication.js","webpack:///./src/components/SourceEditForm/parser/application.js","webpack:///./src/components/SourceEditForm/parser/titleField.js","webpack:///./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack:///./src/components/SourceEditForm/reducer.js","webpack:///./src/components/ModalFormTemplate.js","webpack:///./src/components/SourceEditForm/WrapperModal.js","webpack:///./src/components/SourceEditForm/SubmittingModal.js","webpack:///./src/components/SourceEditForm/TimeoutedModal.js","webpack:///./src/components/SourceEditForm/ErroredModal.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuth.js","webpack:///./src/components/SourceEditForm/SourceEditModal.js","webpack:///./src/components/SourceEditForm/importedRedirect.js","webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/components/Authentication.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/ApplicationSelect.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./src/api/doUpdateSource.js","webpack:///./src/api/patchCmValues.js"],"names":["doLoadSourceForEdit","source","Promise","all","getSourcesApi","showSource","id","listSourceEndpoints","doLoadApplicationsForEdit","axiosInstance","get","COST_MANAGEMENT_API_BASE","then","a","sourceData","endpoints","applications","costManagement","endpoint","data","apps","sources","basicValues","billing_source","credentials","authentication","promises","addToApp","appAuthenticationIds","forEach","app","authentications","auth","push","showAuthentication","length","appAuths","index","find","listEndpointAuthentications","filter","includes","Header","name","intl","useIntl","Grid","GridItem","xs","Title","headingLevel","size","formatMessage","defaultMessage","key","propTypes","PropTypes","node","selectOnlyEditedValues","values","editing","filteredValues","Object","keys","set","prepareInitialValues","sourceTypeName","url","rest","auhenticationsFinal","mergeAuths","reduce","acc","curr","scheme","host","path","port","endpointToUrl","undefined","source_type","onSubmit","dispatch","setState","type","doUpdateSource","checkSourceStatus","loadEntities","map","checkAppAvailability","statusResults","unavailableApp","availability_status","UNAVAILABLE","message","title","description","availability_status_error","variant","some","AdditionalInfoBar","sourceType","appTypes","useSelector","sourceAppsNames","application_type_id","display_name","TextContent","hasGutter","md","Text","component","TextVariants","h4","p","product_name","join","shape","string","isRequired","arrayOf","EditAlert","useFormApi","getState","Alert","isInline","genericInfo","sourceId","Content","condition","when","isNotEmpty","label","componentTypes","TEXT_FIELD","validate","value","asyncValidatorDebounced","validatorTypes","REQUIRED","resolveProps","validated","endpointFields","schema","hidden","modifiedFields","fields","field","hardcodedSchemas","getEnhancedEndpointField","subForm","SUB_FORM","validation","isEmpty","AuthenticationId","FormGroup","sourceEditContext","createContext","RemoveAuthPlaceholder","Bullseye","Spinner","small","className","GridLayout","renderForm","useContext","isDeleting","Flex","Button","aria-label","onClick","removingAuth","array","getLastPartOfName","fieldName","split","pop","getAdditionalFields","stepKey","modifyAuthSchemas","editedName","startsWith","replace","createAuthFieldName","finalField","authenticationFields","appName","schemaAuth","authtype","additionalStepKeys","getAdditionalAuthStepsKeys","additionalStepsFields","getAdditionalAuthSteps","step","flatMap","x","enhancedFields","getEnhancedAuthField","specialModifierAWS","APP_NAMES","createOneAppFields","appType","appendClusterIdentifier","unusedAuthsWarning","PLAIN_TEXT","applicationsFields","authenticationTypesFormGroups","appsLength","authenticationsInputs","auths","Boolean","unusedAuthentications","TABS","isBox","TitleAndDescription","titleField","hideField","parseSourceToSchema","initialState","loading","initialValues","isSubmitting","initialLoad","submitError","isTimeouted","reducer","state","authId","isAuthRemoving","CustomFormWrapper","props","Form","CustomButtons","onReset","onCancel","subscription","submitting","pristine","invalid","validating","ActionGroup","form","isDisabled","ModalFormTemplate","ModalProps","Modal","footer","showFormControls","FormWrapper","object","FakeFooter","history","useHistory","routes","WrapperModal","children","sourceRedux","useSource","header","isOpen","onClose","SubmittingModal","customText","TimeoutedModal","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","WrenchIcon","color","newLine","ErroredModal","onRetry","secondaryActions","target","href","rel","returnButtonTitle","func","RemoveAuth","useDispatch","actions","doDeleteAuthentication","addMessage","error","handleError","SourceEditModal","useReducer","isLoaded","useIsLoaded","shallowEqual","sourceTypes","sourceTypesLoaded","appTypesLoaded","useEffect","imported","redirectWhenImported","source_type_id","isLoading","returnToSources","Provider","SourcesFormRenderer","formApi","dirtyFields","FormTemplate","clearedValue","removeAppSubmit","titleSuccess","titleError","removeApplication","Authentication","formOptions","match","isEditing","isModified","useState","edited","setEdited","firstClick","useRef","mounted","current","doNotRequirePassword","componentProps","helperText","onFocus","TextInput","autoFocus","RemoveAppModal","container","dependentApps","dependent_applications","instanceOf","Element","RemoveRadio","option","setApplicationToRemove","htmlFor","ApplicationSelect","useFieldApi","options","input","onChange","removingApp","isCurrentlyRemoving","appIds","Radio","isChecked","componentMapper","mapperExtension","SWITCH","validatorMapper","PATTERN","MIN_LENGTH","URL","urlOrHost","formData","u","protocol","hostname","defaultPort","pathname","parseUrl","updateSource","endPointPort","parseInt","endpointData","isNaN","updateEndpoint","idWithoutPrefix","updateAuthentication","cmDataOut","patch"],"mappings":"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","file":"js/edit.9ce9ba31a4353378fe7f.js","sourcesContent":["import { getSourcesApi, doLoadApplicationsForEdit } from './entities';\nimport { getCmValues } from './getCmValues';\n\nexport const doLoadSourceForEdit = (source) =>\n  Promise.all([\n    getSourcesApi().showSource(source.id),\n    getSourcesApi().listSourceEndpoints(source.id),\n    doLoadApplicationsForEdit(source.id),\n    getCmValues(source.id).catch(() => undefined),\n  ]).then(async ([sourceData, endpoints, applications, costManagement]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    const apps = applications?.sources[0]?.applications || [];\n\n    let basicValues = {\n      source: {\n        ...source,\n        ...sourceData,\n      },\n      applications: apps,\n    };\n\n    if (costManagement) {\n      basicValues = {\n        ...basicValues,\n        billing_source: costManagement.billing_source,\n        credentials: costManagement.authentication.credentials,\n      };\n    }\n\n    const promises = [];\n    let appAuths;\n    const addToApp = [];\n    const appAuthenticationIds = [];\n\n    apps.forEach((app) => {\n      app?.authentications?.forEach((auth) => {\n        if (auth?.id) {\n          promises.push(getSourcesApi().showAuthentication(auth.id));\n          addToApp.push(app.id);\n          appAuthenticationIds.push(auth.id);\n        }\n      });\n    });\n\n    if (promises.length > 0) {\n      appAuths = await Promise.all(promises);\n\n      addToApp.forEach((id, index) => {\n        basicValues.applications.find((app) => app.id === id).authentications.push(appAuths[index]);\n      });\n    }\n\n    if (!endpoint) {\n      return basicValues;\n    }\n\n    return getSourcesApi()\n      .listEndpointAuthentications(endpoint.id)\n      .then((authentications) => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data.filter(({ id }) => !appAuthenticationIds.includes(id)),\n      }));\n  });\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const getCmValues = (id) => axiosInstance.get(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst Header = ({ name }) => {\n  const intl = useIntl();\n\n  return (\n    <Grid>\n      <GridItem xs={12}>\n        <Title headingLevel=\"h1\" size=\"3xl\">\n          {intl.formatMessage({\n            id: 'sources.editSource',\n            defaultMessage: 'Edit source',\n          })}\n        </Title>\n      </GridItem>\n      {name && (\n        <GridItem xs={12}>\n          {intl.formatMessage(\n            {\n              id: 'sources.editSourceDescription',\n              defaultMessage: 'Use the form fields below to make desired changes to source {name}.',\n            },\n            { name: <b key=\"b\">{name}</b> }\n          )}\n        </GridItem>\n      )}\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  name: PropTypes.node,\n};\n\nexport default Header;\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl } from '../SourcesTable/formatters';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n  const filteredValues = {};\n\n  Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n      set(filteredValues, key, get(values, key));\n    });\n\n  return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, applications, ...rest }, sourceTypeName) => {\n  const auhenticationsFinal = {};\n\n  const mergeAuths = [\n    ...(authentications || []),\n    ...(applications?.reduce((acc, curr) => [...acc, ...curr.authentications], []) || []),\n  ];\n\n  if (mergeAuths.length > 0) {\n    mergeAuths.forEach((auth) => {\n      auhenticationsFinal[`a${auth.id}`] = auth;\n    });\n  }\n\n  let endpoint;\n  let url;\n\n  if (endpoints && endpoints.length > 0) {\n    endpoint = endpoints[0];\n  }\n\n  if (endpoint) {\n    url = endpoint.scheme || endpoint.host || endpoint.path || endpoint.port ? endpointToUrl(endpoint) : undefined;\n  }\n\n  return {\n    source_type: sourceTypeName,\n    endpoint,\n    authentications: auhenticationsFinal,\n    url,\n    ...rest,\n  };\n};\n","import { checkAppAvailability } from '@redhat-cloud-services/frontend-components-sources/cjs/getApplicationStatus';\n\nimport { selectOnlyEditedValues } from './helpers';\nimport { loadEntities } from '../../redux/sources/actions';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport { doUpdateSource } from '../../api/doUpdateSource';\n\nimport { UNAVAILABLE } from '../SourcesTable/formatters';\n\nexport const onSubmit = async (values, editing, dispatch, source, intl, setState) => {\n  setState({ type: 'submit', values, editing });\n\n  try {\n    await doUpdateSource(source, selectOnlyEditedValues(values, editing));\n  } catch {\n    setState({ type: 'submitFailed' });\n\n    return;\n  }\n\n  checkSourceStatus(source.source.id);\n  dispatch(loadEntities());\n\n  let message;\n\n  const sourceData = await doLoadSourceForEdit({ id: source.source.id });\n\n  const promises = source.applications?.map(({ id }) => checkAppAvailability(id)) || [];\n\n  let statusResults;\n  if (promises.length > 0) {\n    try {\n      statusResults = await Promise.all(promises);\n    } catch (error) {\n      setState({ type: 'submitFailed' });\n\n      return;\n    }\n\n    const unavailableApp = statusResults.find(({ availability_status }) => availability_status === UNAVAILABLE);\n\n    if (unavailableApp) {\n      message = {\n        title: intl.formatMessage({\n          id: 'wizard.failEditToastTitle',\n          defaultMessage: 'Edit source failed',\n        }),\n        description: unavailableApp.availability_status_error,\n        variant: 'danger',\n      };\n\n      setState({ type: 'submitFinished', source: sourceData, message });\n\n      return;\n    }\n\n    const anyTimetouted = statusResults.some(({ availability_status }) => !availability_status);\n\n    if (anyTimetouted) {\n      setState({ type: 'submitTimetouted' });\n\n      return;\n    }\n  }\n\n  message = {\n    title: intl.formatMessage(\n      {\n        id: 'wizard.successEditToastTitle',\n        defaultMessage: 'Source ‘{name}’ was edited successfully.',\n      },\n      { name: source.source.name }\n    ),\n    variant: 'success',\n  };\n\n  setState({ type: 'submitFinished', source: sourceData, message });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/index';\n\nconst AdditionalInfoBar = ({ sourceType, applications }) => {\n  const intl = useIntl();\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n\n  const sourceAppsNames = applications?.map(\n    ({ application_type_id }) => appTypes?.find(({ id }) => id === application_type_id)?.display_name\n  );\n\n  return (\n    <TextContent>\n      <Grid hasGutter>\n        <GridItem md={2}>\n          <Text component={TextVariants.h4}>\n            {intl.formatMessage({\n              id: 'sources.sourceType',\n              defaultMessage: 'Source type',\n            })}\n          </Text>\n          <Text component={TextVariants.p} id=\"source-edit-type\">\n            {sourceType.product_name}\n          </Text>\n        </GridItem>\n        <GridItem md={8}>\n          <Text component={TextVariants.h4}>\n            {intl.formatMessage({\n              id: 'sources.apps',\n              defaultMessage: 'Applications',\n            })}\n          </Text>\n          <Text component={TextVariants.p} id=\"source-edit-apps\">\n            {sourceAppsNames.length > 0\n              ? sourceAppsNames.join(', ')\n              : intl.formatMessage({\n                  id: 'sources.none',\n                  defaultMessage: 'None',\n                })}\n          </Text>\n        </GridItem>\n      </Grid>\n    </TextContent>\n  );\n};\n\nAdditionalInfoBar.propTypes = {\n  sourceType: PropTypes.shape({\n    product_name: PropTypes.string.isRequired,\n  }),\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      application_type_id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default AdditionalInfoBar;\n","import React from 'react';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport { Alert } from '@patternfly/react-core/dist/js/components/Alert/Alert';\n\nconst EditAlert = () => {\n  const formOptions = useFormApi();\n\n  const { message } = formOptions.getState().values;\n\n  return (\n    <Alert variant={message?.variant} isInline title={message?.title}>\n      {message?.description}\n    </Alert>\n  );\n};\n\nexport default EditAlert;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport { asyncValidatorDebounced } from '@redhat-cloud-services/frontend-components-sources/cjs/SourceAddSchema';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nimport AdditionalInfoBar from './AdditionalInfoBar';\nimport EditAlert from './EditAlert';\n\nexport const genericInfo = (sourceId, intl, sourceType, applications) => [\n  {\n    name: 'alert',\n    component: 'description',\n    Content: EditAlert,\n    condition: {\n      when: 'message',\n      isNotEmpty: true,\n    },\n  },\n  {\n    name: 'source.name',\n    label: intl.formatMessage({\n      id: 'sources.sourceName',\n      defaultMessage: 'Source name',\n    }),\n    component: componentTypes.TEXT_FIELD,\n    validate: [(value) => asyncValidatorDebounced(value, sourceId, intl), { type: validatorTypes.REQUIRED }],\n    isRequired: true,\n    resolveProps: validated,\n  },\n  {\n    name: 'additional_info',\n    Content: AdditionalInfoBar,\n    component: 'description',\n    sourceType,\n    applications,\n  },\n];\n","import get from 'lodash/get';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport hardcodedSchemas from '@redhat-cloud-services/frontend-components-sources/cjs/hardcodedSchemas';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nexport const getEnhancedEndpointField = (sourceType, name) => get(hardcodedSchemas, [sourceType, 'endpoint', name], {});\n\nexport const endpointFields = (sourceType) => {\n  if (!sourceType.schema || !sourceType.schema.endpoint || sourceType.schema.endpoint.hidden) {\n    return undefined;\n  }\n\n  const schemaAuth = sourceType.schema.endpoint;\n\n  const enhancedFields = schemaAuth.fields.map((field) => ({\n    ...field,\n    ...getEnhancedEndpointField(sourceType.name, field.name),\n  }));\n\n  const modifiedFields = enhancedFields;\n\n  const subForm = {\n    component: componentTypes.SUB_FORM,\n    name: 'endpoint',\n  };\n\n  if (sourceType.name === 'ansible-tower') {\n    const url = modifiedFields.find(({ name }) => name === 'url');\n\n    return {\n      ...subForm,\n      fields: [\n        {\n          component: componentTypes.SUB_FORM,\n          name: 'receptor_node_group',\n          condition: {\n            when: 'endpoint.receptor_node',\n            isNotEmpty: true,\n          },\n          fields: [\n            {\n              ...url,\n              isRequired: false,\n              validate: url?.validate?.filter((validation) => validation.type !== validatorTypes.REQUIRED),\n            },\n          ],\n        },\n        {\n          component: componentTypes.SUB_FORM,\n          name: 'hostname_group',\n          condition: {\n            when: 'endpoint.receptor_node',\n            isEmpty: true,\n          },\n          fields: modifiedFields,\n        },\n      ],\n    };\n  }\n\n  return {\n    ...subForm,\n    fields: modifiedFields,\n  };\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nconst AuthenticationId = ({ id }) => {\n  const intl = useIntl();\n\n  return (\n    <FormGroup\n      label={intl.formatMessage({\n        id: 'sources.authId',\n        defaultMessage: 'Authentication ID',\n      })}\n    >\n      <TextContent>\n        <Text variant=\"p\">{id}</Text>\n      </TextContent>\n    </FormGroup>\n  );\n};\n\nAuthenticationId.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default AuthenticationId;\n","import { createContext } from 'react';\n\nconst sourceEditContext = createContext();\n\nexport default sourceEditContext;\n","import React from 'react';\n\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\n\nimport { useIntl } from 'react-intl';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nconst RemoveAuthPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <Grid>\n      <GridItem xs={12}>\n        <Bullseye>\n          <Spinner size=\"lg\" />\n        </Bullseye>\n      </GridItem>\n      <GridItem xs={12}>\n        <Bullseye>\n          <TextContent>\n            <Text component={TextVariants.small} className=\"pf-u-mt-md\">\n              {intl.formatMessage({\n                id: 'sources.removingAuthMessage',\n                defaultMessage: 'This authentication is being removed...',\n              })}\n            </Text>\n          </TextContent>\n        </Bullseye>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default RemoveAuthPlaceholder;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/js/layouts/Flex';\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport AuthenticationId from './AuthenticationId';\nimport sourceEditContext from '../sourceEditContext';\nimport RemoveAuthPlaceholder from './RemoveAuthPlaceholder';\n\nconst GridLayout = ({ id, fields }) => {\n  const intl = useIntl();\n  const { renderForm } = useFormApi();\n  const { setState, source } = useContext(sourceEditContext);\n\n  const setAuthRemoving = () =>\n    setState({\n      type: 'setAuthRemoving',\n      removingAuth: id,\n    });\n\n  const isDeleting = source?.authentications?.find((auth) => auth.id === id)?.isDeleting;\n\n  if (isDeleting) {\n    return <RemoveAuthPlaceholder />;\n  }\n\n  return (\n    <Grid>\n      <GridItem md={2}>\n        <Flex>\n          <FlexItem className=\"pf-u-mr-0\">\n            <Button\n              variant=\"plain\"\n              aria-label={intl.formatMessage(\n                {\n                  id: 'sources.removeAuthAriaLabel',\n                  defaultMessage: 'Remove authentication with id {id}',\n                },\n                { id }\n              )}\n              onClick={setAuthRemoving}\n            >\n              <TrashIcon />\n            </Button>\n          </FlexItem>\n          <Flex>\n            <AuthenticationId id={id} />\n          </Flex>\n        </Flex>\n      </GridItem>\n      <GridItem md={10}>{renderForm(fields)}</GridItem>\n    </Grid>\n  );\n};\n\nGridLayout.propTypes = {\n  id: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired,\n};\n\nexport default GridLayout;\n","import get from 'lodash/get';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport hardcodedSchemas from '@redhat-cloud-services/frontend-components-sources/cjs/hardcodedSchemas';\nimport GridLayout from './GridLayout';\n\nexport const createAuthFieldName = (fieldName, id) => `authentications.a${id}.${fieldName.replace('authentication.', '')}`;\n\nexport const getLastPartOfName = (fieldName) => fieldName.split('.').pop();\n\nexport const removeRequiredValidator = (validate = []) =>\n  validate.filter((validation) => validation.type !== validatorTypes.REQUIRED && validation.type !== 'required-validator');\n\nexport const getEnhancedAuthField = (sourceType, authtype, name, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, name], {});\n\nexport const getAdditionalAuthSteps = (sourceType, authtype, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, 'additionalSteps'], []);\n\nexport const getAdditionalAuthStepsKeys = (sourceType, authtype, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, 'includeStepKeyFields'], []);\n\nexport const getAdditionalFields = (auth, stepKey) => auth?.fields?.filter((field) => field.stepKey === stepKey) || [];\n\nexport const modifyAuthSchemas = (fields, id) =>\n  fields.map((field) => {\n    const editedName = field.name.startsWith('authentication') ? createAuthFieldName(field.name, id) : field.name;\n\n    const finalField = {\n      ...field,\n      name: editedName,\n    };\n\n    const isPassword = getLastPartOfName(finalField.name) === 'password';\n\n    if (isPassword) {\n      finalField.component = 'authentication';\n    }\n\n    return finalField;\n  });\n\nconst specialModifierAWS = (field, authtype) => {\n  if (getLastPartOfName(field.name) !== 'password') {\n    return field;\n  }\n\n  if (authtype === 'arn') {\n    return {\n      ...field,\n      label: 'Cost Management ARN',\n    };\n  }\n\n  if (authtype === 'cloud-meter-arn') {\n    return {\n      ...field,\n      label: 'Subscription Watch ARN',\n    };\n  }\n\n  return field;\n};\n\nexport const authenticationFields = (authentications, sourceType, appName) => {\n  if (!authentications || authentications.length === 0 || !sourceType.schema || !sourceType.schema.authentication) {\n    return [];\n  }\n\n  return authentications.map((auth) => {\n    const schemaAuth = sourceType?.schema?.authentication?.find(({ type }) => type === auth.authtype);\n\n    if (!schemaAuth) {\n      return [];\n    }\n\n    const additionalStepKeys = getAdditionalAuthStepsKeys(sourceType.name, auth.authtype, appName);\n    const additionalStepsFields = getAdditionalAuthSteps(sourceType.name, auth.authtype, appName)\n      ?.map((step) => ({\n        ...step,\n        fields: [...step.fields, ...getAdditionalFields(schemaAuth, step.name)],\n      }))\n      .map(({ fields }) => fields.map(({ name }) => name))\n      .flatMap((x) => x);\n\n    let enhancedFields = schemaAuth.fields\n      .filter(\n        (field) =>\n          additionalStepsFields.includes(field.name) ||\n          !field.stepKey ||\n          (field.stepKey && additionalStepKeys.includes(field.stepKey))\n      )\n      .map((field) => ({\n        ...field,\n        ...getEnhancedAuthField(sourceType.name, auth.authtype, field.name, appName),\n      }));\n\n    if (!appName && sourceType.name === 'amazon') {\n      enhancedFields = enhancedFields.map((field) => specialModifierAWS(field, auth.authtype));\n    }\n\n    if (!appName) {\n      return [\n        {\n          name: `authentication-${auth.id}`,\n          component: 'description',\n          id: auth.id,\n          Content: GridLayout,\n          fields: modifyAuthSchemas(enhancedFields, auth.id),\n        },\n      ];\n    }\n\n    return modifyAuthSchemas(enhancedFields, auth.id);\n  });\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport { FormattedMessage } from 'react-intl';\nimport { authenticationFields } from './authentication';\n\nexport const APP_NAMES = {\n  COST_MANAGAMENT: '/insights/platform/cost-management',\n};\n\nexport const appendClusterIdentifier = (sourceType) =>\n  sourceType.name === 'openshift'\n    ? [\n        {\n          name: 'source.source_ref',\n          label: <FormattedMessage id=\"sources.clusterIdentifier\" defaultMessage=\"Cluster identifier\" />,\n          isRequired: true,\n          validate: [{ type: validatorTypes.REQUIRED }],\n          component: componentTypes.TEXT_FIELD,\n        },\n      ]\n    : [];\n\nconst createOneAppFields = (appType, sourceType, app) => [\n  ...authenticationFields(\n    app.authentications?.filter((auth) => Object.keys(auth).length > 1),\n    sourceType,\n    appType?.name\n  ),\n  ...(appType?.name === APP_NAMES.COST_MANAGAMENT ? appendClusterIdentifier(sourceType) : []),\n];\n\nconst unusedAuthsWarning = (length) => ({\n  component: componentTypes.PLAIN_TEXT,\n  name: 'unused-auth-warning',\n  label: (\n    <FormattedMessage\n      id=\"sources.authNotUsed\"\n      defaultMessage=\"The following {length, plural, one {authentication is not} other {authentications are not}} used by any application.\"\n      values={{ length }}\n    />\n  ),\n});\n\nconst unusedAuthentications = (authentications, sourceType, appsLength) => {\n  if (!authentications || authentications.length === 0) {\n    return [];\n  }\n\n  let authenticationsInputs = sourceType?.schema?.authentication\n    ?.reduce((acc, { type }) => {\n      const auths = authentications.filter(({ authtype }) => type === authtype);\n\n      if (auths?.length > 0) {\n        return [...acc, ...authenticationFields(auths, sourceType)];\n      }\n\n      return acc;\n    }, [])\n    ?.filter(Boolean);\n\n  const transformToTabs = appsLength !== 0;\n\n  if (transformToTabs) {\n    authenticationsInputs = [\n      {\n        fields: [unusedAuthsWarning(authenticationsInputs.length), ...authenticationsInputs],\n        title: sourceType.product_name,\n        name: 'unused-auths-tab',\n      },\n    ];\n  } else {\n    authenticationsInputs = [\n      {\n        fields: [unusedAuthsWarning(authenticationsInputs.length), ...authenticationsInputs],\n        component: componentTypes.SUB_FORM,\n        name: 'unused-auths-group',\n      },\n    ];\n  }\n\n  return authenticationsInputs;\n};\n\nexport const applicationsFields = (applications, sourceType, appTypes, authentications) => {\n  const authenticationTypesFormGroups = unusedAuthentications(authentications, sourceType, applications?.length);\n\n  if (!applications || applications.length === 0) {\n    return authenticationTypesFormGroups;\n  } else if (applications.length === 1 && authenticationTypesFormGroups.length === 0) {\n    const appType = appTypes.find(({ id }) => id === applications[0].application_type_id);\n\n    return createOneAppFields(appType, sourceType, applications[0]);\n  } else {\n    return [\n      {\n        component: componentTypes.TABS,\n        name: 'app-tabs',\n        isBox: true,\n        fields: [\n          ...applications.map((app) => {\n            const appType = appTypes.find(({ id }) => id === app.application_type_id);\n\n            return {\n              name: appType?.id,\n              title: appType?.display_name,\n              fields: createOneAppFields(appType, sourceType, app),\n            };\n          }),\n          ...authenticationTypesFormGroups,\n        ],\n      },\n    ];\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nexport const TitleAndDescription = ({ title, description }) => (\n  <TextContent>\n    <Title headingLevel=\"h2\" className=\"pf-u-mb-0\">\n      {title}\n    </Title>\n    {description && <Text variant=\"p\">{description}</Text>}\n  </TextContent>\n);\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.node.isRequired,\n  description: PropTypes.node,\n};\n\nconst titleField = (applications, sourceType, appTypes, intl, authentications) => {\n  let title;\n  let description;\n\n  if (applications.length === 0) {\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleNoApp',\n        defaultMessage: '{type} credentials',\n      },\n      { type: sourceType?.product_name }\n    );\n  } else if (applications.length === 1) {\n    const app = appTypes.find(({ id }) => id === applications[0].application_type_id);\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleOneApp',\n        defaultMessage: '{type} & {app} credentials',\n      },\n      { type: sourceType?.product_name, app: app?.display_name }\n    );\n  } else {\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleMoreApps',\n        defaultMessage: '{type} & application credentials',\n      },\n      { type: sourceType?.product_name }\n    );\n    description = intl.formatMessage({\n      id: 'source.editDescriptionMoreApps',\n      defaultMessage: 'Use the tabs below to view and edit credentials for connected applications.',\n    });\n  }\n\n  return {\n    component: 'description',\n    name: 'edit-title',\n    Content: TitleAndDescription,\n    title,\n    description,\n    hideField: applications?.length === 0 && authentications?.length === 0,\n  };\n};\n\nexport default titleField;\n","import { genericInfo } from './genericInfo';\nimport { endpointFields } from './endpoint';\nimport { applicationsFields } from './application';\nimport titleField from './titleField';\n\nexport const parseSourceToSchema = (source, sourceType, appTypes, intl) => ({\n  fields: [\n    ...genericInfo(source.source.id, intl, sourceType, source.applications),\n    titleField(source.applications, sourceType, appTypes, intl, source.authentications),\n    ...applicationsFields(source.applications, sourceType, appTypes, source.authentications),\n    source.endpoints && source.endpoints.length > 0 ? endpointFields(sourceType) : false,\n  ].filter(Boolean),\n});\n","import { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { prepareInitialValues } from './helpers';\n\nexport const initialState = {\n  loading: true,\n  source: undefined,\n  initialValues: {},\n  sourceType: undefined,\n  schema: undefined,\n  isSubmitting: false,\n  initialLoad: true,\n  submitError: false,\n  isTimeouted: false,\n};\n\nconst reducer = (state, { type, source, sourceType, appTypes, intl, message, values, editing, removingAuth, authId }) => {\n  switch (type) {\n    case 'createForm':\n      return {\n        ...state,\n        sourceType,\n        initialValues: prepareInitialValues(state.source, sourceType.product_name),\n        schema: parseSourceToSchema(state.source, sourceType, appTypes, intl),\n        loading: false,\n      };\n    case 'setSource':\n      return {\n        ...state,\n        source,\n        initialLoad: false,\n      };\n    case 'submit':\n      return {\n        ...state,\n        isSubmitting: true,\n        submitError: false,\n        values,\n        editing,\n      };\n    case 'submitFinished':\n      return {\n        ...state,\n        isSubmitting: false,\n        source,\n        message,\n      };\n    case 'submitFailed':\n      return {\n        ...state,\n        isSubmitting: false,\n        submitError: true,\n      };\n    case 'submitTimetouted':\n      return {\n        ...state,\n        isSubmitting: false,\n        isTimeouted: true,\n      };\n    case 'removeAuthPending':\n      return {\n        ...state,\n        isAuthRemoving: null,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.map((auth) =>\n            auth.id === authId\n              ? {\n                  ...auth,\n                  isDeleting: true,\n                }\n              : auth\n          ),\n        },\n      };\n    case 'removeAuthRejected':\n      return {\n        ...state,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.map((auth) =>\n            auth.id === authId\n              ? {\n                  ...auth,\n                  isDeleting: false,\n                }\n              : auth\n          ),\n        },\n      };\n    case 'removeAuthFulfill':\n      return {\n        ...state,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.filter((auth) => auth.id !== authId),\n        },\n      };\n    case 'setAuthRemoving':\n      return {\n        ...state,\n        isAuthRemoving: removingAuth,\n      };\n    case 'closeAuthRemoving':\n      return {\n        ...state,\n        isAuthRemoving: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/dist/cjs/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\nconst CustomFormWrapper = (props) => <Form {...props} id=\"modal-form\" />;\n\nconst CustomButtons = () => {\n  const intl = useIntl();\n  const { onReset, onCancel } = useFormApi();\n\n  return (\n    <FormSpy\n      subscription={{\n        submitting: true,\n        pristine: true,\n        invalid: true,\n        validating: true,\n      }}\n    >\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-c-form\">\n          <ActionGroup className=\"pf-u-mt-0\">\n            <Button\n              variant=\"primary\"\n              form=\"modal-form\"\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {intl.formatMessage({\n                id: 'sources.save',\n                defaultMessage: 'Save',\n              })}\n            </Button>\n            <Button variant=\"secondary\" isDisabled={pristine} onClick={onReset} id=\"reset-modal\">\n              {intl.formatMessage({\n                id: 'sources.reset',\n                defaultMessage: 'Reset',\n              })}\n            </Button>\n            <Button variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {intl.formatMessage({\n                id: 'sources.cancel',\n                defaultMessage: 'Cancel',\n              })}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nconst ModalFormTemplate = ({ ModalProps, ...props }) => (\n  <Modal {...ModalProps} footer={<CustomButtons />}>\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { useSource } from '../../hooks/useSource';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\n\nimport { routes } from '../../Routes';\nimport Header from './Header';\n\nexport const FakeFooter = () => {\n  const intl = useIntl();\n  const history = useHistory();\n\n  return (\n    <div className=\"pf-c-form\">\n      <ActionGroup className=\"pf-u-mt-0\">\n        <Button variant=\"primary\" isDisabled>\n          {intl.formatMessage({\n            id: 'sources.save',\n            defaultMessage: 'Save',\n          })}\n        </Button>\n        <Button variant=\"secondary\" isDisabled>\n          {intl.formatMessage({\n            id: 'sources.reset',\n            defaultMessage: 'Reset',\n          })}\n        </Button>\n        <Button variant=\"link\" onClick={() => history.push(routes.sources.path)}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>\n      </ActionGroup>\n    </div>\n  );\n};\n\nconst WrapperModal = ({ children }) => {\n  const history = useHistory();\n  const sourceRedux = useSource();\n  const intl = useIntl();\n\n  return (\n    <Modal\n      aria-label={intl.formatMessage({\n        id: 'sources.editSource',\n        defaultMessage: 'Edit source.',\n      })}\n      header={<Header name={sourceRedux.name} />}\n      variant=\"large\"\n      isOpen={true}\n      onClose={() => history.push(routes.sources.path)}\n      footer={<FakeFooter />}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nWrapperModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default WrapperModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport LoadingStep from '@redhat-cloud-services/frontend-components-sources/cjs/LoadingStep';\n\nimport WrapperModal from './WrapperModal';\n\nconst SubmittingModal = () => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <LoadingStep\n        customText={intl.formatMessage({\n          id: 'sources.editSubmittingTitle',\n          defaultMessage: 'Validating edited source credentials',\n        })}\n      />\n    </WrapperModal>\n  );\n};\n\nexport default SubmittingModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Title } from '@patternfly/react-core/dist/js/components/Title';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { EmptyState, EmptyStateVariant, EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\n\nimport WrenchIcon from '@patternfly/react-icons/dist/js/icons/wrench-icon';\n\nimport WrapperModal from './WrapperModal';\n\nconst TimeoutedModal = () => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <Bullseye>\n        <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n          <EmptyStateIcon icon={WrenchIcon} color=\"var(--pf-global--Color--200)\" className=\"pf-u-mb-0\" />\n          <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n            {intl.formatMessage({\n              id: 'sources.editTimetoutedTitle',\n              defaultMessage: 'Edit source not yet complete',\n            })}\n          </Title>\n          <EmptyStateBody>\n            {intl.formatMessage(\n              {\n                id: 'sources.editTimetoutedDescription',\n                defaultMessage:\n                  'We are still working to confirm your updated credentials and app settings.{newLine}To track progress, check the Status column in the Sources table.',\n              },\n              { newLine: <br key=\"br\" /> }\n            )}\n          </EmptyStateBody>\n        </EmptyState>\n      </Bullseye>\n    </WrapperModal>\n  );\n};\n\nexport default TimeoutedModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport ErroredStep from '@redhat-cloud-services/frontend-components-sources/cjs/ErroredStep';\n\nimport WrapperModal from './WrapperModal';\n\nconst ErroredModal = ({ onRetry }) => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <ErroredStep\n        onClose={onRetry}\n        customText={intl.formatMessage({\n          id: 'sources.editErrorDescription',\n          defaultMessage:\n            'There was a problem while trying to edit your source. Please try again. If the error persists, open a support case.',\n        })}\n        secondaryActions={\n          <Text\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n            rel=\"noopener noreferrer\"\n          >\n            {intl.formatMessage({\n              id: 'sources.openTicket',\n              defaultMessage: 'Open a support case',\n            })}\n          </Text>\n        }\n        returnButtonTitle={intl.formatMessage({\n          id: 'sources.retryText',\n          defaultMessage: 'Retry',\n        })}\n      />\n    </WrapperModal>\n  );\n};\n\nErroredModal.propTypes = {\n  onRetry: PropTypes.func.isRequired,\n};\n\nexport default ErroredModal;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport sourceEditContext from '../sourceEditContext';\nimport { addMessage } from '../../../redux/sources/actions';\nimport { doDeleteAuthentication } from '../../../api/entities';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources/cjs/handleError';\n\nconst RemoveAuth = ({ authId }) => {\n  const { setState, source, sourceType } = useContext(sourceEditContext);\n\n  const schemaAuth = sourceType?.schema?.authentication?.find(\n    ({ type }) => type === source?.authentications?.find((auth) => auth?.id === authId)?.authtype\n  );\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const onClose = () => setState({ type: 'closeAuthRemoving' });\n\n  const onRemove = () => {\n    setState({ type: 'removeAuthPending', authId });\n    onClose();\n    return doDeleteAuthentication(authId)\n      .then(() => {\n        setState({ type: 'removeAuthFulfill', authId });\n        dispatch(\n          addMessage(\n            intl.formatMessage({\n              id: 'sources.authRemoveFullfil',\n              defaultMessage: 'Authentication was deleted successfully.',\n            }),\n            'success'\n          )\n        );\n      })\n      .catch((error) => {\n        setState({ type: 'removeAuthRejected', authId });\n        dispatch(\n          addMessage(\n            intl.formatMessage({\n              id: 'sources.authRemoveRejected',\n              defaultMessage: 'Authentication was not deleted successfully.',\n            }),\n            'danger',\n            handleError(error)\n          )\n        );\n      });\n  };\n\n  return (\n    <Modal\n      isOpen\n      className=\"ins-c-sources__dialog--warning\"\n      onClose={onClose}\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onRemove}>\n          {intl.formatMessage({\n            id: 'sources.deleteConfirm',\n            defaultMessage: 'Remove authentication',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onClose}>\n          {intl.formatMessage({\n            id: 'sources.deleteCancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAuthTitle',\n        defaultMessage: 'Remove authentication?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove authentication?',\n          })}\n        </Title>\n      }\n    >\n      <TextContent>\n        <Text variant={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.removeAuthWarning',\n              defaultMessage: 'This action will permanently remove {auth} from this source.',\n            },\n            { auth: <b key=\"b\">{schemaAuth?.name}</b> }\n          )}\n        </Text>\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveAuth.propTypes = {\n  authId: PropTypes.string.isRequired,\n};\n\nexport default RemoveAuth;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport Header from './Header';\nimport { onSubmit } from './onSubmit';\n\nimport { redirectWhenImported } from './importedRedirect';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport reducer, { initialState } from './reducer';\nimport sourceEditContext from './sourceEditContext';\nimport ModalFormTemplate from '../ModalFormTemplate';\nimport SubmittingModal from './SubmittingModal';\nimport TimeoutedModal from './TimeoutedModal';\nimport ErroredModal from './ErroredModal';\nimport RemoveAuth from './parser/RemoveAuth';\n\nconst SourceEditModal = () => {\n  const [state, setState] = useReducer(reducer, initialState);\n  const history = useHistory();\n  const sourceRedux = useSource();\n  const isLoaded = useIsLoaded();\n\n  const {\n    loading,\n    editing,\n    source,\n    initialValues,\n    schema,\n    isSubmitting,\n    initialLoad,\n    message,\n    submitError,\n    isTimeouted,\n    values,\n    sourceType,\n    isAuthRemoving,\n  } = state;\n\n  const intl = useIntl();\n\n  const { sourceTypes, appTypes, sourceTypesLoaded, appTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (sourceRedux && initialLoad) {\n      doLoadSourceForEdit(sourceRedux).then((source) => {\n        if (source.source.imported) {\n          redirectWhenImported(dispatch, intl, history, source.source.name);\n        }\n\n        setState({ type: 'setSource', source });\n      });\n    }\n  }, [sourceRedux, isLoaded]);\n\n  useEffect(() => {\n    if (source && appTypesLoaded && sourceTypesLoaded) {\n      const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n      setState({ type: 'createForm', sourceType, source, appTypes, intl });\n    }\n  }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n  const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n  const returnToSources = () => history.push(routes.sources.path);\n\n  if (isTimeouted) {\n    return <TimeoutedModal />;\n  }\n\n  if (submitError) {\n    return <ErroredModal onRetry={() => onSubmit(values, editing, dispatch, source, intl, setState)} />;\n  }\n\n  if (isSubmitting) {\n    return <SubmittingModal />;\n  }\n\n  if (isLoading) {\n    return (\n      <Modal\n        aria-label={intl.formatMessage({\n          id: 'sources.editSource',\n          defaultMessage: 'Edit source.',\n        })}\n        header={<Header />}\n        isOpen\n        variant=\"large\"\n        onClose={returnToSources}\n      >\n        <div className=\"ins-c-sources__dialog--spinnerContainer\">\n          <Spinner />\n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <sourceEditContext.Provider value={{ setState, source, sourceType }}>\n      {isAuthRemoving && <RemoveAuth authId={isAuthRemoving} />}\n      <SourcesFormRenderer\n        onCancel={returnToSources}\n        schema={schema}\n        onSubmit={(values, formApi) => onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, setState)}\n        FormTemplate={(props) => (\n          <ModalFormTemplate\n            ModalProps={{\n              ['aria-label']: intl.formatMessage({\n                id: 'sources.editSource',\n                defaultMessage: 'Edit source.',\n              }),\n              header: <Header name={source.source.name} />,\n              variant: 'large',\n              isOpen: !isAuthRemoving,\n              onClose: returnToSources,\n            }}\n            {...props}\n          />\n        )}\n        clearedValue={null}\n        initialValues={{\n          ...initialValues,\n          message,\n        }}\n      />\n    </sourceEditContext.Provider>\n  );\n};\n\nexport default SourceEditModal;\n","import { routes } from '../../Routes';\nimport { addMessage } from '../../redux/sources/actions';\n\nexport const redirectWhenImported = (dispatch, intl, history, name) => {\n  dispatch(\n    addMessage(\n      intl.formatMessage(\n        {\n          id: 'sources.importSourceCannotEdited',\n          defaultMessage: 'Source { name } is imported.',\n        },\n        { name }\n      ),\n      'danger',\n      intl.formatMessage({\n        id: 'sources.importedSourcesCannotEdited',\n        defaultMessage: 'Imported sources cannot be edited.',\n      })\n    )\n  );\n  history.push(routes.sources.path);\n};\n","import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import React, { useState, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\n\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nconst Authentication = (rest) => {\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  const [authenticationId] = rest?.name?.match(/\\d+/) || [];\n  const isEditing = authenticationId || values.authentication?.id;\n\n  // If there is any value, the field is modified (password is always empty on start)\n  let isModified = get(values, rest.name);\n\n  const [edited, setEdited] = useState(!isEditing || isModified);\n  const firstClick = useRef(true);\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      // reset on restart\n      if (!firstClick.current && formOptions.getState().pristine) {\n        setEdited(false);\n        firstClick.current = true;\n      }\n\n      if (edited) {\n        firstClick.current = false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(isEditing\n      ? {\n          validate: doNotRequirePassword,\n          resolveProps: validated,\n        }\n      : {}),\n  };\n\n  if (!edited && isEditing) {\n    return (\n      <FormGroup helperText={componentProps.helperText} label={componentProps.label} onFocus={() => setEdited(true)} isRequired>\n        <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" />\n      </FormGroup>\n    );\n  }\n\n  return <TextField {...componentProps} autoFocus={true} />;\n};\n\nexport default Authentication;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\n\nconst RemoveAppModal = ({ app, onCancel, container }) => {\n  const intl = useIntl();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  useEffect(() => {\n    if (container) {\n      container.hidden = true;\n    }\n  }, []);\n\n  const dependentApps = app.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return app.sourceAppsNames.includes(appType?.display_name) && appType?.display_name;\n    })\n    .filter((x) => x);\n\n  return (\n    <Modal\n      className=\"ins-c-sources__dialog--warning\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> }\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps }\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveAppModal.propTypes = {\n  app: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    display_name: PropTypes.string.isRequired,\n    dependent_applications: PropTypes.arrayOf(PropTypes.string),\n    sourceAppsNames: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired,\n  container: PropTypes.instanceOf(Element),\n};\n\nexport default RemoveAppModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Radio } from '@patternfly/react-core/dist/js/components/Radio/Radio';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport RemoveAppModal from './RemoveAppModal';\n\nconst RemoveRadio = ({ option, setApplicationToRemove, sourceAppsNames, app, appType }) => {\n  const intl = useIntl();\n\n  const onClick = () =>\n    setApplicationToRemove({\n      id: app?.id,\n      display_name: appType?.display_name,\n      dependent_applications: appType?.dependent_applications,\n      sourceAppsNames,\n    });\n\n  return (\n    <div className=\"pf-c-radio pf-u-mb-md\">\n      <Button\n        id={`remove-app-${option.value}`}\n        variant=\"plain\"\n        aria-label={intl.formatMessage(\n          {\n            id: 'source.removeAppAria',\n            defaultMessage: 'Remove application {app} from this source',\n          },\n          { app: option.label }\n        )}\n        className=\"pf-u-p-0\"\n        onClick={onClick}\n      >\n        <TrashIcon variant=\"small\" />\n      </Button>\n      <label className=\"pf-c-radio__label\" htmlFor={`remove-app-${option.value}`}>\n        {option.label}\n      </label>\n    </div>\n  );\n};\n\nRemoveRadio.propTypes = {\n  option: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  }),\n  setApplicationToRemove: PropTypes.func.isRequired,\n  sourceAppsNames: PropTypes.arrayOf(PropTypes.string),\n  appType: PropTypes.shape({\n    display_name: PropTypes.string.isRequired,\n    dependent_applications: PropTypes.arrayOf(PropTypes.string),\n  }),\n  app: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    application_type_id: PropTypes.string.isRequired,\n  }),\n};\n\nconst ApplicationSelect = (props) => {\n  const {\n    options,\n    input: { onChange, value, name },\n    container,\n  } = useFieldApi(props);\n\n  const [removingApp, setApplicationToRemove] = useState({});\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const source = useSource();\n\n  const sourceAppsNames = source.applications.map(\n    ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name\n  );\n\n  const appType = (value) => appTypes?.find((appType) => appType.id === value);\n  const app = (value) => source.applications.find((app) => app.application_type_id === value);\n\n  const isCurrentlyRemoving = (value) => app(value)?.isDeleting;\n\n  const appIds = source.applications\n    .filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n  return (\n    <div>\n      {removingApp.id && (\n        <RemoveAppModal\n          app={removingApp}\n          onCancel={() => {\n            if (container) {\n              container.hidden = false;\n            }\n\n            return setApplicationToRemove({});\n          }}\n          container={container}\n        />\n      )}\n      {options.map((option) =>\n        !appIds.includes(option.value) ? (\n          <Radio\n            className=\"pf-u-mb-md\"\n            key={option.value}\n            onChange={() => onChange(option.value)}\n            label={option.label}\n            id={`${name}-${option.value}`}\n            name={name}\n            isChecked={value === option.value}\n            isDisabled={isCurrentlyRemoving(option.value)}\n          />\n        ) : (\n          <RemoveRadio\n            key={option.value}\n            option={option}\n            setApplicationToRemove={setApplicationToRemove}\n            sourceAppsNames={sourceAppsNames}\n            app={app(option.value)}\n            appType={appType(option.value)}\n          />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ApplicationSelect;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources/cjs/sourceFormRenderer';\n\nimport Authentication from '../components/Authentication';\n\nimport ApplicationSelect from '../components/AddApplication/ApplicationSelect';\n\nconst SourcesFormRenderer = (props) => (\n  <FormRenderer\n    FormTemplate={FormTemplate}\n    componentMapper={{\n      ...componentMapper,\n      ...mapperExtension,\n      authentication: Authentication,\n      'switch-field': componentMapper[componentTypes.SWITCH],\n      'application-select': ApplicationSelect,\n    }}\n    validatorMapper={{\n      'required-validator': validatorMapper[validatorTypes.REQUIRED],\n      'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n      'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n      'url-validator': validatorMapper[validatorTypes.URL],\n    }}\n    {...props}\n  />\n);\n\nexport default SourcesFormRenderer;\n","import { defaultPort } from '../components/SourcesTable/formatters';\nimport { getSourcesApi } from './entities';\nimport { patchCmValues } from './patchCmValues';\n\nexport const parseUrl = (url) => {\n  if (url === null) {\n    return {\n      scheme: null,\n      host: null,\n      port: null,\n      path: null,\n    };\n  }\n\n  if (!url) {\n    return {};\n  }\n\n  try {\n    const u = new URL(url);\n    const scheme = u.protocol.replace(/:$/, '');\n\n    return {\n      scheme,\n      host: u.hostname,\n      port: u.port === '' ? defaultPort(scheme) : u.port,\n      path: u.pathname,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const urlOrHost = (formData) =>\n  formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData) => {\n  const promises = [];\n\n  if (formData.source) {\n    promises.push(getSourcesApi().updateSource(source.source.id, formData.source));\n  }\n\n  if (formData.endpoint || formData.url || formData.url === null) {\n    const { scheme, host, port, path } = urlOrHost(formData);\n    const endPointPort = port === null ? null : parseInt(port, 10);\n\n    const endpointData = {\n      scheme,\n      host,\n      path,\n      port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n      ...formData.endpoint,\n    };\n\n    promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData));\n  }\n\n  if (formData.authentications) {\n    Object.keys(formData.authentications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]));\n    });\n  }\n\n  if (formData.billing_source || formData.credentials) {\n    let cmDataOut = {};\n\n    if (formData.credentials) {\n      cmDataOut = {\n        authentication: {\n          credentials: formData.credentials,\n        },\n      };\n    }\n\n    if (formData.billing_source) {\n      cmDataOut = {\n        ...cmDataOut,\n        billing_source: formData.billing_source,\n      };\n    }\n\n    promises.push(patchCmValues(source.source.id, cmDataOut));\n  }\n\n  return Promise.all(promises);\n};\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const patchCmValues = (id, data) => axiosInstance.patch(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`, data);\n"],"sourceRoot":""}