{"version":3,"sources":["webpack:///./src/components/SourceEditForm/sourceEditContext.js","webpack:///./src/components/EditField/EditField.js","webpack:///./src/components/EditField/EditFieldWrapper.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Modal/index.js","webpack:///./node_modules/lodash/set.js","webpack:///./node_modules/lodash/_baseSet.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/trash-icon.js","webpack:///./src/api/doLoadSourceForEdit.js","webpack:///./src/components/SourceEditForm/Header.js","webpack:///./src/components/SourceEditForm/helpers.js","webpack:///./src/components/SourceEditForm/onSubmit.js","webpack:///./src/components/SourceEditForm/parser/AuthenticationManagement.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuthPlaceholder.js","webpack:///./src/components/SourceEditForm/parser/helpers.js","webpack:///./src/components/SourceEditForm/parser/authentication.js","webpack:///./src/components/SourceEditForm/parser/unsupportedAuthType.js","webpack:///./src/components/SourceEditForm/parser/endpoint.js","webpack:///./src/components/SourceEditForm/parser/application.js","webpack:///./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack:///./src/components/SourceEditForm/parser/genericInfo.js","webpack:///./src/components/SourceEditForm/reducer.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuth.js","webpack:///./src/components/SourceEditForm/SourceEditModal.js","webpack:///./src/api/getCmValues.js","webpack:///./src/components/SourceEditForm/importedRedirect.js"],"names":["sourceEditContext","createContext","EDIT_FIELD_NAME","EditField","isRequired","label","helperText","hideLabel","name","type","isEditable","useFormApi","getFieldState","getState","setState","useContext","value","get","initialValues","error","touched","showError","emptyText","includes","fieldId","isValid","helperTextInvalid","tabIndex","onKeyPress","e","charCode","preventDefault","onClick","className","propTypes","PropTypes","node","bool","string","NOT_CHANGING_COMPONENTS","componentTypes","CHECKBOX","SWITCH","EditFieldWrapper","originalComponent","props","Component","clearProps","componentMapper","RendererContext","editing","SourcesFormRenderer","FormTemplate","mapperExtension","validatorMapper","validatorTypes","REQUIRED","PATTERN","MIN_LENGTH","URL","Object","defineProperty","exports","_Modal","keys","forEach","key","enumerable","_ModalBox","_ModalBoxBody","_ModalBoxCloseButton","_ModalBoxFooter","_ModalBoxHeader","_ModalContent","baseSet","module","object","path","assignValue","castPath","isIndex","isObject","toKey","customizer","index","length","lastIndex","nested","newValue","objValue","undefined","TrashIconConfig","obj","_createIcon","__esModule","height","width","svgPath","yOffset","xOffset","transform","_default","Header","Grid","GridItem","xs","Title","headingLevel","TitleLevel","h1","size","id","defaultMessage","prepareInitialValues","sourceTypeName","endpoint","url","endpoints","authentications","rest","auhenticationsFinal","auth","scheme","host","port","endpointToUrl","source_type","onSubmit","values","dispatch","source","intl","push","updateSource","filteredValues","filter","set","selectOnlyEditedValues","formatMessage","authentication","costManagement","then","checkSourceStatus","routes","sources","loadEntities","AuthenticationManagement","schemaAuth","appTypes","isDeleting","appNames","applications","find","map","application_type_id","Boolean","app","display_name","sm","Button","variant","aria-label","removingAuth","TextContent","Text","component","TextVariants","small","authid","join","arrayOf","shape","RemoveAuthPlaceholder","Bullseye","Spinner","modifyFields","fields","field","modifyAuthSchemas","editedName","startsWith","fieldName","replace","createAuthFieldName","finalField","split","pop","validate","validation","removeRequiredValidator","authenticationFields","sourceType","schema","authtype","Content","p","additionalStepKeys","hardcodedSchemas","getAdditionalAuthSteps","enhancedFields","stepKey","getEnhancedAuthField","SUB_FORM","endpointFields","hidden","getEnhancedEndpointField","title","APP_NAMES","cmFieldsPrefixes","isCMField","some","prefix","getCMFields","flatMap","x","getEnhancedCMField","authenticationsTypes","apps","hasAppField","appendClusterIdentifier","TEXT_FIELD","costManagementFields","costManagementApp","hasCostManagement","billingSourceFields","enhandcedFields","applicationsFields","parseSourceToSchema","sourceId","asyncValidator","isReadOnly","initialState","loading","isAuthRemoving","reducer","state","authId","product_name","RemoveAuth","body","actions","hasAttachedApp","useDispatch","useIntl","onClose","count","authname","doDeleteAuthentication","addMessage","handleError","Modal","isOpen","isFooterLeftAligned","isSmall","header","SourceEditModal","useReducer","history","useHistory","sourceRedux","useSource","isLoaded","useIsLoaded","useSelector","shallowEqual","sourceTypes","sourceTypesLoaded","appTypesLoaded","useEffect","Promise","all","getSourcesApi","showSource","listSourceEndpoints","listSourceApplications","axiosInstance","COST_MANAGEMENT_API_BASE","sourceData","data","basicValues","billing_source","credentials","listEndpointAuthentications","doLoadSourceForEdit","imported","redirectWhenImported","source_type_id","returnToSources","isLarge","Fragment","Provider","onCancel","formApi","dirtyFields","formWrapperProps","isHorizontal","canReset","disableSubmit","submitLabel","clearedValue","onReset"],"mappings":"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","file":"js/edit.d76ac9eed8582e90d21e.js","sourcesContent":["import { createContext } from 'react';\n\nconst sourceEditContext = createContext();\n\nexport default sourceEditContext;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\n\nimport PencilAltIcon from '@patternfly/react-icons/dist/js/icons/pencil-alt-icon';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\n\nimport sourceEditContext from '../SourceEditForm/sourceEditContext';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const EDIT_FIELD_NAME = 'edit-field';\n\nconst EditField = ({ isRequired, label, helperText, hideLabel, name, type, isEditable }) => {\n    const { getFieldState, getState } = useFormApi();\n\n    const { setState } = useContext(sourceEditContext);\n\n    const { error, touched, value } = getFieldState(name) || { value: get(getState().initialValues, name) };\n    const showError = touched && error;\n\n    const isPassword = type === 'password' || name.includes('password');\n    const emptyText = isPassword ? 'Click to edit' : 'Click to add';\n\n    return (\n        <FormGroup\n            isRequired={ isRequired }\n            label={ !hideLabel && label }\n            fieldId={ name }\n            isValid={ !showError }\n            helperText={ helperText }\n            helperTextInvalid={ error }\n            tabIndex={0}\n            onKeyPress={(e) => {\n                if (e.charCode === 32 && isEditable) {\n                    e.preventDefault();\n                    setState({ type: 'setEdit', name });\n                }\n            }}\n            {...(isEditable && { onClick: () => setState({ type: 'setEdit', name }) })}\n        >\n            <div className={`pf-c-form__horizontal-group ins-c-sources__edit-field-group ${isEditable ? 'clickable' : ''}`}>\n                <TextContent className={`ins-c-sources__edit-field-group-text-content ${isEditable ? 'clickable' : ''}`}>\n                    <span className=\"ins-c-sources__edit-field-value pf-u-mr-sm\">\n                        {value ? value : isEditable ? emptyText : ''}\n                    </span>\n                    {isEditable && <PencilAltIcon />}\n                </TextContent>\n            </div>\n        </FormGroup>\n    );\n};\n\nEditField.propTypes = {\n    label: PropTypes.node,\n    isRequired: PropTypes.bool,\n    helperText: PropTypes.node,\n    hideLabel: PropTypes.bool,\n    isEditable: PropTypes.bool,\n    type: PropTypes.string,\n    name: PropTypes.string\n};\n\nexport default EditField;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RendererContext from '@data-driven-forms/react-form-renderer/dist/cjs/renderer-context';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\n\nimport sourceEditContext from '../SourceEditForm/sourceEditContext';\nimport EditField from './EditField';\n\nexport const NOT_CHANGING_COMPONENTS = [componentTypes.CHECKBOX, componentTypes.SWITCH];\n\nconst EditFieldWrapper = ({ originalComponent, isEditable = true, ...props }) => {\n    let Component = EditField;\n    let clearProps = {};\n\n    const { componentMapper } = useContext(RendererContext);\n    const { editing } = useContext(sourceEditContext);\n\n    if (editing[props.name] || NOT_CHANGING_COMPONENTS.includes(originalComponent)) {\n        Component = componentMapper[originalComponent];\n    } else if (isEditable) {\n        clearProps = { isEditable: true };\n    }\n\n    return <Component {...props} {...clearProps}/>;\n};\n\nEditFieldWrapper.propTypes = {\n    originalComponent: PropTypes.string,\n    name: PropTypes.string,\n    isEditable: PropTypes.bool\n};\n\nexport default EditFieldWrapper;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources';\n\nimport EditFieldWrapper from '../components/EditField/EditFieldWrapper';\n\nconst SourcesFormRenderer = props => (\n    <FormRenderer\n        FormTemplate={FormTemplate}\n        componentMapper={{\n            ...componentMapper,\n            ...mapperExtension,\n            'edit-field': EditFieldWrapper,\n            'switch-field': componentMapper[componentTypes.SWITCH]\n        }}\n        validatorMapper={{\n            'required-validator': validatorMapper[validatorTypes.REQUIRED],\n            'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n            'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n            'url-validator': validatorMapper[validatorTypes.URL]\n        }}\n        {...props}\n    />\n);\n\nexport default SourcesFormRenderer;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./Modal\");\n\nObject.keys(_Modal).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Modal[key];\n    }\n  });\n});\n\nvar _ModalBox = require(\"./ModalBox\");\n\nObject.keys(_ModalBox).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBox[key];\n    }\n  });\n});\n\nvar _ModalBoxBody = require(\"./ModalBoxBody\");\n\nObject.keys(_ModalBoxBody).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxBody[key];\n    }\n  });\n});\n\nvar _ModalBoxCloseButton = require(\"./ModalBoxCloseButton\");\n\nObject.keys(_ModalBoxCloseButton).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxCloseButton[key];\n    }\n  });\n});\n\nvar _ModalBoxFooter = require(\"./ModalBoxFooter\");\n\nObject.keys(_ModalBoxFooter).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxFooter[key];\n    }\n  });\n});\n\nvar _ModalBoxHeader = require(\"./ModalBoxHeader\");\n\nObject.keys(_ModalBoxHeader).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxHeader[key];\n    }\n  });\n});\n\nvar _ModalContent = require(\"./ModalContent\");\n\nObject.keys(_ModalContent).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalContent[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map","var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.TrashIconConfig = void 0;\n\nvar _createIcon = _interopRequireDefault(require(\"../createIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* This file is generated by createIcons.js any changes will be lost. */\nvar TrashIconConfig = {\n  name: 'TrashIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexports.TrashIconConfig = TrashIconConfig;\n\nvar _default = (0, _createIcon[\"default\"])(TrashIconConfig);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=trash-icon.js.map","import { getSourcesApi } from './entities';\nimport { getCmValues } from './getCmValues';\n\nexport const doLoadSourceForEdit = (source) => Promise.all([\n    getSourcesApi().showSource(source.id),\n    getSourcesApi().listSourceEndpoints(source.id),\n    getSourcesApi().listSourceApplications(source.id),\n    getCmValues(source.id).catch(() => undefined)\n]).then(([sourceData, endpoints, applications, costManagement]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    let basicValues = {\n        source: {\n            ...source,\n            ...sourceData\n        },\n        applications: applications.data\n    };\n\n    if (costManagement) {\n        basicValues = {\n            ...basicValues,\n            billing_source: costManagement.billing_source,\n            credentials: costManagement.authentication.credentials\n        };\n    }\n\n    if (!endpoint) { // bail out\n        return basicValues;\n    }\n\n    return getSourcesApi().listEndpointAuthentications(endpoint.id).then(authentications => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data\n    }));\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Title, TitleLevel } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst Header = () => (\n    <Grid>\n        <GridItem xs={12}>\n            <Title headingLevel={TitleLevel.h1} size=\"3xl\">\n                <FormattedMessage\n                    id=\"sources.editSource\"\n                    defaultMessage=\"Edit source\"\n                />\n            </Title>\n        </GridItem>\n        <GridItem xs={12}>\n            <FormattedMessage\n                id=\"sources.editSourceDescription\"\n                defaultMessage=\"You are editing a source.\"\n            />\n        </GridItem>\n    </Grid>\n);\n\nexport default Header;\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl } from '../SourcesTable/formatters';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n    const filteredValues = {};\n\n    Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n        set(filteredValues, key, get(values, key));\n    });\n\n    return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, ...rest }, sourceTypeName) => {\n    const auhenticationsFinal = {};\n\n    if (authentications && authentications.length > 0) {\n        authentications.forEach((auth) => {\n            auhenticationsFinal[`a${auth.id}`] = auth;\n        });\n    }\n\n    let endpoint;\n    let url;\n\n    if (endpoints && endpoints.length > 0) {\n        endpoint = endpoints[0];\n    }\n\n    if (endpoint) {\n        url = (endpoint.scheme || endpoint.host || endpoint.path || endpoint.port) ? endpointToUrl(endpoint) : undefined;\n    }\n\n    return ({\n        source_type: sourceTypeName,\n        endpoint,\n        authentications: auhenticationsFinal,\n        url,\n        ...rest\n    });\n};\n","import { selectOnlyEditedValues } from './helpers';\nimport { updateSource, loadEntities } from '../../redux/sources/actions';\nimport { routes } from '../../Routes';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nexport const onSubmit = (values, editing, dispatch, source, intl, push) => dispatch(updateSource(\n    source,\n    selectOnlyEditedValues(values, editing),\n    intl.formatMessage({\n        id: 'sources.modifiedNotificationTitle',\n        defaultMessage: `\"{ name }\" was modified successfully.`\n    }, { name: source.source.name }),\n    intl.formatMessage({\n        id: 'sources.modifiedNotificationDescription',\n        defaultMessage: 'The source was successfully modified.'\n    }),\n    {\n        authentication: intl.formatMessage({\n            id: 'sources.sourceEditAuthFailure',\n            defaultMessage: 'Authentication update failure.'\n        }),\n        source: intl.formatMessage({\n            id: 'sources.sourceEditFailure',\n            defaultMessage: 'Source update failure.'\n        }),\n        endpoint: intl.formatMessage({\n            id: 'sources.sourceEditEndpointFailure',\n            defaultMessage: 'Endpoint update failure.'\n        }),\n        costManagement: intl.formatMessage({\n            id: 'sources.sourceCostmanagementFailure',\n            defaultMessage: 'Cost Management update failure.'\n        })\n    }))\n.then(() => {\n    checkSourceStatus(source.source.id);\n    push(routes.sources.path);\n    dispatch(loadEntities());\n});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport sourceEditContext from '../sourceEditContext';\nimport { FormattedMessage } from 'react-intl';\n\nconst AuthenticationManagement = ({ schemaAuth, auth, appTypes, isDeleting }) => {\n    const { source, setState } = useContext(sourceEditContext);\n\n    const attachedAppTypes = source.source.applications.filter(\n        ({ authentications }) => authentications.find(({ id }) => id === auth.id)\n    );\n\n    const appNames = attachedAppTypes.map(\n        ({ application_type_id }) => application_type_id ? appTypes.find(({ id }) => id === application_type_id) : undefined\n    ).filter(Boolean).map(app => app.display_name);\n\n    const setAuthRemoving = () => setState({\n        type: 'setAuthRemoving',\n        removingAuth: {\n            auth,\n            appNames,\n            schemaAuth\n        }\n    });\n\n    return (\n        <GridItem sm={12}>\n            <Title size=\"xl\">{schemaAuth.name}&nbsp;\n                {!isDeleting &&\n                    <Button variant=\"plain\" aria-label=\"Remove authentication\" onClick={setAuthRemoving}>\n                        <TrashIcon />\n                    </Button>\n                }\n            </Title>\n            <TextContent>\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                    <FormattedMessage\n                        id=\"sources.removeAuthDescription\"\n                        defaultMessage=\"id: {authid} { appNames}\"\n                        values={{\n                            authid: auth.id,\n                            appNames: appNames.length > 0 ?\n                                <FormattedMessage\n                                    id=\"sources.removeAuthWithApps\"\n                                    defaultMessage=\"used by {appNames}\"\n                                    values={{ appNames: appNames.join(', ') }}\n                                />\n                                : <FormattedMessage\n                                    id=\"sources.removeAuthNoApps\"\n                                    defaultMessage=\"not used by any app\"\n                                />\n                        }}\n                    />\n                </Text>\n            </TextContent>\n        </GridItem>\n    );\n};\n\nAuthenticationManagement.propTypes = {\n    isDeleting: PropTypes.bool,\n    appTypes: PropTypes.arrayOf(PropTypes.object),\n    schemaAuth: PropTypes.shape({\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    auth: PropTypes.shape({\n        id: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default AuthenticationManagement;\n","import React from 'react';\n\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nconst RemoveAuthPlaceholder = () => (\n    <Grid>\n        <GridItem xs={12}>\n            <Bullseye>\n                <Spinner size=\"lg\"/>\n            </Bullseye>\n        </GridItem>\n        <GridItem xs={12}>\n            <Bullseye>\n                <TextContent>\n                    <Text component={TextVariants.small} className=\"pf-u-mt-md\">\n                        <FormattedMessage\n                            id=\"sources.removingAuthMessage\"\n                            defaultMessage=\"This authentication is being removed...\"\n                        />\n                    </Text>\n                </TextContent>\n            </Bullseye>\n        </GridItem>\n    </Grid>\n);\n\nexport default RemoveAuthPlaceholder;\n","import { EDIT_FIELD_NAME } from '../../EditField/EditField';\n\nexport const modifyFields = (fields) => fields.map((field) => ({\n    ...field,\n    originalComponent: field.component,\n    component: EDIT_FIELD_NAME\n}));\n","import React from 'react';\nimport get from 'lodash/get';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { FormattedMessage } from 'react-intl';\n\nimport { unsupportedAuthTypeField } from './unsupportedAuthType';\nimport AuthenticationManagement from './AuthenticationManagement';\nimport RemoveAuthPlaceholder from './RemoveAuthPlaceholder';\nimport { modifyFields } from './helpers';\n\nexport const createAuthFieldName = (fieldName, id) => `authentications.a${id}.${fieldName.replace('authentication.', '')}`;\n\nexport const getLastPartOfName = (fieldName) => fieldName.split('.').pop();\n\nexport const removeRequiredValidator = (validate = []) =>\n    validate.filter(validation => validation.type !== validatorTypes.REQUIRED && validation.type !== 'required-validator');\n\nexport const getEnhancedAuthField = (sourceType, authtype, name) =>\n    get(hardcodedSchemas, [sourceType, 'authentication', authtype, 'generic', name], {});\n\nexport const getAdditionalAuthSteps = (sourceType, authtype) =>\n    get(hardcodedSchemas, [sourceType, 'authentication', authtype, 'generic', 'includeStepKeyFields'], []);\n\nexport const modifyAuthSchemas = (fields, id) => fields.map((field) => {\n    const editedName = field.name.startsWith('authentication') ? createAuthFieldName(field.name, id) : field.name;\n\n    const finalField = ({\n        ...field,\n        name: editedName,\n    });\n\n    const isPassword = getLastPartOfName(finalField.name) === 'password';\n\n    if (isPassword) {\n        finalField.helperText = (<FormattedMessage\n            id=\"sources.passwordResetHelperText\"\n            defaultMessage={`Changing this resets your current { label }.`}\n            values={{\n                label: finalField.label\n            }}\n        />);\n        finalField.isRequired = false;\n        finalField.validate = removeRequiredValidator(finalField.validate);\n    }\n\n    return finalField;\n});\n\nexport const authenticationFields = (authentications, sourceType, appTypes) => {\n    if (!authentications || authentications.length === 0 || !sourceType.schema || !sourceType.schema.authentication) {\n        return [];\n    }\n\n    return authentications.map(({ isDeleting, ...auth }) => {\n        const schemaAuth = sourceType.schema.authentication.find(({ type }) => type === auth.authtype);\n\n        if (!schemaAuth) {\n            return unsupportedAuthTypeField(auth.authtype);\n        }\n\n        const additionalStepKeys = getAdditionalAuthSteps(sourceType.name, auth.authtype);\n\n        const enhancedFields = schemaAuth.fields\n        .filter(field => !field.stepKey || additionalStepKeys.includes(field.stepKey))\n        .map((field) => ({\n            ...field,\n            ...getEnhancedAuthField(sourceType.name, auth.authtype, field.name)\n        }));\n\n        return ({\n            component: componentTypes.SUB_FORM,\n            name: schemaAuth.name,\n            fields: [\n                {\n                    component: 'description',\n                    name: `${auth.id}-authentication-management`,\n                    Content: AuthenticationManagement,\n                    schemaAuth,\n                    appTypes,\n                    auth,\n                    isDeleting\n                },\n                isDeleting ?  {\n                    component: 'description',\n                    name: `${auth.id}-remove-spinner`,\n                    Content: RemoveAuthPlaceholder\n                } : modifyFields(modifyAuthSchemas(enhancedFields, auth.id))\n            ]\n        });\n    });\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nexport const unsupportedAuthTypeField = (type) => ({\n    component: 'description',\n    name: `${type}-unsupported`,\n    // eslint-disable-next-line react/display-name\n    Content: () => (\n        <TextContent>\n            <Text component={ TextVariants.p }>\n                <FormattedMessage\n                    id=\"sources.unsupportedAuthType\"\n                    defaultMessage={`Authentication type of { type } is no longer supported.`}\n                    values={{ type }}\n                />\n            </Text>\n        </TextContent>\n    )\n});\n","import React from 'react';\nimport get from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { modifyFields } from './helpers';\n\nexport const getEnhancedEndpointField = (sourceType, name) =>\n    get(hardcodedSchemas, [sourceType, 'endpoint', name], {});\n\nexport const endpointFields = (sourceType) => {\n    if (!sourceType.schema || !sourceType.schema.endpoint || sourceType.schema.endpoint.hidden) {\n        return undefined;\n    }\n\n    const schemaAuth = sourceType.schema.endpoint;\n\n    const enhancedFields = schemaAuth.fields.map((field) => ({\n        ...field,\n        ...getEnhancedEndpointField(sourceType.name, field.name)\n    }));\n\n    return ({\n        component: componentTypes.SUB_FORM,\n        title: <FormattedMessage\n            id=\"sources.endpoint\"\n            defaultMessage=\"Endpoint\"\n        />,\n        name: 'endpoint',\n        fields: modifyFields(enhancedFields)\n    });\n};\n","import React from 'react';\nimport get from 'lodash/get';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { FormattedMessage } from 'react-intl';\nimport { modifyFields } from './helpers';\nimport { EDIT_FIELD_NAME } from '../../EditField/EditField';\n\nexport const APP_NAMES = {\n    COST_MANAGAMENT: '/insights/platform/cost-management'\n};\n\nexport const cmFieldsPrefixes = ['billing_source', 'credentials'];\n\nexport const isCMField = ({ name }) => cmFieldsPrefixes.some((prefix) => name.startsWith(prefix));\n\nexport const getCMFields = (authentication) =>\n    Object.keys(authentication)\n    .map((key) => authentication[key].fields.filter(isCMField))\n    .flatMap((x) => x);\n\nexport const getEnhancedCMField = (sourceType, name, authenticationsTypes) => {\n    let field = undefined;\n\n    authenticationsTypes.forEach((type) => {\n        const apps = field ? {} : get(hardcodedSchemas, [sourceType, 'authentication', type], {});\n\n        Object.keys(apps).find((key) => {\n            const hasAppField = get(hardcodedSchemas, [sourceType, 'authentication', type, key, name], undefined);\n            if (hasAppField) {\n                field = hasAppField;\n                return true;\n            }\n        });\n    });\n\n    return field ? field : {};\n};\n\nexport const appendClusterIdentifier = (sourceType) =>\n    sourceType.name === 'openshift' ? [{\n        name: 'source.source_ref',\n        label: <FormattedMessage\n            id=\"sources.clusterIdentifier\"\n            defaultMessage=\"Cluster identifier\"\n        />,\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n        originalComponent: componentTypes.TEXT_FIELD,\n        component: EDIT_FIELD_NAME\n    }] : [];\n\nexport const costManagementFields = (\n    applications = [],\n    sourceType,\n    appTypes,\n    source\n) => {\n    const costManagementApp = appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT);\n\n    if (!costManagementApp) {\n        return undefined;\n    }\n\n    const hasCostManagement = applications.find(({ application_type_id }) => application_type_id === costManagementApp.id);\n\n    if (!hasCostManagement) {\n        return undefined;\n    }\n\n    const billingSourceFields = getCMFields(sourceType.schema.authentication);\n\n    const authenticationsTypes = source.authentications ? source.authentications.map(({ authtype }) => authtype) : [];\n\n    const enhandcedFields = billingSourceFields.map((field) => ({\n        ...field,\n        ...getEnhancedCMField(sourceType.name, field.name, authenticationsTypes)\n    }));\n\n    return ({\n        component: componentTypes.SUB_FORM,\n        title: costManagementApp.display_name,\n        name: costManagementApp.display_name,\n        fields: [\n            ...modifyFields(enhandcedFields),\n            ...appendClusterIdentifier(sourceType)\n        ]\n    });\n};\n\nexport const applicationsFields = (\n    applications,\n    sourceType,\n    appTypes,\n    source\n) => ([\n    costManagementFields(\n        applications,\n        sourceType,\n        appTypes,\n        source\n    )\n]);\n","import { genericInfo } from './genericInfo';\nimport { authenticationFields } from './authentication';\nimport { endpointFields } from './endpoint';\nimport { applicationsFields } from './application';\n\nexport const parseSourceToSchema = (source, sourceType, appTypes) => ({\n    fields: [\n        ...genericInfo(source.source.id),\n        ...authenticationFields(source.authentications, sourceType, appTypes),\n        ...applicationsFields(source.applications, sourceType, appTypes, source),\n        source.endpoints && source.endpoints.length > 0 ? endpointFields(sourceType) : false\n    ].filter(Boolean)\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport { asyncValidator } from '@redhat-cloud-services/frontend-components-sources';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nimport { EDIT_FIELD_NAME } from '../../EditField/EditField';\n\nexport const genericInfo = (sourceId) => ([\n    {\n        name: 'source.name',\n        label: <FormattedMessage\n            id=\"sources.sourceName\"\n            defaultMessage=\"Source name\"\n        />,\n        originalComponent: componentTypes.TEXT_FIELD,\n        component: EDIT_FIELD_NAME,\n        validate: [\n            (value) => asyncValidator(value, sourceId),\n            { type: validatorTypes.REQUIRED }\n        ],\n        isRequired: true\n    }, {\n        name: 'source_type',\n        label: <FormattedMessage\n            id=\"sources.sourceType\"\n            defaultMessage=\"Source type\"\n        />,\n        isReadOnly: true,\n        component: EDIT_FIELD_NAME,\n        isEditable: false\n    }\n]);\n","import { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { prepareInitialValues } from './helpers';\n\nexport const initialState = {\n    loading: true,\n    editing: {},\n    source: undefined,\n    initialValues: {},\n    sourceType: undefined,\n    schema: undefined,\n    isAuthRemoving: null\n};\n\nconst reducer = (state, { type, source, name, sourceType, appTypes, authId, removingAuth }) => {\n    switch (type) {\n        case 'createForm':\n            return {\n                ...state,\n                sourceType,\n                initialValues: prepareInitialValues(state.source, sourceType.product_name),\n                schema: parseSourceToSchema(state.source, sourceType, appTypes),\n                loading: false\n            };\n        case 'setSource':\n            return {\n                ...state,\n                source\n            };\n        case 'reset':\n            return {\n                ...state,\n                editing: {}\n            };\n        case 'setEdit':\n            return {\n                ...state,\n                editing: {\n                    ...state.editing,\n                    [name]: !state.editing[name]\n                }\n            };\n        case 'removeAuthPending':\n            return {\n                ...state,\n                isAuthRemoving: null,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.map((auth) => auth.id === authId ? {\n                        ...auth, isDeleting: true\n                    } : auth)\n                }\n            };\n        case 'removeAuthRejected':\n            return {\n                ...state,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.map((auth) => auth.id === authId ? {\n                        ...auth, isDeleting: false\n                    } : auth)\n                }\n            };\n        case 'removeAuthFulfill':\n            return {\n                ...state,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.filter((auth) => auth.id !== authId)\n                }\n            };\n        case 'setAuthRemoving':\n            return {\n                ...state,\n                isAuthRemoving: removingAuth\n            };\n        case 'closeAuthRemoving':\n            return {\n                ...state,\n                isAuthRemoving: null\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport sourceEditContext from '../sourceEditContext';\nimport { addMessage } from '../../../redux/sources/actions';\nimport { doDeleteAuthentication } from '../../../api/entities';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources';\n\nconst RemoveAuth = ({ appNames, schemaAuth, auth }) => {\n    const hasAttachedApp = appNames.length > 0;\n    let body;\n    let actions;\n\n    const dispatch = useDispatch();\n    const intl = useIntl();\n\n    const { setState } = useContext(sourceEditContext);\n\n    const onClose = () => setState({ type: 'closeAuthRemoving' });\n\n    const onRemove = () => {\n        setState({ type: 'removeAuthPending', authId: auth.id });\n        onClose();\n        return doDeleteAuthentication(auth.id).then(() => {\n            setState({ type: 'removeAuthFulfill', authId: auth.id });\n            dispatch(addMessage(\n                intl.formatMessage(\n                    { id: 'sources.authRemoveFullfil', defaultMessage: 'Authentication was deleted successfully.' }\n                ),\n                'success'\n            ));\n        })\n        .catch((error) => {\n            setState({ type: 'removeAuthRejected', authId: auth.id });\n            dispatch(addMessage(\n                intl.formatMessage(\n                    { id: 'sources.authRemoveRejected', defaultMessage: 'Authentication was not deleted successfully.' }\n                ),\n                'danger',\n                handleError(error)\n            ));\n        });\n    };\n\n    if (hasAttachedApp) {\n        body = (<FormattedMessage\n            id=\"sources.removeAuthWarningApps\"\n            defaultMessage=\"To remove {authname} authentication you have to remove attached\n            {count, plural, one {application} other {applications}}: { appNames }.\"\n            values={{\n                appNames: appNames.join(', '),\n                count: appNames.length,\n                authname: <b>{schemaAuth.name}</b>\n            }}\n        />);\n        actions = [<Button\n            id=\"deleteCancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            type=\"button\"\n            onClick={ onClose }\n        >\n            <FormattedMessage\n                id=\"sources.close\"\n                defaultMessage=\"Close\"\n            />\n        </Button>];\n    } else {\n        body = (<FormattedMessage\n            id=\"sources.removeAuthWarning\"\n            defaultMessage=\"Do you really want to remove {auth} authentication?\"\n            values={{ auth: <b>{schemaAuth.name}</b> }}\n        />);\n        actions = [<Button\n            id=\"deleteSubmit\"\n            key=\"submit\"\n            variant=\"danger\"\n            type=\"button\"\n            onClick={ onRemove }\n        >\n            <FormattedMessage\n                id=\"sources.deleteConfirm\"\n                defaultMessage=\"Remove authentication\"\n            />\n        </Button>,\n        <Button\n            id=\"deleteCancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            type=\"button\"\n            onClick={ onClose }\n        >\n            <FormattedMessage\n                id=\"sources.deleteCancel\"\n                defaultMessage=\"Cancel\"\n            />\n        </Button>];\n    }\n\n    return (\n        <Modal\n            isOpen\n            className=\"ins-c-sources__dialog--warning\"\n            isFooterLeftAligned\n            onClose={onClose}\n            actions={actions}\n            isSmall\n            title={\n                intl.formatMessage({\n                    id: 'sources.deleteAuthTitle',\n                    defaultMessage: 'Remove authentication?',\n                })\n            }\n            header={\n                <Title size=\"2xl\">\n                    <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n                    {intl.formatMessage({\n                        id: 'sources.deleteAppTitle',\n                        defaultMessage: 'Remove authentication?',\n                    })}\n                </Title>\n            }\n        >\n\n            <TextContent>\n                <Text variant={TextVariants.p}>\n                    {body}\n                </Text>\n            </TextContent>\n        </Modal>\n    );\n};\n\nRemoveAuth.propTypes = {\n    appNames: PropTypes.arrayOf(PropTypes.string),\n    schemaAuth: PropTypes.shape({\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    auth: PropTypes.shape({\n        id: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default RemoveAuth;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport Header from './Header';\nimport { onSubmit } from './onSubmit';\n\nimport { redirectWhenImported } from './importedRedirect';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport reducer, { initialState } from './reducer';\nimport sourceEditContext from './sourceEditContext';\nimport RemoveAuth from './parser/RemoveAuth';\n\nconst SourceEditModal = () => {\n    const [state, setState] = useReducer(reducer, initialState);\n    const history = useHistory();\n    const sourceRedux = useSource();\n    const isLoaded = useIsLoaded();\n\n    const { loading, editing, source, initialValues, schema } = state;\n\n    const intl = useIntl();\n\n    const {\n        sourceTypes,\n        appTypes,\n        sourceTypesLoaded,\n        appTypesLoaded\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (sourceRedux) {\n            doLoadSourceForEdit(sourceRedux).then((source) => {\n                if (source.source.imported) {\n                    redirectWhenImported(dispatch, intl, history, source.source.name);\n                }\n\n                setState({ type: 'setSource', source });\n            });\n        }\n    }, [sourceRedux, isLoaded]);\n\n    useEffect(() => {\n        if (source && appTypesLoaded && sourceTypesLoaded) {\n            const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n            setState({ type: 'createForm', sourceType, source, appTypes });\n        }\n    }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n    const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n    const returnToSources = () => history.push(routes.sources.path);\n\n    if (isLoading) {\n        return (\n            <Modal\n                title={intl.formatMessage({\n                    id: 'sources.editSource',\n                    defaultMessage: 'Edit source.'\n                })}\n                header={<Header />}\n                isOpen={true}\n                isLarge\n                onClose={returnToSources}\n            >\n                <div className=\"ins-c-sources__dialog--spinnerContainer\">\n                    <Spinner />\n                </div>\n            </Modal>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <sourceEditContext.Provider value={{ setState, source, editing }}>\n                {state.isAuthRemoving && <RemoveAuth {...state.isAuthRemoving}/>}\n                <Modal\n                    title={intl.formatMessage({\n                        id: 'sources.editSource',\n                        defaultMessage: 'Edit source.'\n                    })}\n                    header={<Header />}\n                    isOpen={!state.isAuthRemoving}\n                    isLarge\n                    onClose={returnToSources}\n                >\n                    <SourcesFormRenderer\n                        onCancel={returnToSources}\n                        schema={schema}\n                        onSubmit={\n                            (values, formApi) =>\n                                onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, history.push)\n                        }\n                        FormTemplate={(props) => (<FormTemplate\n                            {...props}\n                            formWrapperProps={{\n                                isHorizontal: true\n                            }}\n                            canReset\n                            disableSubmit={['submitting']}\n                            submitLabel={intl.formatMessage({\n                                id: 'sources.save',\n                                defaultMessage: 'Save'\n                            })}\n                        />)}\n                        clearedValue={null}\n                        onReset={() => setState({ type: 'reset' })}\n                        initialValues={initialValues}\n                    />\n                </Modal>\n            </sourceEditContext.Provider>\n        </React.Fragment>\n    );\n};\n\nexport default SourceEditModal;\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const getCmValues = (id) => axiosInstance.get(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`);\n","import { routes } from '../../Routes';\nimport { addMessage } from '../../redux/sources/actions';\n\nexport const redirectWhenImported = (dispatch, intl, history, name) => {\n    dispatch(addMessage(\n        intl.formatMessage({\n            id: 'sources.importSourceCannotEdited',\n            defaultMessage: 'Source { name } is imported.'\n        }, { name }),\n        'danger',\n        intl.formatMessage({\n            id: 'sources.importedSourcesCannotEdited',\n            defaultMessage: 'Imported sources cannot be edited.'\n        }),\n    ));\n    history.push(routes.sources.path);\n};\n"],"sourceRoot":""}