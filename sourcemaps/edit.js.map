{"version":3,"sources":["webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/components/Authentication.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/ApplicationSelect.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./src/api/doUpdateSource.js","webpack:///./src/api/patchCmValues.js","webpack:///./src/api/doLoadSourceForEdit.js","webpack:///./src/api/getCmValues.js","webpack:///./src/components/SourceEditForm/Header.js","webpack:///./src/components/SourceEditForm/helpers.js","webpack:///./src/components/SourceEditForm/onSubmit.js","webpack:///./src/components/SourceEditForm/parser/AdditionalInfoBar.js","webpack:///./src/components/SourceEditForm/parser/EditAlert.js","webpack:///./src/components/SourceEditForm/parser/genericInfo.js","webpack:///./src/components/SourceEditForm/parser/endpoint.js","webpack:///./src/components/SourceEditForm/parser/AuthenticationId.js","webpack:///./src/components/SourceEditForm/sourceEditContext.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuthPlaceholder.js","webpack:///./src/components/SourceEditForm/parser/GridLayout.js","webpack:///./src/components/SourceEditForm/parser/authentication.js","webpack:///./src/components/SourceEditForm/parser/application.js","webpack:///./src/components/SourceEditForm/parser/titleField.js","webpack:///./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack:///./src/components/SourceEditForm/reducer.js","webpack:///./src/components/ModalFormTemplate.js","webpack:///./src/components/SourceEditForm/WrapperModal.js","webpack:///./src/components/SourceEditForm/SubmittingModal.js","webpack:///./src/components/SourceEditForm/TimeoutedModal.js","webpack:///./src/components/SourceEditForm/ErroredModal.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuth.js","webpack:///./src/components/SourceEditForm/SourceEditModal.js","webpack:///./src/components/SourceEditForm/importedRedirect.js"],"names":["removeAppSubmit","app","intl","onCancel","dispatch","source","titleSuccess","formatMessage","id","defaultMessage","name","display_name","titleError","removeApplication","Authentication","rest","formOptions","useFormApi","values","getState","match","isEditing","authentication","isModified","get","useState","edited","setEdited","firstClick","useRef","mounted","useEffect","current","pristine","doNotRequirePassword","validate","filter","type","validatorTypes","REQUIRED","componentProps","resolveProps","validated","FormGroup","helperText","label","onFocus","isRequired","TextInput","aria-label","value","autoFocus","RemoveAppModal","container","useIntl","appTypes","useSelector","sources","useSource","useDispatch","hidden","dependentApps","dependent_applications","map","appName","appType","find","sourceAppsNames","includes","x","Modal","className","isOpen","onClose","variant","header","Title","headingLevel","size","actions","key","onClick","TextContent","Text","component","TextVariants","p","length","apps","propTypes","PropTypes","shape","string","arrayOf","func","instanceOf","Element","RemoveRadio","option","setApplicationToRemove","Button","htmlFor","application_type_id","ApplicationSelect","props","useFieldApi","options","input","onChange","removingApp","applications","isCurrentlyRemoving","isDeleting","appIds","reduce","acc","Radio","isChecked","isDisabled","SourcesFormRenderer","FormTemplate","componentMapper","mapperExtension","componentTypes","SWITCH","validatorMapper","PATTERN","MIN_LENGTH","URL","urlOrHost","formData","url","scheme","host","port","path","u","protocol","replace","hostname","defaultPort","pathname","error","parseUrl","endpoint","doUpdateSource","data","promises","push","getSourcesApi","updateSource","endPointPort","parseInt","endpointData","isNaN","undefined","updateEndpoint","endpoints","authentications","Object","keys","forEach","idWithoutPrefix","updateAuthentication","billing_source","credentials","cmDataOut","axiosInstance","patch","COST_MANAGEMENT_API_BASE","Promise","all","doLoadSourceForEdit","hasCostManagement","showSource","listSourceEndpoints","doLoadApplicationsForEdit","then","a","sourceData","costManagement","basicValues","addToApp","appAuthenticationIds","auth","showAuthentication","appAuths","index","listEndpointAuthentications","Header","Grid","GridItem","xs","node","selectOnlyEditedValues","editing","filteredValues","set","prepareInitialValues","sourceTypeName","auhenticationsFinal","mergeAuths","curr","endpointToUrl","source_type","onSubmit","setState","checkSourceStatus","loadEntities","checkAppAvailability","statusResults","unavailableApp","availability_status","UNAVAILABLE","message","title","description","availability_status_error","some","AdditionalInfoBar","sourceType","hasGutter","md","h4","product_name","join","EditAlert","Alert","isInline","genericInfo","sourceId","Content","condition","when","isNotEmpty","TEXT_FIELD","asyncValidatorDebounced","endpointFields","schema","modifiedFields","fields","field","hardcodedSchemas","getEnhancedEndpointField","subForm","SUB_FORM","validation","isEmpty","AuthenticationId","sourceEditContext","createContext","RemoveAuthPlaceholder","Bullseye","Spinner","small","GridLayout","renderForm","useContext","Flex","removingAuth","array","getLastPartOfName","fieldName","split","pop","getAdditionalFields","stepKey","modifyAuthSchemas","editedName","startsWith","createAuthFieldName","finalField","authenticationFields","schemaAuth","authtype","additionalStepKeys","getAdditionalAuthStepsKeys","additionalStepsFields","getAdditionalAuthSteps","step","flatMap","enhancedFields","getEnhancedAuthField","specialModifierAWS","APP_NAMES","createOneAppFields","appendClusterIdentifier","unusedAuthsWarning","PLAIN_TEXT","applicationsFields","authenticationTypesFormGroups","appsLength","authenticationsInputs","auths","Boolean","unusedAuthentications","TABS","isBox","TitleAndDescription","titleField","hideField","parseSourceToSchema","initialState","loading","initialValues","isSubmitting","initialLoad","submitError","isTimeouted","reducer","state","authId","isAuthRemoving","CustomFormWrapper","Form","CustomButtons","onReset","subscription","submitting","invalid","validating","ActionGroup","form","ModalFormTemplate","ModalProps","footer","showFormControls","FormWrapper","object","FakeFooter","history","useHistory","routes","WrapperModal","children","sourceRedux","SubmittingModal","customText","TimeoutedModal","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","WrenchIcon","color","newLine","ErroredModal","onRetry","secondaryActions","target","href","rel","returnButtonTitle","RemoveAuth","doDeleteAuthentication","addMessage","handleError","SourceEditModal","useReducer","isLoaded","useIsLoaded","shallowEqual","sourceTypes","sourceTypesLoaded","appTypesLoaded","imported","redirectWhenImported","source_type_id","isLoading","returnToSources","Provider","formApi","dirtyFields","clearedValue"],"mappings":"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","file":"js/edit.d9a69df1500371920edf.js","sourcesContent":["import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import React, { useState, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\n\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nconst Authentication = (rest) => {\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  const [authenticationId] = rest?.name?.match(/\\d+/) || [];\n  const isEditing = authenticationId || values.authentication?.id;\n\n  // If there is any value, the field is modified (password is always empty on start)\n  let isModified = get(values, rest.name);\n\n  const [edited, setEdited] = useState(!isEditing || isModified);\n  const firstClick = useRef(true);\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      // reset on restart\n      if (!firstClick.current && formOptions.getState().pristine) {\n        setEdited(false);\n        firstClick.current = true;\n      }\n\n      if (edited) {\n        firstClick.current = false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(isEditing\n      ? {\n          validate: doNotRequirePassword,\n          resolveProps: validated,\n        }\n      : {}),\n  };\n\n  if (!edited && isEditing) {\n    return (\n      <FormGroup helperText={componentProps.helperText} label={componentProps.label} onFocus={() => setEdited(true)} isRequired>\n        <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" />\n      </FormGroup>\n    );\n  }\n\n  return <TextField {...componentProps} autoFocus={true} />;\n};\n\nexport default Authentication;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\n\nconst RemoveAppModal = ({ app, onCancel, container }) => {\n  const intl = useIntl();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  useEffect(() => {\n    if (container) {\n      container.hidden = true;\n    }\n  }, []);\n\n  const dependentApps = app.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return app.sourceAppsNames.includes(appType?.display_name) && appType?.display_name;\n    })\n    .filter((x) => x);\n\n  return (\n    <Modal\n      className=\"ins-c-sources__dialog--warning\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> }\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps }\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveAppModal.propTypes = {\n  app: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    display_name: PropTypes.string.isRequired,\n    dependent_applications: PropTypes.arrayOf(PropTypes.string),\n    sourceAppsNames: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  onCancel: PropTypes.func.isRequired,\n  container: PropTypes.instanceOf(Element),\n};\n\nexport default RemoveAppModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Radio } from '@patternfly/react-core/dist/js/components/Radio/Radio';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport RemoveAppModal from './RemoveAppModal';\n\nconst RemoveRadio = ({ option, setApplicationToRemove, sourceAppsNames, app, appType }) => {\n  const intl = useIntl();\n\n  const onClick = () =>\n    setApplicationToRemove({\n      id: app?.id,\n      display_name: appType?.display_name,\n      dependent_applications: appType?.dependent_applications,\n      sourceAppsNames,\n    });\n\n  return (\n    <div className=\"pf-c-radio pf-u-mb-md\">\n      <Button\n        id={`remove-app-${option.value}`}\n        variant=\"plain\"\n        aria-label={intl.formatMessage(\n          {\n            id: 'source.removeAppAria',\n            defaultMessage: 'Remove application {app} from this source',\n          },\n          { app: option.label }\n        )}\n        className=\"pf-u-p-0\"\n        onClick={onClick}\n      >\n        <TrashIcon variant=\"small\" />\n      </Button>\n      <label className=\"pf-c-radio__label\" htmlFor={`remove-app-${option.value}`}>\n        {option.label}\n      </label>\n    </div>\n  );\n};\n\nRemoveRadio.propTypes = {\n  option: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n  }),\n  setApplicationToRemove: PropTypes.func.isRequired,\n  sourceAppsNames: PropTypes.arrayOf(PropTypes.string),\n  appType: PropTypes.shape({\n    display_name: PropTypes.string.isRequired,\n    dependent_applications: PropTypes.arrayOf(PropTypes.string),\n  }),\n  app: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    application_type_id: PropTypes.string.isRequired,\n  }),\n};\n\nconst ApplicationSelect = (props) => {\n  const {\n    options,\n    input: { onChange, value, name },\n    container,\n  } = useFieldApi(props);\n\n  const [removingApp, setApplicationToRemove] = useState({});\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const source = useSource();\n\n  const sourceAppsNames = source.applications.map(\n    ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name\n  );\n\n  const appType = (value) => appTypes?.find((appType) => appType.id === value);\n  const app = (value) => source.applications.find((app) => app.application_type_id === value);\n\n  const isCurrentlyRemoving = (value) => app(value)?.isDeleting;\n\n  const appIds = source.applications\n    .filter(({ isDeleting }) => !isDeleting)\n    .reduce((acc, app) => [...acc, app.application_type_id], []);\n\n  return (\n    <div>\n      {removingApp.id && (\n        <RemoveAppModal\n          app={removingApp}\n          onCancel={() => {\n            if (container) {\n              container.hidden = false;\n            }\n\n            return setApplicationToRemove({});\n          }}\n          container={container}\n        />\n      )}\n      {options.map((option) =>\n        !appIds.includes(option.value) ? (\n          <Radio\n            className=\"pf-u-mb-md\"\n            key={option.value}\n            onChange={() => onChange(option.value)}\n            label={option.label}\n            id={`${name}-${option.value}`}\n            name={name}\n            isChecked={value === option.value}\n            isDisabled={isCurrentlyRemoving(option.value)}\n          />\n        ) : (\n          <RemoveRadio\n            key={option.value}\n            option={option}\n            setApplicationToRemove={setApplicationToRemove}\n            sourceAppsNames={sourceAppsNames}\n            app={app(option.value)}\n            appType={appType(option.value)}\n          />\n        )\n      )}\n    </div>\n  );\n};\n\nexport default ApplicationSelect;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources/cjs/sourceFormRenderer';\n\nimport Authentication from '../components/Authentication';\n\nimport ApplicationSelect from '../components/AddApplication/ApplicationSelect';\n\nconst SourcesFormRenderer = (props) => (\n  <FormRenderer\n    FormTemplate={FormTemplate}\n    componentMapper={{\n      ...componentMapper,\n      ...mapperExtension,\n      authentication: Authentication,\n      'switch-field': componentMapper[componentTypes.SWITCH],\n      'application-select': ApplicationSelect,\n    }}\n    validatorMapper={{\n      'required-validator': validatorMapper[validatorTypes.REQUIRED],\n      'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n      'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n      'url-validator': validatorMapper[validatorTypes.URL],\n    }}\n    {...props}\n  />\n);\n\nexport default SourcesFormRenderer;\n","import { defaultPort } from '../components/SourcesTable/formatters';\nimport { getSourcesApi } from './entities';\nimport { patchCmValues } from './patchCmValues';\n\nexport const parseUrl = (url) => {\n  if (url === null) {\n    return {\n      scheme: null,\n      host: null,\n      port: null,\n      path: null,\n    };\n  }\n\n  if (!url) {\n    return {};\n  }\n\n  try {\n    const u = new URL(url);\n    const scheme = u.protocol.replace(/:$/, '');\n\n    return {\n      scheme,\n      host: u.hostname,\n      port: u.port === '' ? defaultPort(scheme) : u.port,\n      path: u.pathname,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const urlOrHost = (formData) =>\n  formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData) => {\n  const promises = [];\n\n  if (formData.source) {\n    promises.push(getSourcesApi().updateSource(source.source.id, formData.source));\n  }\n\n  if (formData.endpoint || formData.url || formData.url === null) {\n    const { scheme, host, port, path } = urlOrHost(formData);\n    const endPointPort = port === null ? null : parseInt(port, 10);\n\n    const endpointData = {\n      scheme,\n      host,\n      path,\n      port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n      ...formData.endpoint,\n    };\n\n    promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData));\n  }\n\n  if (formData.authentications) {\n    Object.keys(formData.authentications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]));\n    });\n  }\n\n  if (formData.billing_source || formData.credentials) {\n    let cmDataOut = {};\n\n    if (formData.credentials) {\n      cmDataOut = {\n        authentication: {\n          credentials: formData.credentials,\n        },\n      };\n    }\n\n    if (formData.billing_source) {\n      cmDataOut = {\n        ...cmDataOut,\n        billing_source: formData.billing_source,\n      };\n    }\n\n    promises.push(patchCmValues(source.source.id, cmDataOut));\n  }\n\n  return Promise.all(promises);\n};\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const patchCmValues = (id, data) => axiosInstance.patch(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`, data);\n","import { getSourcesApi, doLoadApplicationsForEdit } from './entities';\nimport { getCmValues } from './getCmValues';\n\nexport const doLoadSourceForEdit = (source, hasCostManagement) =>\n  Promise.all([\n    getSourcesApi().showSource(source.id),\n    getSourcesApi().listSourceEndpoints(source.id),\n    doLoadApplicationsForEdit(source.id),\n    hasCostManagement && getCmValues(source.id).catch(() => undefined),\n  ]).then(async ([sourceData, endpoints, applications, costManagement]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    const apps = applications?.sources[0]?.applications || [];\n\n    let basicValues = {\n      source: {\n        ...source,\n        ...sourceData,\n      },\n      applications: apps,\n    };\n\n    if (costManagement) {\n      basicValues = {\n        ...basicValues,\n        billing_source: costManagement.billing_source,\n        credentials: costManagement.authentication.credentials,\n      };\n    }\n\n    const promises = [];\n    let appAuths;\n    const addToApp = [];\n    const appAuthenticationIds = [];\n\n    apps.forEach((app) => {\n      app?.authentications?.forEach((auth) => {\n        if (auth?.id) {\n          promises.push(getSourcesApi().showAuthentication(auth.id));\n          addToApp.push(app.id);\n          appAuthenticationIds.push(auth.id);\n        }\n      });\n    });\n\n    if (promises.length > 0) {\n      appAuths = await Promise.all(promises);\n\n      addToApp.forEach((id, index) => {\n        basicValues.applications.find((app) => app.id === id).authentications.push(appAuths[index]);\n      });\n    }\n\n    if (!endpoint) {\n      return basicValues;\n    }\n\n    return getSourcesApi()\n      .listEndpointAuthentications(endpoint.id)\n      .then((authentications) => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data.filter(({ id }) => !appAuthenticationIds.includes(id)),\n      }));\n  });\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const getCmValues = (id) => axiosInstance.get(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst Header = ({ name }) => {\n  const intl = useIntl();\n\n  return (\n    <Grid>\n      <GridItem xs={12}>\n        <Title headingLevel=\"h1\" size=\"3xl\">\n          {intl.formatMessage({\n            id: 'sources.editSource',\n            defaultMessage: 'Edit source',\n          })}\n        </Title>\n      </GridItem>\n      {name && (\n        <GridItem xs={12}>\n          {intl.formatMessage(\n            {\n              id: 'sources.editSourceDescription',\n              defaultMessage: 'Use the form fields below to make desired changes to source {name}.',\n            },\n            { name: <b key=\"b\">{name}</b> }\n          )}\n        </GridItem>\n      )}\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  name: PropTypes.node,\n};\n\nexport default Header;\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl } from '../SourcesTable/formatters';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n  const filteredValues = {};\n\n  Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n      set(filteredValues, key, get(values, key));\n    });\n\n  return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, applications, ...rest }, sourceTypeName) => {\n  const auhenticationsFinal = {};\n\n  const mergeAuths = [\n    ...(authentications || []),\n    ...(applications?.reduce((acc, curr) => [...acc, ...curr.authentications], []) || []),\n  ];\n\n  if (mergeAuths.length > 0) {\n    mergeAuths.forEach((auth) => {\n      auhenticationsFinal[`a${auth.id}`] = auth;\n    });\n  }\n\n  let endpoint;\n  let url;\n\n  if (endpoints && endpoints.length > 0) {\n    endpoint = endpoints[0];\n  }\n\n  if (endpoint) {\n    url = endpoint.scheme || endpoint.host || endpoint.path || endpoint.port ? endpointToUrl(endpoint) : undefined;\n  }\n\n  return {\n    source_type: sourceTypeName,\n    endpoint,\n    authentications: auhenticationsFinal,\n    url,\n    ...rest,\n  };\n};\n","import { checkAppAvailability } from '@redhat-cloud-services/frontend-components-sources/cjs/getApplicationStatus';\n\nimport { selectOnlyEditedValues } from './helpers';\nimport { loadEntities } from '../../redux/sources/actions';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport { doUpdateSource } from '../../api/doUpdateSource';\n\nimport { UNAVAILABLE } from '../SourcesTable/formatters';\n\nexport const onSubmit = async (values, editing, dispatch, source, intl, setState) => {\n  setState({ type: 'submit', values, editing });\n\n  try {\n    await doUpdateSource(source, selectOnlyEditedValues(values, editing));\n  } catch {\n    setState({ type: 'submitFailed' });\n\n    return;\n  }\n\n  checkSourceStatus(source.source.id);\n  dispatch(loadEntities());\n\n  let message;\n\n  const sourceData = await doLoadSourceForEdit({ id: source.source.id });\n\n  const promises = source.applications?.map(({ id }) => checkAppAvailability(id)) || [];\n\n  let statusResults;\n  if (promises.length > 0) {\n    try {\n      statusResults = await Promise.all(promises);\n    } catch (error) {\n      setState({ type: 'submitFailed' });\n\n      return;\n    }\n\n    const unavailableApp = statusResults.find(({ availability_status }) => availability_status === UNAVAILABLE);\n\n    if (unavailableApp) {\n      message = {\n        title: intl.formatMessage({\n          id: 'wizard.failEditToastTitle',\n          defaultMessage: 'Edit source failed',\n        }),\n        description: unavailableApp.availability_status_error,\n        variant: 'danger',\n      };\n\n      setState({ type: 'submitFinished', source: sourceData, message });\n\n      return;\n    }\n\n    const anyTimetouted = statusResults.some(({ availability_status }) => !availability_status);\n\n    if (anyTimetouted) {\n      setState({ type: 'submitTimetouted' });\n\n      return;\n    }\n  }\n\n  message = {\n    title: intl.formatMessage(\n      {\n        id: 'wizard.successEditToastTitle',\n        defaultMessage: 'Source ‘{name}’ was edited successfully.',\n      },\n      { name: source.source.name }\n    ),\n    variant: 'success',\n  };\n\n  setState({ type: 'submitFinished', source: sourceData, message });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/index';\n\nconst AdditionalInfoBar = ({ sourceType, applications }) => {\n  const intl = useIntl();\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n\n  const sourceAppsNames = applications?.map(\n    ({ application_type_id }) => appTypes?.find(({ id }) => id === application_type_id)?.display_name\n  );\n\n  return (\n    <TextContent>\n      <Grid hasGutter>\n        <GridItem md={2}>\n          <Text component={TextVariants.h4}>\n            {intl.formatMessage({\n              id: 'sources.sourceType',\n              defaultMessage: 'Source type',\n            })}\n          </Text>\n          <Text component={TextVariants.p} id=\"source-edit-type\">\n            {sourceType.product_name}\n          </Text>\n        </GridItem>\n        <GridItem md={8}>\n          <Text component={TextVariants.h4}>\n            {intl.formatMessage({\n              id: 'sources.apps',\n              defaultMessage: 'Applications',\n            })}\n          </Text>\n          <Text component={TextVariants.p} id=\"source-edit-apps\">\n            {sourceAppsNames.length > 0\n              ? sourceAppsNames.join(', ')\n              : intl.formatMessage({\n                  id: 'sources.none',\n                  defaultMessage: 'None',\n                })}\n          </Text>\n        </GridItem>\n      </Grid>\n    </TextContent>\n  );\n};\n\nAdditionalInfoBar.propTypes = {\n  sourceType: PropTypes.shape({\n    product_name: PropTypes.string.isRequired,\n  }),\n  applications: PropTypes.arrayOf(\n    PropTypes.shape({\n      application_type_id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default AdditionalInfoBar;\n","import React from 'react';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport { Alert } from '@patternfly/react-core/dist/js/components/Alert/Alert';\n\nconst EditAlert = () => {\n  const formOptions = useFormApi();\n\n  const { message } = formOptions.getState().values;\n\n  return (\n    <Alert variant={message?.variant} isInline title={message?.title}>\n      {message?.description}\n    </Alert>\n  );\n};\n\nexport default EditAlert;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport { asyncValidatorDebounced } from '@redhat-cloud-services/frontend-components-sources/cjs/SourceAddSchema';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nimport AdditionalInfoBar from './AdditionalInfoBar';\nimport EditAlert from './EditAlert';\n\nexport const genericInfo = (sourceId, intl, sourceType, applications) => [\n  {\n    name: 'alert',\n    component: 'description',\n    Content: EditAlert,\n    condition: {\n      when: 'message',\n      isNotEmpty: true,\n    },\n  },\n  {\n    name: 'source.name',\n    label: intl.formatMessage({\n      id: 'sources.sourceName',\n      defaultMessage: 'Source name',\n    }),\n    component: componentTypes.TEXT_FIELD,\n    validate: [(value) => asyncValidatorDebounced(value, sourceId, intl), { type: validatorTypes.REQUIRED }],\n    isRequired: true,\n    resolveProps: validated,\n  },\n  {\n    name: 'additional_info',\n    Content: AdditionalInfoBar,\n    component: 'description',\n    sourceType,\n    applications,\n  },\n];\n","import get from 'lodash/get';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport hardcodedSchemas from '@redhat-cloud-services/frontend-components-sources/cjs/hardcodedSchemas';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nexport const getEnhancedEndpointField = (sourceType, name) => get(hardcodedSchemas, [sourceType, 'endpoint', name], {});\n\nexport const endpointFields = (sourceType) => {\n  if (!sourceType.schema || !sourceType.schema.endpoint || sourceType.schema.endpoint.hidden) {\n    return undefined;\n  }\n\n  const schemaAuth = sourceType.schema.endpoint;\n\n  const enhancedFields = schemaAuth.fields.map((field) => ({\n    ...field,\n    ...getEnhancedEndpointField(sourceType.name, field.name),\n  }));\n\n  const modifiedFields = enhancedFields;\n\n  const subForm = {\n    component: componentTypes.SUB_FORM,\n    name: 'endpoint',\n  };\n\n  if (sourceType.name === 'ansible-tower') {\n    const url = modifiedFields.find(({ name }) => name === 'url');\n\n    return {\n      ...subForm,\n      fields: [\n        {\n          component: componentTypes.SUB_FORM,\n          name: 'receptor_node_group',\n          condition: {\n            when: 'endpoint.receptor_node',\n            isNotEmpty: true,\n          },\n          fields: [\n            {\n              ...url,\n              isRequired: false,\n              validate: url?.validate?.filter((validation) => validation.type !== validatorTypes.REQUIRED),\n            },\n          ],\n        },\n        {\n          component: componentTypes.SUB_FORM,\n          name: 'hostname_group',\n          condition: {\n            when: 'endpoint.receptor_node',\n            isEmpty: true,\n          },\n          fields: modifiedFields,\n        },\n      ],\n    };\n  }\n\n  return {\n    ...subForm,\n    fields: modifiedFields,\n  };\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nconst AuthenticationId = ({ id }) => {\n  const intl = useIntl();\n\n  return (\n    <FormGroup\n      label={intl.formatMessage({\n        id: 'sources.authId',\n        defaultMessage: 'Authentication ID',\n      })}\n    >\n      <TextContent>\n        <Text variant=\"p\">{id}</Text>\n      </TextContent>\n    </FormGroup>\n  );\n};\n\nAuthenticationId.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default AuthenticationId;\n","import { createContext } from 'react';\n\nconst sourceEditContext = createContext();\n\nexport default sourceEditContext;\n","import React from 'react';\n\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\n\nimport { useIntl } from 'react-intl';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nconst RemoveAuthPlaceholder = () => {\n  const intl = useIntl();\n\n  return (\n    <Grid>\n      <GridItem xs={12}>\n        <Bullseye>\n          <Spinner size=\"lg\" />\n        </Bullseye>\n      </GridItem>\n      <GridItem xs={12}>\n        <Bullseye>\n          <TextContent>\n            <Text component={TextVariants.small} className=\"pf-u-mt-md\">\n              {intl.formatMessage({\n                id: 'sources.removingAuthMessage',\n                defaultMessage: 'This authentication is being removed...',\n              })}\n            </Text>\n          </TextContent>\n        </Bullseye>\n      </GridItem>\n    </Grid>\n  );\n};\n\nexport default RemoveAuthPlaceholder;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/js/layouts/Flex';\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport AuthenticationId from './AuthenticationId';\nimport sourceEditContext from '../sourceEditContext';\nimport RemoveAuthPlaceholder from './RemoveAuthPlaceholder';\n\nconst GridLayout = ({ id, fields }) => {\n  const intl = useIntl();\n  const { renderForm } = useFormApi();\n  const { setState, source } = useContext(sourceEditContext);\n\n  const setAuthRemoving = () =>\n    setState({\n      type: 'setAuthRemoving',\n      removingAuth: id,\n    });\n\n  const isDeleting = source?.authentications?.find((auth) => auth.id === id)?.isDeleting;\n\n  if (isDeleting) {\n    return <RemoveAuthPlaceholder />;\n  }\n\n  return (\n    <Grid>\n      <GridItem md={2}>\n        <Flex>\n          <FlexItem className=\"pf-u-mr-0\">\n            <Button\n              variant=\"plain\"\n              aria-label={intl.formatMessage(\n                {\n                  id: 'sources.removeAuthAriaLabel',\n                  defaultMessage: 'Remove authentication with id {id}',\n                },\n                { id }\n              )}\n              onClick={setAuthRemoving}\n            >\n              <TrashIcon />\n            </Button>\n          </FlexItem>\n          <Flex>\n            <AuthenticationId id={id} />\n          </Flex>\n        </Flex>\n      </GridItem>\n      <GridItem md={10}>{renderForm(fields)}</GridItem>\n    </Grid>\n  );\n};\n\nGridLayout.propTypes = {\n  id: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired,\n};\n\nexport default GridLayout;\n","import get from 'lodash/get';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport hardcodedSchemas from '@redhat-cloud-services/frontend-components-sources/cjs/hardcodedSchemas';\nimport GridLayout from './GridLayout';\n\nexport const createAuthFieldName = (fieldName, id) => `authentications.a${id}.${fieldName.replace('authentication.', '')}`;\n\nexport const getLastPartOfName = (fieldName) => fieldName.split('.').pop();\n\nexport const removeRequiredValidator = (validate = []) =>\n  validate.filter((validation) => validation.type !== validatorTypes.REQUIRED && validation.type !== 'required-validator');\n\nexport const getEnhancedAuthField = (sourceType, authtype, name, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, name], {});\n\nexport const getAdditionalAuthSteps = (sourceType, authtype, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, 'additionalSteps'], []);\n\nexport const getAdditionalAuthStepsKeys = (sourceType, authtype, appName = 'generic') =>\n  get(hardcodedSchemas, [sourceType, 'authentication', authtype, appName, 'includeStepKeyFields'], []);\n\nexport const getAdditionalFields = (auth, stepKey) => auth?.fields?.filter((field) => field.stepKey === stepKey) || [];\n\nexport const modifyAuthSchemas = (fields, id) =>\n  fields.map((field) => {\n    const editedName = field.name.startsWith('authentication') ? createAuthFieldName(field.name, id) : field.name;\n\n    const finalField = {\n      ...field,\n      name: editedName,\n    };\n\n    const isPassword = getLastPartOfName(finalField.name) === 'password';\n\n    if (isPassword) {\n      finalField.component = 'authentication';\n    }\n\n    return finalField;\n  });\n\nconst specialModifierAWS = (field, authtype) => {\n  if (getLastPartOfName(field.name) !== 'password') {\n    return field;\n  }\n\n  if (authtype === 'arn') {\n    return {\n      ...field,\n      label: 'Cost Management ARN',\n    };\n  }\n\n  if (authtype === 'cloud-meter-arn') {\n    return {\n      ...field,\n      label: 'Subscription Watch ARN',\n    };\n  }\n\n  return field;\n};\n\nexport const authenticationFields = (authentications, sourceType, appName) => {\n  if (!authentications || authentications.length === 0 || !sourceType.schema || !sourceType.schema.authentication) {\n    return [];\n  }\n\n  return authentications.map((auth) => {\n    const schemaAuth = sourceType?.schema?.authentication?.find(({ type }) => type === auth.authtype);\n\n    if (!schemaAuth) {\n      return [];\n    }\n\n    const additionalStepKeys = getAdditionalAuthStepsKeys(sourceType.name, auth.authtype, appName);\n    const additionalStepsFields = getAdditionalAuthSteps(sourceType.name, auth.authtype, appName)\n      ?.map((step) => ({\n        ...step,\n        fields: [...step.fields, ...getAdditionalFields(schemaAuth, step.name)],\n      }))\n      .map(({ fields }) => fields.map(({ name }) => name))\n      .flatMap((x) => x);\n\n    let enhancedFields = schemaAuth.fields\n      .filter(\n        (field) =>\n          additionalStepsFields.includes(field.name) ||\n          !field.stepKey ||\n          (field.stepKey && additionalStepKeys.includes(field.stepKey))\n      )\n      .map((field) => ({\n        ...field,\n        ...getEnhancedAuthField(sourceType.name, auth.authtype, field.name, appName),\n      }));\n\n    if (!appName && sourceType.name === 'amazon') {\n      enhancedFields = enhancedFields.map((field) => specialModifierAWS(field, auth.authtype));\n    }\n\n    if (!appName) {\n      return [\n        {\n          name: `authentication-${auth.id}`,\n          component: 'description',\n          id: auth.id,\n          Content: GridLayout,\n          fields: modifyAuthSchemas(enhancedFields, auth.id),\n        },\n      ];\n    }\n\n    return modifyAuthSchemas(enhancedFields, auth.id);\n  });\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport { FormattedMessage } from 'react-intl';\nimport { authenticationFields } from './authentication';\n\nexport const APP_NAMES = {\n  COST_MANAGAMENT: '/insights/platform/cost-management',\n};\n\nexport const appendClusterIdentifier = (sourceType) =>\n  sourceType.name === 'openshift'\n    ? [\n        {\n          name: 'source.source_ref',\n          label: <FormattedMessage id=\"sources.clusterIdentifier\" defaultMessage=\"Cluster identifier\" />,\n          isRequired: true,\n          validate: [{ type: validatorTypes.REQUIRED }],\n          component: componentTypes.TEXT_FIELD,\n        },\n      ]\n    : [];\n\nconst createOneAppFields = (appType, sourceType, app) => [\n  ...authenticationFields(\n    app.authentications?.filter((auth) => Object.keys(auth).length > 1),\n    sourceType,\n    appType?.name\n  ),\n  ...(appType?.name === APP_NAMES.COST_MANAGAMENT ? appendClusterIdentifier(sourceType) : []),\n];\n\nconst unusedAuthsWarning = (length) => ({\n  component: componentTypes.PLAIN_TEXT,\n  name: 'unused-auth-warning',\n  label: (\n    <FormattedMessage\n      id=\"sources.authNotUsed\"\n      defaultMessage=\"The following {length, plural, one {authentication is not} other {authentications are not}} used by any application.\"\n      values={{ length }}\n    />\n  ),\n});\n\nconst unusedAuthentications = (authentications, sourceType, appsLength) => {\n  if (!authentications || authentications.length === 0) {\n    return [];\n  }\n\n  let authenticationsInputs = sourceType?.schema?.authentication\n    ?.reduce((acc, { type }) => {\n      const auths = authentications.filter(({ authtype }) => type === authtype);\n\n      if (auths?.length > 0) {\n        return [...acc, ...authenticationFields(auths, sourceType)];\n      }\n\n      return acc;\n    }, [])\n    ?.filter(Boolean);\n\n  const transformToTabs = appsLength !== 0;\n\n  if (transformToTabs) {\n    authenticationsInputs = [\n      {\n        fields: [unusedAuthsWarning(authenticationsInputs.length), ...authenticationsInputs],\n        title: sourceType.product_name,\n        name: 'unused-auths-tab',\n      },\n    ];\n  } else {\n    authenticationsInputs = [\n      {\n        fields: [unusedAuthsWarning(authenticationsInputs.length), ...authenticationsInputs],\n        component: componentTypes.SUB_FORM,\n        name: 'unused-auths-group',\n      },\n    ];\n  }\n\n  return authenticationsInputs;\n};\n\nexport const applicationsFields = (applications, sourceType, appTypes, authentications) => {\n  const authenticationTypesFormGroups = unusedAuthentications(authentications, sourceType, applications?.length);\n\n  if (!applications || applications.length === 0) {\n    return authenticationTypesFormGroups;\n  } else if (applications.length === 1 && authenticationTypesFormGroups.length === 0) {\n    const appType = appTypes.find(({ id }) => id === applications[0].application_type_id);\n\n    return createOneAppFields(appType, sourceType, applications[0]);\n  } else {\n    return [\n      {\n        component: componentTypes.TABS,\n        name: 'app-tabs',\n        isBox: true,\n        fields: [\n          ...applications.map((app) => {\n            const appType = appTypes.find(({ id }) => id === app.application_type_id);\n\n            return {\n              name: appType?.id,\n              title: appType?.display_name,\n              fields: createOneAppFields(appType, sourceType, app),\n            };\n          }),\n          ...authenticationTypesFormGroups,\n        ],\n      },\n    ];\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nexport const TitleAndDescription = ({ title, description }) => (\n  <TextContent>\n    <Title headingLevel=\"h2\" className=\"pf-u-mb-0\">\n      {title}\n    </Title>\n    {description && <Text variant=\"p\">{description}</Text>}\n  </TextContent>\n);\n\nTitleAndDescription.propTypes = {\n  title: PropTypes.node.isRequired,\n  description: PropTypes.node,\n};\n\nconst titleField = (applications, sourceType, appTypes, intl, authentications) => {\n  let title;\n  let description;\n\n  if (applications.length === 0) {\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleNoApp',\n        defaultMessage: '{type} credentials',\n      },\n      { type: sourceType?.product_name }\n    );\n  } else if (applications.length === 1) {\n    const app = appTypes.find(({ id }) => id === applications[0].application_type_id);\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleOneApp',\n        defaultMessage: '{type} & {app} credentials',\n      },\n      { type: sourceType?.product_name, app: app?.display_name }\n    );\n  } else {\n    title = intl.formatMessage(\n      {\n        id: 'source.editTitleMoreApps',\n        defaultMessage: '{type} & application credentials',\n      },\n      { type: sourceType?.product_name }\n    );\n    description = intl.formatMessage({\n      id: 'source.editDescriptionMoreApps',\n      defaultMessage: 'Use the tabs below to view and edit credentials for connected applications.',\n    });\n  }\n\n  return {\n    component: 'description',\n    name: 'edit-title',\n    Content: TitleAndDescription,\n    title,\n    description,\n    hideField: applications?.length === 0 && authentications?.length === 0,\n  };\n};\n\nexport default titleField;\n","import { genericInfo } from './genericInfo';\nimport { endpointFields } from './endpoint';\nimport { applicationsFields } from './application';\nimport titleField from './titleField';\n\nexport const parseSourceToSchema = (source, sourceType, appTypes, intl) => ({\n  fields: [\n    ...genericInfo(source.source.id, intl, sourceType, source.applications),\n    titleField(source.applications, sourceType, appTypes, intl, source.authentications),\n    ...applicationsFields(source.applications, sourceType, appTypes, source.authentications),\n    source.endpoints && source.endpoints.length > 0 ? endpointFields(sourceType) : false,\n  ].filter(Boolean),\n});\n","import { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { prepareInitialValues } from './helpers';\n\nexport const initialState = {\n  loading: true,\n  source: undefined,\n  initialValues: {},\n  sourceType: undefined,\n  schema: undefined,\n  isSubmitting: false,\n  initialLoad: true,\n  submitError: false,\n  isTimeouted: false,\n};\n\nconst reducer = (state, { type, source, sourceType, appTypes, intl, message, values, editing, removingAuth, authId }) => {\n  switch (type) {\n    case 'createForm':\n      return {\n        ...state,\n        sourceType,\n        initialValues: prepareInitialValues(state.source, sourceType.product_name),\n        schema: parseSourceToSchema(state.source, sourceType, appTypes, intl),\n        loading: false,\n      };\n    case 'setSource':\n      return {\n        ...state,\n        source,\n        initialLoad: false,\n      };\n    case 'submit':\n      return {\n        ...state,\n        isSubmitting: true,\n        submitError: false,\n        values,\n        editing,\n      };\n    case 'submitFinished':\n      return {\n        ...state,\n        isSubmitting: false,\n        source,\n        message,\n      };\n    case 'submitFailed':\n      return {\n        ...state,\n        isSubmitting: false,\n        submitError: true,\n      };\n    case 'submitTimetouted':\n      return {\n        ...state,\n        isSubmitting: false,\n        isTimeouted: true,\n      };\n    case 'removeAuthPending':\n      return {\n        ...state,\n        isAuthRemoving: null,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.map((auth) =>\n            auth.id === authId\n              ? {\n                  ...auth,\n                  isDeleting: true,\n                }\n              : auth\n          ),\n        },\n      };\n    case 'removeAuthRejected':\n      return {\n        ...state,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.map((auth) =>\n            auth.id === authId\n              ? {\n                  ...auth,\n                  isDeleting: false,\n                }\n              : auth\n          ),\n        },\n      };\n    case 'removeAuthFulfill':\n      return {\n        ...state,\n        source: {\n          ...state.source,\n          authentications: state.source.authentications.filter((auth) => auth.id !== authId),\n        },\n      };\n    case 'setAuthRemoving':\n      return {\n        ...state,\n        isAuthRemoving: removingAuth,\n      };\n    case 'closeAuthRemoving':\n      return {\n        ...state,\n        isAuthRemoving: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport FormSpy from '@data-driven-forms/react-form-renderer/dist/cjs/form-spy';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\nconst CustomFormWrapper = (props) => <Form {...props} id=\"modal-form\" />;\n\nconst CustomButtons = () => {\n  const intl = useIntl();\n  const { onReset, onCancel } = useFormApi();\n\n  return (\n    <FormSpy\n      subscription={{\n        submitting: true,\n        pristine: true,\n        invalid: true,\n        validating: true,\n      }}\n    >\n      {({ pristine, invalid, validating, submitting }) => (\n        <div className=\"pf-c-form\">\n          <ActionGroup className=\"pf-u-mt-0\">\n            <Button\n              variant=\"primary\"\n              form=\"modal-form\"\n              type=\"submit\"\n              isDisabled={pristine || validating || submitting || invalid}\n            >\n              {intl.formatMessage({\n                id: 'sources.save',\n                defaultMessage: 'Save',\n              })}\n            </Button>\n            <Button variant=\"secondary\" isDisabled={pristine} onClick={onReset} id=\"reset-modal\">\n              {intl.formatMessage({\n                id: 'sources.reset',\n                defaultMessage: 'Reset',\n              })}\n            </Button>\n            <Button variant=\"link\" onClick={onCancel} id=\"cancel-modal\">\n              {intl.formatMessage({\n                id: 'sources.cancel',\n                defaultMessage: 'Cancel',\n              })}\n            </Button>\n          </ActionGroup>\n        </div>\n      )}\n    </FormSpy>\n  );\n};\n\nconst ModalFormTemplate = ({ ModalProps, ...props }) => (\n  <Modal {...ModalProps} footer={<CustomButtons />}>\n    <FormTemplate {...props} showFormControls={false} FormWrapper={CustomFormWrapper} />\n  </Modal>\n);\n\nModalFormTemplate.propTypes = {\n  ModalProps: PropTypes.object,\n};\n\nexport default ModalFormTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { useSource } from '../../hooks/useSource';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { ActionGroup } from '@patternfly/react-core/dist/js/components/Form/ActionGroup';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\n\nimport { routes } from '../../Routes';\nimport Header from './Header';\n\nexport const FakeFooter = () => {\n  const intl = useIntl();\n  const history = useHistory();\n\n  return (\n    <div className=\"pf-c-form\">\n      <ActionGroup className=\"pf-u-mt-0\">\n        <Button variant=\"primary\" isDisabled>\n          {intl.formatMessage({\n            id: 'sources.save',\n            defaultMessage: 'Save',\n          })}\n        </Button>\n        <Button variant=\"secondary\" isDisabled>\n          {intl.formatMessage({\n            id: 'sources.reset',\n            defaultMessage: 'Reset',\n          })}\n        </Button>\n        <Button variant=\"link\" onClick={() => history.push(routes.sources.path)}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>\n      </ActionGroup>\n    </div>\n  );\n};\n\nconst WrapperModal = ({ children }) => {\n  const history = useHistory();\n  const sourceRedux = useSource();\n  const intl = useIntl();\n\n  return (\n    <Modal\n      aria-label={intl.formatMessage({\n        id: 'sources.editSource',\n        defaultMessage: 'Edit source.',\n      })}\n      header={<Header name={sourceRedux.name} />}\n      variant=\"large\"\n      isOpen={true}\n      onClose={() => history.push(routes.sources.path)}\n      footer={<FakeFooter />}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nWrapperModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default WrapperModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport LoadingStep from '@redhat-cloud-services/frontend-components-sources/cjs/LoadingStep';\n\nimport WrapperModal from './WrapperModal';\n\nconst SubmittingModal = () => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <LoadingStep\n        customText={intl.formatMessage({\n          id: 'sources.editSubmittingTitle',\n          defaultMessage: 'Validating edited source credentials',\n        })}\n      />\n    </WrapperModal>\n  );\n};\n\nexport default SubmittingModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Title } from '@patternfly/react-core/dist/js/components/Title';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { EmptyState, EmptyStateVariant, EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\n\nimport WrenchIcon from '@patternfly/react-icons/dist/js/icons/wrench-icon';\n\nimport WrapperModal from './WrapperModal';\n\nconst TimeoutedModal = () => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <Bullseye>\n        <EmptyState variant={EmptyStateVariant.full} className=\"pf-u-mt-4xl\">\n          <EmptyStateIcon icon={WrenchIcon} color=\"var(--pf-global--Color--200)\" className=\"pf-u-mb-0\" />\n          <Title headingLevel=\"h2\" size=\"xl\" className=\"pf-u-mt-xl\">\n            {intl.formatMessage({\n              id: 'sources.editTimetoutedTitle',\n              defaultMessage: 'Edit source not yet complete',\n            })}\n          </Title>\n          <EmptyStateBody>\n            {intl.formatMessage(\n              {\n                id: 'sources.editTimetoutedDescription',\n                defaultMessage:\n                  'We are still working to confirm your updated credentials and app settings.{newLine}To track progress, check the Status column in the Sources table.',\n              },\n              { newLine: <br key=\"br\" /> }\n            )}\n          </EmptyStateBody>\n        </EmptyState>\n      </Bullseye>\n    </WrapperModal>\n  );\n};\n\nexport default TimeoutedModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport ErroredStep from '@redhat-cloud-services/frontend-components-sources/cjs/ErroredStep';\n\nimport WrapperModal from './WrapperModal';\n\nconst ErroredModal = ({ onRetry }) => {\n  const intl = useIntl();\n\n  return (\n    <WrapperModal>\n      <ErroredStep\n        onClose={onRetry}\n        customText={intl.formatMessage({\n          id: 'sources.editErrorDescription',\n          defaultMessage:\n            'There was a problem while trying to edit your source. Please try again. If the error persists, open a support case.',\n        })}\n        secondaryActions={\n          <Text\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n            rel=\"noopener noreferrer\"\n          >\n            {intl.formatMessage({\n              id: 'sources.openTicket',\n              defaultMessage: 'Open a support case',\n            })}\n          </Text>\n        }\n        returnButtonTitle={intl.formatMessage({\n          id: 'sources.retryText',\n          defaultMessage: 'Retry',\n        })}\n      />\n    </WrapperModal>\n  );\n};\n\nErroredModal.propTypes = {\n  onRetry: PropTypes.func.isRequired,\n};\n\nexport default ErroredModal;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport sourceEditContext from '../sourceEditContext';\nimport { addMessage } from '../../../redux/sources/actions';\nimport { doDeleteAuthentication } from '../../../api/entities';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources/cjs/handleError';\n\nconst RemoveAuth = ({ authId }) => {\n  const { setState, source, sourceType } = useContext(sourceEditContext);\n\n  const schemaAuth = sourceType?.schema?.authentication?.find(\n    ({ type }) => type === source?.authentications?.find((auth) => auth?.id === authId)?.authtype\n  );\n\n  const dispatch = useDispatch();\n  const intl = useIntl();\n\n  const onClose = () => setState({ type: 'closeAuthRemoving' });\n\n  const onRemove = () => {\n    setState({ type: 'removeAuthPending', authId });\n    onClose();\n    return doDeleteAuthentication(authId)\n      .then(() => {\n        setState({ type: 'removeAuthFulfill', authId });\n        dispatch(\n          addMessage(\n            intl.formatMessage({\n              id: 'sources.authRemoveFullfil',\n              defaultMessage: 'Authentication was deleted successfully.',\n            }),\n            'success'\n          )\n        );\n      })\n      .catch((error) => {\n        setState({ type: 'removeAuthRejected', authId });\n        dispatch(\n          addMessage(\n            intl.formatMessage({\n              id: 'sources.authRemoveRejected',\n              defaultMessage: 'Authentication was not deleted successfully.',\n            }),\n            'danger',\n            handleError(error)\n          )\n        );\n      });\n  };\n\n  return (\n    <Modal\n      isOpen\n      className=\"ins-c-sources__dialog--warning\"\n      onClose={onClose}\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onRemove}>\n          {intl.formatMessage({\n            id: 'sources.deleteConfirm',\n            defaultMessage: 'Remove authentication',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onClose}>\n          {intl.formatMessage({\n            id: 'sources.deleteCancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAuthTitle',\n        defaultMessage: 'Remove authentication?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove authentication?',\n          })}\n        </Title>\n      }\n    >\n      <TextContent>\n        <Text variant={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.removeAuthWarning',\n              defaultMessage: 'This action will permanently remove {auth} from this source.',\n            },\n            { auth: <b key=\"b\">{schemaAuth?.name}</b> }\n          )}\n        </Text>\n      </TextContent>\n    </Modal>\n  );\n};\n\nRemoveAuth.propTypes = {\n  authId: PropTypes.string.isRequired,\n};\n\nexport default RemoveAuth;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport Header from './Header';\nimport { onSubmit } from './onSubmit';\n\nimport { redirectWhenImported } from './importedRedirect';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport reducer, { initialState } from './reducer';\nimport sourceEditContext from './sourceEditContext';\nimport ModalFormTemplate from '../ModalFormTemplate';\nimport SubmittingModal from './SubmittingModal';\nimport TimeoutedModal from './TimeoutedModal';\nimport ErroredModal from './ErroredModal';\nimport RemoveAuth from './parser/RemoveAuth';\nimport { APP_NAMES } from './parser/application';\n\nconst SourceEditModal = () => {\n  const [state, setState] = useReducer(reducer, initialState);\n  const history = useHistory();\n  const sourceRedux = useSource();\n  const isLoaded = useIsLoaded();\n\n  const {\n    loading,\n    editing,\n    source,\n    initialValues,\n    schema,\n    isSubmitting,\n    initialLoad,\n    message,\n    submitError,\n    isTimeouted,\n    values,\n    sourceType,\n    isAuthRemoving,\n  } = state;\n\n  const intl = useIntl();\n\n  const { sourceTypes, appTypes, sourceTypesLoaded, appTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (sourceRedux && initialLoad && appTypesLoaded) {\n      const hasCostManagement = sourceRedux.applications\n        .map(({ application_type_id }) => application_type_id)\n        .includes(appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT)?.id);\n\n      doLoadSourceForEdit(sourceRedux, hasCostManagement).then((source) => {\n        if (source.source.imported) {\n          redirectWhenImported(dispatch, intl, history, source.source.name);\n        }\n\n        setState({ type: 'setSource', source });\n      });\n    }\n  }, [sourceRedux, isLoaded, appTypesLoaded]);\n\n  useEffect(() => {\n    if (source && appTypesLoaded && sourceTypesLoaded) {\n      const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n      setState({ type: 'createForm', sourceType, source, appTypes, intl });\n    }\n  }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n  const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n  const returnToSources = () => history.push(routes.sources.path);\n\n  if (isTimeouted) {\n    return <TimeoutedModal />;\n  }\n\n  if (submitError) {\n    return <ErroredModal onRetry={() => onSubmit(values, editing, dispatch, source, intl, setState)} />;\n  }\n\n  if (isSubmitting) {\n    return <SubmittingModal />;\n  }\n\n  if (isLoading) {\n    return (\n      <Modal\n        aria-label={intl.formatMessage({\n          id: 'sources.editSource',\n          defaultMessage: 'Edit source.',\n        })}\n        header={<Header />}\n        isOpen\n        variant=\"large\"\n        onClose={returnToSources}\n      >\n        <div className=\"ins-c-sources__dialog--spinnerContainer\">\n          <Spinner />\n        </div>\n      </Modal>\n    );\n  }\n\n  return (\n    <sourceEditContext.Provider value={{ setState, source, sourceType }}>\n      {isAuthRemoving && <RemoveAuth authId={isAuthRemoving} />}\n      <SourcesFormRenderer\n        onCancel={returnToSources}\n        schema={schema}\n        onSubmit={(values, formApi) => onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, setState)}\n        FormTemplate={(props) => (\n          <ModalFormTemplate\n            ModalProps={{\n              ['aria-label']: intl.formatMessage({\n                id: 'sources.editSource',\n                defaultMessage: 'Edit source.',\n              }),\n              header: <Header name={source.source.name} />,\n              variant: 'large',\n              isOpen: !isAuthRemoving,\n              onClose: returnToSources,\n            }}\n            {...props}\n          />\n        )}\n        clearedValue={null}\n        initialValues={{\n          ...initialValues,\n          message,\n        }}\n      />\n    </sourceEditContext.Provider>\n  );\n};\n\nexport default SourceEditModal;\n","import { routes } from '../../Routes';\nimport { addMessage } from '../../redux/sources/actions';\n\nexport const redirectWhenImported = (dispatch, intl, history, name) => {\n  dispatch(\n    addMessage(\n      intl.formatMessage(\n        {\n          id: 'sources.importSourceCannotEdited',\n          defaultMessage: 'Source { name } is imported.',\n        },\n        { name }\n      ),\n      'danger',\n      intl.formatMessage({\n        id: 'sources.importedSourcesCannotEdited',\n        defaultMessage: 'Imported sources cannot be edited.',\n      })\n    )\n  );\n  history.push(routes.sources.path);\n};\n"],"sourceRoot":""}