{"version":3,"sources":["webpack:///./src/components/EditField/EditField.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Modal/index.js","webpack:///./node_modules/lodash/set.js","webpack:///./node_modules/lodash/_baseSet.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/trash-icon.js","webpack:///./src/api/doLoadSourceForEdit.js","webpack:///./src/components/SourceEditForm/HorizontalFormWrapper.js","webpack:///./src/components/SourceEditForm/Header.js","webpack:///./src/components/SourceEditForm/helpers.js","webpack:///./src/components/SourceEditForm/onSubmit.js","webpack:///./src/components/SourceEditForm/parser/genericInfo.js","webpack:///./src/components/SourceEditForm/sourceEditContext.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuth.js","webpack:///./src/components/SourceEditForm/parser/AuthenticationManagement.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuthPlaceholder.js","webpack:///./src/components/SourceEditForm/parser/authentication.js","webpack:///./src/components/SourceEditForm/parser/unsupportedAuthType.js","webpack:///./src/components/SourceEditForm/parser/helpers.js","webpack:///./src/components/SourceEditForm/parser/endpoint.js","webpack:///./src/components/SourceEditForm/parser/application.js","webpack:///./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack:///./src/components/SourceEditForm/reducer.js","webpack:///./src/components/SourceEditForm/SourceEditModal.js","webpack:///./src/api/getCmValues.js","webpack:///./src/components/SourceEditForm/importedRedirect.js"],"names":["EDIT_FIELD_NAME","EditField","isRequired","label","helperText","hideLabel","meta","input","type","setEdit","error","showError","touched","value","emptyText","name","includes","fieldId","isValid","helperTextInvalid","onClick","undefined","tabIndex","onKeyPress","e","charCode","preventDefault","className","propTypes","PropTypes","node","bool","object","FieldProvider","oneOfType","func","shape","any","string","EditFieldProvider","rest","props","SourcesFormRenderer","layoutMapper","formFieldsMapper","mapperExtension","Object","defineProperty","exports","_Modal","keys","forEach","key","enumerable","get","_ModalBox","_ModalBoxBody","_ModalBoxCloseButton","_ModalBoxFooter","_ModalBoxHeader","_ModalContent","baseSet","module","path","assignValue","castPath","isIndex","isObject","toKey","customizer","index","length","lastIndex","nested","newValue","objValue","TrashIconConfig","obj","_createIcon","__esModule","height","width","svgPath","yOffset","xOffset","transform","_default","HorizontalFormWrapper","children","Form","isHorizontal","Header","Grid","GridItem","xs","Title","headingLevel","TitleLevel","h1","size","id","defaultMessage","prepareInitialValues","sourceTypeName","endpoint","url","endpoints","authentications","auhenticationsFinal","auth","scheme","host","port","endpointToUrl","source_type","onSubmit","values","editing","dispatch","source","intl","push","updateSource","filteredValues","filter","set","selectOnlyEditedValues","formatMessage","authentication","costManagement","then","checkSourceStatus","routes","sources","loadEntities","genericInfo","sourceId","component","componentTypes","TEXT_FIELD","validate","asyncValidator","isReadOnly","sourceEditContext","createContext","RemoveAuth","body","actions","onClose","appNames","schemaAuth","hasAttachedApp","useDispatch","useIntl","setState","useContext","join","count","variant","authId","doDeleteAuthentication","addMessage","handleError","Modal","isOpen","isFooterLeftAligned","isSmall","title","Split","gutter","SplitItem","isFilled","Stack","TextContent","Text","TextVariants","p","arrayOf","AuthenticationManagement","appTypes","isDeleting","useState","isRemoving","setRemove","applications","find","map","application_type_id","Boolean","app","display_name","Fragment","sm","Button","aria-label","small","authid","RemoveAuthPlaceholder","Bullseye","Spinner","modifyAuthSchemas","fields","field","editedName","startsWith","fieldName","replace","createAuthFieldName","isEditing","finalField","split","pop","validation","validatorTypes","REQUIRED","removeRequiredValidator","authenticationFields","sourceType","schema","authtype","Content","additionalStepKeys","hardcodedSchemas","getAdditionalAuthSteps","enhancedFields","stepKey","getEnhancedAuthField","SUB_FORM","NOT_CHANGING_COMPONENTS","CHECKBOX","SWITCH","modifyFields","endpointFields","hidden","getEnhancedEndpointField","APP_NAMES","cmFieldsPrefixes","isCMField","some","prefix","getCMFields","flatMap","x","getEnhancedCMField","authenticationsTypes","apps","hasAppField","appendClusterIdentifier","costManagementFields","costManagementApp","hasCostManagement","billingSourceFields","enhandcedFields","applicationsFields","parseSourceToSchema","initialState","loading","initialValues","reducer","state","product_name","SourceEditModal","useReducer","history","useHistory","sourceRedux","useSource","isLoaded","useIsLoaded","useSelector","shallowEqual","sourceTypes","sourceTypesLoaded","appTypesLoaded","useEffect","Promise","all","getSourcesApi","showSource","listSourceEndpoints","listSourceApplications","axiosInstance","COST_MANAGEMENT_API_BASE","sourceData","data","basicValues","billing_source","credentials","listEndpointAuthentications","doLoadSourceForEdit","imported","redirectWhenImported","source_type_id","returnToSources","header","isLarge","Provider","onCancel","formApi","getState","dirtyFields","FormWrapper","clearedValue","canReset","disableSubmit","onReset","buttonsLabels","submitLabel"],"mappings":"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","file":"js/edit.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PencilAltIcon from '@patternfly/react-icons/dist/js/icons/pencil-alt-icon';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\n\nexport const EDIT_FIELD_NAME = 'edit-field';\n\nconst EditField = ({ isRequired, label, helperText, hideLabel, meta, input, type, setEdit }) => {\n    const { error, touched } = meta;\n    const showError = touched && error;\n\n    let value = input.value;\n\n    if (typeof value === 'boolean') {\n        value = value ? 'True' : 'False';\n    }\n\n    const isPassword = type === 'password' || input.name.includes('password');\n    const emptyText = isPassword ? 'Click to edit' : 'Click to add';\n\n    return (\n        <FormGroup\n            isRequired={ isRequired }\n            label={ !hideLabel && label }\n            fieldId={ input.name }\n            isValid={ !showError }\n            helperText={ helperText }\n            helperTextInvalid={ error }\n            onClick={setEdit ? () => setEdit(input.name) : undefined}\n            tabIndex={0}\n            onKeyPress={(e) => {\n                if (e.charCode === 32 && setEdit) {\n                    e.preventDefault();\n                    setEdit(input.name);\n                }\n            }}\n        >\n            <div className={`pf-c-form__horizontal-group ins-c-sources__edit-field-group ${setEdit ? 'clickable' : ''}`}>\n                <TextContent className={`ins-c-sources__edit-field-group-text-content ${setEdit ? 'clickable' : ''}`}>\n                    <span className=\"ins-c-sources__edit-field-value pf-u-mr-sm\">\n                        {value ? value : setEdit ? emptyText : ''}\n                    </span>\n                    {setEdit && <PencilAltIcon />}\n                </TextContent>\n            </div>\n        </FormGroup>\n    );\n};\n\nEditField.propTypes = {\n    label: PropTypes.node,\n    isRequired: PropTypes.bool,\n    helperText: PropTypes.node,\n    meta: PropTypes.object.isRequired,\n    FieldProvider: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    input: PropTypes.shape({\n        value: PropTypes.any,\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    hideLabel: PropTypes.bool,\n    setEdit: PropTypes.func,\n    type: PropTypes.string\n};\n\nconst EditFieldProvider = ({ FieldProvider, ...rest }) =>\n    (\n        <FieldProvider { ...rest }>\n            { (props) =>  <EditField  { ...props }/> }\n        </FieldProvider>\n    );\n\nEditFieldProvider.propTypes = {\n    FieldProvider: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n};\n\nexport default EditFieldProvider;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer';\nimport { layoutMapper, formFieldsMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources';\n\nimport EditField from '../components/EditField/EditField';\n\nconst SourcesFormRenderer = props => (\n    <FormRenderer\n        layoutMapper={layoutMapper}\n        formFieldsMapper={{\n            ...formFieldsMapper,\n            ...mapperExtension,\n            'edit-field': EditField\n        }}\n        {...props}\n    />\n);\n\nexport default SourcesFormRenderer;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./Modal\");\n\nObject.keys(_Modal).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Modal[key];\n    }\n  });\n});\n\nvar _ModalBox = require(\"./ModalBox\");\n\nObject.keys(_ModalBox).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBox[key];\n    }\n  });\n});\n\nvar _ModalBoxBody = require(\"./ModalBoxBody\");\n\nObject.keys(_ModalBoxBody).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxBody[key];\n    }\n  });\n});\n\nvar _ModalBoxCloseButton = require(\"./ModalBoxCloseButton\");\n\nObject.keys(_ModalBoxCloseButton).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxCloseButton[key];\n    }\n  });\n});\n\nvar _ModalBoxFooter = require(\"./ModalBoxFooter\");\n\nObject.keys(_ModalBoxFooter).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxFooter[key];\n    }\n  });\n});\n\nvar _ModalBoxHeader = require(\"./ModalBoxHeader\");\n\nObject.keys(_ModalBoxHeader).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxHeader[key];\n    }\n  });\n});\n\nvar _ModalContent = require(\"./ModalContent\");\n\nObject.keys(_ModalContent).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalContent[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map","var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.TrashIconConfig = void 0;\n\nvar _createIcon = _interopRequireDefault(require(\"../createIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* This file is generated by createIcons.js any changes will be lost. */\nvar TrashIconConfig = {\n  name: 'TrashIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexports.TrashIconConfig = TrashIconConfig;\n\nvar _default = (0, _createIcon[\"default\"])(TrashIconConfig);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=trash-icon.js.map","import { getSourcesApi } from './entities';\nimport { getCmValues } from './getCmValues';\n\nexport const doLoadSourceForEdit = (source) => Promise.all([\n    getSourcesApi().showSource(source.id),\n    getSourcesApi().listSourceEndpoints(source.id),\n    getSourcesApi().listSourceApplications(source.id),\n    getCmValues(source.id).catch(() => undefined)\n]).then(([sourceData, endpoints, applications, costManagement]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    let basicValues = {\n        source: {\n            ...source,\n            ...sourceData\n        },\n        applications: applications.data\n    };\n\n    if (costManagement) {\n        basicValues = {\n            ...basicValues,\n            billing_source: costManagement.billing_source,\n            credentials: costManagement.authentication.credentials\n        };\n    }\n\n    if (!endpoint) { // bail out\n        return basicValues;\n    }\n\n    return getSourcesApi().listEndpointAuthentications(endpoint.id).then(authentications => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data\n    }));\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from '@patternfly/react-core/dist/js/components/Form/Form';\n\nconst HorizontalFormWrapper = ({ children, ...props }) => <Form {...props} isHorizontal>{children}</Form>;\n\nHorizontalFormWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default HorizontalFormWrapper;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Title, TitleLevel } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst Header = () => (\n    <Grid>\n        <GridItem xs={12}>\n            <Title headingLevel={TitleLevel.h1} size=\"3xl\">\n                <FormattedMessage\n                    id=\"sources.editSource\"\n                    defaultMessage=\"Edit source\"\n                />\n            </Title>\n        </GridItem>\n        <GridItem xs={12}>\n            <FormattedMessage\n                id=\"sources.editSourceDescription\"\n                defaultMessage=\"You are editing a source.\"\n            />\n        </GridItem>\n    </Grid>\n);\n\nexport default Header;\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl } from '../SourcesTable/formatters';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n    const filteredValues = {};\n\n    Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n        set(filteredValues, key, get(values, key));\n    });\n\n    return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, ...rest }, sourceTypeName) => {\n    const auhenticationsFinal = {};\n\n    if (authentications && authentications.length > 0) {\n        authentications.forEach((auth) => {\n            auhenticationsFinal[`a${auth.id}`] = auth;\n        });\n    }\n\n    let endpoint;\n    let url;\n\n    if (endpoints && endpoints.length > 0) {\n        endpoint = endpoints[0];\n    }\n\n    if (endpoint) {\n        url = (endpoint.scheme || endpoint.host || endpoint.path || endpoint.port) ? endpointToUrl(endpoint) : undefined;\n    }\n\n    return ({\n        source_type: sourceTypeName,\n        endpoint,\n        authentications: auhenticationsFinal,\n        url,\n        ...rest\n    });\n};\n","import { selectOnlyEditedValues } from './helpers';\nimport { updateSource, loadEntities } from '../../redux/sources/actions';\nimport { routes } from '../../Routes';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nexport const onSubmit = (values, editing, dispatch, source, intl, push) => dispatch(updateSource(\n    source,\n    selectOnlyEditedValues(values, editing),\n    intl.formatMessage({\n        id: 'sources.modifiedNotificationTitle',\n        defaultMessage: `\"{ name }\" was modified successfully.`\n    }, { name: source.source.name }),\n    intl.formatMessage({\n        id: 'sources.modifiedNotificationDescription',\n        defaultMessage: 'The source was successfully modified.'\n    }),\n    {\n        authentication: intl.formatMessage({\n            id: 'sources.sourceEditAuthFailure',\n            defaultMessage: 'Authentication update failure.'\n        }),\n        source: intl.formatMessage({\n            id: 'sources.sourceEditFailure',\n            defaultMessage: 'Source update failure.'\n        }),\n        endpoint: intl.formatMessage({\n            id: 'sources.sourceEditEndpointFailure',\n            defaultMessage: 'Endpoint update failure.'\n        }),\n        costManagement: intl.formatMessage({\n            id: 'sources.sourceCostmanagementFailure',\n            defaultMessage: 'Cost Management update failure.'\n        })\n    }))\n.then(() => {\n    checkSourceStatus(source.source.id);\n    push(routes.sources.path);\n    dispatch(loadEntities());\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { asyncValidator } from '@redhat-cloud-services/frontend-components-sources';\nimport { EDIT_FIELD_NAME } from '../../EditField/EditField';\n\nexport const genericInfo = (editing, setEdit, sourceId) => ([\n    {\n        name: 'source.name',\n        label: <FormattedMessage\n            id=\"sources.sourceName\"\n            defaultMessage=\"Source name\"\n        />,\n        component: editing['source.name'] ? componentTypes.TEXT_FIELD : EDIT_FIELD_NAME,\n        ...(editing['source.name'] ? {} : { setEdit }),\n        validate: [\n            (value) => asyncValidator(value, sourceId)\n        ],\n        isRequired: true\n    }, {\n        name: 'source_type',\n        label: <FormattedMessage\n            id=\"sources.sourceType\"\n            defaultMessage=\"Source type\"\n        />,\n        isReadOnly: true,\n        component: EDIT_FIELD_NAME\n    }\n]);\n","import { createContext } from 'react';\n\nconst sourceEditContext = createContext();\n\nexport default sourceEditContext;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Split } from '@patternfly/react-core/dist/js/layouts/Split/Split';\nimport { SplitItem } from '@patternfly/react-core/dist/js/layouts/Split/SplitItem';\nimport { Stack } from '@patternfly/react-core/dist/js/layouts/Stack/Stack';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport sourceEditContext from '../sourceEditContext';\nimport { addMessage } from '../../../redux/sources/actions';\nimport { doDeleteAuthentication } from '../../../api/entities';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources';\n\nconst RemoveAuth = ({ onClose, appNames, schemaAuth, auth }) => {\n    const hasAttachedApp = appNames.length > 0;\n    let body;\n    let actions;\n\n    const dispatch = useDispatch();\n    const intl = useIntl();\n\n    const { setState } = useContext(sourceEditContext);\n\n    const onRemove = () => {\n        setState({ type: 'removeAuthPending', authId: auth.id });\n        onClose();\n        return doDeleteAuthentication(auth.id).then(() => {\n            setState({ type: 'removeAuthFulfill', authId: auth.id });\n            dispatch(addMessage(\n                intl.formatMessage(\n                    { id: 'sources.authRemoveFullfil', defaultMessage: 'Authentication was deleted successfully.' }\n                ),\n                'success'\n            ));\n        })\n        .catch((error) => {\n            setState({ type: 'removeAuthRejected', authId: auth.id });\n            dispatch(addMessage(\n                intl.formatMessage(\n                    { id: 'sources.authRemoveRejected', defaultMessage: 'Authentication was not deleted successfully.' }\n                ),\n                'danger',\n                handleError(error)\n            ));\n        });\n    };\n\n    if (hasAttachedApp) {\n        body = (<FormattedMessage\n            id=\"sources.removeAuthWarningApps\"\n            defaultMessage=\"To remove this authentication you have to remove attached\n            {count, plural, one {application} other {applications}}: { appNames }.\"\n            values={{ appNames: appNames.join(', '), count: appNames.length }}\n        />);\n        actions = [<Button\n            id=\"deleteCancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            type=\"button\"\n            onClick={ onClose }\n        >\n            <FormattedMessage\n                id=\"sources.close\"\n                defaultMessage=\"Close\"\n            />\n        </Button>];\n    } else {\n        body = (<FormattedMessage\n            id=\"sources.removeAuthWarning\"\n            defaultMessage=\"Do you really want to remove this authentication?\"\n        />);\n        actions = [<Button\n            id=\"deleteSubmit\"\n            key=\"submit\"\n            variant=\"danger\"\n            type=\"button\"\n            onClick={ onRemove }\n        >\n            <FormattedMessage\n                id=\"sources.deleteConfirm\"\n                defaultMessage=\"Delete this authentication\"\n            />\n        </Button>,\n        <Button\n            id=\"deleteCancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            type=\"button\"\n            onClick={ onClose }\n        >\n            <FormattedMessage\n                id=\"sources.deleteCancel\"\n                defaultMessage=\"Do not delete this authentication\"\n            />\n        </Button>];\n    }\n\n    return (\n        <Modal\n            isOpen\n            className=\"ins-c-sources__dialog--warning\"\n            isFooterLeftAligned\n            onClose={onClose}\n            actions={actions}\n            isSmall\n            title={intl.formatMessage(\n                { id: 'sources.deleteAuthTitle', defaultMessage: 'Delete { name }' },\n                { name: schemaAuth.name })\n            }\n        >\n            <Split gutter=\"md\">\n                <SplitItem>\n                    <ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert ins-c-source__delete-icon\" />\n                </SplitItem>\n                <SplitItem isFilled>\n                    <Stack gutter=\"md\">\n                        <TextContent>\n                            <Text variant={TextVariants.p}>\n                                {body}\n                            </Text>\n                        </TextContent>\n                    </Stack>\n                </SplitItem>\n            </Split>\n        </Modal>\n    );\n};\n\nRemoveAuth.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    appNames: PropTypes.arrayOf(PropTypes.string),\n    schemaAuth: PropTypes.shape({\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    auth: PropTypes.shape({\n        id: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default RemoveAuth;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport RemoveAuth from './RemoveAuth';\nimport sourceEditContext from '../sourceEditContext';\nimport { FormattedMessage } from 'react-intl';\n\nconst AuthenticationManagement = ({ schemaAuth, auth, appTypes, isDeleting }) => {\n    const { source } = useContext(sourceEditContext);\n    const [isRemoving, setRemove] = useState(false);\n\n    const attachedAppTypes = source.source.applications.filter(\n        ({ authentications }) => authentications.find(({ id }) => id === auth.id)\n    );\n\n    const appNames = attachedAppTypes.map(\n        ({ application_type_id }) => application_type_id ? appTypes.find(({ id }) => id === application_type_id) : undefined\n    ).filter(Boolean).map(app => app.display_name);\n\n    return (\n        <React.Fragment>\n            {isRemoving && <RemoveAuth\n                auth={auth}\n                onClose={() => setRemove(false)}\n                appNames={ appNames }\n                schemaAuth={schemaAuth}/>\n            }\n            <GridItem sm={12}>\n                <Title size=\"xl\">{schemaAuth.name}&nbsp;\n                    {!isDeleting &&\n                    <Button variant=\"plain\" aria-label=\"Remove authentication\" onClick={() => setRemove(!isRemoving)}>\n                        <TrashIcon />\n                    </Button>\n                    }\n                </Title>\n                <TextContent>\n                    <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                        <FormattedMessage\n                            id=\"sources.removeAuthDescription\"\n                            defaultMessage=\"id: {authid} { appNames}\"\n                            values={{\n                                authid: auth.id,\n                                appNames: appNames.length > 0 ?\n                                    <FormattedMessage\n                                        id=\"sources.removeAuthWithApps\"\n                                        defaultMessage=\"used by {appNames}\"\n                                        values={{ appNames: appNames.join(', ') }}\n                                    />\n                                    : <FormattedMessage\n                                        id=\"sources.removeAuthNoApps\"\n                                        defaultMessage=\"not used by any app\"\n                                    />\n                            }}\n                        />&nbsp;\n                    </Text>\n                </TextContent>\n            </GridItem>\n        </React.Fragment>\n    );\n};\n\nAuthenticationManagement.propTypes = {\n    isDeleting: PropTypes.bool,\n    appTypes: PropTypes.arrayOf(PropTypes.object),\n    schemaAuth: PropTypes.shape({\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    auth: PropTypes.shape({\n        id: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default AuthenticationManagement;\n","import React from 'react';\n\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nconst RemoveAuthPlaceholder = () => (\n    <Grid>\n        <GridItem xs={12}>\n            <Bullseye>\n                <Spinner size=\"lg\"/>\n            </Bullseye>\n        </GridItem>\n        <GridItem xs={12}>\n            <Bullseye>\n                <TextContent>\n                    <Text component={TextVariants.small} className=\"pf-u-mt-md\">\n                        <FormattedMessage\n                            id=\"sources.removingAuthMessage\"\n                            defaultMessage=\"This authentication is being removed...\"\n                        />\n                    </Text>\n                </TextContent>\n            </Bullseye>\n        </GridItem>\n    </Grid>\n);\n\nexport default RemoveAuthPlaceholder;\n","import React from 'react';\nimport get from 'lodash/get';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { FormattedMessage } from 'react-intl';\n\nimport { EDIT_FIELD_NAME } from '../../EditField/EditField';\nimport { unsupportedAuthTypeField } from './unsupportedAuthType';\nimport AuthenticationManagement from './AuthenticationManagement';\nimport RemoveAuthPlaceholder from './RemoveAuthPlaceholder';\n\nexport const createAuthFieldName = (fieldName, id) => `authentications.a${id}.${fieldName.replace('authentication.', '')}`;\n\nexport const getLastPartOfName = (fieldName) => fieldName.split('.').pop();\n\nexport const removeRequiredValidator = (validate = []) =>\n    validate.filter(validation => validation.type !== validatorTypes.REQUIRED);\n\nexport const getEnhancedAuthField = (sourceType, authtype, name) =>\n    get(hardcodedSchemas, [sourceType, 'authentication', authtype, 'generic', name], {});\n\nexport const getAdditionalAuthSteps = (sourceType, authtype) =>\n    get(hardcodedSchemas, [sourceType, 'authentication', authtype, 'generic', 'includeStepKeyFields'], []);\n\nexport const modifyAuthSchemas = (fields, id, editing, setEdit) => fields.map((field) => {\n    const editedName = field.name.startsWith('authentication') ? createAuthFieldName(field.name, id) : field.name;\n    const isEditing = editing[editedName];\n\n    const finalField = ({\n        ...field,\n        name: editedName,\n        component: isEditing ? field.component : EDIT_FIELD_NAME\n    });\n\n    if (!isEditing) {\n        finalField.setEdit = setEdit;\n    }\n\n    const isPassword = getLastPartOfName(finalField.name) === 'password';\n\n    if (isPassword) {\n        finalField.helperText = (<FormattedMessage\n            id=\"sources.passwordResetHelperText\"\n            defaultMessage={`Changing this resets your current { label }.`}\n            values={{\n                label: finalField.label\n            }}\n        />);\n        finalField.isRequired = false;\n        finalField.validate = removeRequiredValidator(finalField.validate);\n    }\n\n    return finalField;\n});\n\nexport const authenticationFields = (authentications, sourceType, editing, setEdit, appTypes) => {\n    if (!authentications || authentications.length === 0 || !sourceType.schema || !sourceType.schema.authentication) {\n        return [];\n    }\n\n    return authentications.map(({ isDeleting, ...auth }) => {\n        const schemaAuth = sourceType.schema.authentication.find(({ type }) => type === auth.authtype);\n\n        if (!schemaAuth) {\n            return unsupportedAuthTypeField(auth.authtype);\n        }\n\n        const additionalStepKeys = getAdditionalAuthSteps(sourceType.name, auth.authtype);\n\n        const enhancedFields = schemaAuth.fields\n        .filter(field => !field.stepKey || additionalStepKeys.includes(field.stepKey))\n        .map((field) => ({\n            ...field,\n            ...getEnhancedAuthField(sourceType.name, auth.authtype, field.name)\n        }));\n\n        return ({\n            component: componentTypes.SUB_FORM,\n            name: schemaAuth.name,\n            fields: [\n                {\n                    component: 'description',\n                    name: `${auth.id}-authentication-management`,\n                    Content: AuthenticationManagement,\n                    schemaAuth,\n                    appTypes,\n                    auth,\n                    isDeleting\n                },\n                isDeleting ?  {\n                    component: 'description',\n                    name: `${auth.id}-remove-spinner`,\n                    Content: RemoveAuthPlaceholder\n                } : modifyAuthSchemas(enhancedFields, auth.id, editing, setEdit)\n            ]\n        });\n    });\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nexport const unsupportedAuthTypeField = (type) => ({\n    component: 'description',\n    name: `${type}-unsupported`,\n    // eslint-disable-next-line react/display-name\n    Content: () => (\n        <TextContent>\n            <Text component={ TextVariants.p }>\n                <FormattedMessage\n                    id=\"sources.unsupportedAuthType\"\n                    defaultMessage={`Authentication type of { type } is no longer supported.`}\n                    values={{ type }}\n                />\n            </Text>\n        </TextContent>\n    )\n});\n","import { EDIT_FIELD_NAME } from '../../EditField/EditField';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\n\nexport const NOT_CHANGING_COMPONENTS = [componentTypes.CHECKBOX, componentTypes.SWITCH];\n\nexport const modifyFields = (fields, editing, setEdit) => fields.map((field) => {\n    const isEditing = editing[field.name];\n\n    const finalField = ({\n        ...field,\n        component: isEditing || NOT_CHANGING_COMPONENTS.includes(field.component)  ? field.component : EDIT_FIELD_NAME\n    });\n\n    if (!isEditing && !NOT_CHANGING_COMPONENTS.includes(field.component)) {\n        finalField.setEdit = setEdit;\n    }\n\n    return finalField;\n});\n","import React from 'react';\nimport get from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { modifyFields } from './helpers';\n\nexport const getEnhancedEndpointField = (sourceType, name) =>\n    get(hardcodedSchemas, [sourceType, 'endpoint', name], {});\n\nexport const endpointFields = (sourceType, editing, setEdit) => {\n    if (!sourceType.schema || !sourceType.schema.endpoint || sourceType.schema.endpoint.hidden) {\n        return undefined;\n    }\n\n    const schemaAuth = sourceType.schema.endpoint;\n\n    const enhancedFields = schemaAuth.fields.map((field) => ({\n        ...field,\n        ...getEnhancedEndpointField(sourceType.name, field.name)\n    }));\n\n    return ({\n        component: componentTypes.SUB_FORM,\n        title: <FormattedMessage\n            id=\"sources.endpoint\"\n            defaultMessage=\"Endpoint\"\n        />,\n        name: 'endpoint',\n        fields: modifyFields(enhancedFields, editing, setEdit)\n    });\n};\n","import React from 'react';\nimport get from 'lodash/get';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { FormattedMessage } from 'react-intl';\nimport { modifyFields } from './helpers';\nimport { EDIT_FIELD_NAME } from '../../EditField/EditField';\n\nexport const APP_NAMES = {\n    COST_MANAGAMENT: '/insights/platform/cost-management'\n};\n\nexport const cmFieldsPrefixes = ['billing_source', 'credentials'];\n\nexport const isCMField = ({ name }) => cmFieldsPrefixes.some((prefix) => name.startsWith(prefix));\n\nexport const getCMFields = (authentication) =>\n    Object.keys(authentication)\n    .map((key) => authentication[key].fields.filter(isCMField))\n    .flatMap((x) => x);\n\nexport const getEnhancedCMField = (sourceType, name, authenticationsTypes) => {\n    let field = undefined;\n\n    authenticationsTypes.forEach((type) => {\n        const apps = field ? {} : get(hardcodedSchemas, [sourceType, 'authentication', type], {});\n\n        Object.keys(apps).find((key) => {\n            const hasAppField = get(hardcodedSchemas, [sourceType, 'authentication', type, key, name], undefined);\n            if (hasAppField) {\n                field = hasAppField;\n                return true;\n            }\n        });\n    });\n\n    return field ? field : {};\n};\n\nexport const appendClusterIdentifier = (editing, setEdit, sourceType) =>\n    sourceType.name === 'openshift' ? [{\n        name: 'source.source_ref',\n        label: <FormattedMessage\n            id=\"sources.clusterIdentifier\"\n            defaultMessage=\"Cluster identifier\"\n        />,\n        isRequired: true,\n        ...(editing['source.source_ref'] ? {} : { setEdit }),\n        validate: [{ type: validatorTypes.REQUIRED }],\n        component: editing['source.source_ref'] ? componentTypes.TEXT_FIELD : EDIT_FIELD_NAME\n    }] : [];\n\nexport const costManagementFields = (\n    applications = [],\n    sourceType,\n    editing,\n    setEdit,\n    appTypes,\n    source\n) => {\n    const costManagementApp = appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT);\n\n    if (!costManagementApp) {\n        return undefined;\n    }\n\n    const hasCostManagement = applications.find(({ application_type_id }) => application_type_id === costManagementApp.id);\n\n    if (!hasCostManagement) {\n        return undefined;\n    }\n\n    const billingSourceFields = getCMFields(sourceType.schema.authentication);\n\n    const authenticationsTypes = source.authentications ? source.authentications.map(({ authtype }) => authtype) : [];\n\n    const enhandcedFields = billingSourceFields.map((field) => ({\n        ...field,\n        ...getEnhancedCMField(sourceType.name, field.name, authenticationsTypes)\n    }));\n\n    return ({\n        component: componentTypes.SUB_FORM,\n        title: costManagementApp.display_name,\n        name: costManagementApp.display_name,\n        fields: [\n            ...modifyFields(enhandcedFields, editing, setEdit),\n            ...appendClusterIdentifier(editing, setEdit, sourceType)\n        ]\n    });\n};\n\nexport const applicationsFields = (\n    applications,\n    sourceType,\n    editing,\n    setEdit,\n    appTypes,\n    source\n) => ([\n    costManagementFields(\n        applications,\n        sourceType,\n        editing,\n        setEdit,\n        appTypes,\n        source\n    )\n]);\n","import { genericInfo } from './genericInfo';\nimport { authenticationFields } from './authentication';\nimport { endpointFields } from './endpoint';\nimport { applicationsFields } from './application';\n\nexport const parseSourceToSchema = (source, editing, setEdit, sourceType, appTypes) => ({\n    fields: [\n        ...genericInfo(editing, setEdit, source.source.id),\n        ...authenticationFields(source.authentications, sourceType, editing, setEdit, appTypes),\n        ...applicationsFields(source.applications, sourceType, editing, setEdit, appTypes, source),\n        source.endpoints && source.endpoints.length > 0 ? endpointFields(sourceType, editing, setEdit) : false\n    ].filter(Boolean)\n});\n","import { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { prepareInitialValues } from './helpers';\n\nexport const initialState = {\n    loading: true,\n    editing: {},\n    source: undefined,\n    initialValues: {},\n    sourceType: undefined,\n    schema: undefined\n};\n\nconst reducer = (state, { type, source, name, sourceType, setEdit, appTypes, authId }) => {\n    switch (type) {\n        case 'createForm':\n            return {\n                ...state,\n                sourceType,\n                initialValues: prepareInitialValues(state.source, sourceType.product_name),\n                schema: parseSourceToSchema(state.source, state.editing, setEdit, sourceType, appTypes),\n                loading: false\n            };\n        case 'refreshSchema':\n            return {\n                ...state,\n                schema: parseSourceToSchema(state.source, state.editing, setEdit, state.sourceType, appTypes)\n            };\n        case 'setSource':\n            return {\n                ...state,\n                source\n            };\n        case 'reset':\n            return {\n                ...state,\n                editing: {}\n            };\n        case 'setEdit':\n            return {\n                ...state,\n                editing: {\n                    ...state.editing,\n                    [name]: !state.editing[name]\n                }\n            };\n        case 'removeAuthPending':\n            return {\n                ...state,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.map((auth) => auth.id === authId ? {\n                        ...auth, isDeleting: true\n                    } : auth)\n                }\n            };\n        case 'removeAuthRejected':\n            return {\n                ...state,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.map((auth) => auth.id === authId ? {\n                        ...auth, isDeleting: false\n                    } : auth)\n                }\n            };\n        case 'removeAuthFulfill':\n            return {\n                ...state,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.filter((auth) => auth.id !== authId)\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\n\nimport { layoutMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport HorizontalFormWrapper from './HorizontalFormWrapper';\nimport Header from './Header';\nimport { onSubmit } from './onSubmit';\n\nimport { redirectWhenImported } from './importedRedirect';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport reducer, { initialState } from './reducer';\nimport sourceEditContext from './sourceEditContext';\n\nconst SourceEditModal = () => {\n    const [state, setState] = useReducer(reducer, initialState);\n    const history = useHistory();\n    const sourceRedux = useSource();\n    const isLoaded = useIsLoaded();\n\n    const { loading, editing, source, initialValues, schema } = state;\n\n    const intl = useIntl();\n\n    const {\n        sourceTypes,\n        appTypes,\n        sourceTypesLoaded,\n        appTypesLoaded\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (sourceRedux) {\n            doLoadSourceForEdit(sourceRedux).then((source) => {\n                if (source.source.imported) {\n                    redirectWhenImported(dispatch, intl, history, source.source.name);\n                }\n\n                setState({ type: 'setSource', source });\n            });\n        }\n    }, [sourceRedux, isLoaded]);\n\n    const setEdit = (name) => setState({ type: 'setEdit', name });\n\n    useEffect(() => {\n        if (source && appTypesLoaded && sourceTypesLoaded) {\n            const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n            setState({ type: 'createForm', sourceType, source, setEdit, appTypes });\n        }\n    }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n    useEffect(() => {\n        if (source && !loading) {\n            setState({ type: 'refreshSchema', setEdit, appTypes });\n        }\n    }, [editing]);\n\n    const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n    const returnToSources = () => history.push(routes.sources.path);\n\n    if (isLoading) {\n        return (\n            <Modal\n                title={intl.formatMessage({\n                    id: 'sources.editSource',\n                    defaultMessage: 'Edit source.'\n                })}\n                header={<Header />}\n                isOpen={true}\n                isLarge\n                onClose={returnToSources}\n            >\n                <div className=\"ins-c-sources__dialog--spinnerContainer\">\n                    <Spinner />\n                </div>\n            </Modal>\n        );\n    }\n\n    return (\n        <Modal\n            title={intl.formatMessage({\n                id: 'sources.editSource',\n                defaultMessage: 'Edit source.'\n            })}\n            header={<Header />}\n            isOpen={true}\n            isLarge\n            onClose={returnToSources}\n        >\n            <sourceEditContext.Provider value={{ setState, source }}>\n                <SourcesFormRenderer\n                    onCancel={returnToSources}\n                    schema={schema}\n                    onSubmit={\n                        (values, formApi) =>\n                            onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, history.push)\n                    }\n                    layoutMapper={{\n                        ...layoutMapper,\n                        FormWrapper: HorizontalFormWrapper\n                    }}\n                    clearedValue={null}\n                    canReset\n                    disableSubmit={['submitting']}\n                    onReset={() => setState({ type: 'reset' })}\n                    initialValues={initialValues}\n                    buttonsLabels={{ submitLabel: intl.formatMessage({\n                        id: 'sources.save',\n                        defaultMessage: 'Save'\n                    }) }}\n                />\n            </sourceEditContext.Provider>\n        </Modal>\n    );\n};\n\nexport default SourceEditModal;\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const getCmValues = (id) => axiosInstance.get(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`);\n","import { routes } from '../../Routes';\nimport { addMessage } from '../../redux/sources/actions';\n\nexport const redirectWhenImported = (dispatch, intl, history, name) => {\n    dispatch(addMessage(\n        intl.formatMessage({\n            id: 'sources.importSourceCannotEdited',\n            defaultMessage: 'Source { name } is imported.'\n        }, { name }),\n        'danger',\n        intl.formatMessage({\n            id: 'sources.importedSourcesCannotEdited',\n            defaultMessage: 'Imported sources cannot be edited.'\n        }),\n    ));\n    history.push(routes.sources.path);\n};\n"],"sourceRoot":""}