{"version":3,"sources":["webpack:///./src/components/EditField/EditField.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Modal/index.js","webpack:///./node_modules/lodash/set.js","webpack:///./node_modules/lodash/_baseSet.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/trash-icon.js","webpack:///./src/api/doLoadSourceForEdit.js","webpack:///./src/components/SourceEditForm/Header.js","webpack:///./src/components/SourceEditForm/helpers.js","webpack:///./src/components/SourceEditForm/onSubmit.js","webpack:///./src/components/SourceEditForm/parser/genericInfo.js","webpack:///./src/components/SourceEditForm/sourceEditContext.js","webpack:///./src/components/SourceEditForm/parser/AuthenticationManagement.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuthPlaceholder.js","webpack:///./src/components/SourceEditForm/parser/authentication.js","webpack:///./src/components/SourceEditForm/parser/unsupportedAuthType.js","webpack:///./src/components/SourceEditForm/parser/helpers.js","webpack:///./src/components/SourceEditForm/parser/endpoint.js","webpack:///./src/components/SourceEditForm/parser/application.js","webpack:///./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack:///./src/components/SourceEditForm/reducer.js","webpack:///./src/components/SourceEditForm/parser/RemoveAuth.js","webpack:///./src/components/SourceEditForm/SourceEditModal.js","webpack:///./src/api/getCmValues.js","webpack:///./src/components/SourceEditForm/importedRedirect.js"],"names":["EDIT_FIELD_NAME","EditField","props","useFieldApi","isRequired","label","helperText","hideLabel","meta","input","type","setEdit","error","showError","touched","value","emptyText","name","includes","fieldId","isValid","helperTextInvalid","onClick","undefined","tabIndex","onKeyPress","e","charCode","preventDefault","className","propTypes","PropTypes","node","bool","func","string","SourcesFormRenderer","FormTemplate","componentMapper","mapperExtension","componentTypes","SWITCH","validatorMapper","validatorTypes","REQUIRED","PATTERN","MIN_LENGTH","URL","Object","defineProperty","exports","_Modal","keys","forEach","key","enumerable","get","_ModalBox","_ModalBoxBody","_ModalBoxCloseButton","_ModalBoxFooter","_ModalBoxHeader","_ModalContent","baseSet","module","object","path","assignValue","castPath","isIndex","isObject","toKey","customizer","index","length","lastIndex","nested","newValue","objValue","TrashIconConfig","obj","_createIcon","__esModule","height","width","svgPath","yOffset","xOffset","transform","_default","Header","Grid","GridItem","xs","Title","headingLevel","TitleLevel","h1","size","id","defaultMessage","prepareInitialValues","sourceTypeName","endpoint","url","endpoints","authentications","rest","auhenticationsFinal","auth","scheme","host","port","endpointToUrl","source_type","onSubmit","values","editing","dispatch","source","intl","push","updateSource","filteredValues","filter","set","selectOnlyEditedValues","formatMessage","authentication","costManagement","then","checkSourceStatus","routes","sources","loadEntities","genericInfo","sourceId","component","TEXT_FIELD","validate","asyncValidator","isReadOnly","sourceEditContext","createContext","AuthenticationManagement","schemaAuth","appTypes","isDeleting","useContext","setState","appNames","applications","find","map","application_type_id","Boolean","app","display_name","sm","Button","variant","aria-label","removingAuth","TextContent","Text","TextVariants","small","authid","join","arrayOf","shape","RemoveAuthPlaceholder","Bullseye","Spinner","modifyAuthSchemas","fields","field","editedName","startsWith","fieldName","replace","createAuthFieldName","isEditing","finalField","split","pop","validation","removeRequiredValidator","authenticationFields","sourceType","schema","authtype","Content","p","additionalStepKeys","hardcodedSchemas","getAdditionalAuthSteps","enhancedFields","stepKey","getEnhancedAuthField","SUB_FORM","NOT_CHANGING_COMPONENTS","CHECKBOX","modifyFields","endpointFields","hidden","getEnhancedEndpointField","title","APP_NAMES","cmFieldsPrefixes","isCMField","some","prefix","getCMFields","flatMap","x","getEnhancedCMField","authenticationsTypes","apps","hasAppField","appendClusterIdentifier","costManagementFields","costManagementApp","hasCostManagement","billingSourceFields","enhandcedFields","applicationsFields","parseSourceToSchema","initialState","loading","initialValues","isAuthRemoving","reducer","state","authId","product_name","RemoveAuth","body","actions","hasAttachedApp","useDispatch","useIntl","onClose","count","authname","doDeleteAuthentication","addMessage","handleError","Modal","isOpen","isFooterLeftAligned","isSmall","header","SourceEditModal","useReducer","history","useHistory","sourceRedux","useSource","isLoaded","useIsLoaded","useSelector","shallowEqual","sourceTypes","sourceTypesLoaded","appTypesLoaded","useEffect","Promise","all","getSourcesApi","showSource","listSourceEndpoints","listSourceApplications","axiosInstance","COST_MANAGEMENT_API_BASE","sourceData","data","basicValues","billing_source","credentials","listEndpointAuthentications","doLoadSourceForEdit","imported","redirectWhenImported","source_type_id","returnToSources","isLarge","Fragment","Provider","onCancel","formApi","getState","dirtyFields","formWrapperProps","isHorizontal","canReset","disableSubmit","submitLabel","clearedValue","onReset"],"mappings":"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","file":"js/edit.d24d1361c5f9acb8c7c1.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport PencilAltIcon from '@patternfly/react-icons/dist/js/icons/pencil-alt-icon';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-field-api';\n\nexport const EDIT_FIELD_NAME = 'edit-field';\n\nconst EditField = (props) => {\n    const { isRequired, label, helperText, hideLabel, meta, input, type, setEdit } = useFieldApi(props);\n\n    const { error, touched } = meta;\n    const showError = touched && error;\n\n    let value = input.value;\n\n    if (typeof value === 'boolean') {\n        value = value ? 'True' : 'False';\n    }\n\n    const isPassword = type === 'password' || input.name.includes('password');\n    const emptyText = isPassword ? 'Click to edit' : 'Click to add';\n\n    return (\n        <FormGroup\n            isRequired={ isRequired }\n            label={ !hideLabel && label }\n            fieldId={ input.name }\n            isValid={ !showError }\n            helperText={ helperText }\n            helperTextInvalid={ error }\n            onClick={setEdit ? () => setEdit(input.name) : undefined}\n            tabIndex={0}\n            onKeyPress={(e) => {\n                if (e.charCode === 32 && setEdit) {\n                    e.preventDefault();\n                    setEdit(input.name);\n                }\n            }}\n        >\n            <div className={`pf-c-form__horizontal-group ins-c-sources__edit-field-group ${setEdit ? 'clickable' : ''}`}>\n                <TextContent className={`ins-c-sources__edit-field-group-text-content ${setEdit ? 'clickable' : ''}`}>\n                    <span className=\"ins-c-sources__edit-field-value pf-u-mr-sm\">\n                        {value ? value : setEdit ? emptyText : ''}\n                    </span>\n                    {setEdit && <PencilAltIcon />}\n                </TextContent>\n            </div>\n        </FormGroup>\n    );\n};\n\nEditField.propTypes = {\n    label: PropTypes.node,\n    isRequired: PropTypes.bool,\n    helperText: PropTypes.node,\n    hideLabel: PropTypes.bool,\n    setEdit: PropTypes.func,\n    type: PropTypes.string\n};\n\nexport default EditField;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validatorMapper from '@data-driven-forms/react-form-renderer/dist/cjs/validator-mapper';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources';\n\nimport EditField from '../components/EditField/EditField';\n\nconst SourcesFormRenderer = props => (\n    <FormRenderer\n        FormTemplate={FormTemplate}\n        componentMapper={{\n            ...componentMapper,\n            ...mapperExtension,\n            'edit-field': EditField,\n            'switch-field': componentMapper[componentTypes.SWITCH]\n        }}\n        validatorMapper={{\n            'required-validator': validatorMapper[validatorTypes.REQUIRED],\n            'pattern-validator': validatorMapper[validatorTypes.PATTERN],\n            'min-length-validator': validatorMapper[validatorTypes.MIN_LENGTH],\n            'url-validator': validatorMapper[validatorTypes.URL]\n        }}\n        {...props}\n    />\n);\n\nexport default SourcesFormRenderer;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Modal = require(\"./Modal\");\n\nObject.keys(_Modal).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Modal[key];\n    }\n  });\n});\n\nvar _ModalBox = require(\"./ModalBox\");\n\nObject.keys(_ModalBox).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBox[key];\n    }\n  });\n});\n\nvar _ModalBoxBody = require(\"./ModalBoxBody\");\n\nObject.keys(_ModalBoxBody).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxBody[key];\n    }\n  });\n});\n\nvar _ModalBoxCloseButton = require(\"./ModalBoxCloseButton\");\n\nObject.keys(_ModalBoxCloseButton).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxCloseButton[key];\n    }\n  });\n});\n\nvar _ModalBoxFooter = require(\"./ModalBoxFooter\");\n\nObject.keys(_ModalBoxFooter).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxFooter[key];\n    }\n  });\n});\n\nvar _ModalBoxHeader = require(\"./ModalBoxHeader\");\n\nObject.keys(_ModalBoxHeader).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalBoxHeader[key];\n    }\n  });\n});\n\nvar _ModalContent = require(\"./ModalContent\");\n\nObject.keys(_ModalContent).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _ModalContent[key];\n    }\n  });\n});\n//# sourceMappingURL=index.js.map","var baseSet = require('./_baseSet');\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.TrashIconConfig = void 0;\n\nvar _createIcon = _interopRequireDefault(require(\"../createIcon\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* This file is generated by createIcons.js any changes will be lost. */\nvar TrashIconConfig = {\n  name: 'TrashIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z',\n  yOffset: '',\n  xOffset: '',\n  transform: ''\n};\nexports.TrashIconConfig = TrashIconConfig;\n\nvar _default = (0, _createIcon[\"default\"])(TrashIconConfig);\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=trash-icon.js.map","import { getSourcesApi } from './entities';\nimport { getCmValues } from './getCmValues';\n\nexport const doLoadSourceForEdit = (source) => Promise.all([\n    getSourcesApi().showSource(source.id),\n    getSourcesApi().listSourceEndpoints(source.id),\n    getSourcesApi().listSourceApplications(source.id),\n    getCmValues(source.id).catch(() => undefined)\n]).then(([sourceData, endpoints, applications, costManagement]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    let basicValues = {\n        source: {\n            ...source,\n            ...sourceData\n        },\n        applications: applications.data\n    };\n\n    if (costManagement) {\n        basicValues = {\n            ...basicValues,\n            billing_source: costManagement.billing_source,\n            credentials: costManagement.authentication.credentials\n        };\n    }\n\n    if (!endpoint) { // bail out\n        return basicValues;\n    }\n\n    return getSourcesApi().listEndpointAuthentications(endpoint.id).then(authentications => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data\n    }));\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Grid } from '@patternfly/react-core/dist/js/layouts/Grid/Grid';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid/GridItem';\nimport { Title, TitleLevel } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nconst Header = () => (\n    <Grid>\n        <GridItem xs={12}>\n            <Title headingLevel={TitleLevel.h1} size=\"3xl\">\n                <FormattedMessage\n                    id=\"sources.editSource\"\n                    defaultMessage=\"Edit source\"\n                />\n            </Title>\n        </GridItem>\n        <GridItem xs={12}>\n            <FormattedMessage\n                id=\"sources.editSourceDescription\"\n                defaultMessage=\"You are editing a source.\"\n            />\n        </GridItem>\n    </Grid>\n);\n\nexport default Header;\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl } from '../SourcesTable/formatters';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n    const filteredValues = {};\n\n    Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n        set(filteredValues, key, get(values, key));\n    });\n\n    return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, ...rest }, sourceTypeName) => {\n    const auhenticationsFinal = {};\n\n    if (authentications && authentications.length > 0) {\n        authentications.forEach((auth) => {\n            auhenticationsFinal[`a${auth.id}`] = auth;\n        });\n    }\n\n    let endpoint;\n    let url;\n\n    if (endpoints && endpoints.length > 0) {\n        endpoint = endpoints[0];\n    }\n\n    if (endpoint) {\n        url = (endpoint.scheme || endpoint.host || endpoint.path || endpoint.port) ? endpointToUrl(endpoint) : undefined;\n    }\n\n    return ({\n        source_type: sourceTypeName,\n        endpoint,\n        authentications: auhenticationsFinal,\n        url,\n        ...rest\n    });\n};\n","import { selectOnlyEditedValues } from './helpers';\nimport { updateSource, loadEntities } from '../../redux/sources/actions';\nimport { routes } from '../../Routes';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nexport const onSubmit = (values, editing, dispatch, source, intl, push) => dispatch(updateSource(\n    source,\n    selectOnlyEditedValues(values, editing),\n    intl.formatMessage({\n        id: 'sources.modifiedNotificationTitle',\n        defaultMessage: `\"{ name }\" was modified successfully.`\n    }, { name: source.source.name }),\n    intl.formatMessage({\n        id: 'sources.modifiedNotificationDescription',\n        defaultMessage: 'The source was successfully modified.'\n    }),\n    {\n        authentication: intl.formatMessage({\n            id: 'sources.sourceEditAuthFailure',\n            defaultMessage: 'Authentication update failure.'\n        }),\n        source: intl.formatMessage({\n            id: 'sources.sourceEditFailure',\n            defaultMessage: 'Source update failure.'\n        }),\n        endpoint: intl.formatMessage({\n            id: 'sources.sourceEditEndpointFailure',\n            defaultMessage: 'Endpoint update failure.'\n        }),\n        costManagement: intl.formatMessage({\n            id: 'sources.sourceCostmanagementFailure',\n            defaultMessage: 'Cost Management update failure.'\n        })\n    }))\n.then(() => {\n    checkSourceStatus(source.source.id);\n    push(routes.sources.path);\n    dispatch(loadEntities());\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { asyncValidator } from '@redhat-cloud-services/frontend-components-sources';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nimport { EDIT_FIELD_NAME } from '../../EditField/EditField';\n\nexport const genericInfo = (editing, setEdit, sourceId) => ([\n    {\n        name: 'source.name',\n        label: <FormattedMessage\n            id=\"sources.sourceName\"\n            defaultMessage=\"Source name\"\n        />,\n        component: editing['source.name'] ? componentTypes.TEXT_FIELD : EDIT_FIELD_NAME,\n        ...(editing['source.name'] ? {} : { setEdit }),\n        validate: [\n            (value) => asyncValidator(value, sourceId),\n            { type: validatorTypes.REQUIRED }\n        ],\n        isRequired: true\n    }, {\n        name: 'source_type',\n        label: <FormattedMessage\n            id=\"sources.sourceType\"\n            defaultMessage=\"Source type\"\n        />,\n        isReadOnly: true,\n        component: EDIT_FIELD_NAME\n    }\n]);\n","import { createContext } from 'react';\n\nconst sourceEditContext = createContext();\n\nexport default sourceEditContext;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport TrashIcon from '@patternfly/react-icons/dist/js/icons/trash-icon';\n\nimport sourceEditContext from '../sourceEditContext';\nimport { FormattedMessage } from 'react-intl';\n\nconst AuthenticationManagement = ({ schemaAuth, auth, appTypes, isDeleting }) => {\n    const { source, setState } = useContext(sourceEditContext);\n\n    const attachedAppTypes = source.source.applications.filter(\n        ({ authentications }) => authentications.find(({ id }) => id === auth.id)\n    );\n\n    const appNames = attachedAppTypes.map(\n        ({ application_type_id }) => application_type_id ? appTypes.find(({ id }) => id === application_type_id) : undefined\n    ).filter(Boolean).map(app => app.display_name);\n\n    const setAuthRemoving = () => setState({\n        type: 'setAuthRemoving',\n        removingAuth: {\n            auth,\n            appNames,\n            schemaAuth\n        }\n    });\n\n    return (\n        <GridItem sm={12}>\n            <Title size=\"xl\">{schemaAuth.name}&nbsp;\n                {!isDeleting &&\n                    <Button variant=\"plain\" aria-label=\"Remove authentication\" onClick={setAuthRemoving}>\n                        <TrashIcon />\n                    </Button>\n                }\n            </Title>\n            <TextContent>\n                <Text component={TextVariants.small} className=\"pf-u-mb-0\">\n                    <FormattedMessage\n                        id=\"sources.removeAuthDescription\"\n                        defaultMessage=\"id: {authid} { appNames}\"\n                        values={{\n                            authid: auth.id,\n                            appNames: appNames.length > 0 ?\n                                <FormattedMessage\n                                    id=\"sources.removeAuthWithApps\"\n                                    defaultMessage=\"used by {appNames}\"\n                                    values={{ appNames: appNames.join(', ') }}\n                                />\n                                : <FormattedMessage\n                                    id=\"sources.removeAuthNoApps\"\n                                    defaultMessage=\"not used by any app\"\n                                />\n                        }}\n                    />\n                </Text>\n            </TextContent>\n        </GridItem>\n    );\n};\n\nAuthenticationManagement.propTypes = {\n    isDeleting: PropTypes.bool,\n    appTypes: PropTypes.arrayOf(PropTypes.object),\n    schemaAuth: PropTypes.shape({\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    auth: PropTypes.shape({\n        id: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default AuthenticationManagement;\n","import React from 'react';\n\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye';\nimport { Grid, GridItem } from '@patternfly/react-core/dist/js/layouts/Grid';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nconst RemoveAuthPlaceholder = () => (\n    <Grid>\n        <GridItem xs={12}>\n            <Bullseye>\n                <Spinner size=\"lg\"/>\n            </Bullseye>\n        </GridItem>\n        <GridItem xs={12}>\n            <Bullseye>\n                <TextContent>\n                    <Text component={TextVariants.small} className=\"pf-u-mt-md\">\n                        <FormattedMessage\n                            id=\"sources.removingAuthMessage\"\n                            defaultMessage=\"This authentication is being removed...\"\n                        />\n                    </Text>\n                </TextContent>\n            </Bullseye>\n        </GridItem>\n    </Grid>\n);\n\nexport default RemoveAuthPlaceholder;\n","import React from 'react';\nimport get from 'lodash/get';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { FormattedMessage } from 'react-intl';\n\nimport { EDIT_FIELD_NAME } from '../../EditField/EditField';\nimport { unsupportedAuthTypeField } from './unsupportedAuthType';\nimport AuthenticationManagement from './AuthenticationManagement';\nimport RemoveAuthPlaceholder from './RemoveAuthPlaceholder';\n\nexport const createAuthFieldName = (fieldName, id) => `authentications.a${id}.${fieldName.replace('authentication.', '')}`;\n\nexport const getLastPartOfName = (fieldName) => fieldName.split('.').pop();\n\nexport const removeRequiredValidator = (validate = []) =>\n    validate.filter(validation => validation.type !== validatorTypes.REQUIRED && validation.type !== 'required-validator');\n\nexport const getEnhancedAuthField = (sourceType, authtype, name) =>\n    get(hardcodedSchemas, [sourceType, 'authentication', authtype, 'generic', name], {});\n\nexport const getAdditionalAuthSteps = (sourceType, authtype) =>\n    get(hardcodedSchemas, [sourceType, 'authentication', authtype, 'generic', 'includeStepKeyFields'], []);\n\nexport const modifyAuthSchemas = (fields, id, editing, setEdit) => fields.map((field) => {\n    const editedName = field.name.startsWith('authentication') ? createAuthFieldName(field.name, id) : field.name;\n    const isEditing = editing[editedName];\n\n    const finalField = ({\n        ...field,\n        name: editedName,\n        component: isEditing ? field.component : EDIT_FIELD_NAME\n    });\n\n    if (!isEditing) {\n        finalField.setEdit = setEdit;\n    }\n\n    const isPassword = getLastPartOfName(finalField.name) === 'password';\n\n    if (isPassword) {\n        finalField.helperText = (<FormattedMessage\n            id=\"sources.passwordResetHelperText\"\n            defaultMessage={`Changing this resets your current { label }.`}\n            values={{\n                label: finalField.label\n            }}\n        />);\n        finalField.isRequired = false;\n        finalField.validate = removeRequiredValidator(finalField.validate);\n    }\n\n    return finalField;\n});\n\nexport const authenticationFields = (authentications, sourceType, editing, setEdit, appTypes) => {\n    if (!authentications || authentications.length === 0 || !sourceType.schema || !sourceType.schema.authentication) {\n        return [];\n    }\n\n    return authentications.map(({ isDeleting, ...auth }) => {\n        const schemaAuth = sourceType.schema.authentication.find(({ type }) => type === auth.authtype);\n\n        if (!schemaAuth) {\n            return unsupportedAuthTypeField(auth.authtype);\n        }\n\n        const additionalStepKeys = getAdditionalAuthSteps(sourceType.name, auth.authtype);\n\n        const enhancedFields = schemaAuth.fields\n        .filter(field => !field.stepKey || additionalStepKeys.includes(field.stepKey))\n        .map((field) => ({\n            ...field,\n            ...getEnhancedAuthField(sourceType.name, auth.authtype, field.name)\n        }));\n\n        return ({\n            component: componentTypes.SUB_FORM,\n            name: schemaAuth.name,\n            fields: [\n                {\n                    component: 'description',\n                    name: `${auth.id}-authentication-management`,\n                    Content: AuthenticationManagement,\n                    schemaAuth,\n                    appTypes,\n                    auth,\n                    isDeleting\n                },\n                isDeleting ?  {\n                    component: 'description',\n                    name: `${auth.id}-remove-spinner`,\n                    Content: RemoveAuthPlaceholder\n                } : modifyAuthSchemas(enhancedFields, auth.id, editing, setEdit)\n            ]\n        });\n    });\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nexport const unsupportedAuthTypeField = (type) => ({\n    component: 'description',\n    name: `${type}-unsupported`,\n    // eslint-disable-next-line react/display-name\n    Content: () => (\n        <TextContent>\n            <Text component={ TextVariants.p }>\n                <FormattedMessage\n                    id=\"sources.unsupportedAuthType\"\n                    defaultMessage={`Authentication type of { type } is no longer supported.`}\n                    values={{ type }}\n                />\n            </Text>\n        </TextContent>\n    )\n});\n","import { EDIT_FIELD_NAME } from '../../EditField/EditField';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\n\nexport const NOT_CHANGING_COMPONENTS = [componentTypes.CHECKBOX, componentTypes.SWITCH];\n\nexport const modifyFields = (fields, editing, setEdit) => fields.map((field) => {\n    const isEditing = editing[field.name];\n\n    const finalField = ({\n        ...field,\n        component: isEditing || NOT_CHANGING_COMPONENTS.includes(field.component)  ? field.component : EDIT_FIELD_NAME\n    });\n\n    if (!isEditing && !NOT_CHANGING_COMPONENTS.includes(field.component)) {\n        finalField.setEdit = setEdit;\n    }\n\n    return finalField;\n});\n","import React from 'react';\nimport get from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\nimport { componentTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { modifyFields } from './helpers';\n\nexport const getEnhancedEndpointField = (sourceType, name) =>\n    get(hardcodedSchemas, [sourceType, 'endpoint', name], {});\n\nexport const endpointFields = (sourceType, editing, setEdit) => {\n    if (!sourceType.schema || !sourceType.schema.endpoint || sourceType.schema.endpoint.hidden) {\n        return undefined;\n    }\n\n    const schemaAuth = sourceType.schema.endpoint;\n\n    const enhancedFields = schemaAuth.fields.map((field) => ({\n        ...field,\n        ...getEnhancedEndpointField(sourceType.name, field.name)\n    }));\n\n    return ({\n        component: componentTypes.SUB_FORM,\n        title: <FormattedMessage\n            id=\"sources.endpoint\"\n            defaultMessage=\"Endpoint\"\n        />,\n        name: 'endpoint',\n        fields: modifyFields(enhancedFields, editing, setEdit)\n    });\n};\n","import React from 'react';\nimport get from 'lodash/get';\nimport { componentTypes, validatorTypes } from '@data-driven-forms/react-form-renderer';\nimport { hardcodedSchemas } from '@redhat-cloud-services/frontend-components-sources';\nimport { FormattedMessage } from 'react-intl';\nimport { modifyFields } from './helpers';\nimport { EDIT_FIELD_NAME } from '../../EditField/EditField';\n\nexport const APP_NAMES = {\n    COST_MANAGAMENT: '/insights/platform/cost-management'\n};\n\nexport const cmFieldsPrefixes = ['billing_source', 'credentials'];\n\nexport const isCMField = ({ name }) => cmFieldsPrefixes.some((prefix) => name.startsWith(prefix));\n\nexport const getCMFields = (authentication) =>\n    Object.keys(authentication)\n    .map((key) => authentication[key].fields.filter(isCMField))\n    .flatMap((x) => x);\n\nexport const getEnhancedCMField = (sourceType, name, authenticationsTypes) => {\n    let field = undefined;\n\n    authenticationsTypes.forEach((type) => {\n        const apps = field ? {} : get(hardcodedSchemas, [sourceType, 'authentication', type], {});\n\n        Object.keys(apps).find((key) => {\n            const hasAppField = get(hardcodedSchemas, [sourceType, 'authentication', type, key, name], undefined);\n            if (hasAppField) {\n                field = hasAppField;\n                return true;\n            }\n        });\n    });\n\n    return field ? field : {};\n};\n\nexport const appendClusterIdentifier = (editing, setEdit, sourceType) =>\n    sourceType.name === 'openshift' ? [{\n        name: 'source.source_ref',\n        label: <FormattedMessage\n            id=\"sources.clusterIdentifier\"\n            defaultMessage=\"Cluster identifier\"\n        />,\n        isRequired: true,\n        ...(editing['source.source_ref'] ? {} : { setEdit }),\n        validate: [{ type: validatorTypes.REQUIRED }],\n        component: editing['source.source_ref'] ? componentTypes.TEXT_FIELD : EDIT_FIELD_NAME\n    }] : [];\n\nexport const costManagementFields = (\n    applications = [],\n    sourceType,\n    editing,\n    setEdit,\n    appTypes,\n    source\n) => {\n    const costManagementApp = appTypes.find(({ name }) => name === APP_NAMES.COST_MANAGAMENT);\n\n    if (!costManagementApp) {\n        return undefined;\n    }\n\n    const hasCostManagement = applications.find(({ application_type_id }) => application_type_id === costManagementApp.id);\n\n    if (!hasCostManagement) {\n        return undefined;\n    }\n\n    const billingSourceFields = getCMFields(sourceType.schema.authentication);\n\n    const authenticationsTypes = source.authentications ? source.authentications.map(({ authtype }) => authtype) : [];\n\n    const enhandcedFields = billingSourceFields.map((field) => ({\n        ...field,\n        ...getEnhancedCMField(sourceType.name, field.name, authenticationsTypes)\n    }));\n\n    return ({\n        component: componentTypes.SUB_FORM,\n        title: costManagementApp.display_name,\n        name: costManagementApp.display_name,\n        fields: [\n            ...modifyFields(enhandcedFields, editing, setEdit),\n            ...appendClusterIdentifier(editing, setEdit, sourceType)\n        ]\n    });\n};\n\nexport const applicationsFields = (\n    applications,\n    sourceType,\n    editing,\n    setEdit,\n    appTypes,\n    source\n) => ([\n    costManagementFields(\n        applications,\n        sourceType,\n        editing,\n        setEdit,\n        appTypes,\n        source\n    )\n]);\n","import { genericInfo } from './genericInfo';\nimport { authenticationFields } from './authentication';\nimport { endpointFields } from './endpoint';\nimport { applicationsFields } from './application';\n\nexport const parseSourceToSchema = (source, editing, setEdit, sourceType, appTypes) => ({\n    fields: [\n        ...genericInfo(editing, setEdit, source.source.id),\n        ...authenticationFields(source.authentications, sourceType, editing, setEdit, appTypes),\n        ...applicationsFields(source.applications, sourceType, editing, setEdit, appTypes, source),\n        source.endpoints && source.endpoints.length > 0 ? endpointFields(sourceType, editing, setEdit) : false\n    ].filter(Boolean)\n});\n","import { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { prepareInitialValues } from './helpers';\n\nexport const initialState = {\n    loading: true,\n    editing: {},\n    source: undefined,\n    initialValues: {},\n    sourceType: undefined,\n    schema: undefined,\n    isAuthRemoving: null\n};\n\nconst reducer = (state, { type, source, name, sourceType, setEdit, appTypes, authId, removingAuth }) => {\n    switch (type) {\n        case 'createForm':\n            return {\n                ...state,\n                sourceType,\n                initialValues: prepareInitialValues(state.source, sourceType.product_name),\n                schema: parseSourceToSchema(state.source, state.editing, setEdit, sourceType, appTypes),\n                loading: false\n            };\n        case 'refreshSchema':\n            return {\n                ...state,\n                schema: parseSourceToSchema(state.source, state.editing, setEdit, state.sourceType, appTypes)\n            };\n        case 'setSource':\n            return {\n                ...state,\n                source\n            };\n        case 'reset':\n            return {\n                ...state,\n                editing: {}\n            };\n        case 'setEdit':\n            return {\n                ...state,\n                editing: {\n                    ...state.editing,\n                    [name]: !state.editing[name]\n                }\n            };\n        case 'removeAuthPending':\n            return {\n                ...state,\n                isAuthRemoving: null,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.map((auth) => auth.id === authId ? {\n                        ...auth, isDeleting: true\n                    } : auth)\n                }\n            };\n        case 'removeAuthRejected':\n            return {\n                ...state,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.map((auth) => auth.id === authId ? {\n                        ...auth, isDeleting: false\n                    } : auth)\n                }\n            };\n        case 'removeAuthFulfill':\n            return {\n                ...state,\n                source: {\n                    ...state.source,\n                    authentications: state.source.authentications.filter((auth) => auth.id !== authId)\n                }\n            };\n        case 'setAuthRemoving':\n            return {\n                ...state,\n                isAuthRemoving: removingAuth\n            };\n        case 'closeAuthRemoving':\n            return {\n                ...state,\n                isAuthRemoving: null\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport sourceEditContext from '../sourceEditContext';\nimport { addMessage } from '../../../redux/sources/actions';\nimport { doDeleteAuthentication } from '../../../api/entities';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources';\n\nconst RemoveAuth = ({ appNames, schemaAuth, auth }) => {\n    const hasAttachedApp = appNames.length > 0;\n    let body;\n    let actions;\n\n    const dispatch = useDispatch();\n    const intl = useIntl();\n\n    const { setState } = useContext(sourceEditContext);\n\n    const onClose = () => setState({ type: 'closeAuthRemoving' });\n\n    const onRemove = () => {\n        setState({ type: 'removeAuthPending', authId: auth.id });\n        onClose();\n        return doDeleteAuthentication(auth.id).then(() => {\n            setState({ type: 'removeAuthFulfill', authId: auth.id });\n            dispatch(addMessage(\n                intl.formatMessage(\n                    { id: 'sources.authRemoveFullfil', defaultMessage: 'Authentication was deleted successfully.' }\n                ),\n                'success'\n            ));\n        })\n        .catch((error) => {\n            setState({ type: 'removeAuthRejected', authId: auth.id });\n            dispatch(addMessage(\n                intl.formatMessage(\n                    { id: 'sources.authRemoveRejected', defaultMessage: 'Authentication was not deleted successfully.' }\n                ),\n                'danger',\n                handleError(error)\n            ));\n        });\n    };\n\n    if (hasAttachedApp) {\n        body = (<FormattedMessage\n            id=\"sources.removeAuthWarningApps\"\n            defaultMessage=\"To remove {authname} authentication you have to remove attached\n            {count, plural, one {application} other {applications}}: { appNames }.\"\n            values={{\n                appNames: appNames.join(', '),\n                count: appNames.length,\n                authname: <b>{schemaAuth.name}</b>\n            }}\n        />);\n        actions = [<Button\n            id=\"deleteCancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            type=\"button\"\n            onClick={ onClose }\n        >\n            <FormattedMessage\n                id=\"sources.close\"\n                defaultMessage=\"Close\"\n            />\n        </Button>];\n    } else {\n        body = (<FormattedMessage\n            id=\"sources.removeAuthWarning\"\n            defaultMessage=\"Do you really want to remove {auth} authentication?\"\n            values={{ auth: <b>{schemaAuth.name}</b> }}\n        />);\n        actions = [<Button\n            id=\"deleteSubmit\"\n            key=\"submit\"\n            variant=\"danger\"\n            type=\"button\"\n            onClick={ onRemove }\n        >\n            <FormattedMessage\n                id=\"sources.deleteConfirm\"\n                defaultMessage=\"Remove authentication\"\n            />\n        </Button>,\n        <Button\n            id=\"deleteCancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            type=\"button\"\n            onClick={ onClose }\n        >\n            <FormattedMessage\n                id=\"sources.deleteCancel\"\n                defaultMessage=\"Cancel\"\n            />\n        </Button>];\n    }\n\n    return (\n        <Modal\n            isOpen\n            className=\"ins-c-sources__dialog--warning\"\n            isFooterLeftAligned\n            onClose={onClose}\n            actions={actions}\n            isSmall\n            title={\n                intl.formatMessage({\n                    id: 'sources.deleteAuthTitle',\n                    defaultMessage: 'Remove authentication?',\n                })\n            }\n            header={\n                <Title size=\"2xl\">\n                    <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n                    {intl.formatMessage({\n                        id: 'sources.deleteAppTitle',\n                        defaultMessage: 'Remove authentication?',\n                    })}\n                </Title>\n            }\n        >\n\n            <TextContent>\n                <Text variant={TextVariants.p}>\n                    {body}\n                </Text>\n            </TextContent>\n        </Modal>\n    );\n};\n\nRemoveAuth.propTypes = {\n    appNames: PropTypes.arrayOf(PropTypes.string),\n    schemaAuth: PropTypes.shape({\n        name: PropTypes.string.isRequired\n    }).isRequired,\n    auth: PropTypes.shape({\n        id: PropTypes.string.isRequired\n    }).isRequired\n};\n\nexport default RemoveAuth;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\nimport { Spinner } from '@patternfly/react-core/dist/js/components/Spinner';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport Header from './Header';\nimport { onSubmit } from './onSubmit';\n\nimport { redirectWhenImported } from './importedRedirect';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport reducer, { initialState } from './reducer';\nimport sourceEditContext from './sourceEditContext';\nimport RemoveAuth from './parser/RemoveAuth';\n\nconst SourceEditModal = () => {\n    const [state, setState] = useReducer(reducer, initialState);\n    const history = useHistory();\n    const sourceRedux = useSource();\n    const isLoaded = useIsLoaded();\n\n    const { loading, editing, source, initialValues, schema } = state;\n\n    const intl = useIntl();\n\n    const {\n        sourceTypes,\n        appTypes,\n        sourceTypesLoaded,\n        appTypesLoaded\n    } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (sourceRedux) {\n            doLoadSourceForEdit(sourceRedux).then((source) => {\n                if (source.source.imported) {\n                    redirectWhenImported(dispatch, intl, history, source.source.name);\n                }\n\n                setState({ type: 'setSource', source });\n            });\n        }\n    }, [sourceRedux, isLoaded]);\n\n    const setEdit = (name) => setState({ type: 'setEdit', name });\n\n    useEffect(() => {\n        if (source && appTypesLoaded && sourceTypesLoaded) {\n            const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n            setState({ type: 'createForm', sourceType, source, setEdit, appTypes });\n        }\n    }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n    useEffect(() => {\n        if (source && !loading) {\n            setState({ type: 'refreshSchema', setEdit, appTypes });\n        }\n    }, [editing]);\n\n    const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n    const returnToSources = () => history.push(routes.sources.path);\n\n    if (isLoading) {\n        return (\n            <Modal\n                title={intl.formatMessage({\n                    id: 'sources.editSource',\n                    defaultMessage: 'Edit source.'\n                })}\n                header={<Header />}\n                isOpen={true}\n                isLarge\n                onClose={returnToSources}\n            >\n                <div className=\"ins-c-sources__dialog--spinnerContainer\">\n                    <Spinner />\n                </div>\n            </Modal>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <sourceEditContext.Provider value={{ setState, source }}>\n                {state.isAuthRemoving && <RemoveAuth {...state.isAuthRemoving}/>}\n                <Modal\n                    title={intl.formatMessage({\n                        id: 'sources.editSource',\n                        defaultMessage: 'Edit source.'\n                    })}\n                    header={<Header />}\n                    isOpen={!state.isAuthRemoving}\n                    isLarge\n                    onClose={returnToSources}\n                >\n                    <SourcesFormRenderer\n                        onCancel={returnToSources}\n                        schema={schema}\n                        onSubmit={\n                            (values, formApi) =>\n                                onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, history.push)\n                        }\n                        FormTemplate={(props) => (<FormTemplate\n                            {...props}\n                            formWrapperProps={{\n                                isHorizontal: true\n                            }}\n                            canReset\n                            disableSubmit={['submitting']}\n                            submitLabel={intl.formatMessage({\n                                id: 'sources.save',\n                                defaultMessage: 'Save'\n                            })}\n                        />)}\n                        clearedValue={null}\n                        onReset={() => setState({ type: 'reset' })}\n                        initialValues={initialValues}\n                    />\n                </Modal>\n            </sourceEditContext.Provider>\n        </React.Fragment>\n    );\n};\n\nexport default SourceEditModal;\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const getCmValues = (id) => axiosInstance.get(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`);\n","import { routes } from '../../Routes';\nimport { addMessage } from '../../redux/sources/actions';\n\nexport const redirectWhenImported = (dispatch, intl, history, name) => {\n    dispatch(addMessage(\n        intl.formatMessage({\n            id: 'sources.importSourceCannotEdited',\n            defaultMessage: 'Source { name } is imported.'\n        }, { name }),\n        'danger',\n        intl.formatMessage({\n            id: 'sources.importedSourcesCannotEdited',\n            defaultMessage: 'Imported sources cannot be edited.'\n        }),\n    ));\n    history.push(routes.sources.path);\n};\n"],"sourceRoot":""}