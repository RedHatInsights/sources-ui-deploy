{"version":3,"sources":["webpack:///./src/api/checkSourceStatus.js","webpack:///./src/api/doUpdateSource.js","webpack:///./src/api/patchCmValues.js","webpack:///./src/components/Authentication.js","webpack:///./src/utilities/SourcesFormRenderer.js","webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/components/AddApplication/RemoveAppModal.js","webpack:///./src/components/AddApplication/schema/authenticationSelectionStep.js","webpack:///./src/components/AddApplication/schema/generateFirstAuthStep.js","webpack:///./src/components/AddApplication/AuthTypeSetter.js","webpack:///./src/components/AddApplication/schema/selectAuthenticationStep.js","webpack:///./src/components/AddApplication/AddApplicationSchema.js","webpack:///./src/components/AddApplication/WizardBody.js","webpack:///./src/api/doAttachApp.js","webpack:///./src/components/AddApplication/reducer.js","webpack:///./src/components/AddApplication/AddApplication.js","webpack:///./src/components/SourceRemoveModal/helpers.js","webpack:///./src/utilities/constants.js","webpack:///./src/components/SourceRemoveModal/AppListInRemoval.js","webpack:///./src/components/SourceRemoveModal/SourceRemoveModal.js"],"names":["checkSourceStatus","id","getSourcesApi","checkAvailabilitySource","urlOrHost","formData","url","scheme","host","port","path","u","URL","protocol","replace","hostname","defaultPort","pathname","error","parseUrl","endpoint","doUpdateSource","source","data","promises","push","updateSource","endPointPort","parseInt","endpointData","isNaN","undefined","updateEndpoint","endpoints","authentications","Object","keys","forEach","key","idWithoutPrefix","updateAuthentication","billing_source","credentials","cmDataOut","authentication","axiosInstance","patch","COST_MANAGEMENT_API_BASE","Promise","all","Authentication","rest","formOptions","useFormApi","values","getState","name","match","isEditing","isModified","get","useState","edited","setEdited","firstClick","useRef","mounted","useEffect","current","pristine","doNotRequirePassword","validate","filter","type","validatorTypes","REQUIRED","componentProps","resolveProps","validated","FormGroup","helperText","label","onFocus","isRequired","TextInput","aria-label","value","autoFocus","SourcesFormRenderer","props","FormTemplate","componentMapper","mapperExtension","removeAppSubmit","app","intl","onCancel","dispatch","titleSuccess","formatMessage","defaultMessage","display_name","titleError","removeApplication","RemoveAppModal","useIntl","useHistory","app_id","useParams","useSource","appTypes","useSelector","sources","useDispatch","application","applications","find","to","replaceRouteId","routes","sourcesDetail","appType","application_type_id","dependent_applications","sourceAppsNames","map","dependentApps","appName","Boolean","className","isOpen","onClose","variant","header","headingLevel","size","actions","onClick","component","TextVariants","p","length","apps","authenticationSelectionStep","sourceType","authenticationValues","title","fields","componentTypes","RADIO","options","supported_authentication_types","schema","authtype","nextStep","auth","generateFirstAuthStep","endpointFields","schemaBuilder","additionalStepName","skipEndpoint","customSteps","additionalIncludesStepKeys","stepProps","firstAdditonalStep","additionalFields","AuthTypeSetter","selectedAuthentication","initialValue","setInitialValue","startsWith","change","innerSetter","propTypes","PropTypes","arrayOf","object","SelectAuthenticationDescription","applicationTypeName","authenticationTypeName","TextContent","Text","string","generateAuthSelectionOptions","supportedAuthTypeName","supportedAuthType","applicationTypes","includeUsername","username","includeAppName","selectAuthenticationStep","Content","hideField","ifAppSupported","supported_source_types","includes","isAppAvailable","SUB_FORM","ApplicationSummary","container","description","firstStep","hasMultipleAuthTypes","hasAlreadyType","authenticationFields","imported","appendEndpoint","hidden","hasEndpointStep","appAdditionalSteps","authValues","sourceTypeName","hasAlreadySupportedAuthType","appTypeSetter","TEXT_FIELD","WIZARD","inModal","showTitles","crossroads","buttonLabels","submit","cancel","back","sourceTypes","splice","WizardBodyAttach","step","goToSources","Wizard","steps","isFinishedStep","node","func","removeEmpty","obj","isEmpty","doAttachApp","formApi","authenticationInitialValues","initialValues","a","formState","allFormValues","selectedAuthId","authInitialValues","valuesWithoutAuth","newAddedValues","addedDiff","updatedValues","updatedDiff","newAddedAuthValues","updatedAuthValues","filteredValues","merge","cloneDeep","startDate","Date","sourceId","endpointId","resolve","hasModifiedEndpoint","hasModifiedUrl","createEndpointData","default","source_id","createEndpoint","doCreateApplication","endpointDataOut","applicationDataOut","authenticationDataOut","authenticationData","resource_id","resource_type","createAuthentication","appId","authenticationId","promisesSecondRound","authAppData","application_id","authentication_id","createAuthApp","patchSource","checkAppAvailability","timeout","timeoutedApps","console","deleteApplication","handleError","initialState","state","authenticationsValues","sourceAppsLength","isCancelling","reducer","onSubmit","setState","setSelectedApp","then","loadEntities","FormTemplateWrapper","showFormControls","AddApplication","history","selectedApp","saveSelectedApp","app_type_id","loaded","useIsLoaded","shallowEqual","sourceTypesLoaded","appTypesLoaded","useReducer","document","createElement","applicationType","removeAppAction","listEndpointAuthentications","endpointToUrl","WizardBody","customText","cancelTitle","onSubmitWrapper","onReset","shownStep","onRetry","returnButtonTitle","primaryAction","secondaryActions","target","href","rel","computeSourceStatus","hideSourcesButton","successfulMessage","message","availability_status_error","Button","Component","source_type_id","filteredAppTypes","filterApps","createSchema","onSubmitFinal","Fragment","onStay","onExit","newValues","diff","subscription","debug","clearedValue","idToName","typesWithExtendedText","bodyVariants","count","noApps","withApps","withAppsExtendedText","AppListInRemoval","TextList","TextListItem","array","SourceRemoveModal","backPath","acknowledge","setAcknowledge","returnToSources","removeSource","isDisabled","filteredApps","isDeleting","body","Checkbox","onChange","isChecked","Modal","Title","defaultProps"],"mappings":"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","file":"js/remove.6c9b9d5b914f87f71748.js","sourcesContent":["import { getSourcesApi } from './entities';\n\nexport const checkSourceStatus = (id) =>\n  getSourcesApi()\n    .checkAvailabilitySource(id)\n    .catch(() => {});\n","import { defaultPort } from '../views/formatters';\nimport { getSourcesApi } from './entities';\nimport { patchCmValues } from './patchCmValues';\n\nexport const parseUrl = (url) => {\n  if (url === null) {\n    return {\n      scheme: null,\n      host: null,\n      port: null,\n      path: null,\n    };\n  }\n\n  if (!url) {\n    return {};\n  }\n\n  try {\n    const u = new URL(url);\n    const scheme = u.protocol.replace(/:$/, '');\n\n    return {\n      scheme,\n      host: u.hostname,\n      port: u.port === '' ? defaultPort(scheme) : u.port,\n      path: u.pathname,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const urlOrHost = (formData) =>\n  formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData) => {\n  const promises = [];\n\n  if (formData.source) {\n    promises.push(getSourcesApi().updateSource(source.source.id, formData.source));\n  }\n\n  if (formData.endpoint || formData.url || formData.url === null) {\n    const { scheme, host, port, path } = urlOrHost(formData);\n    const endPointPort = port === null ? null : parseInt(port, 10);\n\n    const endpointData = {\n      scheme,\n      host,\n      path,\n      port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n      ...formData.endpoint,\n    };\n\n    promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData));\n  }\n\n  if (formData.authentications) {\n    Object.keys(formData.authentications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]));\n    });\n  }\n\n  if (formData.billing_source || formData.credentials) {\n    let cmDataOut = {};\n\n    if (formData.credentials) {\n      cmDataOut = {\n        authentication: {\n          credentials: formData.credentials,\n        },\n      };\n    }\n\n    if (formData.billing_source) {\n      cmDataOut = {\n        ...cmDataOut,\n        billing_source: formData.billing_source,\n      };\n    }\n\n    promises.push(patchCmValues(source.source.id, cmDataOut));\n  }\n\n  return Promise.all(promises);\n};\n","import { axiosInstance } from './entities';\nimport { COST_MANAGEMENT_API_BASE } from './constants';\n\nexport const patchCmValues = (id, data) => axiosInstance.patch(`${COST_MANAGEMENT_API_BASE}/sources/${id}/`, data);\n","import React, { useState, useEffect, useRef } from 'react';\nimport get from 'lodash/get';\n\nimport { FormGroup } from '@patternfly/react-core/dist/js/components/Form/FormGroup';\nimport { TextInput } from '@patternfly/react-core/dist/js/components/TextInput/TextInput';\n\nimport TextField from '@data-driven-forms/pf4-component-mapper/dist/cjs/text-field';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\nimport validated from '@redhat-cloud-services/frontend-components-sources/cjs/validated';\n\nconst Authentication = (rest) => {\n  const formOptions = useFormApi();\n  const values = formOptions.getState().values;\n\n  const [authenticationId] = rest?.name?.match(/\\d+/) || [];\n  const isEditing = authenticationId || values.authentication?.id;\n\n  // If there is any value, the field is modified (password is always empty on start)\n  let isModified = get(values, rest.name);\n\n  const [edited, setEdited] = useState(!isEditing || isModified);\n  const firstClick = useRef(true);\n  const mounted = useRef(false);\n\n  useEffect(() => {\n    if (mounted.current) {\n      // reset on restart\n      if (!firstClick.current && formOptions.getState().pristine) {\n        setEdited(false);\n        firstClick.current = true;\n      }\n\n      if (edited) {\n        firstClick.current = false;\n      }\n    }\n  });\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const doNotRequirePassword = rest.validate && rest.validate.filter(({ type }) => type !== validatorTypes.REQUIRED);\n\n  const componentProps = {\n    ...rest,\n    ...(isEditing\n      ? {\n          validate: doNotRequirePassword,\n          resolveProps: validated,\n        }\n      : {}),\n  };\n\n  if (!edited && isEditing) {\n    return (\n      <FormGroup helperText={componentProps.helperText} label={componentProps.label} onFocus={() => setEdited(true)} isRequired>\n        <TextInput aria-label=\"pre-filled-authentication\" value=\"•••••••••••••\" />\n      </FormGroup>\n    );\n  }\n\n  return <TextField {...componentProps} autoFocus={true} />;\n};\n\nexport default Authentication;\n","import React from 'react';\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/dist/cjs/form-renderer';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/dist/cjs/component-mapper';\n\nimport { mapperExtension } from '@redhat-cloud-services/frontend-components-sources/cjs/sourceFormRenderer';\n\nimport Authentication from '../components/Authentication';\n\nconst SourcesFormRenderer = (props) => (\n  <FormRenderer\n    FormTemplate={FormTemplate}\n    componentMapper={{\n      ...componentMapper,\n      ...mapperExtension,\n      authentication: Authentication,\n    }}\n    {...props}\n  />\n);\n\nexport default SourcesFormRenderer;\n","import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { replaceRouteId, routes } from '../../Routes';\n\nconst RemoveAppModal = () => {\n  const intl = useIntl();\n  const { push } = useHistory();\n  const { app_id } = useParams();\n  const source = useSource();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const dispatch = useDispatch();\n\n  const application = source.applications?.find(({ id }) => id === app_id);\n\n  if (!application) {\n    return <Redirect to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const appType = appTypes.find(({ id }) => id === application?.application_type_id);\n\n  const app = {\n    id: app_id,\n    display_name: appType?.display_name,\n    dependent_applications: appType?.dependent_applications,\n    sourceAppsNames: source.applications.map(\n      ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name\n    ),\n  };\n\n  const onCancel = () => push(replaceRouteId(routes.sourcesDetail.path, source.id));\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  const dependentApps = appType?.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return source?.applications?.find(({ application_type_id }) => application_type_id === appType.id) && appType?.display_name;\n    })\n    .filter(Boolean);\n\n  return (\n    <Modal\n      className=\"ins-c-sources__dialog--warning\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> }\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps }\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nexport default RemoveAppModal;\n","import componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nconst authenticationSelectionStep = (sourceType, appType, intl, authenticationValues) => {\n  const nextStep = ({ values: { application, authtype } }) => {\n    if (authtype) {\n      const hasSupportedAuthType = authenticationValues.find((auth) => auth.authtype === authtype);\n\n      if (hasSupportedAuthType) {\n        return 'selectAuthentication';\n      }\n\n      return `${sourceType.name}-${application && application.application_type_id}-${authtype}`;\n    }\n  };\n\n  return {\n    name: `selectAuthType-${appType.id}`,\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication type',\n    }),\n    fields: [\n      {\n        component: componentTypes.RADIO,\n        name: 'authtype',\n        options: appType.supported_authentication_types[sourceType.name].map((type) => ({\n          value: type,\n          label: sourceType.schema.authentication.find((authtype) => authtype.type === type)?.name || 'Unknown type',\n        })),\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n      },\n    ],\n    nextStep,\n  };\n};\n\nexport default authenticationSelectionStep;\n","import * as schemaBuilder from '@redhat-cloud-services/frontend-components-sources/cjs/schemaBuilder';\n\nconst generateFirstAuthStep = (type, appType, endpointFields, authtype, intl) => {\n  let fields = [...endpointFields];\n\n  if (schemaBuilder.shouldUseAppAuth(type.name, authtype, appType.name)) {\n    fields = [];\n  }\n\n  const auth = type.schema.authentication.find(({ type }) => type === authtype);\n\n  const additionalStepName = `${type.name}-${authtype}-${appType.name}-additional-step`;\n\n  const skipEndpoint = schemaBuilder.shouldSkipEndpoint(type.name, authtype, appType.name);\n  const customSteps = schemaBuilder.hasCustomSteps(type.name, authtype, appType.name);\n\n  let nextStep;\n\n  if (schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name).length > 0) {\n    nextStep = additionalStepName;\n  } else if (endpointFields.length === 0 && !skipEndpoint) {\n    nextStep = `${type.name}-endpoint`;\n  } else {\n    nextStep = 'summary';\n  }\n\n  const additionalIncludesStepKeys = schemaBuilder.getAdditionalStepKeys(type.name, authtype, appType.name);\n  const hasCustomStep = schemaBuilder.shouldSkipSelection(type.name, authtype, appType.name);\n\n  let stepProps = {};\n\n  if (hasCustomStep) {\n    const firstAdditonalStep = schemaBuilder.getAdditionalSteps(type.name, authtype, appType.name).find(({ name }) => !name);\n    const additionalFields = schemaBuilder.getAdditionalStepFields(auth.fields, additionalStepName);\n\n    if (firstAdditonalStep.nextStep) {\n      nextStep = firstAdditonalStep.nextStep;\n    } else if (endpointFields.length === 0 && !skipEndpoint && !customSteps) {\n      nextStep = `${type.name}-endpoint`;\n    } else {\n      nextStep = 'summary';\n    }\n\n    stepProps = {\n      ...firstAdditonalStep,\n      fields: [\n        ...fields,\n        ...schemaBuilder.injectAuthFieldsInfo(\n          [...firstAdditonalStep.fields, ...additionalFields],\n          type.name,\n          authtype,\n          appType.name\n        ),\n      ],\n    };\n  }\n\n  return {\n    name: `${type.name}-${appType.id}-${authtype}`,\n    title: intl.formatMessage({\n      id: 'sources.configureCredentials',\n      defaultMessage: 'Configure credentials',\n    }),\n    fields: [\n      ...fields,\n      ...schemaBuilder.getAdditionalAuthFields(type.name, authtype, appType.name),\n      ...schemaBuilder.injectAuthFieldsInfo(\n        schemaBuilder.getNoStepsFields(auth.fields, additionalIncludesStepKeys),\n        type.name,\n        authtype,\n        appType.name\n      ),\n    ],\n    nextStep,\n    ...stepProps,\n  };\n};\n\nexport default generateFirstAuthStep;\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/dist/cjs/use-form-api';\n\nexport const innerSetter = ({ formOptions, authenticationValues, selectedAuthentication }) => {\n  if (!selectedAuthentication.startsWith('new-')) {\n    const authentication = authenticationValues.find(({ id }) => id === selectedAuthentication);\n\n    formOptions.change('authentication', authentication);\n  } else {\n    const authtype = selectedAuthentication.replace('new-', '');\n\n    formOptions.change('authentication', { authtype });\n  }\n};\n\nexport const AuthTypeSetter = ({ authenticationValues }) => {\n  const formOptions = useFormApi();\n\n  const selectedAuthentication = formOptions.getState().values.selectedAuthentication;\n\n  const [initialValue, setInitialValue] = useState(selectedAuthentication);\n\n  useEffect(() => {\n    if (initialValue !== selectedAuthentication) {\n      innerSetter({\n        formOptions,\n        authenticationValues,\n        selectedAuthentication,\n      });\n      setInitialValue(undefined);\n    }\n  }, [selectedAuthentication]);\n\n  return null;\n};\n\nAuthTypeSetter.propTypes = {\n  authenticationValues: PropTypes.arrayOf(PropTypes.object),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { useIntl } from 'react-intl';\n\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/dist/cjs/validator-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { AuthTypeSetter } from '../AuthTypeSetter';\n\nexport const SelectAuthenticationDescription = ({ applicationTypeName, authenticationTypeName }) => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage(\n          {\n            id: 'sources.selectAuthenticationDescription',\n            defaultMessage:\n              'Selected application { applicationTypeName } supports { authenticationTypeName } authentication type. You can use already defined authentication values or define new.',\n          },\n          { applicationTypeName, authenticationTypeName }\n        )}\n      </Text>\n    </TextContent>\n  );\n};\n\nSelectAuthenticationDescription.propTypes = {\n  applicationTypeName: PropTypes.string,\n  authenticationTypeName: PropTypes.string,\n};\n\nexport const generateAuthSelectionOptions = ({\n  authenticationValues,\n  supportedAuthTypeName,\n  supportedAuthType,\n  applicationTypes,\n  source,\n}) =>\n  authenticationValues\n    .filter(({ authtype }) => authtype === supportedAuthType)\n    .map((values) => {\n      const includeUsername = values.username ? `-${values.username}` : '';\n\n      const app = source.applications.find(({ authentications }) => authentications.find(({ id }) => id === values.id));\n      const appType = app && app.application_type_id ? applicationTypes.find(({ id }) => id === app.application_type_id) : '';\n      const includeAppName = appType ? `-${appType.display_name}` : `-unused-${values.id}`;\n      const label = `${supportedAuthTypeName}${includeUsername}${includeAppName}`;\n\n      return {\n        label,\n        value: values.id,\n      };\n    });\n\nconst selectAuthenticationStep = ({ intl, source, authenticationValues, sourceType, app, applicationTypes }) => {\n  const nextStep = ({ values: { authtype, authentication } }) =>\n    `${sourceType.name}-${app.id}-${authtype || authentication?.authtype}`;\n\n  const fields = [\n    {\n      component: 'description',\n      name: 'authtypesetter',\n      Content: AuthTypeSetter,\n      authenticationValues,\n      hideField: true,\n    },\n  ];\n\n  const ifAppSupported = app.supported_source_types.includes(sourceType.name);\n  const isAppAvailable = !source.applications?.find(({ application_type_id }) => application_type_id === app.id);\n\n  if (ifAppSupported && isAppAvailable) {\n    const supportedAuthTypes = get(app, `supported_authentication_types[${sourceType.name}]`, []);\n\n    supportedAuthTypes.forEach((supportedAuthType) => {\n      const hasAvailableAuthentications = authenticationValues.find(({ authtype }) => authtype === supportedAuthType);\n\n      if (hasAvailableAuthentications) {\n        const supportedAuthTypeName = get(sourceType, `schema.authentication`, {}).find(({ type }) => type === supportedAuthType)\n          .name;\n\n        fields.push({\n          component: componentTypes.SUB_FORM,\n          name: `${app.name}-subform`,\n          fields: [\n            {\n              name: `${app.name}-select-authentication-summary`,\n              component: 'description',\n              Content: SelectAuthenticationDescription,\n              applicationTypeName: app.display_name,\n              authenticationTypeName: supportedAuthTypeName,\n            },\n            {\n              component: componentTypes.RADIO,\n              name: 'selectedAuthentication',\n              label: intl.formatMessage({\n                id: 'sources.selectAuthenticationTitle',\n                defaultMessage: 'Select authentication',\n              }),\n              isRequired: true,\n              validate: [{ type: validatorTypes.REQUIRED }],\n              options: [\n                {\n                  label: intl.formatMessage(\n                    {\n                      id: 'sources.selectAuthenticationradioLabel',\n                      defaultMessage: 'Define new { supportedAuthTypeName }',\n                    },\n                    { supportedAuthTypeName }\n                  ),\n                  value: `new-${supportedAuthType}`,\n                },\n                ...generateAuthSelectionOptions({\n                  authenticationValues,\n                  supportedAuthTypeName,\n                  supportedAuthType,\n                  applicationTypes,\n                  source,\n                }),\n              ],\n            },\n          ],\n        });\n      }\n    });\n  }\n\n  return {\n    name: 'selectAuthentication',\n    title: intl.formatMessage({\n      id: 'sources.selectAuthenticationTitle',\n      defaultMessage: 'Select authentication',\n    }),\n    fields,\n    nextStep,\n  };\n};\n\nexport default selectAuthenticationStep;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/dist/cjs/component-types';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\n\nimport { useIntl } from 'react-intl';\nimport * as schemaBuilder from '@redhat-cloud-services/frontend-components-sources/cjs/schemaBuilder';\nimport get from 'lodash/get';\n\nimport authenticationSelectionStep from './schema/authenticationSelectionStep';\nimport generateFirstAuthStep from './schema/generateFirstAuthStep';\nimport selectAuthenticationStep from './schema/selectAuthenticationStep';\n\nexport const ApplicationSummary = () => {\n  const intl = useIntl();\n\n  return (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {intl.formatMessage({\n          id: 'sources.reviewAddAppSummary',\n          defaultMessage:\n            'Review the information below and click Add to add the application to your source. Use the Back button to make changes.',\n        })}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport const hasAlreadySupportedAuthType = (authValues = [], appType, sourceTypeName) =>\n  authValues.find(({ authtype }) => authtype === get(appType, `supported_authentication_types.${sourceTypeName}[0]`));\n\nconst fields = (intl, sourceType, appType, authenticationValues, source, container, title, description, applicationTypes) => {\n  let authenticationFields = [];\n  let firstStep;\n  let hasMultipleAuthTypes;\n  let hasAlreadyType;\n\n  if (!source.imported) {\n    const appendEndpoint = sourceType.schema.endpoint.hidden ? sourceType.schema.endpoint.fields : [];\n    const hasEndpointStep = appendEndpoint.length === 0;\n\n    if (appType.supported_source_types.includes(sourceType.name)) {\n      appType.supported_authentication_types[sourceType.name].forEach((authtype) => {\n        authenticationFields.push(generateFirstAuthStep(sourceType, appType, appendEndpoint, authtype, intl));\n      });\n    }\n\n    sourceType.schema.authentication.forEach((auth) => {\n      if (appType.supported_source_types.includes(sourceType.name)) {\n        const appAdditionalSteps = schemaBuilder.getAdditionalSteps(sourceType.name, auth.type, appType.name);\n\n        if (appAdditionalSteps.length > 0) {\n          authenticationFields.push(\n            ...schemaBuilder.createAdditionalSteps(\n              appAdditionalSteps,\n              sourceType.name,\n              auth.type,\n              hasEndpointStep,\n              auth.fields,\n              appType.name\n            )\n          );\n        }\n      }\n    });\n\n    if (hasEndpointStep) {\n      authenticationFields.push(schemaBuilder.createEndpointStep(sourceType.schema.endpoint, sourceType.name));\n    }\n\n    firstStep = authenticationFields[0];\n\n    hasMultipleAuthTypes = appType?.supported_authentication_types[sourceType.name]?.length > 1;\n\n    if (hasMultipleAuthTypes) {\n      firstStep = authenticationSelectionStep(sourceType, appType, intl, authenticationValues);\n    }\n\n    hasAlreadyType = hasAlreadySupportedAuthType(authenticationValues, appType, sourceType.name);\n\n    if (hasAlreadyType) {\n      firstStep = selectAuthenticationStep({\n        intl,\n        source,\n        authenticationValues,\n        sourceType,\n        app: appType,\n        applicationTypes,\n      });\n    }\n  }\n\n  const appTypeSetter = {\n    component: componentTypes.TEXT_FIELD,\n    name: 'application.application_type_id',\n    hideField: true,\n    initialValue: appType.id,\n  };\n\n  return {\n    fields: [\n      {\n        component: componentTypes.WIZARD,\n        name: 'wizard',\n        title,\n        inModal: true,\n        container,\n        showTitles: true,\n        crossroads: ['selectedAuthentication', 'authtype'],\n        description,\n        buttonLabels: {\n          submit: intl.formatMessage({\n            id: 'sources.add',\n            defaultMessage: 'Add',\n          }),\n          cancel: intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          }),\n          back: intl.formatMessage({\n            id: 'sources.back',\n            defaultMessage: 'Back',\n          }),\n        },\n        fields: [\n          ...(source.imported\n            ? []\n            : [\n                {\n                  ...firstStep,\n                  fields: [...firstStep.fields, appTypeSetter],\n                },\n              ]),\n          {\n            title: intl.formatMessage({\n              id: 'sources.reviewDetails',\n              defaultMessage: 'Review details',\n            }),\n            name: 'summary',\n            fields: [\n              {\n                component: 'description',\n                name: 'description-summary',\n                Content: ApplicationSummary,\n              },\n              {\n                component: 'summary',\n                name: 'summary',\n                sourceTypes: [sourceType],\n                applicationTypes: [appType],\n              },\n              ...(source.imported ? [appTypeSetter] : []),\n            ],\n          },\n          ...(hasAlreadyType || hasMultipleAuthTypes ? authenticationFields : authenticationFields.splice(1)),\n        ],\n      },\n    ],\n  };\n};\n\nexport default fields;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Wizard } from '@patternfly/react-core/dist/js/components/Wizard/Wizard';\n\nconst WizardBodyAttach = ({ step, goToSources, title, description }) => (\n  <Wizard\n    isOpen={true}\n    onClose={goToSources}\n    title={title}\n    description={description}\n    steps={[\n      {\n        name: 'Finish',\n        component: step,\n        isFinishedStep: true,\n      },\n    ]}\n  />\n);\n\nWizardBodyAttach.propTypes = {\n  step: PropTypes.node.isRequired,\n  goToSources: PropTypes.func.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default WizardBodyAttach;\n","import { addedDiff, updatedDiff } from 'deep-object-diff';\nimport { patchSource } from '@redhat-cloud-services/frontend-components-sources/cjs/costManagementAuthentication';\nimport { handleError } from '@redhat-cloud-services/frontend-components-sources/cjs/handleError';\nimport { checkAppAvailability } from '@redhat-cloud-services/frontend-components-sources/cjs/getApplicationStatus';\nimport { timeoutedApps } from '@redhat-cloud-services/frontend-components-sources/cjs/constants';\n\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport { getSourcesApi, doCreateApplication } from './entities';\nimport { urlOrHost } from './doUpdateSource';\n\n// modification of https://stackoverflow.com/a/38340374\nexport const removeEmpty = (obj) => {\n  Object.keys(obj).forEach((key) => {\n    if (obj[key] && typeof obj[key] === 'object') {\n      if (isEmpty(obj[key])) {\n        delete obj[key];\n      } else {\n        removeEmpty(obj[key]);\n      }\n    } else if (typeof obj[key] === 'undefined') {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\n\nexport const doAttachApp = async (values, formApi, authenticationInitialValues, initialValues, appTypes = []) => {\n  let appId;\n\n  const formState = formApi.getState();\n\n  const allFormValues = formState.values;\n\n  const selectedAuthId = allFormValues.authentication?.id;\n\n  const authInitialValues = selectedAuthId && authenticationInitialValues.find(({ id }) => id === selectedAuthId);\n\n  const { authentication, ...valuesWithoutAuth } = values;\n\n  const newAddedValues = addedDiff(initialValues, valuesWithoutAuth);\n  const updatedValues = updatedDiff(initialValues, valuesWithoutAuth);\n  const newAddedAuthValues = addedDiff(authInitialValues, authentication);\n  const updatedAuthValues = updatedDiff(authInitialValues, authentication);\n\n  const filteredValues = removeEmpty({\n    ...merge(cloneDeep(newAddedValues), updatedValues),\n    authentication: {\n      ...merge(cloneDeep(newAddedAuthValues), updatedAuthValues),\n    },\n  });\n\n  try {\n    if (!allFormValues?.source?.id) {\n      throw 'Missing source id';\n    }\n\n    const startDate = new Date();\n    const sourceId = allFormValues.source.id;\n    let endpointId = allFormValues?.endpoint?.id;\n\n    const promises = [];\n\n    if (filteredValues.source && !isEmpty(filteredValues.source)) {\n      promises.push(getSourcesApi().updateSource(sourceId, filteredValues.source));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    const hasModifiedEndpoint = filteredValues.endpoint && !isEmpty(filteredValues.endpoint);\n    const hasModifiedUrl = filteredValues.url && !isEmpty(filteredValues.url);\n\n    if (hasModifiedEndpoint || hasModifiedUrl) {\n      const { scheme, host, port, path } = urlOrHost(filteredValues);\n\n      const endPointPort = parseInt(port, 10);\n\n      const endpointData = removeEmpty({\n        ...filteredValues.endpoint,\n        scheme,\n        host,\n        port: isNaN(endPointPort) ? undefined : endPointPort,\n        path,\n      });\n\n      if (endpointId) {\n        promises.push(getSourcesApi().updateEndpoint(endpointId, endpointData));\n      } else {\n        const createEndpointData = {\n          ...endpointData,\n          default: true,\n          source_id: sourceId,\n        };\n\n        promises.push(getSourcesApi().createEndpoint(createEndpointData));\n      }\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    if (filteredValues.application?.application_type_id) {\n      promises.push(doCreateApplication(sourceId, filteredValues.application.application_type_id));\n    } else {\n      promises.push(Promise.resolve(undefined));\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    const [_sourceDataOut, endpointDataOut, applicationDataOut] = await Promise.all(promises);\n\n    let authenticationDataOut;\n\n    if (filteredValues.authentication && !isEmpty(filteredValues.authentication)) {\n      if (selectedAuthId) {\n        authenticationDataOut = await getSourcesApi().updateAuthentication(selectedAuthId, filteredValues.authentication);\n      } else {\n        const authenticationData = {\n          ...filteredValues.authentication,\n          resource_id: endpointDataOut?.id || applicationDataOut?.id,\n          resource_type: endpointDataOut?.id ? 'Endpoint' : 'Application',\n        };\n\n        authenticationDataOut = await getSourcesApi().createAuthentication(authenticationData);\n      }\n    }\n\n    appId = applicationDataOut?.id;\n\n    const authenticationId = selectedAuthId || authenticationDataOut?.id;\n\n    const promisesSecondRound = [];\n\n    if (applicationDataOut?.id && authenticationId) {\n      const authAppData = {\n        application_id: applicationDataOut.id,\n        authentication_id: authenticationId,\n      };\n\n      promisesSecondRound.push(getSourcesApi().createAuthApp(authAppData));\n    }\n\n    const isAttachingCostManagement = filteredValues.credentials || filteredValues.billing_source;\n    if (isAttachingCostManagement) {\n      const { credentials, billing_source } = filteredValues;\n      let data = {};\n      data = credentials ? { authentication: { credentials } } : {};\n      data = billing_source ? { ...data, billing_source } : data;\n      promisesSecondRound.push(patchSource({ id: sourceId, ...data }));\n    }\n\n    await Promise.all(promisesSecondRound);\n\n    let endpoint;\n    if (endpointId) {\n      endpoint = await checkAppAvailability(endpointId, undefined, undefined, 'getEndpoint', startDate);\n    }\n\n    if (applicationDataOut) {\n      const timeout = timeoutedApps(appTypes).includes(applicationDataOut.application_type_id) ? 10000 : 0;\n      const app = await checkAppAvailability(applicationDataOut.id, timeout);\n\n      return { id: app.id, applications: [app], ...(endpoint && { endpoint: [endpoint] }) };\n    }\n\n    return {};\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    if (appId) {\n      await getSourcesApi().deleteApplication(appId);\n    }\n\n    const errorMessage = await handleError(error);\n    throw errorMessage;\n  }\n};\n","export const initialState = {\n  state: 'loading',\n  error: '',\n  values: {},\n  authenticationsValues: [],\n  sourceAppsLength: 0,\n  initialValues: {},\n  isCancelling: false,\n};\n\nconst reducer = (state, { type, length, authenticationsValues, initialValues, error, values, data, formApi }) => {\n  switch (type) {\n    case 'setSourceAppslength':\n      return {\n        ...state,\n        sourceAppsLength: length,\n      };\n    case 'loadAuthentications':\n      return {\n        ...state,\n        authenticationsValues,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'loadWithoutAuthentications':\n      return {\n        ...state,\n        initialValues,\n        values: {},\n        state: state.state === 'loading' ? 'wizard' : state.state,\n      };\n    case 'reset':\n      return {\n        ...state,\n        state: 'wizard',\n      };\n    case 'submit':\n      return {\n        ...state,\n        values,\n        formApi,\n        state: 'submitting',\n      };\n    case 'finish':\n      return {\n        ...state,\n        state: 'finished',\n        data,\n      };\n    case 'error':\n      return {\n        ...state,\n        state: 'errored',\n        error,\n      };\n    case 'toggleCancelling':\n      return {\n        ...state,\n        isCancelling: !state.isCancelling,\n        ...(values && { values }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useReducer, useEffect, useRef } from 'react';\nimport { useHistory, Link, useParams, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport isEmpty from 'lodash/isEmpty';\n\nimport filterApps from '@redhat-cloud-services/frontend-components-sources/cjs/filterApps';\nimport CloseModal from '@redhat-cloud-services/frontend-components-sources/cjs/CloseModal';\nimport LoadingStep from '@redhat-cloud-services/frontend-components-sources/cjs/LoadingStep';\nimport ErroredStep from '@redhat-cloud-services/frontend-components-sources/cjs/ErroredStep';\nimport FinishedStep from '@redhat-cloud-services/frontend-components-sources/cjs/FinishedStep';\nimport TimeoutStep from '@redhat-cloud-services/frontend-components-sources/cjs/TimeoutStep';\nimport computeSourceStatus from '@redhat-cloud-services/frontend-components-sources/cjs/computeSourceStatus';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/dist/cjs/form-template';\n\nimport { loadEntities } from '../../redux/sources/actions';\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport createSchema from './AddApplicationSchema';\nimport WizardBody from './WizardBody';\n\nimport { getSourcesApi } from '../../api/entities';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { endpointToUrl } from '../../views/formatters';\nimport { routes, replaceRouteId } from '../../Routes';\n\nimport { doAttachApp } from '../../api/doAttachApp';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\n\nimport reducer, { initialState } from './reducer';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { diff } from 'deep-object-diff';\n\nexport const onSubmit = (\n  values,\n  formApi,\n  authenticationInitialValues,\n  dispatch,\n  setState,\n  initialValues,\n  appTypes,\n  setSelectedApp\n) => {\n  setState({ type: 'submit', values, formApi });\n\n  return doAttachApp(values, formApi, authenticationInitialValues, initialValues, appTypes)\n    .then(async (data) => {\n      checkSourceStatus(initialValues.source.id);\n      await dispatch(loadEntities());\n      setSelectedApp({ values: { application: null } });\n      return setState({ type: 'finish', data });\n    })\n    .catch((error) =>\n      setState({\n        type: 'error',\n        error,\n      })\n    );\n};\n\nconst FormTemplateWrapper = (props) => <FormTemplate {...props} showFormControls={false} />;\n\nconst AddApplication = () => {\n  const intl = useIntl();\n  const history = useHistory();\n  const selectedApp = useRef();\n  const saveSelectedApp = ({ values: { application } }) => (selectedApp.current = application);\n  const { app_type_id } = useParams();\n\n  const loaded = useIsLoaded();\n\n  const { appTypes, sourceTypesLoaded, appTypesLoaded, sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const [state, setState] = useReducer(reducer, initialState);\n\n  const container = useRef(document.createElement('div'));\n\n  const applicationType = appTypes.find(({ id }) => id === app_type_id);\n\n  const removeApp = () => {\n    setState({ type: 'reset' });\n\n    return removeAppSubmit(\n      {\n        id: state.data?.id,\n        display_name: appTypes.find(({ id }) => id === state.data?.application_type_id)?.display_name,\n      },\n      intl,\n      undefined,\n      dispatch,\n      source\n    );\n  };\n\n  useEffect(() => {\n    if (source) {\n      // When app is only removed, there is no need to reload values\n      const removeAppAction = state.sourceAppsLength >= source.applications.length && state.sourceAppsLength > 0;\n\n      setState({\n        type: 'setSourceAppslength',\n        length: source.applications.length,\n      });\n\n      if (!removeAppAction) {\n        if (source.endpoints && source.endpoints[0]) {\n          getSourcesApi()\n            .listEndpointAuthentications(source.endpoints[0].id)\n            .then(({ data }) =>\n              setState({\n                type: 'loadAuthentications',\n                authenticationsValues: data,\n                initialValues: {\n                  source,\n                  endpoint: source.endpoints[0],\n                  url: endpointToUrl(source.endpoints[0]),\n                  application: selectedApp.current,\n                },\n                values: {},\n              })\n            );\n        } else {\n          setState({\n            type: 'loadWithoutAuthentications',\n            initialValues: { source, application: selectedApp.current },\n            values: {},\n          });\n        }\n      }\n    }\n  }, [source]);\n\n  const goToSources = () => history.push(replaceRouteId(routes.sourcesDetail.path, source.id));\n\n  const title = intl.formatMessage(\n    {\n      id: 'sources.addApplicationNameTitle',\n      defaultMessage: 'Connect {appName}',\n    },\n    {\n      appName: applicationType?.display_name || 'application',\n    }\n  );\n  const description = intl.formatMessage(\n    {\n      id: 'sources.addApplicationNameDescription',\n      defaultMessage: 'Configure {appName} for this source.',\n    },\n    {\n      appName: applicationType?.display_name || 'application',\n    }\n  );\n\n  if ((!appTypesLoaded || !sourceTypesLoaded || !loaded || state.state === 'loading') && state.state !== 'submitting') {\n    return (\n      <WizardBody\n        goToSources={goToSources}\n        title={title}\n        description={description}\n        step={\n          <LoadingStep\n            customText={intl.formatMessage({\n              id: 'sources.loading',\n              defaultMessage: 'Loading, please wait.',\n            })}\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n          />\n        }\n      />\n    );\n  }\n\n  const onSubmitWrapper = (values, formApi) =>\n    onSubmit(values, formApi, state.authenticationsValues, dispatch, setState, state.initialValues, appTypes, saveSelectedApp);\n\n  if (state.state === 'submitting') {\n    return (\n      <WizardBody\n        title={title}\n        description={description}\n        goToSources={goToSources}\n        step={\n          <LoadingStep\n            cancelTitle={intl.formatMessage({\n              id: 'sources.close',\n              defaultMessage: 'Close',\n            })}\n            onClose={goToSources}\n            customText={intl.formatMessage({\n              id: 'wizard.loadingText defaultMessage=Validating source credentials',\n              defaultMessage: 'Validating source credentials',\n            })}\n          />\n        }\n      />\n    );\n  }\n\n  const onReset = () => setState({ type: 'reset' });\n\n  if (state.state !== 'wizard') {\n    let shownStep;\n\n    if (state.state !== 'finished') {\n      shownStep = (\n        <ErroredStep\n          onRetry={onReset}\n          onClose={goToSources}\n          returnButtonTitle={intl.formatMessage({\n            id: 'sources.retry',\n            defaultMessage: 'Retry',\n          })}\n          primaryAction={() => onSubmitWrapper(state.values, state.formApi)}\n          secondaryActions={\n            <Text\n              component=\"a\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n              rel=\"noopener noreferrer\"\n            >\n              {intl.formatMessage({\n                id: 'wizard.openTicket',\n                defaultMessage: 'Open a support case',\n              })}\n            </Text>\n          }\n        />\n      );\n    } else {\n      switch (computeSourceStatus(state.data)) {\n        default:\n          shownStep = (\n            <FinishedStep\n              title={intl.formatMessage({\n                id: 'sources.configurationSuccessful',\n                defaultMessage: 'Configuration successful',\n              })}\n              hideSourcesButton={true}\n              onClose={goToSources}\n              returnButtonTitle={intl.formatMessage({\n                id: 'sources.exit',\n                defaultMessage: 'Exit',\n              })}\n              successfulMessage={intl.formatMessage({\n                id: 'sources.successAddApp',\n                defaultMessage: 'Your application was successfully added.',\n              })}\n            />\n          );\n          break;\n        case 'unavailable':\n          shownStep = (\n            <ErroredStep\n              onRetry={onReset}\n              onClose={goToSources}\n              message={\n                state.data.applications?.[0]?.availability_status_error ||\n                state.data.endpoint?.[0]?.availability_status_error ||\n                intl.formatMessage({\n                  id: 'wizard.unknownError',\n                  defaultMessage: 'Unknown error',\n                })\n              }\n              title={intl.formatMessage({\n                id: 'sources.configurationSuccessful',\n                defaultMessage: 'Configuration unsuccessful',\n              })}\n              secondaryActions={\n                <Button variant=\"link\" onClick={removeApp}>\n                  {intl.formatMessage({\n                    id: 'wizard.removeApp',\n                    defaultMessage: 'Remove application',\n                  })}\n                </Button>\n              }\n              Component={() => (\n                <Link to={replaceRouteId(routes.sourcesDetail.path, source.id)}>\n                  <Button variant=\"primary\" className=\"pf-u-mt-xl\">\n                    {intl.formatMessage({\n                      id: 'wizard.editSource',\n                      defaultMessage: 'Edit source',\n                    })}\n                  </Button>\n                </Link>\n              )}\n            />\n          );\n          break;\n        case 'timeout':\n          shownStep = (\n            <TimeoutStep\n              returnButtonTitle={intl.formatMessage({\n                id: 'sources.exit',\n                defaultMessage: 'Exit',\n              })}\n              onClose={goToSources}\n            />\n          );\n          break;\n      }\n    }\n\n    return <WizardBody title={title} description={description} goToSources={goToSources} step={shownStep} />;\n  }\n\n  const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n  const sourceTypeName = sourceType && sourceType.name;\n  const filteredAppTypes = appTypes\n    .filter((type) => type.supported_source_types.includes(sourceTypeName))\n    .filter(filterApps)\n    .map((type) => ({\n      value: type.id,\n      label: type.display_name,\n    }));\n\n  if (\n    !applicationType ||\n    source.applications.find(({ application_type_id }) => application_type_id === app_type_id) ||\n    !applicationType.supported_source_types.includes(sourceType.name)\n  ) {\n    return <Redirect to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const schema = createSchema(\n    intl,\n    sourceType,\n    applicationType,\n    state.authenticationsValues,\n    source,\n    container.current,\n    title,\n    description,\n    appTypes\n  );\n\n  const hasAvailableApps = filteredAppTypes.length > 0;\n  const onSubmitFinal = hasAvailableApps ? onSubmitWrapper : goToSources;\n\n  const onStay = () => {\n    container.current.hidden = false;\n    setState({ type: 'toggleCancelling' });\n  };\n\n  const cancelBeforeExit = (values) => {\n    // eslint-disable-next-line no-unused-vars\n    const { application: _a, ...initialValues } = state.initialValues;\n    // eslint-disable-next-line no-unused-vars\n    const { application: _a1, ...newValues } = values;\n\n    const isChanged = !isEmpty(diff(initialValues, newValues));\n\n    if (isChanged) {\n      container.current.hidden = true;\n      setState({ type: 'toggleCancelling', values });\n    } else {\n      goToSources();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CloseModal\n        title={intl.formatMessage({\n          id: 'sources.manageAppsCloseModalTitle',\n          defaultMessage: 'Exit application adding?',\n        })}\n        isOpen={state.isCancelling}\n        onStay={onStay}\n        onExit={goToSources}\n      />\n      <SourcesFormRenderer\n        schema={schema}\n        showFormControls={false}\n        onSubmit={onSubmitFinal}\n        onCancel={cancelBeforeExit}\n        initialValues={state.initialValues}\n        subscription={{ values: true }}\n        debug={saveSelectedApp}\n        clearedValue={null}\n        FormTemplate={FormTemplateWrapper}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default AddApplication;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { SATELLITE_NAME, ANSIBLE_TOWER_NAME } from '../../utilities/constants';\n\nexport const idToName = (id, appTypes) => appTypes.find((app) => app.id === id)?.display_name || 'Unknown';\n\nexport const typesWithExtendedText = [SATELLITE_NAME, ANSIBLE_TOWER_NAME];\n\nexport const bodyVariants = (variant, { name, count }) =>\n  ({\n    noApps: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyNoApps\"\n        defaultMessage=\"Removing { name } will permanently delete all data collected.\"\n        values={{\n          name: <b>{name}</b>,\n        }}\n      />\n    ),\n    withApps: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyWithApps\"\n        defaultMessage={`Removing { name } detaches the following\n        connected {count, plural, one {application} other {applications}} from this source:`}\n        values={{\n          name: <b>{name}</b>,\n          count,\n        }}\n      />\n    ),\n    withAppsExtendedText: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyWithAppsExtended\"\n        defaultMessage={`Removing { name } permanently deletes all collected data and detaches the following\n    connected {count, plural, one {application} other {applications}}:`}\n        values={{\n          name: <b>{name}</b>,\n          count,\n        }}\n      />\n    ),\n  }[variant]);\n","export const SATELLITE_NAME = 'satellite';\nexport const ANSIBLE_TOWER_NAME = 'ansible-tower';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport { TextList } from '@patternfly/react-core/dist/js/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/js/components/Text/TextListItem';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport { idToName } from './helpers';\n\nconst AppListInRemoval = ({ applications }) => {\n  const { appTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  if (applications.length === 1) {\n    return <Text variant={TextVariants.p}>{idToName(applications[0].application_type_id, appTypes)}</Text>;\n  }\n\n  return (\n    <TextList>\n      {applications.map(({ id, application_type_id }) => (\n        <TextListItem key={id}>{idToName(application_type_id, appTypes)}</TextListItem>\n      ))}\n    </TextList>\n  );\n};\n\nAppListInRemoval.propTypes = {\n  applications: PropTypes.array,\n};\n\nexport default AppListInRemoval;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { removeSource } from '../../redux/sources/actions';\nimport { useSource } from '../../hooks/useSource';\nimport { routes } from '../../Routes';\n\nimport { bodyVariants, typesWithExtendedText } from './helpers';\nimport AppListInRemoval from './AppListInRemoval';\n\nconst SourceRemoveModal = ({ backPath }) => {\n  const { push } = useHistory();\n\n  const [acknowledge, setAcknowledge] = useState(false);\n\n  const intl = useIntl();\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const { sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const returnToSources = () => push(backPath);\n\n  const onSubmit = () => {\n    push(routes.sources.path);\n    dispatch(\n      removeSource(\n        source.id,\n        intl.formatMessage(\n          {\n            id: 'sources.notificationDeleteMessage',\n            defaultMessage: `{title} was deleted successfully.`,\n          },\n          { title: source.name }\n        )\n      )\n    );\n  };\n\n  const actions = [\n    <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit} isDisabled={!acknowledge}>\n      {intl.formatMessage({\n        id: 'sources.deleteConfirm',\n        defaultMessage: 'Remove source and its data',\n      })}\n    </Button>,\n    <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={returnToSources}>\n      {intl.formatMessage({\n        id: 'sources.deleteCancel',\n        defaultMessage: 'Cancel',\n      })}\n    </Button>,\n  ];\n\n  const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id)?.name;\n\n  const filteredApps = source.applications.filter(({ isDeleting }) => !isDeleting);\n\n  const body = (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {filteredApps.length === 0 && bodyVariants('noApps', { name: source.name })}\n        {filteredApps.length > 0 &&\n          typesWithExtendedText.includes(sourceType) &&\n          bodyVariants('withApps', {\n            name: source.name,\n            count: filteredApps.length,\n          })}\n        {filteredApps.length > 0 &&\n          !typesWithExtendedText.includes(sourceType) &&\n          bodyVariants('withAppsExtendedText', {\n            name: source.name,\n            count: filteredApps.length,\n          })}\n      </Text>\n      {filteredApps.length > 0 && <AppListInRemoval applications={filteredApps} />}\n      <Checkbox\n        label={intl.formatMessage({\n          id: 'sources.deleteCheckboxTitle',\n          defaultMessage: `I acknowledge that this action cannot be undone.`,\n        })}\n        onChange={() => setAcknowledge((value) => !value)}\n        aria-label={intl.formatMessage({\n          id: 'sources.deleteCheckboxTitle',\n          defaultMessage: `I acknowledge that this action cannot be undone.`,\n        })}\n        id=\"acknowledgeDelete\"\n        name=\"acknowledgeDelete\"\n        isChecked={acknowledge}\n      />\n    </TextContent>\n  );\n\n  return (\n    <Modal\n      className=\"ins-c-sources__dialog--warning\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteTitle',\n        defaultMessage: `Remove source?`,\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteTitle',\n            defaultMessage: `Remove source?`,\n          })}\n        </Title>\n      }\n      isOpen\n      variant=\"small\"\n      onClose={returnToSources}\n      actions={actions}\n    >\n      {body}\n    </Modal>\n  );\n};\n\nSourceRemoveModal.propTypes = {\n  backPath: PropTypes.string,\n};\n\nSourceRemoveModal.defaultProps = {\n  backPath: routes.sources.path,\n};\n\nexport default SourceRemoveModal;\n"],"sourceRoot":""}