{"version":3,"sources":["webpack:///./src/components/SourceRemoveModal/helpers.js","webpack:///./src/utilities/constants.js","webpack:///./src/components/SourceRemoveModal/AppListInRemoval.js","webpack:///./src/components/SourceRemoveModal/SourceRemoveModal.js"],"names":["idToName","id","appTypes","find","app","display_name","typesWithExtendedText","bodyVariants","variant","name","count","noApps","defaultMessage","values","withApps","withAppsExtendedText","AppListInRemoval","applications","useSelector","sources","shallowEqual","length","Text","TextVariants","p","application_type_id","TextList","map","TextListItem","key","propTypes","PropTypes","array","SourceRemoveModal","push","useHistory","useState","acknowledge","setAcknowledge","intl","useIntl","source","useSource","dispatch","useDispatch","sourceTypes","returnToSources","routes","path","actions","Button","type","onClick","removeSource","formatMessage","title","isDisabled","sourceType","source_type_id","filteredApps","filter","isDeleting","body","TextContent","component","includes","Checkbox","label","onChange","value","aria-label","isChecked","Modal","className","header","Title","headingLevel","size","isOpen","onClose"],"mappings":"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","file":"js/remove.68049448aaa0b0493102.js","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { SATELLITE_NAME, ANSIBLE_TOWER_NAME } from '../../utilities/constants';\n\nexport const idToName = (id, appTypes) => appTypes.find((app) => app.id === id)?.display_name || 'Unknown';\n\nexport const typesWithExtendedText = [SATELLITE_NAME, ANSIBLE_TOWER_NAME];\n\nexport const bodyVariants = (variant, { name, count }) => ({\n    noApps: <FormattedMessage\n        id=\"sources.deleteTextBodyNoApps\"\n        defaultMessage='Removing { name } will permanently delete all data collected.'\n        values={{\n            name: <b>\n                {name}\n            </b>\n        }}\n    />,\n    withApps: <FormattedMessage\n        id=\"sources.deleteTextBodyWithApps\"\n        defaultMessage={`Removing { name } detaches the following\n        connected {count, plural, one {application} other {applications}} from this source:`}\n        values={{\n            name: <b>\n                {name}\n            </b>,\n            count\n        }}\n    />,\n    withAppsExtendedText: <FormattedMessage\n        id=\"sources.deleteTextBodyWithAppsExtended\"\n        defaultMessage={`Removing { name } permanently deletes all collected data and detaches the following\n    connected {count, plural, one {application} other {applications}}:`}\n        values={{\n            name: <b>\n                {name}\n            </b>,\n            count\n        }}\n    />,\n}[variant]);\n","export const SATELLITE_NAME = 'satellite';\nexport const ANSIBLE_TOWER_NAME = 'ansible-tower';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport { TextList } from '@patternfly/react-core/dist/js/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/js/components/Text/TextListItem';\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport { idToName } from './helpers';\n\nconst AppListInRemoval = ({ applications }) => {\n    const { appTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n    if (applications.length === 1) {\n        return (<Text variant={TextVariants.p} >\n            {idToName(applications[0].application_type_id, appTypes)}\n        </Text>);\n    }\n\n    return (<TextList>\n        {applications.map(({ id, application_type_id }) => (<TextListItem key={id}>\n            {idToName(application_type_id, appTypes)}\n        </TextListItem>))}\n    </TextList>);\n};\n\nAppListInRemoval.propTypes = {\n    applications: PropTypes.array\n};\n\nexport default AppListInRemoval;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Checkbox } from '@patternfly/react-core/dist/js/components/Checkbox/Checkbox';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { removeSource } from '../../redux/sources/actions';\nimport { useSource } from '../../hooks/useSource';\nimport { routes } from '../../Routes';\n\nimport { bodyVariants, typesWithExtendedText } from './helpers';\nimport AppListInRemoval from './AppListInRemoval';\n\nconst SourceRemoveModal = () => {\n    const { push } = useHistory();\n\n    const [acknowledge, setAcknowledge] = useState(false);\n\n    const intl = useIntl();\n    const source = useSource();\n\n    const dispatch = useDispatch();\n\n    const { sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n    const returnToSources = () => push(routes.sources.path);\n\n    const onSubmit = () => {\n        returnToSources();\n        dispatch(removeSource(source.id, intl.formatMessage({\n            id: 'sources.notificationDeleteMessage',\n            defaultMessage: `{title} was deleted successfully.`\n        }, { title: source.name })));\n    };\n\n    const actions = [\n        <Button\n            id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={ onSubmit } isDisabled={!acknowledge}\n        >\n            { intl.formatMessage({\n                id: 'sources.deleteConfirm',\n                defaultMessage: 'Remove source and its data'\n            }) }\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={ returnToSources }>\n            { intl.formatMessage({\n                id: 'sources.deleteCancel',\n                defaultMessage: 'Cancel'\n            }) }\n        </Button>\n    ];\n\n    const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id)?.name;\n\n    const filteredApps = source.applications.filter(({ isDeleting }) => !isDeleting);\n\n    const body = (\n        <TextContent>\n            <Text component={ TextVariants.p }>\n                {filteredApps.length === 0 && bodyVariants('noApps', { name: source.name })}\n                {filteredApps.length > 0 &&\n                typesWithExtendedText.includes(sourceType) &&\n                bodyVariants('withApps', { name: source.name, count: filteredApps.length })}\n                {filteredApps.length > 0 &&\n                !typesWithExtendedText.includes(sourceType) &&\n                bodyVariants('withAppsExtendedText', { name: source.name, count: filteredApps.length })}\n            </Text>\n            {filteredApps.length > 0 &&\n            <AppListInRemoval applications={filteredApps} />}\n            <Checkbox\n                label={intl.formatMessage({\n                    id: 'sources.deleteCheckboxTitle',\n                    defaultMessage: `I acknowledge that this action cannot be undone.`\n                })}\n                onChange={() => setAcknowledge((value) => !value)}\n                aria-label={\n                    intl.formatMessage({\n                        id: 'sources.deleteCheckboxTitle',\n                        defaultMessage: `I acknowledge that this action cannot be undone.`\n                    })\n                }\n                id=\"acknowledgeDelete\"\n                name=\"acknowledgeDelete\"\n                isChecked={acknowledge}\n            />\n        </TextContent>\n    );\n\n    return (\n        <Modal className=\"ins-c-sources__dialog--warning\"\n            aria-label={\n                intl.formatMessage({\n                    id: 'sources.deleteTitle',\n                    defaultMessage: `Remove source?`\n                })\n            }\n            header={\n                <Title headingLevel=\"h1\" size=\"2xl\">\n                    <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n                    {intl.formatMessage({\n                        id: 'sources.deleteTitle',\n                        defaultMessage: `Remove source?`\n                    })}\n                </Title>\n            }\n            isOpen\n            variant=\"small\"\n            onClose={ returnToSources }\n            actions={ actions }\n        >\n            { body }\n        </Modal>\n    );\n};\n\nexport default SourceRemoveModal;\n"],"sourceRoot":""}