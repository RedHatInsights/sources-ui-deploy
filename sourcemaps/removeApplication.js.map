{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./src/components/AddApplication/removeAppSubmit.js","webpack:///./src/components/AddApplication/RemoveAppModal.js"],"names":["exports","__esModule","ExclamationTriangleIconConfig","name","height","width","svgPath","yOffset","xOffset","ExclamationTriangleIcon","createIcon","removeAppSubmit","app","intl","onCancel","dispatch","source","titleSuccess","formatMessage","id","defaultMessage","display_name","titleError","removeApplication","RemoveAppModal","useIntl","push","useHistory","app_id","useParams","useSource","appTypes","useSelector","sources","useDispatch","application","applications","find","to","replaceRouteId","routes","sourcesDetail","path","appType","application_type_id","dependent_applications","sourceAppsNames","map","dependentApps","appName","filter","Boolean","className","isOpen","onClose","variant","aria-label","header","headingLevel","size","actions","key","type","onClick","component","TextVariants","p","length","apps"],"mappings":"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","file":"js/removeApplication.99132a2d6c9cb8f979dd.js","sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","import { removeApplication } from '../../redux/sources/actions';\n\nconst removeAppSubmit = (app, intl, onCancel, dispatch, source) => {\n  const titleSuccess = intl.formatMessage(\n    {\n      id: 'sources.removeAppWarning',\n      defaultMessage: `{ name } was removed from this source.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  const titleError = intl.formatMessage(\n    {\n      id: 'sources.removeAppError',\n      defaultMessage: `Removing of { name } application from this source was unsuccessful.`,\n    },\n    {\n      name: app.display_name,\n    }\n  );\n  onCancel && onCancel();\n  return dispatch(removeApplication(app.id, source.id, titleSuccess, titleError));\n};\n\nexport default removeAppSubmit;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Redirect, useHistory, useParams } from 'react-router-dom';\n\nimport { Text, TextVariants } from '@patternfly/react-core/dist/js/components/Text/Text';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Modal } from '@patternfly/react-core/dist/js/components/Modal/Modal';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nimport { useSource } from '../../hooks/useSource';\n\nimport removeAppSubmit from './removeAppSubmit';\nimport { replaceRouteId, routes } from '../../Routes';\n\nconst RemoveAppModal = () => {\n  const intl = useIntl();\n  const { push } = useHistory();\n  const { app_id } = useParams();\n  const source = useSource();\n\n  const appTypes = useSelector(({ sources }) => sources.appTypes);\n  const dispatch = useDispatch();\n\n  const application = source.applications?.find(({ id }) => id === app_id);\n\n  if (!application) {\n    return <Redirect to={replaceRouteId(routes.sourcesDetail.path, source.id)} />;\n  }\n\n  const appType = appTypes.find(({ id }) => id === application?.application_type_id);\n\n  const app = {\n    id: app_id,\n    display_name: appType?.display_name,\n    dependent_applications: appType?.dependent_applications,\n    sourceAppsNames: source.applications.map(\n      ({ application_type_id }) => appTypes.find(({ id }) => id === application_type_id)?.display_name\n    ),\n  };\n\n  const onCancel = () => push(replaceRouteId(routes.sourcesDetail.path, source.id));\n  const onSubmit = () => removeAppSubmit(app, intl, onCancel, dispatch, source);\n\n  const dependentApps = appType?.dependent_applications\n    .map((appName) => {\n      const appType = appTypes.find(({ name }) => name === appName);\n\n      return source?.applications?.find(({ application_type_id }) => application_type_id === appType.id) && appType?.display_name;\n    })\n    .filter(Boolean);\n\n  return (\n    <Modal\n      className=\"ins-c-sources__dialog--warning\"\n      isOpen={true}\n      onClose={onCancel}\n      variant=\"small\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteAppTitle',\n        defaultMessage: 'Remove application?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert ins-c-source__delete-icon pf-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteAppTitle',\n            defaultMessage: 'Remove application?',\n          })}\n        </Title>\n      }\n      actions={[\n        <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit}>\n          {intl.formatMessage({\n            id: 'sources.remove',\n            defaultMessage: 'Remove',\n          })}\n        </Button>,\n        <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={onCancel}>\n          {intl.formatMessage({\n            id: 'sources.cancel',\n            defaultMessage: 'Cancel',\n          })}\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <Text component={TextVariants.p}>\n          {intl.formatMessage(\n            {\n              id: 'sources.deleteAppWarning',\n              defaultMessage: '{ appName } will be disconnected from this source.',\n            },\n            { appName: <b key=\"b\">{app.display_name}</b> }\n          )}\n        </Text>\n        {dependentApps.length > 0 && (\n          <Text component={TextVariants.p}>\n            {intl.formatMessage(\n              {\n                id: 'sources.deleteAppDetails',\n                defaultMessage: 'This change will affect these applications: { apps }.',\n              },\n              { apps: dependentApps }\n            )}\n          </Text>\n        )}\n      </TextContent>\n    </Modal>\n  );\n};\n\nexport default RemoveAppModal;\n"],"sourceRoot":""}