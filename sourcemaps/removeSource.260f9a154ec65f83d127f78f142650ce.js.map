{"version":3,"file":"js/removeSource.2191e75afb46df7112ca.js","mappings":"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","sources":["webpack:///./src/components/SourceRemoveModal/helpers.js","webpack:///./src/components/SourceRemoveModal/AppListInRemoval.js","webpack:///./src/components/SourceRemoveModal/SourceRemoveModal.js","webpack:///./src/hooks/useAppNavigate.js"],"sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport { ANSIBLE_TOWER_NAME, SATELLITE_NAME } from '../../utilities/constants';\n\nexport const idToName = (id, appTypes) => appTypes.find((app) => app.id === id)?.display_name || 'Unknown';\n\nexport const typesWithExtendedText = [SATELLITE_NAME, ANSIBLE_TOWER_NAME];\n\nexport const bodyVariants = (variant, { name, count }) =>\n  ({\n    noApps: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyNoApps\"\n        defaultMessage=\"Removing { name } will permanently delete all data collected.\"\n        values={{\n          name: <b>{name}</b>,\n        }}\n      />\n    ),\n    withApps: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyWithApps\"\n        defaultMessage={`Removing { name } detaches the following\n        connected {count, plural, one {application} other {applications}} from this source:`}\n        values={{\n          name: <b>{name}</b>,\n          count,\n        }}\n      />\n    ),\n    withAppsExtendedText: (\n      <FormattedMessage\n        id=\"sources.deleteTextBodyWithAppsExtended\"\n        defaultMessage={`Removing { name } permanently deletes all collected data and detaches the following\n    connected {count, plural, one {application} other {applications}}:`}\n        values={{\n          name: <b>{name}</b>,\n          count,\n        }}\n      />\n    ),\n  })[variant];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useSelector } from 'react-redux';\n\nimport { Text, TextList, TextListItem, TextVariants } from '@patternfly/react-core';\n\nimport { idToName } from './helpers';\n\nconst AppListInRemoval = ({ applications }) => {\n  const { appTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  if (applications.length === 1) {\n    return <Text variant={TextVariants.p}>{idToName(applications[0].application_type_id, appTypes)}</Text>;\n  }\n\n  return (\n    <TextList>\n      {applications.map(({ id, application_type_id }) => (\n        <TextListItem key={id}>{idToName(application_type_id, appTypes)}</TextListItem>\n      ))}\n    </TextList>\n  );\n};\n\nAppListInRemoval.propTypes = {\n  applications: PropTypes.array,\n};\n\nexport default AppListInRemoval;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Button, Checkbox, Modal, Text, TextContent, TextVariants, Title } from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\n\nimport { removeSource } from '../../redux/sources/actions';\nimport { useSource } from '../../hooks/useSource';\nimport { useAppNavigate } from '../../hooks/useAppNavigate';\nimport { routes } from '../../Routing';\n\nimport { bodyVariants, typesWithExtendedText } from './helpers';\nimport AppListInRemoval from './AppListInRemoval';\n\nconst SourceRemoveModal = ({ backPath = '/' }) => {\n  const appNavigate = useAppNavigate();\n\n  const [acknowledge, setAcknowledge] = useState(false);\n\n  const intl = useIntl();\n  const source = useSource();\n\n  const dispatch = useDispatch();\n\n  const { sourceTypes } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const returnToSources = () => appNavigate(backPath);\n\n  const onSubmit = () => {\n    appNavigate(routes.sources.path);\n    dispatch(\n      removeSource(\n        source.id,\n        intl.formatMessage(\n          {\n            id: 'sources.notificationDeleteMessage',\n            defaultMessage: `{title} was deleted successfully.`,\n          },\n          { title: source.name },\n        ),\n      ),\n    );\n  };\n\n  const actions = [\n    <Button id=\"deleteSubmit\" key=\"submit\" variant=\"danger\" type=\"button\" onClick={onSubmit} isDisabled={!acknowledge}>\n      {intl.formatMessage({\n        id: 'sources.deleteConfirm',\n        defaultMessage: 'Remove integration and its data',\n      })}\n    </Button>,\n    <Button id=\"deleteCancel\" key=\"cancel\" variant=\"link\" type=\"button\" onClick={returnToSources}>\n      {intl.formatMessage({\n        id: 'sources.deleteCancel',\n        defaultMessage: 'Cancel',\n      })}\n    </Button>,\n  ];\n\n  const sourceType = sourceTypes.find(({ id }) => id === source.source_type_id)?.name;\n\n  const filteredApps = source.applications.filter(({ isDeleting }) => !isDeleting);\n\n  const body = (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        {filteredApps.length === 0 && bodyVariants('noApps', { name: source.name })}\n        {filteredApps.length > 0 &&\n          typesWithExtendedText.includes(sourceType) &&\n          bodyVariants('withApps', {\n            name: source.name,\n            count: filteredApps.length,\n          })}\n        {filteredApps.length > 0 &&\n          !typesWithExtendedText.includes(sourceType) &&\n          bodyVariants('withAppsExtendedText', {\n            name: source.name,\n            count: filteredApps.length,\n          })}\n      </Text>\n      {filteredApps.length > 0 && <AppListInRemoval applications={filteredApps} />}\n      <Checkbox\n        label={intl.formatMessage({\n          id: 'sources.deleteCheckboxTitle',\n          defaultMessage: `I acknowledge that this action cannot be undone.`,\n        })}\n        onChange={() => setAcknowledge((value) => !value)}\n        aria-label={intl.formatMessage({\n          id: 'sources.deleteCheckboxTitle',\n          defaultMessage: `I acknowledge that this action cannot be undone.`,\n        })}\n        id=\"acknowledgeDelete\"\n        name=\"acknowledgeDelete\"\n        isChecked={acknowledge}\n      />\n    </TextContent>\n  );\n\n  return (\n    <Modal\n      className=\"sources\"\n      aria-label={intl.formatMessage({\n        id: 'sources.deleteTitle',\n        defaultMessage: 'Remove integration?',\n      })}\n      header={\n        <Title headingLevel=\"h1\" size=\"2xl\" className=\"sources\">\n          <ExclamationTriangleIcon size=\"sm\" className=\"ins-m-alert src-c-delete-icon pf-v5-u-mr-sm\" />\n          {intl.formatMessage({\n            id: 'sources.deleteTitle',\n            defaultMessage: 'Remove integration?',\n          })}\n        </Title>\n      }\n      isOpen\n      variant=\"small\"\n      onClose={returnToSources}\n      actions={actions}\n    >\n      {body}\n    </Modal>\n  );\n};\n\nSourceRemoveModal.propTypes = {\n  backPath: PropTypes.string,\n};\n\nexport default SourceRemoveModal;\n","import { useNavigate } from 'react-router-dom';\nimport { linkBasename, mergeToBasename } from '../utilities/utils';\n\nexport const useAppNavigate = () => {\n  const navigate = useNavigate();\n\n  return (to, options) => {\n    return navigate(mergeToBasename(to, linkBasename), options);\n  };\n};\n"],"names":["idToName","id","appTypes","find","app","display_name","typesWithExtendedText","bodyVariants","variant","name","count","noApps","defaultMessage","values","withApps","withAppsExtendedText","AppListInRemoval","applications","sources","length","Text","TextVariants","p","application_type_id","TextList","map","TextListItem","key","propTypes","SourceRemoveModal","backPath","appNavigate","useAppNavigate","acknowledge","setAcknowledge","useState","intl","source","useSource","dispatch","sourceTypes","returnToSources","actions","Button","type","onClick","path","formatMessage","title","isDisabled","sourceType","source_type_id","filteredApps","filter","isDeleting","body","TextContent","component","includes","Checkbox","label","onChange","value","isChecked","Modal","className","header","Title","headingLevel","size","isOpen","onClose","navigate","useNavigate","to","options"],"sourceRoot":""}