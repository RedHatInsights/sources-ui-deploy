{"version":3,"sources":["webpack:///./src/api/doUpdateSource.js","webpack:///./src/components/SourceDetail/AvailabilityChecker.js","webpack:///./src/components/SourceDetail/SourceSummaryCard.js","webpack:///./src/components/SourceDetail/ApplicationKebab.js","webpack:///./src/components/SourceDetail/ApplicationsCard.js","webpack:///./src/components/SourceDetail/NoApplications.js","webpack:///./src/components/SourceDetail/NoPermissions.js","webpack:///./src/api/doLoadSourceForEdit.js","webpack:///./src/components/SourceEditForm/helpers.js","webpack:///./src/components/SourceEditForm/onSubmit.js","webpack:///./src/components/SourceEditForm/parser/parseSourceToSchema.js","webpack:///./src/components/SourceEditForm/reducer.js","webpack:///./src/components/SourceEditForm/SubmittingModal.js","webpack:///./src/components/SourceEditForm/ErroredModal.js","webpack:///./src/components/SourceEditForm/SourceEditModal.js","webpack:///./src/components/SourceDetail/ApplicationResourcesCard.js","webpack:///./src/components/SourceDetail/Breadcrumbs.js","webpack:///./src/components/SourceDetail/SourceKebab.js","webpack:///./src/components/SourceDetail/DetailHeader.js","webpack:///./src/components/SourceDetail/ResourcesTable.js","webpack:///./src/pages/Detail.js"],"names":["urlOrHost","formData","url","scheme","host","port","path","u","URL","protocol","replace","hostname","defaultPort","pathname","error","parseUrl","endpoint","doUpdateSource","source","values","promises","push","getSourcesApi","updateSource","id","endPointPort","parseInt","endpointData","isNaN","undefined","updateEndpoint","endpoints","authentications","Object","keys","forEach","key","idWithoutPrefix","updateAuthentication","applications","updateApplication","extra","Promise","all","useSource","intl","useIntl","dispatch","useDispatch","useState","loading","setLoading","Button","variant","aria-label","formatMessage","defaultMessage","onClick","checkSourceStatus","addMessage","title","description","isDisabled","Spinner","size","DescriptionListItem","term","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","propTypes","PropTypes","awsAccountNumber","sourceTypes","useSelector","sources","shallowEqual","type","find","source_type_id","name","arnType","authtype","includes","username","match","Card","className","CardTitle","CardBody","DescriptionList","columnModifier","default","sourceTypeFormatter","last_checked_at","last_available_at","dateFormatter","created_at","updated_at","app_creation_workflow","configurationModeFormatter","sourceType","ApplicationKebab","app","removeApp","addApp","isOpen","setOpen","useHistory","hasRightAccess","useHasWritePermissions","wrappedFunction","func","disabledProps","tooltip","pausedButton","paused_at","DropdownItem","removedButton","replaceRouteId","routes","Dropdown","isPlain","position","dropdownItems","toggle","KebabToggle","onToggle","open","isRequired","initialState","selectedApps","reducer","state","addResumeNotification","typeId","appTypes","appName","display_name","customIcon","addPausedNotification","useReducer","stateDispatch","sourceTypeName","filteredAppTypes","filter","supported_source_types","filterApps","isPaused","unpauseApplication","loadEntities","pauseApplication","isSuperKey","doCreateApplication","source_id","application_type_id","map","connectedApp","APP_NAMES","descriptionMapper","appExist","Boolean","pausedApp","isChecked","FormGroup","Switch","label","isDeleting","onChange","value","showStatusText","EmptyState","EmptyStateIcon","icon","PlusCircleIcon","Title","headingLevel","EmptyStateBody","PrivateIcon","doLoadSourceForEdit","showSource","listSourceEndpoints","doLoadApplicationsForEdit","then","sourceData","data","apps","basicValues","addToApp","appAuthenticationIds","auth","showAuthentication","length","appAuths","index","listEndpointAuthentications","CHECK_ENDPOINT_COMMAND","selectOnlyEditedValues","editing","filteredValues","set","get","prepareInitialValues","rest","auhenticationsFinal","mergeAuths","reduce","acc","curr","endpointToUrl","applicationsFinal","source_type","addIfUnique","array","item","getEditedApplications","editedApplications","editedId","startsWith","resource_type","onSubmit","setState","startDate","Date","messages","checkApplications","checkInfo","checkAppAvailability","statusResults","availability_status","availability_status_error","AVAILABLE","UNAVAILABLE","IN_PROGRESS","parseSourceToSchema","fields","applicationsFields","initialValues","schema","isSubmitting","initialLoad","submitError","submitMessages","product_name","LoadingStep","customText","ErroredModal","onRetry","ErroredStep","onClose","secondaryActions","Text","component","target","href","rel","returnButtonTitle","sourceRedux","isLoaded","useIsLoaded","message","sourceTypesLoaded","appTypesLoaded","useEffect","application","pausedAppAlert","prepareMessages","isLoading","Bullseye","SourcesFormRenderer","formApi","getState","dirtyFields","FormTemplate","props","canReset","submitLabel","disableSubmit","clearedValue","Breadcrumb","BreadcrumbItem","Link","to","isActive","PageHeader","Flex","FlexItem","availabilityFormatter","align","TextContent","createColumns","createRows","appType","applicationRows","authenticationFields","flatMap","x","field","hideField","activeTab","columns","applicationsRows","Tabs","isBox","activeKey","onSelect","_e","Tab","eventKey","TabTitleText","Table","cells","rows","TableHeader","TableBody","ResourcesEmptyState","applicationName","SourceRemoveModal","lazy","AddApplication","RemoveAppModal","SourceRenameModal","EditCredentials","RedirectNoId","superKey","Suspense","fallback","CustomRoute","exact","route","Component","componentProps","backPath","Grid","GridItem","md"],"mappings":"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","file":"js/sourceDetail.a88ffe9aa86cd63337e6.js","sourcesContent":["import { defaultPort } from '../views/formatters';\nimport { getSourcesApi } from './entities';\n\nexport const parseUrl = (url) => {\n  if (url === null) {\n    return {\n      scheme: null,\n      host: null,\n      port: null,\n      path: null,\n    };\n  }\n\n  if (!url) {\n    return {};\n  }\n\n  try {\n    const u = new URL(url);\n    const scheme = u.protocol.replace(/:$/, '');\n\n    return {\n      scheme,\n      host: u.hostname,\n      port: u.port === '' ? defaultPort(scheme) : u.port,\n      path: u.pathname,\n    };\n  } catch (error) {\n    return {};\n  }\n};\n\nexport const urlOrHost = (formData) =>\n  formData.url || formData.url === null ? parseUrl(formData.url) : formData.endpoint ? formData.endpoint : formData;\n\nexport const doUpdateSource = (source, formData, values) => {\n  const promises = [];\n\n  if (formData.source) {\n    promises.push(getSourcesApi().updateSource(source.source.id, formData.source));\n  }\n\n  if (formData.endpoint || formData.url || formData.url === null) {\n    const { scheme, host, port, path } = urlOrHost(formData);\n    const endPointPort = port === null ? null : parseInt(port, 10);\n\n    const endpointData = {\n      scheme,\n      host,\n      path,\n      port: endPointPort === null ? null : isNaN(endPointPort) ? undefined : endPointPort,\n      ...formData.endpoint,\n    };\n\n    promises.push(getSourcesApi().updateEndpoint(source.endpoints[0].id, endpointData));\n  }\n\n  if (formData.authentications) {\n    Object.keys(formData.authentications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateAuthentication(idWithoutPrefix, formData.authentications[key]));\n    });\n  }\n\n  if (formData.applications) {\n    Object.keys(formData.applications).forEach((key) => {\n      const idWithoutPrefix = key.replace('a', '');\n\n      promises.push(getSourcesApi().updateApplication(idWithoutPrefix, { extra: values.applications[key].extra }));\n    });\n  }\n\n  return Promise.all(promises);\n};\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport RedoIcon from '@patternfly/react-icons/dist/esm/icons/redo-icon';\nimport { Button, Spinner } from '@patternfly/react-core';\n\nimport { useSource } from '../../hooks/useSource';\nimport checkSourceStatus from '../../api/checkSourceStatus';\nimport { addMessage } from '../../redux/sources/actions';\n\nconst AvailabilityChecker = () => {\n  const source = useSource();\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <Button\n      variant=\"plain\"\n      aria-label={intl.formatMessage({ id: 'sources.checkavailability', defaultMessage: 'Check source availability' })}\n      onClick={async () => {\n        setLoading(true);\n        await checkSourceStatus(source.id);\n        setLoading(false);\n        dispatch(\n          addMessage({\n            title: intl.formatMessage({\n              id: 'sources.checkavailability.notificationTitle',\n              defaultMessage: 'Request to check source status was sent',\n            }),\n            variant: 'info',\n            description: intl.formatMessage({\n              id: 'sources.checkavailability.notificationDescription',\n              defaultMessage: 'Check this page later for updates',\n            }),\n          })\n        );\n      }}\n      isDisabled={loading}\n    >\n      {!loading && <RedoIcon />}\n      {loading && <Spinner size=\"md\" />}\n    </Button>\n  );\n};\n\nexport default AvailabilityChecker;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  DescriptionList,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DescriptionListDescription,\n} from '@patternfly/react-core';\n\nimport { useSource } from '../../hooks/useSource';\nimport { configurationModeFormatter, dateFormatter, sourceTypeFormatter } from '../../views/formatters';\nimport AvailabilityChecker from './AvailabilityChecker';\n\nconst DescriptionListItem = ({ term, description }) => (\n  <DescriptionListGroup>\n    <DescriptionListTerm>{term}</DescriptionListTerm>\n    <DescriptionListDescription>{description}</DescriptionListDescription>\n  </DescriptionListGroup>\n);\n\nDescriptionListItem.propTypes = {\n  term: PropTypes.node,\n  description: PropTypes.node,\n};\n\nconst SourceSummaryCard = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes, shallowEqual);\n  const type = sourceTypes.find((type) => type.id === source.source_type_id);\n\n  let awsAccountNumber;\n\n  if (type.name === 'amazon') {\n    const arnType = source.authentications?.find(({ authtype }) => authtype.includes('arn'));\n\n    if (arnType?.username) {\n      awsAccountNumber = arnType.username.match(/:\\d+/)?.[0]?.replace(/:/g, '');\n    }\n  }\n\n  return (\n    <Card className=\"pf-m-selectable pf-m-selected card summary-card pf-u-m-lg pf-u-mr-sm-on-md\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'detail.summary.title',\n          defaultMessage: 'Source summary',\n        })}\n      </CardTitle>\n      <CardBody>\n        <DescriptionList\n          columnModifier={{\n            default: '2Col',\n          }}\n        >\n          <DescriptionListItem\n            term={intl.formatMessage({\n              id: 'detail.summary.type',\n              defaultMessage: 'Source type',\n            })}\n            description={sourceTypeFormatter(source.source_type_id, undefined, { sourceTypes })}\n          />\n          <DescriptionListItem\n            term={intl.formatMessage({\n              id: 'detail.summary.lastChecked',\n              defaultMessage: 'Last availability check',\n            })}\n            description={\n              <React.Fragment>\n                {source.last_checked_at || source.last_available_at\n                  ? dateFormatter(source.last_checked_at || source.last_available_at)\n                  : intl.formatMessage({\n                      id: 'detail.summary.notChecked',\n                      defaultMessage: 'Not checked yet',\n                    })}\n                <AvailabilityChecker />\n              </React.Fragment>\n            }\n          />\n          <DescriptionListItem\n            term={intl.formatMessage({\n              id: 'detail.summary.dateAdded',\n              defaultMessage: 'Date added',\n            })}\n            description={dateFormatter(source.created_at)}\n          />\n          <DescriptionListItem\n            term={intl.formatMessage({\n              id: 'detail.summary.lastModified',\n              defaultMessage: 'Last modified',\n            })}\n            description={dateFormatter(source.updated_at)}\n          />\n          {source.app_creation_workflow && (\n            <DescriptionListItem\n              term={intl.formatMessage({\n                id: 'detail.summary.configurationMode',\n                defaultMessage: 'Configuration mode',\n              })}\n              description={configurationModeFormatter(source.app_creation_workflow, source, { intl, sourceType: type })}\n            />\n          )}\n          {awsAccountNumber && (\n            <DescriptionListItem\n              term={intl.formatMessage({\n                id: 'detail.summary.awsAccountNumber',\n                defaultMessage: 'AWS account number',\n              })}\n              description={awsAccountNumber}\n            />\n          )}\n        </DescriptionList>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default SourceSummaryCard;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n\nimport { KebabToggle, Dropdown, DropdownItem } from '@patternfly/react-core';\n\nimport { replaceRouteId, routes } from '../../Routes';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { useSource } from '../../hooks/useSource';\n\nconst ApplicationKebab = ({ app, removeApp, addApp }) => {\n  const [isOpen, setOpen] = useState(false);\n  const intl = useIntl();\n  const source = useSource();\n  const { push } = useHistory();\n  const hasRightAccess = useHasWritePermissions();\n\n  const wrappedFunction = (func) => () => {\n    setOpen(false);\n    func();\n  };\n\n  const tooltip = intl.formatMessage({\n    id: 'sources.notAdminButton',\n    defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n  });\n\n  const disabledProps = {\n    tooltip,\n    isDisabled: true,\n    className: 'ins-c-sources__disabled-drodpown-item',\n  };\n\n  const pausedButton = app.paused_at ? (\n    <DropdownItem\n      {...(!hasRightAccess && disabledProps)}\n      key=\"resume\"\n      description={intl.formatMessage({\n        id: 'app.kebab.resume.title',\n        defaultMessage: 'Resume data collection for this application.',\n      })}\n      onClick={wrappedFunction(addApp)}\n    >\n      {intl.formatMessage({\n        id: 'app.kebab.resume.button',\n        defaultMessage: 'Resume',\n      })}\n    </DropdownItem>\n  ) : (\n    <DropdownItem\n      {...(!hasRightAccess && disabledProps)}\n      key=\"pause\"\n      description={intl.formatMessage({\n        id: 'app.kebab.pause.title',\n        defaultMessage: 'Temporarily stop this application from collecting data.',\n      })}\n      onClick={wrappedFunction(removeApp)}\n    >\n      {intl.formatMessage({\n        id: 'app.kebab.pause.button',\n        defaultMessage: 'Pause',\n      })}\n    </DropdownItem>\n  );\n  const removedButton = (\n    <DropdownItem\n      {...(!hasRightAccess && disabledProps)}\n      key=\"remove\"\n      description={intl.formatMessage({\n        id: 'app.kebab.remove.title',\n        defaultMessage: 'Permanently stop data collection for this application.',\n      })}\n      onClick={wrappedFunction(() =>\n        push(replaceRouteId(routes.sourcesDetailRemoveApp.path, source.id).replace(':app_id', app.id))\n      )}\n    >\n      {intl.formatMessage({\n        id: 'app.kebab.pause.button',\n        defaultMessage: 'Remove',\n      })}\n    </DropdownItem>\n  );\n\n  return (\n    <Dropdown\n      isPlain\n      isOpen={isOpen}\n      position=\"right\"\n      dropdownItems={[pausedButton, removedButton]}\n      className=\"ins-c-sources__application_kebab\"\n      toggle={<KebabToggle onToggle={() => setOpen((open) => !open)} />}\n    />\n  );\n};\n\nApplicationKebab.propTypes = {\n  app: PropTypes.shape({\n    id: PropTypes.string,\n    paused_at: PropTypes.string,\n  }).isRequired,\n  removeApp: PropTypes.func,\n  addApp: PropTypes.func,\n};\n\nexport default ApplicationKebab;\n","import React, { useReducer } from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { Card, CardBody, CardTitle, Switch, FormGroup } from '@patternfly/react-core';\n\nimport PauseIcon from '@patternfly/react-icons/dist/esm/icons/pause-icon';\nimport PlayIcon from '@patternfly/react-icons/dist/esm/icons/play-icon';\n\nimport { useSource } from '../../hooks/useSource';\nimport { replaceRouteId, routes } from '../../Routes';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport isSuperKey from '../../utilities/isSuperKey';\nimport { getSourcesApi, doCreateApplication } from '../../api/entities';\nimport { addMessage, loadEntities } from '../../redux/sources/actions';\nimport { APP_NAMES } from '../SourceEditForm/parser/application';\nimport filterApps from '../../utilities/filterApps';\nimport ApplicationKebab from './ApplicationKebab';\nimport { ApplicationLabel } from '../../views/formatters';\n\nconst initialState = {\n  selectedApps: {},\n};\n\nconst reducer = (state, { type, id }) => {\n  switch (type) {\n    case 'addApp':\n      return { ...state, selectedApps: { ...state.selectedApps, [id]: true } };\n    case 'removeApp':\n      return { ...state, selectedApps: { ...state.selectedApps, [id]: false } };\n    case 'clean':\n      return { ...state, selectedApps: { ...state.selectedApps, [id]: undefined } };\n  }\n};\n\nconst descriptionMapper = (name, intl) =>\n  ({\n    [APP_NAMES.COST_MANAGAMENT]: intl.formatMessage({\n      id: 'cost.app.description',\n      defaultMessage: 'Analyze, forecast, and optimize your Red Hat OpenShift cluster costs in hybrid cloud environments.',\n    }),\n    [APP_NAMES.CLOUD_METER]: intl.formatMessage({\n      id: 'cost.app.description',\n      defaultMessage: 'Includes access to Red Hat gold images, high precision subscription watch data, and autoregistration.',\n    }),\n  }[name]);\n\nconst addResumeNotification = (typeId, dispatch, intl, appTypes) => {\n  const appName = appTypes.find((type) => type.id === typeId)?.display_name;\n\n  dispatch(\n    addMessage({\n      title: intl.formatMessage(\n        {\n          id: 'detail.applications.resumed.alert.title',\n          defaultMessage: '{appName} connection resumed',\n        },\n        { appName }\n      ),\n      variant: 'default',\n      customIcon: <PlayIcon />,\n    })\n  );\n};\n\nconst addPausedNotification = (typeId, dispatch, intl, appTypes) => {\n  const appName = appTypes.find((type) => type.id === typeId)?.display_name;\n\n  dispatch(\n    addMessage({\n      title: intl.formatMessage(\n        {\n          id: 'detail.applications.paused.alert.title',\n          defaultMessage: '{appName} connection paused',\n        },\n        { appName }\n      ),\n      description: intl.formatMessage(\n        {\n          id: 'detail.applications.paused.alert.description',\n          defaultMessage: 'Your application will not reflect the most recent data until {appName} connection is resumed',\n        },\n        { appName }\n      ),\n      variant: 'default',\n      customIcon: <PauseIcon />,\n    })\n  );\n};\n\nconst ApplicationsCard = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const { push } = useHistory();\n  const sourceTypes = useSelector(({ sources }) => sources.sourceTypes, shallowEqual);\n  const appTypes = useSelector(({ sources }) => sources.appTypes, shallowEqual);\n  const hasRightAccess = useHasWritePermissions();\n  const dispatch = useDispatch();\n  const [{ selectedApps }, stateDispatch] = useReducer(reducer, initialState);\n\n  const sourceType = sourceTypes.find((type) => type.id === source.source_type_id);\n  const sourceTypeName = sourceType?.name;\n  const filteredAppTypes = appTypes.filter((type) => type.supported_source_types.includes(sourceTypeName)).filter(filterApps);\n\n  let addApp = async (id, isPaused) => {\n    if (!isPaused) {\n      push(replaceRouteId(routes.sourcesDetailAddApp.path, source.id).replace(':app_type_id', id));\n    } else {\n      if (typeof selectedApps[id] !== 'boolean') {\n        stateDispatch({ type: 'addApp', id });\n        await getSourcesApi().unpauseApplication(isPaused);\n        addResumeNotification(id, dispatch, intl, appTypes);\n        await dispatch(loadEntities());\n        stateDispatch({ type: 'clean', id });\n      }\n    }\n  };\n\n  const removeApp = async (id, typeId) => {\n    if (typeof selectedApps[typeId] !== 'boolean') {\n      stateDispatch({ type: 'removeApp', id: typeId });\n      await getSourcesApi().pauseApplication(id);\n      addPausedNotification(typeId, dispatch, intl, appTypes);\n      await dispatch(loadEntities());\n      stateDispatch({ type: 'clean', id: typeId });\n    }\n  };\n\n  if (isSuperKey(source)) {\n    addApp = async (id, isPaused) => {\n      if (typeof selectedApps[id] !== 'boolean') {\n        stateDispatch({ type: 'addApp', id });\n\n        if (isPaused) {\n          await getSourcesApi().unpauseApplication(isPaused);\n          addResumeNotification(id, dispatch, intl, appTypes);\n        } else {\n          await doCreateApplication({ source_id: source.id, application_type_id: id });\n        }\n\n        await dispatch(loadEntities());\n        stateDispatch({ type: 'clean', id });\n      }\n    };\n  }\n\n  return (\n    <Card className=\"card applications-card pf-u-p-lg pf-u-pl-sm-on-md\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'detail.applications.title',\n          defaultMessage: 'Applications',\n        })}\n      </CardTitle>\n      <CardBody>\n        {!hasRightAccess && (\n          <div className=\"pf-u-mb-md\" id=\"no-permissions-applications\">\n            {intl.formatMessage({\n              id: 'sources.notAdminButton',\n              defaultMessage:\n                'To perform this adding/removing applications, you must be granted write permissions from your Organization Administrator.',\n            })}\n          </div>\n        )}\n        <div className=\"pf-c-form\">\n          {filteredAppTypes.map((app) => {\n            const connectedApp = source.applications.find((connectedApp) => connectedApp.application_type_id === app.id);\n            const description = descriptionMapper(app.name, intl);\n\n            const appExist = Boolean(connectedApp);\n            const isPaused = Boolean(connectedApp?.paused_at);\n\n            const pausedApp = isPaused ? false : appExist;\n\n            const isChecked = typeof selectedApps[app.id] === 'boolean' ? selectedApps[app.id] : pausedApp;\n\n            return (\n              <FormGroup key={app.id}>\n                <div className=\"ins-c-sources__application_flex\">\n                  <div>\n                    <Switch\n                      id={`app-switch-${app.id}`}\n                      label={app.display_name}\n                      isChecked={isChecked}\n                      isDisabled={connectedApp?.isDeleting || !hasRightAccess}\n                      onChange={(value) => (!value ? removeApp(connectedApp.id, app.id) : addApp(app.id, connectedApp?.id))}\n                    />\n                    {Boolean(connectedApp) && (\n                      <ApplicationLabel className=\"pf-u-ml-sm clickable\" app={connectedApp} showStatusText />\n                    )}\n                    {description && (\n                      <div className=\"pf-c-switch pf-u-mt-sm ins-c-sources__application_fake_switch\">\n                        <span className=\"pf-c-switch__toggle ins-c-sources__hide-me\" />\n                        <div className=\"pf-c-switch__label ins-c-sources__switch-description\">{description}</div>\n                      </div>\n                    )}\n                  </div>\n                  {(isPaused || appExist) && (\n                    <ApplicationKebab\n                      app={connectedApp}\n                      removeApp={() => removeApp(connectedApp.id, app.id)}\n                      addApp={() => addApp(app.id, connectedApp.id)}\n                    />\n                  )}\n                </div>\n              </FormGroup>\n            );\n          })}\n        </div>\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ApplicationsCard;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, Title } from '@patternfly/react-core';\nimport PlusCircleIcon from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\n\nconst NoApplications = () => {\n  const intl = useIntl();\n\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {intl.formatMessage({\n          id: 'detail.noapplications.title',\n          defaultMessage: 'No connected applications',\n        })}\n      </Title>\n      <EmptyStateBody className=\"empty-state-body\">\n        {intl.formatMessage({\n          id: 'detail.noapplications.description',\n          defaultMessage: 'You have not connected any applications to this source. Use the switches above to add applications.',\n        })}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoApplications;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, Title } from '@patternfly/react-core';\nimport PrivateIcon from '@patternfly/react-icons/dist/esm/icons/private-icon';\n\nconst NoPermissions = () => {\n  const intl = useIntl();\n\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={PrivateIcon} />\n      <Title headingLevel=\"h4\" size=\"lg\">\n        {intl.formatMessage({\n          id: 'detail.nopermissions.title',\n          defaultMessage: 'Missing permissions',\n        })}\n      </Title>\n      <EmptyStateBody className=\"empty-state-body\">\n        {intl.formatMessage({\n          id: 'detail.nopermissions.description',\n          defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n        })}\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoPermissions;\n","import { getSourcesApi, doLoadApplicationsForEdit } from './entities';\n\nexport const doLoadSourceForEdit = (source, appTypes, sourceTypes) =>\n  Promise.all([\n    getSourcesApi().showSource(source.id),\n    getSourcesApi().listSourceEndpoints(source.id),\n    doLoadApplicationsForEdit(source.id, appTypes, sourceTypes),\n  ]).then(async ([sourceData, endpoints, applications]) => {\n    const endpoint = endpoints && endpoints.data && endpoints.data[0];\n\n    const apps = applications?.sources[0]?.applications || [];\n\n    let basicValues = {\n      source: {\n        ...source,\n        ...sourceData,\n      },\n      applications: apps,\n    };\n\n    const promises = [];\n    let appAuths;\n    const addToApp = [];\n    const appAuthenticationIds = [];\n\n    apps.forEach((app) => {\n      app?.authentications?.forEach((auth) => {\n        if (auth?.id) {\n          promises.push(getSourcesApi().showAuthentication(auth.id));\n          addToApp.push(app.id);\n          appAuthenticationIds.push(auth.id);\n        }\n      });\n    });\n\n    if (promises.length > 0) {\n      appAuths = await Promise.all(promises);\n\n      addToApp.forEach((id, index) => {\n        basicValues.applications.find((app) => app.id === id).authentications.push(appAuths[index]);\n      });\n    }\n\n    if (!endpoint) {\n      return basicValues;\n    }\n\n    return getSourcesApi()\n      .listEndpointAuthentications(endpoint.id)\n      .then((authentications) => ({\n        ...basicValues,\n        endpoints: endpoints.data,\n        authentications: authentications.data.filter(({ id }) => !appAuthenticationIds.includes(id)),\n      }));\n  });\n","import get from 'lodash/get';\nimport set from 'lodash/set';\n\nimport { endpointToUrl, UNAVAILABLE } from '../../views/formatters';\nimport { pausedAppAlert } from '../../utilities/alerts';\n\nexport const CHECK_ENDPOINT_COMMAND = 'check-endpoint';\n\nexport const selectOnlyEditedValues = (values, editing) => {\n  const filteredValues = {};\n\n  Object.keys(editing)\n    .filter((key) => editing[key])\n    .forEach((key) => {\n      set(filteredValues, key, get(values, key));\n    });\n\n  return filteredValues;\n};\n\nexport const prepareInitialValues = ({ endpoints, authentications, applications, ...rest }, sourceTypeName) => {\n  const auhenticationsFinal = {};\n\n  const mergeAuths = [\n    ...(authentications || []),\n    ...(applications?.reduce((acc, curr) => [...acc, ...curr.authentications], []) || []),\n  ];\n\n  if (mergeAuths.length > 0) {\n    mergeAuths.forEach((auth) => {\n      auhenticationsFinal[`a${auth.id}`] = auth;\n    });\n  }\n\n  let endpoint;\n  let url;\n\n  if (endpoints && endpoints.length > 0) {\n    endpoint = endpoints[0];\n  }\n\n  if (endpoint) {\n    url = endpoint.scheme || endpoint.host || endpoint.path || endpoint.port ? endpointToUrl(endpoint) : undefined;\n  }\n\n  const applicationsFinal = {};\n  if (applications?.length > 0) {\n    applications.forEach((app) => {\n      if (app.extra && Object.keys(app.extra).length > 0) {\n        applicationsFinal[`a${app.id}`] = { extra: app.extra };\n      }\n    });\n  }\n\n  return {\n    source_type: sourceTypeName,\n    endpoint,\n    authentications: auhenticationsFinal,\n    url,\n    ...(Object.keys(applicationsFinal).length && {\n      applications: applicationsFinal,\n    }),\n    ...rest,\n  };\n};\n\nconst addIfUnique = (array, item) => !array.includes(item) && array.push(item);\n\nexport const getEditedApplications = (source, editing) => {\n  const editedApplications = [];\n\n  const editedFields = Object.keys(editing);\n\n  editedFields.forEach((key) => {\n    if (editing[key]) {\n      const editedId = key.match(/.a\\d+/)?.[0]?.replace('.a', '');\n\n      if (key.startsWith('applications')) {\n        addIfUnique(editedApplications, editedId);\n      }\n\n      if (key.startsWith('authentications')) {\n        source.applications.forEach((app) =>\n          app.authentications.forEach(\n            ({ id, resource_type }) =>\n              resource_type &&\n              id === editedId &&\n              addIfUnique(editedApplications, resource_type === 'Application' ? app.id : `${CHECK_ENDPOINT_COMMAND}-${app.id}`)\n          )\n        );\n      }\n\n      if (key.startsWith('url') || key.startsWith('endpoint')) {\n        source.applications.forEach((app) =>\n          app.authentications.forEach(\n            ({ resource_type }) =>\n              resource_type === 'Endpoint' && addIfUnique(editedApplications, `${CHECK_ENDPOINT_COMMAND}-${app.id}`)\n          )\n        );\n      }\n    }\n  });\n\n  return editedApplications.filter(Boolean);\n};\n\nexport const prepareMessages = (source, intl, appTypes) => {\n  const messages = {};\n\n  source.applications.forEach(({ id, application_type_id, availability_status_error, availability_status, paused_at }) => {\n    if (paused_at) {\n      const application = appTypes.find((type) => type.id === application_type_id)?.display_name || id;\n      messages[id] = pausedAppAlert(intl, application);\n    } else if (availability_status === UNAVAILABLE) {\n      messages[id] = {\n        title: intl.formatMessage({\n          id: 'wizard.failEditToastTitleBeforeEdit',\n          defaultMessage: 'This application is unavailable',\n        }),\n        description: availability_status_error,\n        variant: 'danger',\n      };\n    }\n  });\n\n  if (source.endpoints?.[0]?.availability_status_error) {\n    const applicationsUsingEndpoint = source.applications\n      .map((app) =>\n        app.authentications.find(({ resource_type }) => !app.paused_at && resource_type === 'Endpoint') ? app.id : undefined\n      )\n      .filter(Boolean);\n\n    applicationsUsingEndpoint.forEach((id) => {\n      messages[id] = {\n        title: intl.formatMessage({\n          id: 'wizard.failEditToastTitleBeforeEdit',\n          defaultMessage: 'This application is unavailable',\n        }),\n        description: source.endpoints?.[0]?.availability_status_error,\n        variant: 'danger',\n      };\n    });\n  }\n\n  return messages;\n};\n","import { CHECK_ENDPOINT_COMMAND, getEditedApplications, selectOnlyEditedValues } from './helpers';\nimport { loadEntities } from '../../redux/sources/actions';\nimport { checkSourceStatus } from '../../api/checkSourceStatus';\nimport { doUpdateSource } from '../../api/doUpdateSource';\nimport { checkAppAvailability } from '../../api/getApplicationStatus';\n\nimport { AVAILABLE, IN_PROGRESS, UNAVAILABLE } from '../../views/formatters';\n\nexport const onSubmit = async (values, editing, dispatch, source, intl, setState) => {\n  setState({ type: 'submit', values, editing });\n\n  const startDate = new Date();\n\n  try {\n    await doUpdateSource(source, selectOnlyEditedValues(values, editing), values);\n  } catch {\n    await dispatch(loadEntities());\n    setState({ type: 'submitFailed' });\n\n    return;\n  }\n\n  checkSourceStatus(source.source.id);\n\n  let messages = {};\n\n  const checkApplications = getEditedApplications(source, editing);\n\n  const promises = [];\n\n  checkApplications.forEach((checkInfo) => {\n    if (checkInfo.includes(CHECK_ENDPOINT_COMMAND)) {\n      promises.push(\n        checkAppAvailability(source.endpoints[0].id, undefined, undefined, 'getEndpoint', startDate).then((data) => ({\n          ...data,\n          id: checkInfo.replace(`${CHECK_ENDPOINT_COMMAND}-`, ''),\n        }))\n      );\n    } else {\n      promises.push(checkAppAvailability(checkInfo, undefined, undefined, undefined, startDate));\n    }\n  });\n\n  let statusResults;\n  if (promises.length > 0) {\n    try {\n      statusResults = await Promise.all(promises);\n    } catch (error) {\n      await dispatch(loadEntities());\n      setState({ type: 'submitFailed' });\n      return;\n    }\n\n    statusResults.forEach(({ availability_status, availability_status_error, id }) => {\n      if (availability_status === AVAILABLE) {\n        messages[id] = {\n          title: intl.formatMessage({\n            id: 'wizard.successEditToastTitle',\n            defaultMessage: 'Application credentials were edited successfully.',\n          }),\n          description: availability_status_error,\n          variant: 'success',\n        };\n      }\n\n      if (availability_status === UNAVAILABLE) {\n        messages[id] = {\n          title: intl.formatMessage({\n            id: 'wizard.failEditToastTitle',\n            defaultMessage: 'Edit application credentials failed.',\n          }),\n          description: availability_status_error,\n          variant: 'danger',\n        };\n      }\n\n      if (!availability_status || availability_status === IN_PROGRESS) {\n        messages[id] = {\n          title: intl.formatMessage({\n            id: 'wizard.timeoutEditToastTitle',\n            defaultMessage: 'Edit in progress',\n          }),\n          description: intl.formatMessage({\n            id: 'wizard.timeoutEditToastDescription',\n            defaultMessage:\n              'We are still working to confirm your updated credentials. Changes will be reflected in this table when complete.',\n          }),\n          variant: 'warning',\n        };\n      }\n    });\n  }\n\n  await dispatch(loadEntities());\n  setState({ type: 'submitFinished', messages });\n};\n","import { applicationsFields } from './application';\n\nexport const parseSourceToSchema = (source, sourceType, appTypes, intl) => ({\n  description: intl.formatMessage({\n    id: 'sources.editFormDescripiton',\n    defaultMessage: 'Use the form fields to edit application credentials.',\n  }),\n  fields: applicationsFields(source.applications, sourceType, appTypes),\n});\n","import { parseSourceToSchema } from './parser/parseSourceToSchema';\nimport { prepareInitialValues } from './helpers';\n\nexport const initialState = {\n  loading: true,\n  source: undefined,\n  initialValues: {},\n  sourceType: undefined,\n  schema: undefined,\n  isSubmitting: false,\n  initialLoad: true,\n  submitError: false,\n  submitMessages: undefined,\n};\n\nconst reducer = (state, { type, source, sourceType, appTypes, intl, values, editing, messages }) => {\n  switch (type) {\n    case 'createForm':\n      return {\n        ...state,\n        sourceType,\n        initialValues: prepareInitialValues(state.source, sourceType.product_name),\n        schema: parseSourceToSchema(state.source, sourceType, appTypes, intl),\n        loading: false,\n      };\n    case 'setSource':\n      return {\n        ...state,\n        messages: {\n          ...messages,\n          ...state.submitMessages,\n        },\n        source,\n        initialLoad: false,\n        submitMessages: undefined,\n      };\n    case 'submit':\n      return {\n        ...state,\n        isSubmitting: true,\n        submitError: false,\n        values,\n        editing,\n      };\n    case 'submitFinished':\n      return {\n        ...state,\n        isSubmitting: false,\n        source,\n        submitMessages: messages,\n      };\n    case 'submitFailed':\n      return {\n        ...state,\n        isSubmitting: false,\n        submitError: true,\n        messages: undefined,\n      };\n    case 'sourceChanged':\n      return {\n        ...state,\n        initialLoad: true,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport LoadingStep from '../steps/LoadingStep';\n\nconst SubmittingModal = () => {\n  const intl = useIntl();\n\n  return (\n    <LoadingStep\n      customText={intl.formatMessage({\n        id: 'sources.editSubmittingTitle',\n        defaultMessage: 'Validating edited source credentials',\n      })}\n    />\n  );\n};\n\nexport default SubmittingModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Text } from '@patternfly/react-core';\n\nimport ErroredStep from '../steps/ErroredStep';\n\nconst ErroredModal = ({ onRetry }) => {\n  const intl = useIntl();\n\n  return (\n    <ErroredStep\n      onClose={onRetry}\n      customText={intl.formatMessage({\n        id: 'sources.editErrorDescription',\n        defaultMessage:\n          'There was a problem while trying to edit your source. Please try again. If the error persists, open a support case.',\n      })}\n      secondaryActions={\n        <Text\n          component=\"a\"\n          target=\"_blank\"\n          href=\"https://access.redhat.com/support/cases/#/case/new/open-case?caseCreate=true\"\n          rel=\"noopener noreferrer\"\n        >\n          {intl.formatMessage({\n            id: 'sources.openTicket',\n            defaultMessage: 'Open a support case',\n          })}\n        </Text>\n      }\n      returnButtonTitle={intl.formatMessage({\n        id: 'sources.retryText',\n        defaultMessage: 'Retry',\n      })}\n    />\n  );\n};\n\nErroredModal.propTypes = {\n  onRetry: PropTypes.func.isRequired,\n};\n\nexport default ErroredModal;\n","import React, { useEffect, useReducer } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { useIntl } from 'react-intl';\nimport { Spinner, Bullseye } from '@patternfly/react-core';\n\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\n\nimport SourcesFormRenderer from '../../utilities/SourcesFormRenderer';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport { onSubmit } from './onSubmit';\n\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport reducer, { initialState } from './reducer';\nimport SubmittingModal from './SubmittingModal';\nimport ErroredModal from './ErroredModal';\nimport { prepareMessages } from './helpers';\n\nconst SourceEditModal = () => {\n  const [state, setState] = useReducer(reducer, initialState);\n  const sourceRedux = useSource();\n  const isLoaded = useIsLoaded();\n\n  const { loading, editing, source, initialValues, schema, isSubmitting, initialLoad, message, messages, submitError, values } =\n    state;\n\n  const intl = useIntl();\n\n  const { sourceTypes, appTypes, sourceTypesLoaded, appTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!initialLoad) {\n      setState({ type: 'sourceChanged' });\n    }\n  }, [sourceRedux, sourceRedux?.applications?.length]);\n\n  useEffect(() => {\n    if (sourceRedux && initialLoad && appTypesLoaded) {\n      doLoadSourceForEdit(sourceRedux, appTypes, sourceTypes).then((source) => {\n        const messages = prepareMessages(source, intl, appTypes);\n\n        setState({ type: 'setSource', source, messages });\n      });\n    }\n  }, [sourceRedux, isLoaded, appTypesLoaded, initialLoad]);\n\n  useEffect(() => {\n    if (source && appTypesLoaded && sourceTypesLoaded) {\n      const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n      setState({ type: 'createForm', sourceType, source, appTypes, intl });\n    }\n  }, [appTypesLoaded, source, sourceTypesLoaded]);\n\n  const isLoading = !appTypesLoaded || !sourceTypesLoaded || loading;\n\n  if (submitError) {\n    return <ErroredModal onRetry={() => onSubmit(values, editing, dispatch, source, intl, setState)} />;\n  }\n\n  if (isSubmitting) {\n    return <SubmittingModal />;\n  }\n\n  if (isLoading) {\n    return (\n      <Bullseye className=\"pf-u-m-2xl\">\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  return (\n    <SourcesFormRenderer\n      schema={schema}\n      onSubmit={(values, formApi) => onSubmit(values, formApi.getState().dirtyFields, dispatch, source, intl, setState)}\n      FormTemplate={(props) => (\n        <FormTemplate canReset submitLabel=\"Save changes\" disableSubmit={['pristine', 'invalid']} {...props} />\n      )}\n      clearedValue={null}\n      initialValues={{\n        ...initialValues,\n        message,\n        messages,\n      }}\n    />\n  );\n};\n\nexport default SourceEditModal;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Card, CardBody, CardTitle } from '@patternfly/react-core';\n\nimport NoApplications from './NoApplications';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { useSource } from '../../hooks/useSource';\nimport NoPermissions from './NoPermissions';\nimport SourceEditModal from '../SourceEditForm/SourceEditModal';\n\nconst ApplicationResourcesCard = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const hasRightAccess = useHasWritePermissions();\n\n  return (\n    <Card className=\"card pf-u-m-lg pf-u-mt-0\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'detail.resources.title',\n          defaultMessage: 'Manage connected applications',\n        })}\n      </CardTitle>\n      <CardBody>\n        {!hasRightAccess && <NoPermissions />}\n        {hasRightAccess && source.applications.length === 0 && <NoApplications />}\n        {hasRightAccess && source.applications.length > 0 && <SourceEditModal />}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ApplicationResourcesCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\n\nconst Breadcrumbs = () => {\n  const intl = useIntl();\n  const source = useSource();\n\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem component={({ href, ...props }) => <Link to={href} {...props} />} to={routes.sources.path}>\n        {intl.formatMessage({\n          id: 'sources.sources',\n          defaultMessage: 'Sources',\n        })}\n      </BreadcrumbItem>\n      <BreadcrumbItem isActive>{source.name}</BreadcrumbItem>\n    </Breadcrumb>\n  );\n};\n\nexport default Breadcrumbs;\n","import React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router-dom';\n\nimport { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\n\nimport { replaceRouteId, routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\n\nconst SourceKebab = () => {\n  const [isOpen, setOpen] = useState(false);\n  const intl = useIntl();\n  const { push } = useHistory();\n  const source = useSource();\n  const hasRightAccess = useHasWritePermissions();\n\n  const tooltip = intl.formatMessage({\n    id: 'sources.notAdminButton',\n    defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n  });\n\n  const disabledProps = {\n    tooltip,\n    isDisabled: true,\n    className: 'ins-c-sources__disabled-drodpown-item',\n  };\n\n  return (\n    <Dropdown\n      toggle={<KebabToggle onToggle={() => setOpen(!isOpen)} id=\"toggle-id-6\" />}\n      isOpen={isOpen}\n      isPlain\n      position=\"right\"\n      dropdownItems={[\n        <DropdownItem\n          {...(!hasRightAccess && disabledProps)}\n          key=\"rename\"\n          onClick={() => push(replaceRouteId(routes.sourcesDetailRename.path, source.id))}\n        >\n          {intl.formatMessage({\n            id: 'detail.rename.button',\n            defaultMessage: 'Rename',\n          })}\n        </DropdownItem>,\n        <DropdownItem\n          {...(!hasRightAccess && disabledProps)}\n          key=\"remove\"\n          onClick={() => push(replaceRouteId(routes.sourcesDetailRemove.path, source.id))}\n        >\n          {intl.formatMessage({\n            id: 'detail.remove.button',\n            defaultMessage: 'Remove',\n          })}\n        </DropdownItem>,\n      ]}\n    />\n  );\n};\n\nexport default SourceKebab;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useSelector } from 'react-redux';\n\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Title, TextContent, Text, Flex, FlexItem } from '@patternfly/react-core';\n\nimport Breadcrumbs from './Breadcrumbs';\nimport { useSource } from '../../hooks/useSource';\nimport { availabilityFormatter } from '../../views/formatters';\nimport SourceKebab from './SourceKebab';\n\nconst DetailHeader = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const appTypes = useSelector(({ sources }) => sources.appTypes, shallowEqual);\n\n  return (\n    <PageHeader>\n      <Breadcrumbs />\n      <Flex className=\"pf-u-mb-sm\">\n        <FlexItem>\n          <Title headingLevel=\"h1\" size=\"2xl\">\n            {source.name}\n          </Title>\n        </FlexItem>\n        <FlexItem>{availabilityFormatter(undefined, source, { appTypes })}</FlexItem>\n        <FlexItem align={{ default: 'alignRight' }}>\n          <SourceKebab />\n        </FlexItem>\n      </Flex>\n      <TextContent>\n        <Text>\n          {intl.formatMessage({\n            id: 'detail.description',\n            defaultMessage: 'View details and manage connections for this source.',\n          })}\n        </Text>\n      </TextContent>\n    </PageHeader>\n  );\n};\n\nexport default DetailHeader;\n","import React, { useEffect, useReducer } from 'react';\nimport { useIntl } from 'react-intl';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport get from 'lodash/get';\n\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\n\nimport { Card, CardBody, CardTitle, Text, Spinner, Bullseye, Tabs, Tab, TabTitleText } from '@patternfly/react-core';\n\nimport NoApplications from './NoApplications';\nimport { useSource } from '../../hooks/useSource';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { doLoadSourceForEdit } from '../../api/doLoadSourceForEdit';\nimport { authenticationFields } from '../SourceEditForm/parser/authentication';\nimport { prepareInitialValues } from '../SourceEditForm/helpers';\nimport ResourcesEmptyState from './ResourcesEmptyState';\n\nconst createColumns = (intl) => [\n  intl.formatMessage({ id: 'resourceTable.resourceType', defaultMessage: 'Resource type' }),\n  intl.formatMessage({ id: 'resourceTable.resourceValue', defaultMessage: 'Value' }),\n];\n\nconst convertFieldsToRows = (fields, initialValues) =>\n  fields\n    .flatMap((x) => x)\n    .map(\n      (field) => !field.hideField && [<React.Fragment key=\"label\">{field.label}</React.Fragment>, get(initialValues, field.name)]\n    )\n    .filter(Boolean);\n\nconst createRows = (source, appTypes, sourceType) => {\n  const applicationsRows = source.applications.reduce((acc, app) => {\n    const appType = appTypes.find(({ id }) => id === app.application_type_id);\n\n    const applicationFieldsSchema = authenticationFields(\n      app.authentications?.filter((auth) => Object.keys(auth).length > 1),\n      sourceType,\n      appType?.name,\n      app.id\n    );\n\n    const initialValues = prepareInitialValues(source, sourceType.product_name);\n    const applicationRows = convertFieldsToRows(applicationFieldsSchema, initialValues);\n\n    return { ...acc, [app.id]: applicationRows };\n  }, {});\n\n  return applicationsRows;\n};\n\nconst initialValues = (source) => ({\n  loading: Boolean(source.applications?.length),\n  columns: [],\n  applicationsRows: {},\n  activeTab: 0,\n});\n\nconst reducer = (state, { type, intl, source, activeTab, appTypes, sourceType }) => {\n  switch (type) {\n    case 'loaded':\n      return {\n        ...state,\n        columns: createColumns(intl),\n        applicationsRows: createRows(source, appTypes, sourceType),\n        loading: false,\n        activeTab: source.applications[0].id,\n      };\n    case 'switchTab':\n      return {\n        ...state,\n        activeTab,\n      };\n    case 'setLoading':\n      return {\n        ...state,\n        loading: true,\n      };\n  }\n};\n\nconst ResourcesTable = () => {\n  const intl = useIntl();\n  const source = useSource();\n  const isLoaded = useIsLoaded();\n\n  const { sourceTypes, appTypes, sourceTypesLoaded, appTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n\n  const [{ activeTab, loading, columns, applicationsRows }, dispatch] = useReducer(reducer, initialValues(source));\n\n  useEffect(() => {\n    if (source && isLoaded && appTypesLoaded && sourceTypesLoaded && source?.applications?.length) {\n      dispatch({ type: 'setLoading' });\n\n      doLoadSourceForEdit(source, appTypes, sourceTypes).then((source) => {\n        const sourceType = sourceTypes.find(({ id }) => id === source.source.source_type_id);\n\n        dispatch({ type: 'loaded', source, intl, sourceType, appTypes });\n      });\n    }\n  }, [source?.applications?.length, isLoaded, appTypesLoaded, sourceTypesLoaded]);\n\n  return (\n    <Card className=\"card pf-u-m-lg pf-u-mt-0\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'resourceTable.title',\n          defaultMessage: 'Connected application resources',\n        })}\n      </CardTitle>\n      <CardBody>\n        {loading && (\n          <Bullseye className=\"pf-u-m-2xl\">\n            <Spinner />\n          </Bullseye>\n        )}\n        {!loading && !source.applications.length && <NoApplications />}\n        {!loading && source.applications.length > 0 && (\n          <React.Fragment>\n            <Text className=\"pf-u-mb-md\">\n              {intl.formatMessage({\n                id: 'resourceTable.description',\n                defaultMessage: 'View resources for your connected applications.',\n              })}\n            </Text>\n            <Tabs isBox activeKey={activeTab} onSelect={(_e, activeTab) => dispatch({ type: 'switchTab', activeTab })}>\n              {source.applications.map((app) => {\n                const appName =\n                  appTypes.find(({ id }) => id === app.application_type_id)?.display_name || app.application_type_id;\n\n                return (\n                  <Tab eventKey={app.id} key={app.id} title={<TabTitleText>{appName}</TabTitleText>}>\n                    {applicationsRows[app.id]?.length ? (\n                      <Table\n                        aria-label={intl.formatMessage({\n                          id: 'resourceTable.title',\n                          defaultMessage: 'Connected application resources',\n                        })}\n                        variant=\"compact\"\n                        cells={columns}\n                        rows={applicationsRows[app.id]}\n                        className=\"pf-u-mt-md\"\n                      >\n                        <TableHeader />\n                        <TableBody />\n                      </Table>\n                    ) : (\n                      <ResourcesEmptyState applicationName={appName} isPaused={app.paused_at} />\n                    )}\n                  </Tab>\n                );\n              })}\n            </Tabs>\n          </React.Fragment>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default ResourcesTable;\n","import React, { lazy, Suspense } from 'react';\n\nimport { Grid, GridItem } from '@patternfly/react-core';\n\nimport SourceSummaryCard from '../components/SourceDetail/SourceSummaryCard';\nimport ApplicationsCard from '../components/SourceDetail/ApplicationsCard';\nimport ApplicationResourcesCard from '../components/SourceDetail/ApplicationResourcesCard';\nimport RedirectNoId from '../components/RedirectNoId/RedirectNoId';\nimport { useSource } from '../hooks/useSource';\nimport { DetailLoader } from '../components/SourcesTable/loaders';\nimport CustomRoute from '../components/CustomRoute/CustomRoute';\nimport { replaceRouteId, routes } from '../Routes';\nimport DetailHeader from '../components/SourceDetail/DetailHeader';\nimport isSuperKey from '../utilities/isSuperKey';\nimport ResourcesTable from '../components/SourceDetail/ResourcesTable';\n\nconst SourceRemoveModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"removeSource\" */\n    '../components/SourceRemoveModal/SourceRemoveModal'\n  )\n);\n\nconst AddApplication = lazy(() =>\n  import(\n    /* webpackChunkName: \"addApplication\" */\n    '../components/AddApplication/AddApplication'\n  )\n);\n\nconst RemoveAppModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"removeApplication\" */\n    '../components/AddApplication/RemoveAppModal'\n  )\n);\n\nconst SourceRenameModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"renameSource\" */\n    '../components/SourceDetail/SourceRenameModal'\n  )\n);\n\nconst EditCredentials = lazy(() =>\n  import(\n    /* webpackChunkName: \"credentialsForm\" */\n    '../components/CredentialsForm/CredentialsForm'\n  )\n);\n\nconst Detail = () => {\n  const source = useSource();\n\n  if (!source) {\n    return (\n      <React.Fragment>\n        <DetailLoader />\n        <RedirectNoId />\n      </React.Fragment>\n    );\n  }\n\n  const superKey = isSuperKey(source);\n\n  return (\n    <div className=\"ins-c-sources__detail-page\">\n      <Suspense fallback={null}>\n        <CustomRoute\n          exact\n          route={routes.sourcesDetailRemove}\n          Component={SourceRemoveModal}\n          componentProps={{ backPath: replaceRouteId(routes.sourcesDetail.path, source.id) }}\n        />\n        <CustomRoute exact route={routes.sourcesDetailAddApp} Component={AddApplication} />\n        <CustomRoute exact route={routes.sourcesDetailRemoveApp} Component={RemoveAppModal} />\n        <CustomRoute exact route={routes.sourcesDetailRename} Component={SourceRenameModal} />\n        <CustomRoute exact route={routes.sourcesDetailEditCredentials} Component={EditCredentials} />\n      </Suspense>\n      <DetailHeader />\n      <Grid>\n        <GridItem md=\"6\">\n          <SourceSummaryCard />\n        </GridItem>\n        <GridItem md=\"6\">\n          <ApplicationsCard />\n        </GridItem>\n        <GridItem md=\"12\">{superKey ? <ResourcesTable /> : <ApplicationResourcesCard />}</GridItem>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Detail;\n"],"sourceRoot":""}