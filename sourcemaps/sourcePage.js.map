{"version":3,"sources":["webpack:///./src/components/SourcesTable/EmptyStateTable.js","webpack:///./src/hooks/useHasWritePermissions.js","webpack:///./src/components/SourcesTable/SourcesTable.js","webpack:///./src/components/SourcesEmptyState.js","webpack:///./src/components/SourcesErrorState.js","webpack:///./src/pages/Sources/helpers.js","webpack:///./src/components/RedirectNoWriteAccess/RedirectNoWriteAccess.js","webpack:///./src/components/RedirectNoId/RedirectNoId.js","webpack:///./src/components/CustomRoute/CustomRoute.js","webpack:///./src/pages/Sources.js","webpack:///./src/hooks/useSource.js","webpack:///./src/hooks/useIsLoaded.js"],"names":["EmptyStateTable","intl","useIntl","dispatch","useDispatch","Bullseye","EmptyState","variant","EmptyStateVariant","small","EmptyStateIcon","icon","SearchIcon","Title","headingLevel","size","formatMessage","id","defaultMessage","EmptyStateBody","Button","onClick","clearFilters","useHasWritePermissions","useSelector","user","orgAdmin","isOrgAdmin","writePermissions","itemToCells","item","columns","sourceTypes","appTypes","filter","column","title","hidden","map","col","formatter","value","renderSources","entities","removingSources","reduce","acc","isDeleting","includes","isOpen","expanded","cells","disableActions","prepareColumnsCells","sortable","transforms","wrappable","reducer","state","payload","actionResolver","push","rowData","disabledProps","tooltip","isDisabled","className","actions","_ev","_i","replaceRouteId","routes","sourceManageApps","path","component","sourcesRemove","imported","splice","sourcesEdit","insertEditAction","SourcesTable","useHistory","loaded","useIsLoaded","sources","shallowEqual","sourceTypesLoaded","appTypesLoaded","sortBy","sortDirection","numberOfEntities","reduxDispatch","notSortable","useReducer","sourcesColumns","rows","isLoaded","refreshSources","useEffect","refreshColumns","shownRows","heightAuto","props","colSpan","COLUMN_COUNT","Table","gridBreakPoint","aria-label","onSort","_event","key","direction","sortEntities","index","cell","indexOf","undefined","rowWrapper","RowWrapperLoader","SourcesEmptyState","WrenchIcon","Fragment","to","sourcesNew","SourcesErrorState","ExclamationCircleIcon","color","a","chunks","Text","href","target","rel","window","location","debouncedFiltering","awesomeDebounce","refresh","afterSuccessLoadParameters","pageNumber","prepareSourceTypeSelection","label","product_name","sort","b","localeCompare","prepareApplicationTypeSelection","display_name","setFilter","filterSources","prepareChips","filterValue","Object","keys","length","name","source_type_id","category","chips","sourceType","find","type","applications","appType","chipsFormatters","Boolean","loadedTypes","types","RedirectNoWriteAccess","description","addMessage","RedirectNoId","useParams","useState","applicationIsLoaded","setIsApplicationLoaded","doLoadSource","then","source","addHiddenSource","CustomRouteInternal","route","children","redirectNoId","useSource","writeAccess","propTypes","PropTypes","shape","string","isRequired","bool","node","CustomRoute","componentProps","Component","any","oneOfType","func","object","SourceEditModal","lazy","SourceRemoveModal","AddApplication","AddSourceWizard","module","default","SourcesPage","showEmptyState","setShowEmptyState","checkEmptyState","setCheckEmptyState","setFilterValue","loadingError","setLoadingError","hasWritePermissions","history","useLocation","pageSize","fetchingError","paginationClicked","Promise","all","loadSourceTypes","loadAppTypes","loadEntities","parseQuery","error","hasSomeFilter","entries","updateQuery","onSetPage","_e","page","pageAndSize","maximumPageNumber","Math","ceil","max","paginationConfig","itemCount","perPage","onPerPageSelect","paginationConfigBottom","dropDirection","isCompact","showPaginationLoader","isErrored","fallback","exact","applicationTypes","onClose","afterSuccess","hideSourcesButton","PageHeader","Section","PrimaryToolbar","pagination","actionsConfig","Tooltip","content","tabIndex","filterConfig","items","filterValues","onChange","activeFiltersConfig","filters","onDelete","deleteAll","curr","chip","removeChips"],"mappings":"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","file":"js/sourcePage.b9da2f59f75730cd4843.js","sourcesContent":["import React from 'react';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport { clearFilters } from '../../redux/sources/actions';\n\nconst EmptyStateTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  return (\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={SearchIcon} />\n        <Title headingLevel=\"h2\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'sources.noResultsFoundTitle',\n            defaultMessage: 'No sources found',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage({\n            id: 'sources.noResultsFoundDescription',\n            defaultMessage: 'No sources match the filter criteria. Remove all filters or clear all filters to show sources.',\n          })}\n        </EmptyStateBody>\n        <Button variant=\"link\" onClick={() => dispatch(clearFilters())}>\n          {intl.formatMessage({\n            id: 'sources.clearAllFilters',\n            defaultMessage: 'Clear all filters',\n          })}\n        </Button>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default EmptyStateTable;\n","import { useSelector } from 'react-redux';\n\nexport const useHasWritePermissions = () => {\n  const { orgAdmin, writePermissions } = useSelector(({ user }) => ({\n    orgAdmin: user?.isOrgAdmin,\n    writePermissions: user?.writePermissions,\n  }));\n\n  if (typeof orgAdmin !== 'boolean' && typeof writePermissions !== 'boolean') {\n    return undefined;\n  }\n\n  return !!orgAdmin || !!writePermissions;\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, sortable, wrappable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\n\nimport { sortEntities } from '../../redux/sources/actions';\nimport { PlaceHolderTable, RowWrapperLoader } from './loaders';\nimport { sourcesColumns, COLUMN_COUNT } from '../../views/sourcesViewDefinition';\nimport EmptyStateTable from './EmptyStateTable';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { replaceRouteId, routes } from '../../Routes';\n\nconst itemToCells = (item, columns, sourceTypes, appTypes) =>\n  columns\n    .filter((column) => column.title || column.hidden)\n    .map((col) => ({\n      title: col.formatter\n        ? col.formatter(item[col.value], item, {\n            sourceTypes,\n            appTypes,\n          })\n        : item[col.value] || '',\n    }));\n\nconst renderSources = (entities, columns, sourceTypes, appTypes, removingSources) =>\n  entities\n    .filter(({ hidden }) => !hidden)\n    .reduce((acc, item) => {\n      const isDeleting = removingSources.includes(item.id);\n\n      return [\n        ...acc,\n        {\n          ...item,\n          isOpen: !!item.expanded,\n          cells: itemToCells(item, columns, sourceTypes, appTypes),\n          disableActions: isDeleting,\n          isDeleting,\n        },\n      ];\n    }, []);\n\nexport const prepareColumnsCells = (columns) =>\n  columns\n    .filter((column) => column.title || column.hidden)\n    .map((column) => ({\n      title: column.title || '',\n      value: column.value,\n      hidden: column.hidden,\n      ...(column.sortable && { transforms: [sortable, wrappable] }),\n    }));\n\nconst reducer = (state, payload) => ({ ...state, ...payload });\n\nconst initialState = (columns) => ({\n  rows: [],\n  sortBy: {},\n  isLoaded: false,\n  cells: prepareColumnsCells(columns),\n});\n\nexport const insertEditAction = (actions, intl, push, isOrgAdmin, disabledProps) =>\n  actions.splice(1, 0, {\n    title: intl.formatMessage({\n      id: 'sources.edit',\n      defaultMessage: 'Edit',\n    }),\n    onClick: (_ev, _i, { id }) => push(replaceRouteId(routes.sourcesEdit.path, id)),\n    ...(!isOrgAdmin ? disabledProps : { component: 'button' }),\n  });\n\nexport const actionResolver = (intl, push, isOrgAdmin) => (rowData) => {\n  const tooltip = intl.formatMessage({\n    id: 'sources.notAdminButton',\n    defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n  });\n\n  const disabledProps = {\n    tooltip,\n    isDisabled: true,\n    className: 'ins-c-sources__disabled-drodpown-item',\n  };\n\n  const actions = [\n    {\n      title: intl.formatMessage({\n        id: 'sources.manageApps',\n        defaultMessage: 'Manage applications',\n      }),\n      onClick: (_ev, _i, { id }) => push(replaceRouteId(routes.sourceManageApps.path, id)),\n      ...(!isOrgAdmin ? disabledProps : { component: 'button' }),\n    },\n    {\n      title: intl.formatMessage({\n        id: 'sources.remove',\n        defaultMessage: 'Remove',\n      }),\n      onClick: (_ev, _i, { id }) => push(replaceRouteId(routes.sourcesRemove.path, id)),\n      ...(!isOrgAdmin ? disabledProps : { component: 'button' }),\n    },\n  ];\n\n  const isSourceEditable = !rowData.imported;\n\n  if (isSourceEditable) {\n    insertEditAction(actions, intl, push, isOrgAdmin, disabledProps);\n  }\n\n  return actions;\n};\n\nconst SourcesTable = () => {\n  const { push } = useHistory();\n  const intl = useIntl();\n\n  const loaded = useIsLoaded();\n  const writePermissions = useHasWritePermissions();\n\n  const {\n    appTypes,\n    entities,\n    sourceTypes,\n    sourceTypesLoaded,\n    appTypesLoaded,\n    sortBy,\n    sortDirection,\n    numberOfEntities,\n    removingSources,\n  } = useSelector(({ sources }) => sources, shallowEqual);\n  const reduxDispatch = useDispatch();\n\n  const notSortable = numberOfEntities === 0 || !loaded;\n\n  const [state, dispatch] = useReducer(reducer, initialState(sourcesColumns(intl, notSortable)));\n\n  const refreshColumns = () => {\n    const columns = sourcesColumns(intl, notSortable);\n\n    return dispatch({\n      cells: prepareColumnsCells(columns),\n    });\n  };\n\n  const refreshSources = () => {\n    const columns = sourcesColumns(intl, notSortable);\n\n    return dispatch({\n      rows: renderSources(entities, columns, sourceTypes, appTypes, removingSources),\n      cells: prepareColumnsCells(columns),\n    });\n  };\n\n  useEffect(() => {\n    if (loaded && sourceTypesLoaded && appTypesLoaded) {\n      dispatch({ isLoaded: true });\n      refreshSources();\n    } else {\n      dispatch({ isLoaded: false });\n      refreshColumns();\n    }\n  }, [loaded, sourceTypesLoaded, appTypesLoaded]);\n\n  useEffect(() => {\n    if (state.isLoaded) {\n      refreshSources();\n    }\n  }, [entities, removingSources]);\n\n  let shownRows = state.rows;\n  if (numberOfEntities === 0 && state.isLoaded) {\n    shownRows = [\n      {\n        heightAuto: true,\n        cells: [\n          {\n            props: { colSpan: COLUMN_COUNT },\n            title: <EmptyStateTable />,\n          },\n        ],\n      },\n    ];\n  } else if (!loaded || !appTypesLoaded || !sourceTypesLoaded) {\n    shownRows = [\n      {\n        heightAuto: true,\n        cells: [\n          {\n            props: {\n              colSpan: COLUMN_COUNT,\n              className: 'sources-placeholder-row',\n            },\n            title: <PlaceHolderTable />,\n          },\n        ],\n      },\n    ];\n  }\n\n  return (\n    <Table\n      gridBreakPoint=\"grid-lg\"\n      aria-label={intl.formatMessage({\n        id: 'sources.list',\n        defaultMessage: 'List of Sources',\n      })}\n      onSort={(_event, key, direction) => reduxDispatch(sortEntities(state.cells[key].value, direction))}\n      sortBy={{\n        index: state.cells.map((cell) => (cell.hidden ? 'hidden' : cell.value)).indexOf(sortBy),\n        direction: sortDirection,\n      }}\n      rows={shownRows}\n      cells={state.cells}\n      actionResolver={loaded && numberOfEntities > 0 ? actionResolver(intl, push, writePermissions) : undefined}\n      rowWrapper={RowWrapperLoader}\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nexport default SourcesTable;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport WrenchIcon from '@patternfly/react-icons/dist/js/icons/wrench-icon';\n\nimport { Link } from 'react-router-dom';\nimport { routes } from '../Routes';\nimport { useHasWritePermissions } from '../hooks/useHasWritePermissions';\n\nconst SourcesEmptyState = () => {\n  const writePermissions = useHasWritePermissions();\n  const intl = useIntl();\n\n  return (\n    <Bullseye>\n      <EmptyState className=\"ins-c-sources__empty-state\">\n        <EmptyStateIcon icon={WrenchIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'sources.emptyStateTitle',\n            defaultMessage: 'No sources',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {writePermissions &&\n            intl.formatMessage({\n              id: 'sources.emptyStateBody',\n              defaultMessage: 'No sources have been defined. To start define a source.',\n            })}\n          {!writePermissions && (\n            <React.Fragment>\n              <br />\n              {intl.formatMessage({\n                id: 'sources.emptyStateBodyNotAdmin',\n                defaultMessage: 'To add a source, you must be granted write permissions from your Organization Administrator.',\n              })}\n            </React.Fragment>\n          )}\n        </EmptyStateBody>\n        {writePermissions ? (\n          <Link to={routes.sourcesNew.path}>\n            <Button className=\"pf-u-mt-xl\" variant=\"primary\">\n              {intl.formatMessage({\n                id: 'sources.emptyStateButton',\n                defaultMessage: 'Add source',\n              })}\n            </Button>\n          </Link>\n        ) : (\n          <Button variant=\"primary\" isDisabled>\n            {intl.formatMessage({\n              id: 'sources.emptyStateButton',\n              defaultMessage: 'Add source',\n            })}\n          </Button>\n        )}\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default SourcesEmptyState;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\n\nconst SourcesErrorState = () => {\n  const intl = useIntl();\n\n  return (\n    <Bullseye>\n      <EmptyState className=\"ins-c-sources__empty-state\">\n        <EmptyStateIcon icon={ExclamationCircleIcon} color=\"var(--pf-global--danger-color--100)\" />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'sources.errorStateTitle',\n            defaultMessage: 'Something went wrong',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage(\n            {\n              id: 'sources.errorStateBody',\n              defaultMessage:\n                'There was a problem processing the request. Try refreshing the page. If the problem persists, contact <a>Red Hat support.</a>',\n            },\n            {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <Text key=\"link\" component=\"a\" href=\"https://access.redhat.com/support\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  {chunks}\n                </Text>\n              ),\n            }\n          )}\n        </EmptyStateBody>\n        <Button className=\"pf-u-mt-xl\" variant=\"primary\" component=\"a\" href={window.location.href}>\n          {intl.formatMessage({\n            id: 'sources.retry',\n            defaultMessage: 'Retry',\n          })}\n        </Button>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default SourcesErrorState;\n","import awesomeDebounce from 'awesome-debounce-promise';\nimport { loadEntities, filterSources } from '../../redux/sources/actions';\n\nexport const debouncedFiltering = awesomeDebounce((refresh) => refresh(), 500);\n\nexport const afterSuccessLoadParameters = {\n  pageNumber: 1,\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n};\n\nexport const afterSuccess = (dispatch) => dispatch(loadEntities(afterSuccessLoadParameters));\n\nexport const prepareSourceTypeSelection = (sourceTypes) =>\n  sourceTypes.map(({ id, product_name }) => ({ label: product_name, value: id })).sort((a, b) => a.label.localeCompare(b.label));\n\nexport const prepareApplicationTypeSelection = (appTypes) =>\n  appTypes.map(({ id, display_name }) => ({ label: display_name, value: id })).sort((a, b) => a.label.localeCompare(b.label));\n\nexport const setFilter = (column, value, dispatch) =>\n  dispatch(\n    filterSources({\n      [column]: value,\n    })\n  );\n\nexport const chipsFormatters = (key, filterValue, sourceTypes, appTypes) =>\n  ({\n    name: () => ({ name: filterValue[key], key }),\n    source_type_id: () => ({\n      category: 'Source Type',\n      key,\n      chips: filterValue[key].map((id) => {\n        const sourceType = sourceTypes.find((type) => type.id === id);\n\n        return { name: sourceType ? sourceType.product_name : id, value: id };\n      }),\n    }),\n    applications: () => ({\n      category: 'Application',\n      key,\n      chips: filterValue[key].map((id) => {\n        const appType = appTypes.find((type) => type.id === id);\n\n        return { name: appType ? appType.display_name : id, value: id };\n      }),\n    }),\n  }[key] || (() => ({ name: key })));\n\nexport const prepareChips = (filterValue, sourceTypes, appTypes) =>\n  Object.keys(filterValue)\n    .map((key) =>\n      filterValue[key] && filterValue[key].length > 0 ? chipsFormatters(key, filterValue, sourceTypes, appTypes)() : undefined\n    )\n    .filter(Boolean);\n\nexport const removeChips = (chips, filterValue, deleteAll) => {\n  if (deleteAll) {\n    return Object.keys(filterValue).reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: undefined,\n      }),\n      {}\n    );\n  }\n\n  const chip = chips[0];\n\n  return {\n    ...filterValue,\n    [chip.key]: chip.chips ? filterValue[chip.key].filter((value) => value !== chip.chips[0].value) : undefined,\n  };\n};\n\nexport const loadedTypes = (types, loaded) => (loaded && types.length > 0 ? types : undefined);\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { routes } from '../../Routes';\n\nconst RedirectNoWriteAccess = () => {\n  const intl = useIntl();\n\n  const writePermissions = useHasWritePermissions();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (writePermissions === false) {\n      const title = intl.formatMessage({\n        id: 'sources.insufficietnPerms',\n        defaultMessage: 'Insufficient permissions',\n      });\n      const description = intl.formatMessage({\n        id: 'sources.notAdminButton',\n        defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n      });\n\n      dispatch(addMessage(title, 'danger', description));\n    }\n  }, [writePermissions]);\n\n  if (writePermissions === false) {\n    return <Redirect to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoWriteAccess;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage, addHiddenSource } from '../../redux/sources/actions';\nimport { doLoadSource } from '../../api/entities';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { routes } from '../../Routes';\n\nconst RedirectNoId = () => {\n  const { id } = useParams();\n  const intl = useIntl();\n\n  const loaded = useIsLoaded();\n\n  const { appTypesLoaded, sourceTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n  const dispatch = useDispatch();\n\n  const [applicationIsLoaded, setIsApplicationLoaded] = useState(false);\n\n  useEffect(() => {\n    if (loaded && appTypesLoaded && sourceTypesLoaded) {\n      doLoadSource(id)\n        .then(({ sources: [source] }) => dispatch(addHiddenSource(source)))\n        .then(() => {\n          dispatch(\n            addMessage(\n              intl.formatMessage({\n                id: 'sources.sourceNotFoundTitle',\n                defaultMessage: 'Requested source was not found',\n              }),\n              'danger',\n              intl.formatMessage(\n                {\n                  id: 'sources.sourceNotFoundTitleDescription',\n                  defaultMessage: 'Source with { id } was not found. Try it again later.',\n                },\n                { id }\n              )\n            )\n          );\n          setIsApplicationLoaded(true);\n        });\n    }\n  }, [loaded, appTypesLoaded, sourceTypesLoaded]);\n\n  if (applicationIsLoaded) {\n    return <Redirect to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoId;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport RedirectNoWriteAccess from '../RedirectNoWriteAccess/RedirectNoWriteAccess';\nimport { useSource } from '../../hooks/useSource';\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\n\nconst CustomRouteInternal = ({ route, children }) => {\n  const source = route.redirectNoId && useSource();\n\n  if (!source && route.redirectNoId) {\n    return <RedirectNoId />;\n  }\n\n  return (\n    <React.Fragment>\n      {route.writeAccess && <RedirectNoWriteAccess />}\n      {children}\n    </React.Fragment>\n  );\n};\n\nCustomRouteInternal.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst CustomRoute = ({ route, componentProps, Component, ...props }) => (\n  <Route {...props} path={route.path}>\n    <CustomRouteInternal route={route}>\n      <Component {...componentProps} />\n    </CustomRouteInternal>\n  </Route>\n);\n\nCustomRoute.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n  }).isRequired,\n  componentProps: PropTypes.any,\n  Component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n};\n\nexport default CustomRoute;\n","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { useIntl } from 'react-intl';\n\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/cjs/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\nimport { loadAppTypes, loadEntities, loadSourceTypes, filterSources, pageAndSize } from '../redux/sources/actions';\nimport SourcesTable from '../components/SourcesTable/SourcesTable';\nimport SourcesEmptyState from '../components/SourcesEmptyState';\nimport SourcesErrorState from '../components/SourcesErrorState';\nimport { routes } from '../Routes';\n\nconst SourceEditModal = lazy(() => import(/* webpackChunkName: \"edit\" */ '../components/SourceEditForm/SourceEditModal'));\nconst SourceRemoveModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"remove\" */\n    '../components/SourceRemoveModal/SourceRemoveModal'\n  )\n);\nconst AddApplication = lazy(() => import(/* webpackChunkName: \"addApp\" */ '../components/AddApplication/AddApplication'));\nconst AddSourceWizard = lazy(() =>\n  import(\n    /* webpackChunkName: \"addSource\" */ '@redhat-cloud-services/frontend-components-sources/cjs/addSourceWizard'\n  ).then((module) => ({ default: module.AddSourceWizard }))\n);\n\nimport {\n  prepareChips,\n  removeChips,\n  setFilter,\n  debouncedFiltering,\n  prepareSourceTypeSelection,\n  afterSuccess,\n  loadedTypes,\n  prepareApplicationTypeSelection,\n} from './Sources/helpers';\nimport { useIsLoaded } from '../hooks/useIsLoaded';\nimport { useHasWritePermissions } from '../hooks/useHasWritePermissions';\nimport CustomRoute from '../components/CustomRoute/CustomRoute';\nimport { updateQuery, parseQuery } from '../utilities/urlQuery';\nimport { Tooltip } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { PaginationLoader } from '../components/SourcesTable/loaders';\n\nconst SourcesPage = () => {\n  const [showEmptyState, setShowEmptyState] = useState(false);\n  const [checkEmptyState, setCheckEmptyState] = useState(false);\n  const [filter, setFilterValue] = useState();\n  const [loadingError, setLoadingError] = useState();\n\n  const loaded = useIsLoaded();\n  const hasWritePermissions = useHasWritePermissions();\n\n  const history = useHistory();\n  const location = useLocation();\n  const intl = useIntl();\n\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n\n  const {\n    filterValue,\n    numberOfEntities,\n    appTypes,\n    pageSize,\n    pageNumber,\n    fetchingError,\n    sourceTypes,\n    paginationClicked,\n    appTypesLoaded,\n    sourceTypesLoaded,\n  } = sources;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    Promise.all([dispatch(loadSourceTypes()), dispatch(loadAppTypes()), dispatch(loadEntities(parseQuery()))])\n      .then(() => setCheckEmptyState(true))\n      .catch((error) => setLoadingError(error));\n  }, []);\n\n  const hasSomeFilter =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value)\n      .filter(Boolean).length > 0;\n\n  useEffect(() => {\n    if (checkEmptyState) {\n      setShowEmptyState(loaded && numberOfEntities === 0 && !hasSomeFilter);\n      updateQuery(sources);\n    }\n  }, [location, checkEmptyState]);\n\n  useEffect(() => {\n    if (filter !== filterValue.name) {\n      setFilterValue(filterValue.name);\n    }\n  }, [filterValue.name]);\n\n  useEffect(() => {\n    if (checkEmptyState && loaded) {\n      setShowEmptyState(numberOfEntities === 0 && !hasSomeFilter);\n    }\n  }, [loaded]);\n\n  const onSetPage = (_e, page) => dispatch(pageAndSize(page, pageSize));\n\n  const onPerPageSelect = (_e, perPage) => dispatch(pageAndSize(1, perPage));\n\n  const maximumPageNumber = Math.ceil(numberOfEntities / pageSize);\n\n  useEffect(() => {\n    if (loaded && numberOfEntities > 0 && pageNumber > Math.max(maximumPageNumber, 1)) {\n      onSetPage({}, maximumPageNumber);\n    }\n  });\n\n  const paginationConfig = {\n    itemCount: numberOfEntities,\n    page: pageNumber,\n    perPage: pageSize,\n    onSetPage,\n    onPerPageSelect,\n    className: 'top-pagination',\n  };\n\n  const paginationConfigBottom = {\n    ...paginationConfig,\n    dropDirection: 'up',\n    variant: 'bottom',\n    isCompact: false,\n    className: 'bottom-pagination',\n  };\n\n  const showPaginationLoader = (!loaded || !appTypesLoaded || !sourceTypesLoaded) && !paginationClicked;\n\n  const mainContent = () => (\n    <React.Fragment>\n      <PrimaryToolbar\n        pagination={showPaginationLoader ? <PaginationLoader /> : numberOfEntities > 0 ? paginationConfig : undefined}\n        actionsConfig={\n          hasWritePermissions\n            ? {\n                actions: [\n                  <Link to={routes.sourcesNew.path} key=\"addSourceButton\">\n                    <Button variant=\"primary\" id=\"addSourceButton\">\n                      {intl.formatMessage({\n                        id: 'sources.addSource',\n                        defaultMessage: 'Add source',\n                      })}\n                    </Button>\n                  </Link>,\n                ],\n              }\n            : {\n                actions: [\n                  <Tooltip\n                    content={intl.formatMessage({\n                      id: 'sources.notAdminAddButton',\n                      defaultMessage:\n                        'To add a source, you must be granted write permissions from your Organization Administrator.',\n                    })}\n                    key=\"addSourceButton\"\n                  >\n                    <span tabIndex=\"0\">\n                      <Button variant=\"primary\" isDisabled id=\"addSourceButton\">\n                        {intl.formatMessage({\n                          id: 'sources.addSource',\n                          defaultMessage: 'Add source',\n                        })}\n                      </Button>\n                    </span>\n                  </Tooltip>,\n                ],\n              }\n        }\n        filterConfig={{\n          items: [\n            {\n              label: intl.formatMessage({\n                id: 'sources.name',\n                defaultMessage: 'Name',\n              }),\n              filterValues: {\n                'aria-label': intl.formatMessage({\n                  id: 'sources.filterByName',\n                  defaultMessage: 'Filter by name',\n                }),\n                onChange: (_event, value) => {\n                  setFilterValue(value);\n                  debouncedFiltering(() => setFilter('name', value, dispatch));\n                },\n                value: filter,\n              },\n            },\n            {\n              label: intl.formatMessage({\n                id: 'sources.type',\n                defaultMessage: 'Type',\n              }),\n              type: 'checkbox',\n              filterValues: {\n                onChange: (_event, value) => setFilter('source_type_id', value, dispatch),\n                items: prepareSourceTypeSelection(sourceTypes || []),\n                value: filterValue.source_type_id,\n              },\n            },\n            {\n              label: intl.formatMessage({\n                id: 'sources.application',\n                defaultMessage: 'Application',\n              }),\n              type: 'checkbox',\n              filterValues: {\n                onChange: (_event, value) => setFilter('applications', value, dispatch),\n                items: prepareApplicationTypeSelection(appTypes || []),\n                value: filterValue.applications,\n              },\n            },\n          ],\n        }}\n        activeFiltersConfig={{\n          filters: prepareChips(filterValue, sourceTypes, appTypes),\n          onDelete: (_event, chips, deleteAll) => dispatch(filterSources(removeChips(chips, filterValue, deleteAll))),\n        }}\n      />\n      <SourcesTable />\n      <PrimaryToolbar\n        pagination={showPaginationLoader ? <PaginationLoader /> : numberOfEntities > 0 ? paginationConfigBottom : undefined}\n      />\n    </React.Fragment>\n  );\n\n  const isErrored = loadingError || fetchingError;\n\n  return (\n    <React.Fragment>\n      <Suspense fallback={null}>\n        <CustomRoute exact route={routes.sourceManageApps} Component={AddApplication} />\n        <CustomRoute exact route={routes.sourcesRemove} Component={SourceRemoveModal} />\n        <CustomRoute\n          exact\n          route={routes.sourcesNew}\n          Component={AddSourceWizard}\n          componentProps={{\n            sourceTypes: loadedTypes(sourceTypes, sourceTypesLoaded),\n            applicationTypes: loadedTypes(appTypes, appTypesLoaded),\n            isOpen: true,\n            onClose: () => history.push(routes.sources.path),\n            afterSuccess: (source) => afterSuccess(dispatch, source),\n            hideSourcesButton: true,\n          }}\n        />\n        <CustomRoute exact route={routes.sourcesEdit} Component={SourceEditModal} />\n      </Suspense>\n      <PageHeader>\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n      </PageHeader>\n      <Section type=\"content\">\n        {showEmptyState && <SourcesEmptyState />}\n        {isErrored && <SourcesErrorState />}\n        {!showEmptyState && !isErrored && mainContent()}\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport default SourcesPage;\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nexport const useSource = () => {\n  const { id } = useParams();\n  const source = useSelector(({ sources }) => sources.entities.find((source) => source.id === id));\n\n  return source;\n};\n","import { useSelector } from 'react-redux';\n\nexport const useIsLoaded = () => {\n  const isLoaded = useSelector(({ sources }) => sources.loaded);\n\n  return isLoaded <= 0;\n};\n"],"sourceRoot":""}