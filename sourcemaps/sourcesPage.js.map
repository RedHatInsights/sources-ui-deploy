{"version":3,"sources":["webpack:///./src/components/SourcesTable/EmptyStateTable.js","webpack:///./src/components/SourcesTable/SourcesEmptyState.js","webpack:///./src/components/SourcesTable/SourcesTable.js","webpack:///./src/components/SourcesErrorState.js","webpack:///./src/pages/Sources/helpers.js","webpack:///./src/components/TabNavigation.js","webpack:///./src/components/CloudTiles/CloudEmptyState.js","webpack:///./src/pages/Sources.js","webpack:///./src/hooks/useSource.js","webpack:///./src/hooks/useIsLoaded.js","webpack:///./src/components/RedirectNoId/RedirectNoId.js","webpack:///./src/components/RedirectNoWriteAccess/RedirectNoWriteAccess.js","webpack:///./src/components/CustomRoute/CustomRoute.js"],"names":["EmptyStateTable","intl","useIntl","dispatch","useDispatch","Bullseye","EmptyState","variant","EmptyStateVariant","small","EmptyStateIcon","icon","SearchIcon","Title","headingLevel","size","formatMessage","id","defaultMessage","EmptyStateBody","Button","onClick","clearFilters","SourcesEmptyState","activeVendor","useSelector","sources","className","PlusIcon","CLOUD_VENDOR","itemToCells","item","columns","sourceTypes","appTypes","filter","column","title","hidden","map","col","formatter","value","renderSources","entities","removingSources","reduce","acc","isDeleting","includes","isOpen","expanded","cells","disableActions","prepareColumnsCells","transforms","wrappable","sortable","reducer","state","payload","actionResolver","push","isOrgAdmin","rowData","disabledProps","tooltip","isDisabled","actions","imported","splice","_ev","_i","replaceRouteId","routes","sourcesDetail","path","component","insertEditAction","sourcesRemove","SourcesTable","useHistory","loaded","useIsLoaded","writePermissions","useHasWritePermissions","shallowEqual","sourceTypesLoaded","appTypesLoaded","sortBy","sortDirection","numberOfEntities","filterValue","reduxDispatch","notSortable","useReducer","sourcesColumns","rows","isLoaded","refreshSources","useEffect","refreshColumns","shownRows","hasSomeFilter","Object","entries","Array","isArray","length","Boolean","heightAuto","props","colSpan","COLUMN_COUNT","Table","gridBreakPoint","aria-label","onSort","_event","key","direction","sortEntities","index","cell","indexOf","undefined","rowWrapper","RowWrapperLoader","SourcesErrorState","ExclamationCircleIcon","color","a","chunks","Text","href","target","rel","window","location","debouncedFiltering","awesomeDebounce","refresh","afterSuccessLoadParameters","pageNumber","prepareSourceTypeSelection","vendor","CLOUD_VENDORS","REDHAT_VENDOR","label","product_name","sort","b","localeCompare","prepareApplicationTypeSelection","display_name","setFilter","filterSources","prepareChips","keys","name","source_type_id","category","chips","sourceType","find","type","applications","appType","chipsFormatters","loadedTypes","types","TabNavigation","Tabs","activeKey","onSelect","_e","setActiveVendor","isFilled","Tab","eventKey","Fragment","TabTitleIcon","TabTitleText","CloudEmptyState","setSelectedType","Card","CardTitle","CardBody","CloudTiles","CardFooter","ProvidersLink","propTypes","PropTypes","func","isRequired","SourceRemoveModal","lazy","AddSourceWizard","then","module","default","SourcesPage","useState","setFilterValue","selectedType","entitiesLoaded","hasWritePermissions","history","pageSize","fetchingError","paginationClicked","onSetPage","page","pageAndSize","maximumPageNumber","Math","ceil","max","paginationConfig","itemCount","perPage","onPerPageSelect","paginationConfigBottom","dropDirection","isCompact","showPaginationLoader","showEmptyState","showInfoCards","fallback","CustomRoute","exact","route","Component","sourcesNew","componentProps","applicationTypes","onClose","_values","source","afterSuccess","loadEntities","hideSourcesButton","returnButtonTitle","PageHeader","Section","CloudCards","PrimaryToolbar","pagination","actionsConfig","to","Tooltip","content","tabIndex","filterConfig","items","filterValues","onChange","filterVendorAppTypes","activeFiltersConfig","filters","onDelete","deleteAll","curr","chip","removeChips","useSource","useParams","RedirectNoId","applicationIsLoaded","setIsApplicationLoaded","doLoadSource","addHiddenSource","addMessage","RedirectNoWriteAccess","description","CustomRouteInternal","children","redirectNoId","writeAccess","shape","string","bool","node","any","oneOfType","object"],"mappings":"wXA6CeA,EA/BS,WACtB,IAAMC,EAAOC,cACPC,EAAWC,wBAEjB,OACE,kBAACC,EAAA,SAAD,KACE,kBAACC,EAAA,WAAD,CAAYC,QAASC,oBAAkBC,OACrC,kBAACC,EAAA,eAAD,CAAgBC,KAAMC,MACtB,kBAACC,EAAA,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3Bd,EAAKe,cAAc,CAClBC,GAAI,8BACJC,eAAgB,sBAGpB,kBAACC,EAAA,eAAD,KACGlB,EAAKe,cAAc,CAClBC,GAAI,oCACJC,eAAgB,oGAGpB,kBAACE,EAAA,OAAD,CAAQb,QAAQ,OAAOc,QAAS,kBAAMlB,EAASmB,iBAC5CrB,EAAKe,cAAc,CAClBC,GAAI,0BACJC,eAAgB,0B,oDCQbK,EAhCW,WACxB,IAAMtB,EAAOC,cACPsB,EAAeC,uBAAY,qBAAGC,QAAsBF,gBAE1D,OACE,kBAACnB,EAAA,SAAD,KACE,kBAACC,EAAA,WAAD,CAAYqB,UAAU,8BACpB,kBAACjB,EAAA,eAAD,CAAgBC,KAAMiB,MACtB,kBAACf,EAAA,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3Bd,EAAKe,cAAc,CAClBC,GAAI,0BACJC,eAAgB,gBAGpB,kBAACC,EAAA,eAAD,KACGlB,EAAKe,cACJ,CACEC,GAAI,yBACJC,eACE,+GAEJ,CACEM,aACEA,IAAiBK,IAAe5B,EAAKe,cAAc,CAAEC,GAAI,gBAAiBC,eAAgB,UAAa,gB,ikBCrBvH,IAAMY,EAAc,SAACC,EAAMC,EAASC,EAAaC,GAA7B,OAClBF,EACGG,QAAO,SAACC,GAAD,OAAYA,EAAOC,OAASD,EAAOE,UAC1CC,KAAI,SAACC,GAAD,MAAU,CACbH,MAAOG,EAAIC,UACPD,EAAIC,UAAUV,EAAKS,EAAIE,OAAQX,EAAM,CACnCE,cACAC,aAEFH,EAAKS,EAAIE,QAAU,QAGvBC,EAAgB,SAACC,EAAUZ,EAASC,EAAaC,EAAUW,GAA3C,OACpBD,EACGT,QAAO,qBAAGG,UACVQ,QAAO,SAACC,EAAKhB,GACZ,IAAMiB,EAAaH,EAAgBI,SAASlB,EAAKd,IAEjD,oBACK8B,GADL,QAGOhB,GAHP,IAIImB,SAAUnB,EAAKoB,SACfC,MAAOtB,EAAYC,EAAMC,EAASC,EAAaC,GAC/CmB,eAAgBL,EAChBA,mBAGH,KAEMM,EAAsB,SAACtB,GAAD,OACjCA,EACGG,QAAO,SAACC,GAAD,OAAYA,EAAOC,OAASD,EAAOE,UAC1CC,KAAI,SAACH,GAAD,UACHC,MAAOD,EAAOC,OAAS,GACvBK,MAAON,EAAOM,MACdJ,OAAQF,EAAOE,OACfiB,WAAY,CAACC,MACTpB,EAAOqB,UAAY,CAAEF,WAAY,CAACE,IAAUD,WAGhDE,EAAU,SAACC,EAAOC,GAAR,cAA0BD,GAAUC,IAmBvCC,EAAiB,SAAC5D,EAAM6D,EAAMC,GAAb,OAA4B,SAACC,GACzD,IAKMC,EAAgB,CACpBC,QANcjE,EAAKe,cAAc,CACjCC,GAAI,yBACJC,eAAgB,wGAKhBiD,YAAY,EACZxC,UAAW,yCAGPyC,EAAU,GAiBhB,OAf0BJ,EAAQK,UAxBJ,SAACD,EAASnE,EAAM6D,EAAMC,EAAYE,GAChEG,EAAQE,OAAO,EAAG,EAAlB,GACEjC,MAAOpC,EAAKe,cAAc,CACxBC,GAAI,eACJC,eAAgB,SAElBG,QAAS,SAACkD,EAAKC,EAAN,OAAYvD,EAAZ,EAAYA,GAAZ,OAAqB6C,EAAKW,YAAeC,IAAOC,cAAcC,KAAM3D,MACxE8C,EAA6B,CAAEc,UAAW,UAA7BZ,IAoBlBa,CAAiBV,EAASnE,EAAM6D,EAAMC,EAAYE,GAGpDG,EAAQN,KAAR,GACEzB,MAAOpC,EAAKe,cAAc,CACxBC,GAAI,iBACJC,eAAgB,WAElBG,QAAS,SAACkD,EAAKC,EAAN,OAAYvD,EAAZ,EAAYA,GAAZ,OAAqB6C,EAAKW,YAAeC,IAAOK,cAAcH,KAAM3D,MACxE8C,EAA6B,CAAEc,UAAW,UAA7BZ,IAGbG,IAuHMY,EApHM,WAAM,IAjDLhD,EAkDZ8B,EAASmB,cAATnB,KACF7D,EAAOC,cAEPgF,EAASC,cACTC,EAAmBC,cALA,EAkBrB5D,uBAAY,qBAAGC,UAAuB4D,gBAVxCpD,EARuB,EAQvBA,SACAU,EATuB,EASvBA,SACAX,EAVuB,EAUvBA,YACAsD,EAXuB,EAWvBA,kBACAC,EAZuB,EAYvBA,eACAC,EAbuB,EAavBA,OACAC,EAduB,EAcvBA,cACAC,EAfuB,EAevBA,iBACA9C,EAhBuB,EAgBvBA,gBACA+C,EAjBuB,EAiBvBA,YAEIC,EAAgBzF,wBAEhB0F,EAAmC,IAArBH,IAA2BT,EArBtB,EAuBCa,qBAAWrC,GAxEjB1B,EAwEuCgE,YAAe/F,EAAM6F,GAxE/C,CACjCG,KAAM,GACNR,OAAQ,GACRS,UAAU,EACV9C,MAAOE,EAAoBtB,MA6CF,WAuBlB2B,EAvBkB,KAuBXxD,EAvBW,KAiCnBgG,EAAiB,WACrB,IAAMnE,EAAUgE,YAAe/F,EAAM6F,GAErC,OAAO3F,EAAS,CACd8F,KAAMtD,EAAcC,EAAUZ,EAASC,EAAaC,EAAUW,GAC9DO,MAAOE,EAAoBtB,MAI/BoE,qBAAU,WACJlB,GAAUK,GAAqBC,GACjCrF,EAAS,CAAE+F,UAAU,IACrBC,MAEAhG,EAAS,CAAE+F,UAAU,IAtBF,WACrB,IAAMlE,EAAUgE,YAAe/F,EAAM6F,GAE9B3F,EAAS,CACdiD,MAAOE,EAAoBtB,KAmB3BqE,MAED,CAACnB,EAAQK,EAAmBC,IAE/BY,qBAAU,WACJzC,EAAMuC,UACRC,MAED,CAACvD,EAAUC,IAEd,IAAIyD,EAAY3C,EAAMsC,KACtB,GAAyB,IAArBN,GAA0BhC,EAAMuC,SAAU,CAC5C,IAAMK,EACJC,OAAOC,QAAQb,GACZrD,KAAI,2BAAQG,GAAR,kBAAmBA,KAAWgE,MAAMC,QAAQjE,IAAWgE,MAAMC,QAAQjE,IAAUA,EAAMkE,OAAS,MAClGzE,OAAO0E,SAASD,OAAS,EAE9BN,EAAY,CACV,CACEQ,YAAY,EACZ1D,MAAO,CACL,CACE2D,MAAO,CAAEC,QAASC,KAClB5E,MAAOkE,EAAgB,kBAAC,EAAD,MAAsB,kBAAC,EAAD,eAK3CrB,GAAWM,GAAmBD,IACxCe,EAAY,CACV,CACEQ,YAAY,EACZ1D,MAAO,CACL,CACE2D,MAAO,CACLC,QAASC,IACTtF,UAAW,2BAEbU,MAAO,kBAAC,IAAD,WAOjB,OACE,kBAAC6E,EAAA,EAAD,CACEC,eAAe,UACfC,aAAYnH,EAAKe,cAAc,CAC7BC,GAAI,eACJC,eAAgB,oBAElBmG,OAAQ,SAACC,EAAQC,EAAKC,GAAd,OAA4B3B,EAAc4B,YAAa9D,EAAMP,MAAMmE,GAAK7E,MAAO8E,KACvF/B,OAAQ,CACNiC,MAAO/D,EAAMP,MAAMb,KAAI,SAACoF,GAAD,OAAWA,EAAKrF,OAAS,SAAWqF,EAAKjF,SAAQkF,QAAQnC,GAChF+B,UAAW9B,GAEbO,KAAMK,EACNlD,MAAOO,EAAMP,MACbS,eAAgBqB,GAAUS,EAAmB,EAAI9B,EAAe5D,EAAM6D,EAAMsB,QAAoByC,EAChGC,WAAYC,KAEZ,kBAAC,IAAD,MACA,kBAAC,IAAD,Q,0BCpKSC,GAzCW,WACxB,IAAM/H,EAAOC,cAEb,OACE,kBAACG,EAAA,SAAD,KACE,kBAACC,EAAA,WAAD,CAAYqB,UAAU,8BACpB,kBAACjB,EAAA,eAAD,CAAgBC,KAAMsH,IAAuBC,MAAM,wCACnD,kBAACrH,EAAA,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3Bd,EAAKe,cAAc,CAClBC,GAAI,0BACJC,eAAgB,0BAGpB,kBAACC,EAAA,eAAD,KACGlB,EAAKe,cACJ,CACEC,GAAI,yBACJC,eACE,iIAEJ,CAEEiH,EAAG,SAACC,GAAD,OACD,kBAACC,EAAA,KAAD,CAAMd,IAAI,OAAO1C,UAAU,IAAIyD,KAAK,oCAAoCC,OAAO,SAASC,IAAI,uBACzFJ,OAMX,kBAAChH,EAAA,OAAD,CAAQO,UAAU,aAAapB,QAAQ,UAAUsE,UAAU,IAAIyD,KAAMG,OAAOC,SAASJ,MAClFrI,EAAKe,cAAc,CAClBC,GAAI,gBACJC,eAAgB,c,+kBC1CrB,IAAMyH,GAAqBC,oBAAgB,SAACC,GAAD,OAAaA,MAAW,KAE7DC,GAA6B,CACxCC,WAAY,EACZtD,OAAQ,aACRC,cAAe,QAKJsD,GAA6B,SAAC/G,EAAaT,GAAd,OACxCS,EACGE,QAAO,gBAAG8G,EAAH,EAAGA,OAAH,OAAiBzH,IAAiBK,IAAeqH,IAAcjG,SAASgG,GAAUA,IAAWE,OACpG5G,KAAI,gBAAGtB,EAAH,EAAGA,GAAH,MAA2B,CAAEmI,MAA7B,EAAOC,aAA2C3G,MAAOzB,MAC7DqI,MAAK,SAACnB,EAAGoB,GAAJ,OAAUpB,EAAEiB,MAAMI,cAAcD,EAAEH,WAE/BK,GAAkC,SAACvH,GAAD,OAC7CA,EAASK,KAAI,gBAAGtB,EAAH,EAAGA,GAAH,MAA2B,CAAEmI,MAA7B,EAAOM,aAA2ChH,MAAOzB,MAAOqI,MAAK,SAACnB,EAAGoB,GAAJ,OAAUpB,EAAEiB,MAAMI,cAAcD,EAAEH,WAEzGO,GAAY,SAACvH,EAAQM,EAAOvC,GAAhB,OACvBA,EACEyJ,YAAc,OACXxH,EAASM,MA2BHmH,GAAe,SAACjE,EAAa3D,EAAaC,GAA3B,OAC1BsE,OAAOsD,KAAKlE,GACTrD,KAAI,SAACgF,GAAD,OACH3B,EAAY2B,IAAQ3B,EAAY2B,GAAKX,OAAS,EA1BrB,SAACW,EAAK3B,EAAa3D,EAAaC,GAAhC,MAC5B,CACC6H,KAAM,iBAAO,CAAEA,KAAMnE,EAAY2B,GAAMA,QACvCyC,eAAgB,iBAAO,CACrBC,SAAU,cACV1C,MACA2C,MAAOtE,EAAY2B,GAAKhF,KAAI,SAACtB,GAC3B,IAAMkJ,EAAalI,EAAYmI,MAAK,SAACC,GAAD,OAAUA,EAAKpJ,KAAOA,KAE1D,MAAO,CAAE8I,KAAMI,EAAaA,EAAWd,aAAepI,EAAIyB,MAAOzB,QAGrEqJ,aAAc,iBAAO,CACnBL,SAAU,cACV1C,MACA2C,MAAOtE,EAAY2B,GAAKhF,KAAI,SAACtB,GAC3B,IAAMsJ,EAAUrI,EAASkI,MAAK,SAACC,GAAD,OAAUA,EAAKpJ,KAAOA,KAEpD,MAAO,CAAE8I,KAAMQ,EAAUA,EAAQb,aAAezI,EAAIyB,MAAOzB,SAG/DsG,IAAS,iBAAO,CAAEwC,KAAMxC,IAK4BiD,CAAgBjD,EAAK3B,EAAa3D,EAAaC,EAA/CsI,QAA6D3C,KAEhH1F,OAAO0E,UAqBC4D,GAAc,SAACC,EAAOxF,GAAR,OAAoBA,GAAUwF,EAAM9D,OAAS,EAAI8D,OAAQ7C,G,qGChCrE8C,GAjCO,WACpB,IAAM1K,EAAOC,cACPC,EAAWC,wBACXoB,EAAeC,uBAAY,qBAAGC,QAAsBF,gBAE1D,OACE,kBAACoJ,GAAA,KAAD,CAAMC,UAAWrJ,EAAcsJ,SAAU,SAACC,EAAIxD,GAAL,OAAapH,EAAS6K,YAAgBzD,KAAO5F,UAAU,aAAasJ,UAAQ,GACnH,kBAACC,GAAA,IAAD,CACEC,SAAUtJ,IACVQ,MACE,kBAAC,IAAM+I,SAAP,KACE,kBAACC,GAAA,aAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,aAAD,KAAerL,EAAKe,cAAc,CAAEC,GAAI,uBAAwBC,eAAgB,sBAItF,kBAACgK,GAAA,IAAD,CACEC,SAAUhC,IACV9G,MACE,kBAAC,IAAM+I,SAAP,KACE,kBAACC,GAAA,aAAD,KACE,kBAAC,KAAD,OAEF,kBAACC,GAAA,aAAD,KAAerL,EAAKe,cAAc,CAAEC,GAAI,wBAAyBC,eAAgB,0B,sFCvBvFqK,GAAkB,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,gBACnBvL,EAAOC,cAEb,OACE,kBAACuL,GAAA,KAAD,CAAM9J,UAAU,kGACd,kBAAC+J,GAAA,UAAD,KACGzL,EAAKe,cAAc,CAClBC,GAAI,6BACJC,eAAgB,qDAGpB,kBAACyK,GAAA,SAAD,KACE,kBAACtD,EAAA,KAAD,KACGpI,EAAKe,cAAc,CAClBC,GAAI,mCACJC,eAAgB,iCAGpB,yBAAKS,UAAU,wCACb,kBAACiK,GAAA,EAAD,CAAYJ,gBAAiBA,MAGjC,kBAACK,GAAA,WAAD,CAAYlK,UAAU,gBACpB,kBAACmK,GAAA,EAAD,MACA,kBAACzD,EAAA,KAAD,CAAM1G,UAAU,2BACb1B,EAAKe,cACJ,CACEC,GAAI,+BACJC,eAAgB,mGAElB,CACEiH,EAAG,SAACC,GAAD,OACD,kBAACC,EAAA,KAAD,CAAMd,IAAI,OAAO1C,UAAU,IAAIyD,KAlCpB,mCAkC8CC,OAAO,SAASC,IAAI,uBAC1EJ,UAWnBmD,GAAgBQ,UAAY,CAC1BP,gBAAiBQ,KAAUC,KAAKC,YAGnBX,U,qkBChDf,IAAMY,GAAoBC,gBAAK,kBAC7B,uDAKIC,GAAkBD,gBAAK,kBAC3B,uEAEEE,MAAK,SAACC,GAAD,MAAa,CAAEC,QAASD,EAAOF,uBA6OzBI,UAtNK,WAAM,MACSC,qBADT,WACjBvK,EADiB,KACTwK,EADS,OAEgBD,qBAFhB,WAEjBE,EAFiB,KAEHpB,EAFG,KAIlBqB,EAAiB1H,cACjB2H,EAAsBzH,cAEtB0H,EAAU9H,cACVhF,EAAOC,cAEPwB,EAAUD,uBAAY,qBAAGC,UAAuB4D,gBAGpDM,EAWElE,EAXFkE,YACAD,EAUEjE,EAVFiE,iBACAzD,EASER,EATFQ,SACA8K,EAQEtL,EARFsL,SACAjE,EAOErH,EAPFqH,WACAkE,EAMEvL,EANFuL,cACAhL,EAKEP,EALFO,YACAiL,EAIExL,EAJFwL,kBACA1H,EAGE9D,EAHF8D,eACAD,EAEE7D,EAFF6D,kBACA/D,EACEE,EADFF,aAGI0D,EAAS2H,GAAkBtH,GAAqBC,EAEhDrF,EAAWC,wBAEjBgG,qBAAU,WACJjE,IAAWyD,EAAYmE,MACzB4C,EAAe/G,EAAYmE,QAE5B,CAACnE,EAAYmE,OAEhB,IAAMoD,EAAY,SAACpC,EAAIqC,GAAL,OAAcjN,EAASkN,YAAYD,EAAMJ,KAIrDM,EAAoBC,KAAKC,KAAK7H,EAAmBqH,GAEvD5G,qBAAU,WACJlB,GAAUS,EAAmB,GAAKoD,EAAawE,KAAKE,IAAIH,EAAmB,IAC7EH,EAAU,EAAIG,MAIlB,IAAMI,EAAmB,CACvBC,UAAWhI,EACXyH,KAAMrE,EACN6E,QAASZ,EACTG,YACAU,gBAfsB,SAAC9C,EAAI6C,GAAL,OAAiBzN,EAASkN,YAAY,EAAGO,KAgB/DjM,UAAW,kBAGPmM,EAAyB,SAC1BJ,GADuB,IAE1BK,cAAe,KACfxN,QAAS,SACTyN,WAAW,EACXrM,UAAW,sBAGPsM,IAAyB/I,GAAWM,GAAmBD,GAAuB2H,GAmG9E3G,EACJC,OAAOC,QAAQb,GACZrD,KAAI,2BAAQG,GAAR,kBAAmBA,KAAWgE,MAAMC,QAAQjE,IAAWgE,MAAMC,QAAQjE,IAAUA,EAAMkE,OAAS,MAClGzE,OAAO0E,SAASD,OAAS,EAExBsH,EAAiBhJ,GAA+B,IAArBS,IAA2BY,GAAiB/E,IAAiBK,IACxFsM,EAAgB3M,IAAiBK,MAAiBqM,EAExD,OACE,kBAAC,IAAM9C,SAAP,KACE,kBAAC,WAAD,CAAUgD,SAAU,MAClB,kBAACC,GAAA,EAAD,CAAaC,OAAK,EAACC,MAAO7J,IAAOK,cAAeyJ,UAAWrC,KAC3D,kBAACkC,GAAA,EAAD,CACEC,OAAK,EACLC,MAAO7J,IAAO+J,WACdD,UAAWnC,GACXqC,eAAgB,CACdzM,YAAawI,GAAYxI,EAAasD,GACtCoJ,iBAAkBlE,GAAYvI,EAAUsD,GACxCtC,QAAQ,EACR0L,QAAS,SAACC,EAASC,GACjBtD,OAAgB3D,GAChBiH,WAAQ7N,GAAK8L,EAAQjJ,KAAKW,YAAeC,IAAOC,cAAcC,KAAMkK,EAAO7N,KAAO8L,EAAQjJ,KAAKY,IAAOhD,QAAQkD,OAEhHmK,aAAc,SAACD,GAAD,OHhOE,SAAC3O,GAAD,OAAcA,EAAS6O,YAAalG,KGgO1BiG,CAAa5O,IACvC8O,mBAAmB,EACnBC,kBAAmBjP,EAAKe,cAAc,CAAEC,GAAI,4BAA6BC,eAAgB,2BACzF0L,mBAIN,kBAACuC,EAAA,WAAD,CAAYxN,UAAU,aACpB,kBAACwN,EAAA,gBAAD,CACE9M,MAAOpC,EAAKe,cAAc,CACxBC,GAAI,kBACJC,eAAgB,cAGpB,kBAAC,GAAD,OAEF,kBAACkO,EAAA,QAAD,CAAS/E,KAAK,WACX8D,GAAiB,kBAACkB,GAAA,EAAD,CAAY7D,gBAAiBA,IAC9CyB,GAAiB,kBAAC,GAAD,OAChBA,GAAiBiB,GAAkB,kBAAC,GAAD,CAAiB1C,gBAAiBA,KACrEyB,IAAkBiB,GA5IxB,kBAAC,IAAM9C,SAAP,KACE,kBAACkE,EAAA,eAAD,CACEC,WAAYtB,EAAuB,kBAAC,IAAD,MAAuBtI,EAAmB,EAAI+H,OAAmB7F,EACpG2H,cACE1C,EACI,CACE1I,QAAS,CACP,kBAAC,OAAD,CAAMqL,GAAI/K,IAAO+J,WAAW7J,KAAM2C,IAAI,mBACpC,kBAACnG,EAAA,OAAD,CAAQb,QAAQ,UAAUU,GAAG,mBAC1BhB,EAAKe,cAAc,CAClBC,GAAI,oBACJC,eAAgB,mBAM1B,CACEkD,QAAS,CACP,kBAACsL,GAAA,QAAD,CACEC,QAAS1P,EAAKe,cAAc,CAC1BC,GAAI,4BACJC,eACE,iGAEJqG,IAAI,mBAEJ,0BAAMqI,SAAS,KACb,kBAACxO,EAAA,OAAD,CAAQb,QAAQ,UAAU4D,YAAU,EAAClD,GAAG,mBACrChB,EAAKe,cAAc,CAClBC,GAAI,oBACJC,eAAgB,oBAQlC2O,aAAc,CACZC,MAAO,CACL,CACE1G,MAAOnJ,EAAKe,cAAc,CACxBC,GAAI,eACJC,eAAgB,SAElB6O,aAAc,CACZ,aAAc9P,EAAKe,cAAc,CAC/BC,GAAI,uBACJC,eAAgB,mBAElB8O,SAAU,SAAC1I,EAAQ5E,GACjBiK,EAAejK,GACfiG,IAAmB,kBAAMgB,GAAU,OAAQjH,EAAOvC,OAEpDuC,MAAOP,IAGX,CACEiH,MAAOnJ,EAAKe,cAAc,CACxBC,GAAI,eACJC,eAAgB,SAElBmJ,KAAM,WACN0F,aAAc,CACZC,SAAU,SAAC1I,EAAQ5E,GAAT,OAAmBiH,GAAU,iBAAkBjH,EAAOvC,IAChE2P,MAAO9G,GAA2B/G,GAAe,GAAIT,GACrDkB,MAAOkD,EAAYoE,iBAGvB,CACEZ,MAAOnJ,EAAKe,cAAc,CACxBC,GAAI,sBACJC,eAAgB,gBAElBmJ,KAAM,WACN0F,aAAc,CACZC,SAAU,SAAC1I,EAAQ5E,GAAT,OAAmBiH,GAAU,eAAgBjH,EAAOvC,IAC9D2P,MAAOrG,IAAgCvH,aAAA,EAAAA,EAAUC,OAAO8N,+BAAqBhO,MAAiB,IAC9FS,MAAOkD,EAAY0E,iBAK3B4F,oBAAqB,CACnBC,QAAStG,GAAajE,EAAa3D,EAAaC,GAChDkO,SAAU,SAAC9I,EAAQ4C,EAAOmG,GAAhB,OAA8BlQ,EAASyJ,YH9IhC,SAACM,EAAOtE,EAAayK,GAC9C,GAAIA,EACF,OAAO7J,OAAOsD,KAAKlE,GAAa9C,QAC9B,SAACC,EAAKuN,GAAN,UAAC,MACIvN,GADL,UAEGuN,OAAOzI,MAEV,IAIJ,IAAM0I,EAAOrG,EAAM,GAEnB,gBACKtE,GADL,UAEG2K,EAAKhJ,IAAMgJ,EAAKrG,MAAQtE,EAAY2K,EAAKhJ,KAAKpF,QAAO,SAACO,GAAD,OAAWA,IAAU6N,EAAKrG,MAAM,GAAGxH,cAASmF,IG+H7B2I,CAAYtG,EAAOtE,EAAayK,SAGnG,kBAAC,EAAD,MACA,kBAACf,EAAA,eAAD,CACEC,WAAYtB,EAAuB,kBAAC,IAAD,MAAuBtI,EAAmB,EAAImI,OAAyBjG,S,iCC/MlH,sDAGa4I,EAAY,WAAM,IACrBxP,EAAOyP,cAAPzP,GAGR,OAFeQ,uBAAY,qBAAGC,QAAsBkB,SAASwH,MAAK,SAAC0E,GAAD,OAAYA,EAAO7N,KAAOA,U,iCCL9F,8CAEakE,EAAc,WAGzB,OAFiB1D,uBAAY,qBAAGC,QAAsBwD,WAEnC,I,wICyDNyL,IAnDM,WAAM,IACjB1P,EAAOyP,cAAPzP,GACFhB,EAAOC,cACP4O,EAAS2B,cAETvL,EAASC,cALU,EAOqB1D,uBAAY,qBAAGC,UAAuB4D,gBAA5EE,EAPiB,EAOjBA,eAAgBD,EAPC,EAODA,kBAClBpF,EAAWC,wBARQ,EAU6BsM,oBAAS,GAVtC,WAUlBkE,EAVkB,KAUGC,EAVH,KA4CzB,OAhCAzK,qBAAU,WACJlB,GAAUM,GAAkBD,GAC9BuL,YAAa7P,GACVqL,MAAK,YAA2B,IAAdwC,EAAc,MAAxBpN,QAAwB,MAE/B,OADAvB,EAAS4Q,YAAgBjC,IAClBA,KAERxC,MAAK,SAACwC,GACAA,GACH3O,EACE6Q,YACE/Q,EAAKe,cAAc,CACjBC,GAAI,8BACJC,eAAgB,mCAElB,SACAjB,EAAKe,cACH,CACEC,GAAI,yCACJC,eAAgB,yDAElB,CAAED,SAMV4P,GAAuB,QAG5B,CAAC3L,EAAQM,EAAgBD,IAExBqL,IAAwB9B,EACnB,kBAAC,IAAD,CAAUW,GAAI/K,IAAOhD,QAAQkD,OAG/B,O,wJCrBMqM,EA7Be,WAC5B,IAAMhR,EAAOC,cAEPkF,EAAmBC,cAEnBlF,EAAWC,wBAiBjB,OAfAgG,qBAAU,WACR,IAAyB,IAArBhB,EAA4B,CAC9B,IAAM/C,EAAQpC,EAAKe,cAAc,CAC/BC,GAAI,4BACJC,eAAgB,6BAEZgQ,EAAcjR,EAAKe,cAAc,CACrCC,GAAI,yBACJC,eAAgB,wGAGlBf,EAAS6Q,YAAW3O,EAAO,SAAU6O,OAEtC,CAAC9L,KAEqB,IAArBA,EACK,kBAAC,IAAD,CAAUqK,GAAI/K,IAAOhD,QAAQkD,OAG/B,M,kBC3BHuM,EAAsB,SAAC,GAAwB,IAAtB5C,EAAsB,EAAtBA,MAAO6C,EAAe,EAAfA,SAGpC,QAFe7C,EAAM8C,cAAgBZ,gBAEtBlC,EAAM8C,aACZ,kBAACV,EAAA,EAAD,MAIP,kBAAC,IAAMvF,SAAP,KACGmD,EAAM+C,aAAe,kBAAC,EAAD,MACrBF,IAKPD,EAAoBpF,UAAY,CAC9BwC,MAAOvC,IAAUuF,MAAM,CACrB3M,KAAMoH,IAAUwF,OAAOtF,WACvBmF,aAAcrF,IAAUyF,KACxBH,YAAatF,IAAUyF,OACtBvF,WACHkF,SAAUpF,IAAU0F,KAAKxF,YAG3B,IAAMmC,EAAc,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAOG,EAAV,EAAUA,eAAgBF,EAA1B,EAA0BA,UAAczH,EAAxC,qDAClB,kBAAC,IAAD,OAAWA,EAAX,CAAkBnC,KAAM2J,EAAM3J,OAC5B,kBAAC,EAAD,CAAqB2J,MAAOA,GAC1B,kBAACC,EAAcE,MAKrBL,EAAYtC,UAAY,CACtBwC,MAAOvC,IAAUuF,MAAM,CACrB3M,KAAMoH,IAAUwF,OAAOtF,WACvBmF,aAAcrF,IAAUyF,KACxBH,YAAatF,IAAUyF,OACtBvF,WACHwC,eAAgB1C,IAAU2F,IAC1BnD,UAAWxC,IAAU4F,UAAU,CAAC5F,IAAUC,KAAMD,IAAU6F,SAAS3F,YAGtDmC","file":"js/sourcesPage.313eb10e7f522c114a3c.js","sourcesContent":["import React from 'react';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState, EmptyStateVariant } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { useIntl } from 'react-intl';\nimport { useDispatch } from 'react-redux';\n\nimport { clearFilters } from '../../redux/sources/actions';\n\nconst EmptyStateTable = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n\n  return (\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon icon={SearchIcon} />\n        <Title headingLevel=\"h2\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'sources.noResultsFoundTitle',\n            defaultMessage: 'No sources found',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage({\n            id: 'sources.noResultsFoundDescription',\n            defaultMessage: 'No sources match the filter criteria. Remove all filters or clear all filters to show sources.',\n          })}\n        </EmptyStateBody>\n        <Button variant=\"link\" onClick={() => dispatch(clearFilters())}>\n          {intl.formatMessage({\n            id: 'sources.clearAllFilters',\n            defaultMessage: 'Clear all filters',\n          })}\n        </Button>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default EmptyStateTable;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\n\nimport { EmptyState } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\n\nimport PlusIcon from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport { CLOUD_VENDOR } from '../../utilities/constants';\n\nconst SourcesEmptyState = () => {\n  const intl = useIntl();\n  const activeVendor = useSelector(({ sources }) => sources.activeVendor);\n\n  return (\n    <Bullseye>\n      <EmptyState className=\"ins-c-sources__empty-state\">\n        <EmptyStateIcon icon={PlusIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'sources.emptyStateTitle',\n            defaultMessage: 'No sources',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage(\n            {\n              id: 'sources.emptyStateBody',\n              defaultMessage:\n                'You don’t have any {activeVendor} sources configured. Add a source to connect to your Red Hat applications.',\n            },\n            {\n              activeVendor:\n                activeVendor === CLOUD_VENDOR ? intl.formatMessage({ id: 'sources.cloud', defaultMessage: 'cloud' }) : 'Red Hat',\n            }\n          )}\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default SourcesEmptyState;\n","import React, { useEffect, useReducer } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, sortable, wrappable } from '@patternfly/react-table';\nimport { useIntl } from 'react-intl';\n\nimport { sortEntities } from '../../redux/sources/actions';\nimport { PlaceHolderTable, RowWrapperLoader } from './loaders';\nimport { sourcesColumns, COLUMN_COUNT } from '../../views/sourcesViewDefinition';\nimport EmptyStateTable from './EmptyStateTable';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { replaceRouteId, routes } from '../../Routes';\nimport SourcesEmptyState from './SourcesEmptyState';\n\nconst itemToCells = (item, columns, sourceTypes, appTypes) =>\n  columns\n    .filter((column) => column.title || column.hidden)\n    .map((col) => ({\n      title: col.formatter\n        ? col.formatter(item[col.value], item, {\n            sourceTypes,\n            appTypes,\n          })\n        : item[col.value] || '',\n    }));\n\nconst renderSources = (entities, columns, sourceTypes, appTypes, removingSources) =>\n  entities\n    .filter(({ hidden }) => !hidden)\n    .reduce((acc, item) => {\n      const isDeleting = removingSources.includes(item.id);\n\n      return [\n        ...acc,\n        {\n          ...item,\n          isOpen: !!item.expanded,\n          cells: itemToCells(item, columns, sourceTypes, appTypes),\n          disableActions: isDeleting,\n          isDeleting,\n        },\n      ];\n    }, []);\n\nexport const prepareColumnsCells = (columns) =>\n  columns\n    .filter((column) => column.title || column.hidden)\n    .map((column) => ({\n      title: column.title || '',\n      value: column.value,\n      hidden: column.hidden,\n      transforms: [wrappable],\n      ...(column.sortable && { transforms: [sortable, wrappable] }),\n    }));\n\nconst reducer = (state, payload) => ({ ...state, ...payload });\n\nconst initialState = (columns) => ({\n  rows: [],\n  sortBy: {},\n  isLoaded: false,\n  cells: prepareColumnsCells(columns),\n});\n\nexport const insertEditAction = (actions, intl, push, isOrgAdmin, disabledProps) =>\n  actions.splice(1, 0, {\n    title: intl.formatMessage({\n      id: 'sources.edit',\n      defaultMessage: 'Edit',\n    }),\n    onClick: (_ev, _i, { id }) => push(replaceRouteId(routes.sourcesDetail.path, id)),\n    ...(!isOrgAdmin ? disabledProps : { component: 'button' }),\n  });\n\nexport const actionResolver = (intl, push, isOrgAdmin) => (rowData) => {\n  const tooltip = intl.formatMessage({\n    id: 'sources.notAdminButton',\n    defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n  });\n\n  const disabledProps = {\n    tooltip,\n    isDisabled: true,\n    className: 'ins-c-sources__disabled-drodpown-item',\n  };\n\n  const actions = [];\n\n  const isSourceEditable = !rowData.imported;\n\n  if (isSourceEditable) {\n    insertEditAction(actions, intl, push, isOrgAdmin, disabledProps);\n  }\n\n  actions.push({\n    title: intl.formatMessage({\n      id: 'sources.remove',\n      defaultMessage: 'Remove',\n    }),\n    onClick: (_ev, _i, { id }) => push(replaceRouteId(routes.sourcesRemove.path, id)),\n    ...(!isOrgAdmin ? disabledProps : { component: 'button' }),\n  });\n\n  return actions;\n};\n\nconst SourcesTable = () => {\n  const { push } = useHistory();\n  const intl = useIntl();\n\n  const loaded = useIsLoaded();\n  const writePermissions = useHasWritePermissions();\n\n  const {\n    appTypes,\n    entities,\n    sourceTypes,\n    sourceTypesLoaded,\n    appTypesLoaded,\n    sortBy,\n    sortDirection,\n    numberOfEntities,\n    removingSources,\n    filterValue,\n  } = useSelector(({ sources }) => sources, shallowEqual);\n  const reduxDispatch = useDispatch();\n\n  const notSortable = numberOfEntities === 0 || !loaded;\n\n  const [state, dispatch] = useReducer(reducer, initialState(sourcesColumns(intl, notSortable)));\n\n  const refreshColumns = () => {\n    const columns = sourcesColumns(intl, notSortable);\n\n    return dispatch({\n      cells: prepareColumnsCells(columns),\n    });\n  };\n\n  const refreshSources = () => {\n    const columns = sourcesColumns(intl, notSortable);\n\n    return dispatch({\n      rows: renderSources(entities, columns, sourceTypes, appTypes, removingSources),\n      cells: prepareColumnsCells(columns),\n    });\n  };\n\n  useEffect(() => {\n    if (loaded && sourceTypesLoaded && appTypesLoaded) {\n      dispatch({ isLoaded: true });\n      refreshSources();\n    } else {\n      dispatch({ isLoaded: false });\n      refreshColumns();\n    }\n  }, [loaded, sourceTypesLoaded, appTypesLoaded]);\n\n  useEffect(() => {\n    if (state.isLoaded) {\n      refreshSources();\n    }\n  }, [entities, removingSources]);\n\n  let shownRows = state.rows;\n  if (numberOfEntities === 0 && state.isLoaded) {\n    const hasSomeFilter =\n      Object.entries(filterValue)\n        .map(([_key, value]) => value && (!Array.isArray(value) || (Array.isArray(value) && value.length > 0)))\n        .filter(Boolean).length > 0;\n\n    shownRows = [\n      {\n        heightAuto: true,\n        cells: [\n          {\n            props: { colSpan: COLUMN_COUNT },\n            title: hasSomeFilter ? <EmptyStateTable /> : <SourcesEmptyState />,\n          },\n        ],\n      },\n    ];\n  } else if (!loaded || !appTypesLoaded || !sourceTypesLoaded) {\n    shownRows = [\n      {\n        heightAuto: true,\n        cells: [\n          {\n            props: {\n              colSpan: COLUMN_COUNT,\n              className: 'sources-placeholder-row',\n            },\n            title: <PlaceHolderTable />,\n          },\n        ],\n      },\n    ];\n  }\n\n  return (\n    <Table\n      gridBreakPoint=\"grid-lg\"\n      aria-label={intl.formatMessage({\n        id: 'sources.list',\n        defaultMessage: 'List of Sources',\n      })}\n      onSort={(_event, key, direction) => reduxDispatch(sortEntities(state.cells[key].value, direction))}\n      sortBy={{\n        index: state.cells.map((cell) => (cell.hidden ? 'hidden' : cell.value)).indexOf(sortBy),\n        direction: sortDirection,\n      }}\n      rows={shownRows}\n      cells={state.cells}\n      actionResolver={loaded && numberOfEntities > 0 ? actionResolver(intl, push, writePermissions) : undefined}\n      rowWrapper={RowWrapperLoader}\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nexport default SourcesTable;\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { EmptyState } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyState';\nimport { EmptyStateIcon } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateIcon';\nimport { EmptyStateBody } from '@patternfly/react-core/dist/js/components/EmptyState/EmptyStateBody';\nimport { Bullseye } from '@patternfly/react-core/dist/js/layouts/Bullseye/Bullseye';\nimport { Title } from '@patternfly/react-core/dist/js/components/Title/Title';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-circle-icon';\n\nconst SourcesErrorState = () => {\n  const intl = useIntl();\n\n  return (\n    <Bullseye>\n      <EmptyState className=\"ins-c-sources__empty-state\">\n        <EmptyStateIcon icon={ExclamationCircleIcon} color=\"var(--pf-global--danger-color--100)\" />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          {intl.formatMessage({\n            id: 'sources.errorStateTitle',\n            defaultMessage: 'Something went wrong',\n          })}\n        </Title>\n        <EmptyStateBody>\n          {intl.formatMessage(\n            {\n              id: 'sources.errorStateBody',\n              defaultMessage:\n                'There was a problem processing the request. Try refreshing the page. If the problem persists, contact <a>Red Hat support.</a>',\n            },\n            {\n              // eslint-disable-next-line react/display-name\n              a: (chunks) => (\n                <Text key=\"link\" component=\"a\" href=\"https://access.redhat.com/support\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  {chunks}\n                </Text>\n              ),\n            }\n          )}\n        </EmptyStateBody>\n        <Button className=\"pf-u-mt-xl\" variant=\"primary\" component=\"a\" href={window.location.href}>\n          {intl.formatMessage({\n            id: 'sources.retry',\n            defaultMessage: 'Retry',\n          })}\n        </Button>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nexport default SourcesErrorState;\n","import awesomeDebounce from 'awesome-debounce-promise';\nimport { loadEntities, filterSources } from '../../redux/sources/actions';\nimport { CLOUD_VENDOR, CLOUD_VENDORS, REDHAT_VENDOR } from '../../utilities/constants';\n\nexport const debouncedFiltering = awesomeDebounce((refresh) => refresh(), 500);\n\nexport const afterSuccessLoadParameters = {\n  pageNumber: 1,\n  sortBy: 'created_at',\n  sortDirection: 'desc',\n};\n\nexport const afterSuccess = (dispatch) => dispatch(loadEntities(afterSuccessLoadParameters));\n\nexport const prepareSourceTypeSelection = (sourceTypes, activeVendor) =>\n  sourceTypes\n    .filter(({ vendor }) => (activeVendor === CLOUD_VENDOR ? CLOUD_VENDORS.includes(vendor) : vendor === REDHAT_VENDOR))\n    .map(({ id, product_name }) => ({ label: product_name, value: id }))\n    .sort((a, b) => a.label.localeCompare(b.label));\n\nexport const prepareApplicationTypeSelection = (appTypes) =>\n  appTypes.map(({ id, display_name }) => ({ label: display_name, value: id })).sort((a, b) => a.label.localeCompare(b.label));\n\nexport const setFilter = (column, value, dispatch) =>\n  dispatch(\n    filterSources({\n      [column]: value,\n    })\n  );\n\nexport const chipsFormatters = (key, filterValue, sourceTypes, appTypes) =>\n  ({\n    name: () => ({ name: filterValue[key], key }),\n    source_type_id: () => ({\n      category: 'Source Type',\n      key,\n      chips: filterValue[key].map((id) => {\n        const sourceType = sourceTypes.find((type) => type.id === id);\n\n        return { name: sourceType ? sourceType.product_name : id, value: id };\n      }),\n    }),\n    applications: () => ({\n      category: 'Application',\n      key,\n      chips: filterValue[key].map((id) => {\n        const appType = appTypes.find((type) => type.id === id);\n\n        return { name: appType ? appType.display_name : id, value: id };\n      }),\n    }),\n  }[key] || (() => ({ name: key })));\n\nexport const prepareChips = (filterValue, sourceTypes, appTypes) =>\n  Object.keys(filterValue)\n    .map((key) =>\n      filterValue[key] && filterValue[key].length > 0 ? chipsFormatters(key, filterValue, sourceTypes, appTypes)() : undefined\n    )\n    .filter(Boolean);\n\nexport const removeChips = (chips, filterValue, deleteAll) => {\n  if (deleteAll) {\n    return Object.keys(filterValue).reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr]: undefined,\n      }),\n      {}\n    );\n  }\n\n  const chip = chips[0];\n\n  return {\n    ...filterValue,\n    [chip.key]: chip.chips ? filterValue[chip.key].filter((value) => value !== chip.chips[0].value) : undefined,\n  };\n};\n\nexport const loadedTypes = (types, loaded) => (loaded && types.length > 0 ? types : undefined);\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Tabs } from '@patternfly/react-core/dist/js/components/Tabs/Tabs';\nimport { Tab } from '@patternfly/react-core/dist/js/components/Tabs/Tab';\nimport { TabTitleIcon } from '@patternfly/react-core/dist/js/components/Tabs/TabTitleIcon';\nimport { TabTitleText } from '@patternfly/react-core/dist/js/components/Tabs/TabTitleText';\nimport RedhatIcon from '@patternfly/react-icons/dist/js/icons/redhat-icon';\nimport CloudIcon from '@patternfly/react-icons/dist/js/icons/cloud-icon';\n\nimport { setActiveVendor } from '../redux/sources/actions';\nimport { CLOUD_VENDOR, REDHAT_VENDOR } from '../utilities/constants';\n\nconst TabNavigation = () => {\n  const intl = useIntl();\n  const dispatch = useDispatch();\n  const activeVendor = useSelector(({ sources }) => sources.activeVendor);\n\n  return (\n    <Tabs activeKey={activeVendor} onSelect={(_e, key) => dispatch(setActiveVendor(key))} className=\"pf-u-mt-md\" isFilled>\n      <Tab\n        eventKey={CLOUD_VENDOR}\n        title={\n          <React.Fragment>\n            <TabTitleIcon>\n              <CloudIcon />\n            </TabTitleIcon>\n            <TabTitleText>{intl.formatMessage({ id: 'sources.cloudSources', defaultMessage: 'Cloud sources' })}</TabTitleText>\n          </React.Fragment>\n        }\n      />\n      <Tab\n        eventKey={REDHAT_VENDOR}\n        title={\n          <React.Fragment>\n            <TabTitleIcon>\n              <RedhatIcon />\n            </TabTitleIcon>\n            <TabTitleText>{intl.formatMessage({ id: 'sources.redhatSources', defaultMessage: 'Red Hat sources' })}</TabTitleText>\n          </React.Fragment>\n        }\n      />\n    </Tabs>\n  );\n};\n\nexport default TabNavigation;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport { Card } from '@patternfly/react-core/dist/js/components/Card/Card';\nimport { CardBody } from '@patternfly/react-core/dist/js/components/Card/CardBody';\nimport { CardTitle } from '@patternfly/react-core/dist/js/components/Card/CardTitle';\nimport { CardFooter } from '@patternfly/react-core/dist/js/components/Card/CardFooter';\nimport { Text } from '@patternfly/react-core/dist/js/components/Text/Text';\n\nimport CloudTiles from './CloudTiles';\nimport ProvidersLink from './ProvidersLink';\n\nconst CLOUD_CATALOG_HREF = 'https://catalog.redhat.com/cloud';\n\nconst CloudEmptyState = ({ setSelectedType }) => {\n  const intl = useIntl();\n\n  return (\n    <Card className=\"pf-m-selectable pf-m-selected ins-c-sources__cloud-empty-state-card pf-u-mt-md pf-u-mt-0-on-md\">\n      <CardTitle>\n        {intl.formatMessage({\n          id: 'cloud.emptystate.cardTitle',\n          defaultMessage: 'Get started by connecting to your public clouds',\n        })}\n      </CardTitle>\n      <CardBody>\n        <Text>\n          {intl.formatMessage({\n            id: 'cloud.emptystate.cardDescription',\n            defaultMessage: 'Choose a provider to begin.',\n          })}\n        </Text>\n        <div className=\"provider-tiles pf-u-mt-md pf-u-mb-lg\">\n          <CloudTiles setSelectedType={setSelectedType} />\n        </div>\n      </CardBody>\n      <CardFooter className=\"cloud-footer\">\n        <ProvidersLink />\n        <Text className=\"catalog-link pf-u-mt-md\">\n          {intl.formatMessage(\n            {\n              id: 'cloud.emptystate.catalogLink',\n              defaultMessage: 'Not set up with a Cloud provider? <a>Find a Cloud & Service Provider with Red Hat Ecosystem</a>',\n            },\n            {\n              a: (chunks) => (\n                <Text key=\"link\" component=\"a\" href={CLOUD_CATALOG_HREF} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {chunks}\n                </Text>\n              ),\n            }\n          )}\n        </Text>\n      </CardFooter>\n    </Card>\n  );\n};\n\nCloudEmptyState.propTypes = {\n  setSelectedType: PropTypes.func.isRequired,\n};\n\nexport default CloudEmptyState;\n","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { useIntl } from 'react-intl';\n\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/PrimaryToolbar';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/cjs/PageHeader';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\nimport { filterVendorAppTypes } from '@redhat-cloud-services/frontend-components-sources/cjs/filterApps';\n\nimport { filterSources, pageAndSize } from '../redux/sources/actions';\nimport SourcesTable from '../components/SourcesTable/SourcesTable';\nimport SourcesErrorState from '../components/SourcesErrorState';\nimport { replaceRouteId, routes } from '../Routes';\n\nconst SourceRemoveModal = lazy(() =>\n  import(\n    /* webpackChunkName: \"remove\" */\n    '../components/SourceRemoveModal/SourceRemoveModal'\n  )\n);\nconst AddSourceWizard = lazy(() =>\n  import(\n    /* webpackChunkName: \"addSource\" */ '@redhat-cloud-services/frontend-components-sources/cjs/addSourceWizard'\n  ).then((module) => ({ default: module.AddSourceWizard }))\n);\n\nimport {\n  prepareChips,\n  removeChips,\n  setFilter,\n  debouncedFiltering,\n  prepareSourceTypeSelection,\n  afterSuccess,\n  loadedTypes,\n  prepareApplicationTypeSelection,\n} from './Sources/helpers';\nimport { useIsLoaded } from '../hooks/useIsLoaded';\nimport { useHasWritePermissions } from '../hooks/useHasWritePermissions';\nimport CustomRoute from '../components/CustomRoute/CustomRoute';\nimport { Tooltip } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { PaginationLoader } from '../components/SourcesTable/loaders';\nimport TabNavigation from '../components/TabNavigation';\nimport CloudCards from '../components/CloudTiles/CloudCards';\nimport { CLOUD_VENDOR } from '../utilities/constants';\nimport CloudEmptyState from '../components/CloudTiles/CloudEmptyState';\n\nconst SourcesPage = () => {\n  const [filter, setFilterValue] = useState();\n  const [selectedType, setSelectedType] = useState();\n\n  const entitiesLoaded = useIsLoaded();\n  const hasWritePermissions = useHasWritePermissions();\n\n  const history = useHistory();\n  const intl = useIntl();\n\n  const sources = useSelector(({ sources }) => sources, shallowEqual);\n\n  const {\n    filterValue,\n    numberOfEntities,\n    appTypes,\n    pageSize,\n    pageNumber,\n    fetchingError,\n    sourceTypes,\n    paginationClicked,\n    appTypesLoaded,\n    sourceTypesLoaded,\n    activeVendor,\n  } = sources;\n\n  const loaded = entitiesLoaded && sourceTypesLoaded && appTypesLoaded;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (filter !== filterValue.name) {\n      setFilterValue(filterValue.name);\n    }\n  }, [filterValue.name]);\n\n  const onSetPage = (_e, page) => dispatch(pageAndSize(page, pageSize));\n\n  const onPerPageSelect = (_e, perPage) => dispatch(pageAndSize(1, perPage));\n\n  const maximumPageNumber = Math.ceil(numberOfEntities / pageSize);\n\n  useEffect(() => {\n    if (loaded && numberOfEntities > 0 && pageNumber > Math.max(maximumPageNumber, 1)) {\n      onSetPage({}, maximumPageNumber);\n    }\n  });\n\n  const paginationConfig = {\n    itemCount: numberOfEntities,\n    page: pageNumber,\n    perPage: pageSize,\n    onSetPage,\n    onPerPageSelect,\n    className: 'top-pagination',\n  };\n\n  const paginationConfigBottom = {\n    ...paginationConfig,\n    dropDirection: 'up',\n    variant: 'bottom',\n    isCompact: false,\n    className: 'bottom-pagination',\n  };\n\n  const showPaginationLoader = (!loaded || !appTypesLoaded || !sourceTypesLoaded) && !paginationClicked;\n\n  const mainContent = () => (\n    <React.Fragment>\n      <PrimaryToolbar\n        pagination={showPaginationLoader ? <PaginationLoader /> : numberOfEntities > 0 ? paginationConfig : undefined}\n        actionsConfig={\n          hasWritePermissions\n            ? {\n                actions: [\n                  <Link to={routes.sourcesNew.path} key=\"addSourceButton\">\n                    <Button variant=\"primary\" id=\"addSourceButton\">\n                      {intl.formatMessage({\n                        id: 'sources.addSource',\n                        defaultMessage: 'Add source',\n                      })}\n                    </Button>\n                  </Link>,\n                ],\n              }\n            : {\n                actions: [\n                  <Tooltip\n                    content={intl.formatMessage({\n                      id: 'sources.notAdminAddButton',\n                      defaultMessage:\n                        'To add a source, you must be granted write permissions from your Organization Administrator.',\n                    })}\n                    key=\"addSourceButton\"\n                  >\n                    <span tabIndex=\"0\">\n                      <Button variant=\"primary\" isDisabled id=\"addSourceButton\">\n                        {intl.formatMessage({\n                          id: 'sources.addSource',\n                          defaultMessage: 'Add source',\n                        })}\n                      </Button>\n                    </span>\n                  </Tooltip>,\n                ],\n              }\n        }\n        filterConfig={{\n          items: [\n            {\n              label: intl.formatMessage({\n                id: 'sources.name',\n                defaultMessage: 'Name',\n              }),\n              filterValues: {\n                'aria-label': intl.formatMessage({\n                  id: 'sources.filterByName',\n                  defaultMessage: 'Filter by name',\n                }),\n                onChange: (_event, value) => {\n                  setFilterValue(value);\n                  debouncedFiltering(() => setFilter('name', value, dispatch));\n                },\n                value: filter,\n              },\n            },\n            {\n              label: intl.formatMessage({\n                id: 'sources.type',\n                defaultMessage: 'Type',\n              }),\n              type: 'checkbox',\n              filterValues: {\n                onChange: (_event, value) => setFilter('source_type_id', value, dispatch),\n                items: prepareSourceTypeSelection(sourceTypes || [], activeVendor),\n                value: filterValue.source_type_id,\n              },\n            },\n            {\n              label: intl.formatMessage({\n                id: 'sources.application',\n                defaultMessage: 'Application',\n              }),\n              type: 'checkbox',\n              filterValues: {\n                onChange: (_event, value) => setFilter('applications', value, dispatch),\n                items: prepareApplicationTypeSelection(appTypes?.filter(filterVendorAppTypes(sourceTypes)) || []),\n                value: filterValue.applications,\n              },\n            },\n          ],\n        }}\n        activeFiltersConfig={{\n          filters: prepareChips(filterValue, sourceTypes, appTypes),\n          onDelete: (_event, chips, deleteAll) => dispatch(filterSources(removeChips(chips, filterValue, deleteAll))),\n        }}\n      />\n      <SourcesTable />\n      <PrimaryToolbar\n        pagination={showPaginationLoader ? <PaginationLoader /> : numberOfEntities > 0 ? paginationConfigBottom : undefined}\n      />\n    </React.Fragment>\n  );\n\n  const hasSomeFilter =\n    Object.entries(filterValue)\n      .map(([_key, value]) => value && (!Array.isArray(value) || (Array.isArray(value) && value.length > 0)))\n      .filter(Boolean).length > 0;\n\n  const showEmptyState = loaded && numberOfEntities === 0 && !hasSomeFilter && activeVendor === CLOUD_VENDOR;\n  const showInfoCards = activeVendor === CLOUD_VENDOR && !showEmptyState;\n\n  return (\n    <React.Fragment>\n      <Suspense fallback={null}>\n        <CustomRoute exact route={routes.sourcesRemove} Component={SourceRemoveModal} />\n        <CustomRoute\n          exact\n          route={routes.sourcesNew}\n          Component={AddSourceWizard}\n          componentProps={{\n            sourceTypes: loadedTypes(sourceTypes, sourceTypesLoaded),\n            applicationTypes: loadedTypes(appTypes, appTypesLoaded),\n            isOpen: true,\n            onClose: (_values, source) => {\n              setSelectedType(undefined);\n              source?.id ? history.push(replaceRouteId(routes.sourcesDetail.path, source.id)) : history.push(routes.sources.path);\n            },\n            afterSuccess: (source) => afterSuccess(dispatch, source),\n            hideSourcesButton: true,\n            returnButtonTitle: intl.formatMessage({ id: 'sources.returnButtonTitle', defaultMessage: 'Exit to source details' }),\n            selectedType,\n          }}\n        />\n      </Suspense>\n      <PageHeader className=\"pf-u-pb-0\">\n        <PageHeaderTitle\n          title={intl.formatMessage({\n            id: 'sources.sources',\n            defaultMessage: 'Sources',\n          })}\n        />\n        <TabNavigation />\n      </PageHeader>\n      <Section type=\"content\">\n        {showInfoCards && <CloudCards setSelectedType={setSelectedType} />}\n        {fetchingError && <SourcesErrorState />}\n        {!fetchingError && showEmptyState && <CloudEmptyState setSelectedType={setSelectedType} />}\n        {!fetchingError && !showEmptyState && mainContent()}\n      </Section>\n    </React.Fragment>\n  );\n};\n\nexport default SourcesPage;\n","import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nexport const useSource = () => {\n  const { id } = useParams();\n  const source = useSelector(({ sources }) => sources.entities.find((source) => source.id === id));\n\n  return source;\n};\n","import { useSelector } from 'react-redux';\n\nexport const useIsLoaded = () => {\n  const isLoaded = useSelector(({ sources }) => sources.loaded);\n\n  return isLoaded <= 0;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage, addHiddenSource } from '../../redux/sources/actions';\nimport { doLoadSource } from '../../api/entities';\nimport { useIsLoaded } from '../../hooks/useIsLoaded';\nimport { routes } from '../../Routes';\nimport { useSource } from '../../hooks/useSource';\n\nconst RedirectNoId = () => {\n  const { id } = useParams();\n  const intl = useIntl();\n  const source = useSource();\n\n  const loaded = useIsLoaded();\n\n  const { appTypesLoaded, sourceTypesLoaded } = useSelector(({ sources }) => sources, shallowEqual);\n  const dispatch = useDispatch();\n\n  const [applicationIsLoaded, setIsApplicationLoaded] = useState(false);\n\n  useEffect(() => {\n    if (loaded && appTypesLoaded && sourceTypesLoaded) {\n      doLoadSource(id)\n        .then(({ sources: [source] }) => {\n          dispatch(addHiddenSource(source));\n          return source;\n        })\n        .then((source) => {\n          if (!source) {\n            dispatch(\n              addMessage(\n                intl.formatMessage({\n                  id: 'sources.sourceNotFoundTitle',\n                  defaultMessage: 'Requested source was not found',\n                }),\n                'danger',\n                intl.formatMessage(\n                  {\n                    id: 'sources.sourceNotFoundTitleDescription',\n                    defaultMessage: 'Source with { id } was not found. Try it again later.',\n                  },\n                  { id }\n                )\n              )\n            );\n          }\n\n          setIsApplicationLoaded(true);\n        });\n    }\n  }, [loaded, appTypesLoaded, sourceTypesLoaded]);\n\n  if (applicationIsLoaded && !source) {\n    return <Redirect to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoId;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { useIntl } from 'react-intl';\n\nimport { addMessage } from '../../redux/sources/actions';\nimport { useHasWritePermissions } from '../../hooks/useHasWritePermissions';\nimport { routes } from '../../Routes';\n\nconst RedirectNoWriteAccess = () => {\n  const intl = useIntl();\n\n  const writePermissions = useHasWritePermissions();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (writePermissions === false) {\n      const title = intl.formatMessage({\n        id: 'sources.insufficietnPerms',\n        defaultMessage: 'Insufficient permissions',\n      });\n      const description = intl.formatMessage({\n        id: 'sources.notAdminButton',\n        defaultMessage: 'To perform this action, you must be granted write permissions from your Organization Administrator.',\n      });\n\n      dispatch(addMessage(title, 'danger', description));\n    }\n  }, [writePermissions]);\n\n  if (writePermissions === false) {\n    return <Redirect to={routes.sources.path} />;\n  }\n\n  return null;\n};\n\nexport default RedirectNoWriteAccess;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport RedirectNoWriteAccess from '../RedirectNoWriteAccess/RedirectNoWriteAccess';\nimport { useSource } from '../../hooks/useSource';\nimport RedirectNoId from '../RedirectNoId/RedirectNoId';\n\nconst CustomRouteInternal = ({ route, children }) => {\n  const source = route.redirectNoId && useSource();\n\n  if (!source && route.redirectNoId) {\n    return <RedirectNoId />;\n  }\n\n  return (\n    <React.Fragment>\n      {route.writeAccess && <RedirectNoWriteAccess />}\n      {children}\n    </React.Fragment>\n  );\n};\n\nCustomRouteInternal.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n  }).isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nconst CustomRoute = ({ route, componentProps, Component, ...props }) => (\n  <Route {...props} path={route.path}>\n    <CustomRouteInternal route={route}>\n      <Component {...componentProps} />\n    </CustomRouteInternal>\n  </Route>\n);\n\nCustomRoute.propTypes = {\n  route: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirectNoId: PropTypes.bool,\n    writeAccess: PropTypes.bool,\n  }).isRequired,\n  componentProps: PropTypes.any,\n  Component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n};\n\nexport default CustomRoute;\n"],"sourceRoot":""}